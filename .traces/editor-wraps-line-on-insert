parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "3", properties: ["3": "literal", "height": ]}
parse: instruction: new
parse:   ingredient: {name: "abcd", properties: [_: "literal-string"]}
parse:   product: {name: "1", properties: ["1": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "1", properties: ["1": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "top": ]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
parse:   product: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    type [e]\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    event-loop screen:address, console:address, 2:address:editor-data\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .eabcd.\n    .     .\n  ", properties: [_: "literal-string"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    type [f]\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    event-loop screen:address, console:address, 2:address:editor-data\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .efabâ†©.\n    .cd   .\n    .     .\n  ", properties: [_: "literal-string"]}
after-brace: recipe editor-wraps-line-on-insert
after-brace: new-fake-screen ...
after-brace: new ...
after-brace: new-editor ...
after-brace: assume-console ...
after-brace: run ...
after-brace: screen-should-contain ...
after-brace: assume-console ...
after-brace: run ...
after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: editor-wraps-line-on-insert
 101 run: screen:address <- new-fake-screen 5:literal/width, 3:literal/height
 102 run: default-space:address:array:location <- new location:type, 30:literal/capacity
9999 mem: array size is 30
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1031
9999 mem: storing 1031 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1032
9999 mem: storing 5 in location 1032
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1031
9999 mem: storing 3 in location 1031
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1033
9999 mem: storing 0 in location 1033
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1034
9999 mem: storing 0 in location 1034
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1032
9999 mem: location 1032 is 5
9999 mem: location 1004 is 1031
9999 mem: location 1031 is 3
9999 mem: storing 15 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 15
9999 mem: array size is 15
9999 mem: new alloc: 1036
9999 mem: location 1008 is 1035
9999 mem: storing 1036 in location 1035
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1067
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1069
 103 run: break-unless x:address:screen, 
9999 mem: location 1069 is 1031
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1070
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1070 is 1036
9999 mem: storing 15 in location 1071
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1072
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 0
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 0
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 0
9999 mem: storing 1037 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 0
9999 mem: storing 1 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 1
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 1
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 1
9999 mem: storing 1039 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 1
9999 mem: storing 2 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 2
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 2
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 2
9999 mem: storing 1041 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 2
9999 mem: storing 3 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 3
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 3
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 3
9999 mem: storing 1043 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 3
9999 mem: storing 4 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 4
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 4
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 4
9999 mem: storing 1045 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 4
9999 mem: storing 5 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 5
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 5
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 5
9999 mem: storing 1047 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 5
9999 mem: storing 6 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 6
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 6
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 6
9999 mem: storing 1049 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 6
9999 mem: storing 7 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 7
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 7
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 7
9999 mem: storing 1051 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 7
9999 mem: storing 8 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 8
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 8
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 8
9999 mem: storing 1053 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 8
9999 mem: storing 9 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 9
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 9
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 9
9999 mem: storing 1055 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 9
9999 mem: storing 10 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 10
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 10
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 10
9999 mem: storing 1057 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 10
9999 mem: storing 11 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 11
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 11
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 11
9999 mem: storing 1059 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 11
9999 mem: storing 12 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 12
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 12
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 12
9999 mem: storing 1061 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 12
9999 mem: storing 13 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 13
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 13
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 13
9999 mem: storing 1063 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 13
9999 mem: storing 14 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 14
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 14
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 14
9999 mem: storing 1065 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1066
9999 mem: storing 7 in location 1066
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 14
9999 mem: storing 15 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 15
9999 mem: location 1071 is 15
9999 mem: storing 1 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1033
9999 mem: storing 0 in location 1033
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1069 is 1031
 102 run: reply result:address:screen
9999 mem: location 1002 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 101 run: 1:address:array:character <- new [abcd]
9999 mem: storing 1098 in location 1
 101 run: 2:address:editor-data <- new-editor 1:address:array:character, screen:address, 0:literal/top, 0:literal/left, 5:literal/right
9999 mem: location 1 is 1098
9999 mem: location 900 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1103
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1098 in location 1105
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1106
 102 run: top:number <- next-ingredient 
9999 mem: storing 0 in location 1107
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1108
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1109
 102 run: right:number <- subtract right:number, 1:literal
9999 mem: location 1109 is 5
9999 mem: storing 4 in location 1109
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: new alloc: 1134
9999 mem: storing 1134 in location 1110
 102 run: sc:address:address:screen <- get-address result:address:editor-data/deref, screen:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1137
9999 mem: storing 1137 in location 1111
 102 run: sc:address:address:screen/deref <- copy screen:address
9999 mem: location 1106 is 1031
9999 mem: location 1111 is 1137
9999 mem: storing 1031 in location 1137
 102 run: x:address:number <- get-address result:address:editor-data/deref, top:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1138
9999 mem: storing 1138 in location 1112
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1107 is 0
9999 mem: location 1112 is 1138
9999 mem: storing 0 in location 1138
 102 run: x:address:number <- get-address result:address:editor-data/deref, left:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1139
9999 mem: storing 1139 in location 1112
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1108 is 0
9999 mem: location 1112 is 1139
9999 mem: storing 0 in location 1139
 102 run: x:address:number <- get-address result:address:editor-data/deref, right:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1141
9999 mem: storing 1141 in location 1112
 102 run: x:address:number/deref <- copy right:number
9999 mem: location 1109 is 4
9999 mem: location 1112 is 1141
9999 mem: storing 4 in location 1141
 102 run: x:address:number <- get-address result:address:editor-data/deref, bottom:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1140
9999 mem: storing 1140 in location 1112
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1107 is 0
9999 mem: location 1112 is 1140
9999 mem: storing 0 in location 1140
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-row:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1142
9999 mem: storing 1142 in location 1112
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1107 is 0
9999 mem: location 1112 is 1142
9999 mem: storing 0 in location 1142
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-column:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 1112
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1108 is 0
9999 mem: location 1112 is 1143
9999 mem: storing 0 in location 1143
 102 run: d:address:address:duplex-list <- get-address result:address:editor-data/deref, data:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1134
9999 mem: storing 1134 in location 1113
 102 run: d:address:address:duplex-list/deref <- push-duplex 167:literal/Â§, 0:literal/tail
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1145
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1147
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1148
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1176
9999 mem: storing 1176 in location 1149
 103 run: val:address:location <- get-address result:address:duplex-list/deref, value:offset
9999 mem: location 1149 is 1176
9999 mem: location 1176 is 0
9999 mem: location 1177 is 0
9999 mem: location 1178 is 0
9999 mem: location 1149 is 1176
9999 run: address to copy is 1176
9999 mem: storing 1176 in location 1150
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1147 is 167
9999 mem: location 1150 is 1176
9999 mem: storing 167 in location 1176
 103 run: next:address:address:duplex-list <- get-address result:address:duplex-list/deref, next:offset
9999 mem: location 1149 is 1176
9999 mem: location 1176 is 167
9999 mem: location 1177 is 0
9999 mem: location 1178 is 0
9999 mem: location 1149 is 1176
9999 run: address to copy is 1177
9999 mem: storing 1177 in location 1151
 103 run: next:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1148 is 0
9999 mem: location 1151 is 1177
9999 mem: storing 0 in location 1177
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1148 is 0
9999 run: jump-if fell through
 103 run: reply result:address:duplex-list
9999 mem: location 1149 is 1176
9999 run: result 0 is 1176
9999 mem: location 1113 is 1134
9999 mem: storing 1176 in location 1134
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 1114
 102 run: y:address:address:duplex-list/deref <- copy d:address:address:duplex-list/deref
9999 mem: location 1113 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1114 is 1136
9999 mem: storing 1176 in location 1136
 102 run: init:address:address:duplex-list <- get-address result:address:editor-data/deref, top-of-screen:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1176
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1135
9999 mem: storing 1135 in location 1115
 102 run: init:address:address:duplex-list/deref <- copy d:address:address:duplex-list/deref
9999 mem: location 1113 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1115 is 1135
9999 mem: storing 1176 in location 1135
 102 run: jump-if s:address:array:character, 1:offset
9999 mem: location 1105 is 1098
9999 run: jumping to instruction 30
 102 run: len:number <- length s:address:array:character/deref
9999 mem: location 1105 is 1098
9999 mem: location 1098 is 4
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 100
9999 mem: location 1105 is 1098
9999 mem: storing 4 in location 1116
 102 run: jump-if len:number, 1:offset
9999 mem: location 1116 is 4
9999 run: jumping to instruction 33
 102 run: idx:number <- copy 0:literal
9999 mem: storing 0 in location 1117
 102 run: curr:address:duplex-list <- copy init:address:address:duplex-list/deref
9999 mem: location 1115 is 1135
9999 mem: location 1135 is 1176
9999 mem: storing 1176 in location 1118
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1117 is 0
9999 mem: location 1116 is 4
9999 mem: storing 0 in location 1119
 102 run: break-if done?:boolean, 
9999 mem: location 1119 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1105 is 1098
9999 mem: location 1098 is 4
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 100
9999 mem: location 1117 is 0
9999 mem: location 1105 is 1098
9999 mem: location 1117 is 0
9999 run: address to copy is 1099
9999 run: its type is character
9999 mem: location 1099 is 97
9999 mem: storing 97 in location 1120
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1120 is 97
9999 mem: location 1118 is 1176
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1179
 103 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1181
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1182
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1210
9999 mem: storing 1210 in location 1183
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1183 is 1210
9999 mem: location 1210 is 0
9999 mem: location 1211 is 0
9999 mem: location 1212 is 0
9999 mem: location 1183 is 1210
9999 run: address to copy is 1210
9999 mem: storing 1210 in location 1184
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1181 is 97
9999 mem: location 1184 is 1210
9999 mem: storing 97 in location 1210
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1182 is 1176
9999 mem: location 1176 is 167
9999 mem: location 1177 is 0
9999 mem: location 1178 is 0
9999 mem: location 1182 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 0
9999 mem: storing 0 in location 1185
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1182 is 1176
9999 mem: location 1176 is 167
9999 mem: location 1177 is 0
9999 mem: location 1178 is 0
9999 mem: location 1182 is 1176
9999 run: address to copy is 1177
9999 mem: storing 1177 in location 1186
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1183 is 1210
9999 mem: location 1186 is 1177
9999 mem: storing 1210 in location 1177
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1183 is 1210
9999 mem: location 1210 is 97
9999 mem: location 1211 is 0
9999 mem: location 1212 is 0
9999 mem: location 1183 is 1210
9999 run: address to copy is 1212
9999 mem: storing 1212 in location 1186
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1182 is 1176
9999 mem: location 1186 is 1212
9999 mem: storing 1176 in location 1212
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1183 is 1210
9999 mem: location 1210 is 97
9999 mem: location 1211 is 0
9999 mem: location 1212 is 1176
9999 mem: location 1183 is 1210
9999 run: address to copy is 1211
9999 mem: storing 1211 in location 1186
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1185 is 0
9999 mem: location 1186 is 1211
9999 mem: storing 0 in location 1211
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1185 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1183 is 1210
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1118 is 1176
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1213
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1215
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1215 is 1176
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1215 is 1176
9999 mem: location 1176 is 167
9999 mem: location 1177 is 1210
9999 mem: location 1178 is 0
9999 mem: location 1215 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1210
9999 mem: storing 1210 in location 1216
 103 run: reply result:address:duplex-list
9999 mem: location 1216 is 1210
9999 run: result 0 is 1210
9999 mem: storing 1210 in location 1118
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1117 is 0
9999 mem: storing 1 in location 1117
 102 run: loop 
9999 run: jumping to instruction 36
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1117 is 1
9999 mem: location 1116 is 4
9999 mem: storing 0 in location 1119
 102 run: break-if done?:boolean, 
9999 mem: location 1119 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1105 is 1098
9999 mem: location 1098 is 4
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 100
9999 mem: location 1117 is 1
9999 mem: location 1105 is 1098
9999 mem: location 1117 is 1
9999 run: address to copy is 1100
9999 run: its type is character
9999 mem: location 1100 is 98
9999 mem: storing 98 in location 1120
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1120 is 98
9999 mem: location 1118 is 1210
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1244
 103 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1246
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1210 in location 1247
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1275
9999 mem: storing 1275 in location 1248
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1248 is 1275
9999 mem: location 1275 is 0
9999 mem: location 1276 is 0
9999 mem: location 1277 is 0
9999 mem: location 1248 is 1275
9999 run: address to copy is 1275
9999 mem: storing 1275 in location 1249
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1246 is 98
9999 mem: location 1249 is 1275
9999 mem: storing 98 in location 1275
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1247 is 1210
9999 mem: location 1210 is 97
9999 mem: location 1211 is 0
9999 mem: location 1212 is 1176
9999 mem: location 1247 is 1210
9999 run: address to copy is 1211
9999 run: its type is address
9999 mem: location 1211 is 0
9999 mem: storing 0 in location 1250
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1247 is 1210
9999 mem: location 1210 is 97
9999 mem: location 1211 is 0
9999 mem: location 1212 is 1176
9999 mem: location 1247 is 1210
9999 run: address to copy is 1211
9999 mem: storing 1211 in location 1251
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1248 is 1275
9999 mem: location 1251 is 1211
9999 mem: storing 1275 in location 1211
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1248 is 1275
9999 mem: location 1275 is 98
9999 mem: location 1276 is 0
9999 mem: location 1277 is 0
9999 mem: location 1248 is 1275
9999 run: address to copy is 1277
9999 mem: storing 1277 in location 1251
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1247 is 1210
9999 mem: location 1251 is 1277
9999 mem: storing 1210 in location 1277
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1248 is 1275
9999 mem: location 1275 is 98
9999 mem: location 1276 is 0
9999 mem: location 1277 is 1210
9999 mem: location 1248 is 1275
9999 run: address to copy is 1276
9999 mem: storing 1276 in location 1251
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1276
9999 mem: storing 0 in location 1276
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1248 is 1275
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1118 is 1210
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1278
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1210 in location 1280
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1280 is 1210
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1280 is 1210
9999 mem: location 1210 is 97
9999 mem: location 1211 is 1275
9999 mem: location 1212 is 1176
9999 mem: location 1280 is 1210
9999 run: address to copy is 1211
9999 run: its type is address
9999 mem: location 1211 is 1275
9999 mem: storing 1275 in location 1281
 103 run: reply result:address:duplex-list
9999 mem: location 1281 is 1275
9999 run: result 0 is 1275
9999 mem: storing 1275 in location 1118
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1117 is 1
9999 mem: storing 2 in location 1117
 102 run: loop 
9999 run: jumping to instruction 36
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1117 is 2
9999 mem: location 1116 is 4
9999 mem: storing 0 in location 1119
 102 run: break-if done?:boolean, 
9999 mem: location 1119 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1105 is 1098
9999 mem: location 1098 is 4
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 100
9999 mem: location 1117 is 2
9999 mem: location 1105 is 1098
9999 mem: location 1117 is 2
9999 run: address to copy is 1101
9999 run: its type is character
9999 mem: location 1101 is 99
9999 mem: storing 99 in location 1120
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1120 is 99
9999 mem: location 1118 is 1275
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1309
 103 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1311
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1275 in location 1312
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1340
9999 mem: storing 1340 in location 1313
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1313 is 1340
9999 mem: location 1340 is 0
9999 mem: location 1341 is 0
9999 mem: location 1342 is 0
9999 mem: location 1313 is 1340
9999 run: address to copy is 1340
9999 mem: storing 1340 in location 1314
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1311 is 99
9999 mem: location 1314 is 1340
9999 mem: storing 99 in location 1340
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1312 is 1275
9999 mem: location 1275 is 98
9999 mem: location 1276 is 0
9999 mem: location 1277 is 1210
9999 mem: location 1312 is 1275
9999 run: address to copy is 1276
9999 run: its type is address
9999 mem: location 1276 is 0
9999 mem: storing 0 in location 1315
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1312 is 1275
9999 mem: location 1275 is 98
9999 mem: location 1276 is 0
9999 mem: location 1277 is 1210
9999 mem: location 1312 is 1275
9999 run: address to copy is 1276
9999 mem: storing 1276 in location 1316
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1313 is 1340
9999 mem: location 1316 is 1276
9999 mem: storing 1340 in location 1276
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1313 is 1340
9999 mem: location 1340 is 99
9999 mem: location 1341 is 0
9999 mem: location 1342 is 0
9999 mem: location 1313 is 1340
9999 run: address to copy is 1342
9999 mem: storing 1342 in location 1316
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1312 is 1275
9999 mem: location 1316 is 1342
9999 mem: storing 1275 in location 1342
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1313 is 1340
9999 mem: location 1340 is 99
9999 mem: location 1341 is 0
9999 mem: location 1342 is 1275
9999 mem: location 1313 is 1340
9999 run: address to copy is 1341
9999 mem: storing 1341 in location 1316
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1315 is 0
9999 mem: location 1316 is 1341
9999 mem: storing 0 in location 1341
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1315 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1313 is 1340
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1118 is 1275
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1343
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1275 in location 1345
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1345 is 1275
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1345 is 1275
9999 mem: location 1275 is 98
9999 mem: location 1276 is 1340
9999 mem: location 1277 is 1210
9999 mem: location 1345 is 1275
9999 run: address to copy is 1276
9999 run: its type is address
9999 mem: location 1276 is 1340
9999 mem: storing 1340 in location 1346
 103 run: reply result:address:duplex-list
9999 mem: location 1346 is 1340
9999 run: result 0 is 1340
9999 mem: storing 1340 in location 1118
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1117 is 2
9999 mem: storing 3 in location 1117
 102 run: loop 
9999 run: jumping to instruction 36
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1117 is 3
9999 mem: location 1116 is 4
9999 mem: storing 0 in location 1119
 102 run: break-if done?:boolean, 
9999 mem: location 1119 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1105 is 1098
9999 mem: location 1098 is 4
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 100
9999 mem: location 1117 is 3
9999 mem: location 1105 is 1098
9999 mem: location 1117 is 3
9999 run: address to copy is 1102
9999 run: its type is character
9999 mem: location 1102 is 100
9999 mem: storing 100 in location 1120
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1120 is 100
9999 mem: location 1118 is 1340
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1374
 103 run: x:location <- next-ingredient 
9999 mem: storing 100 in location 1376
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1340 in location 1377
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1405
9999 mem: storing 1405 in location 1378
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1378 is 1405
9999 mem: location 1405 is 0
9999 mem: location 1406 is 0
9999 mem: location 1407 is 0
9999 mem: location 1378 is 1405
9999 run: address to copy is 1405
9999 mem: storing 1405 in location 1379
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1376 is 100
9999 mem: location 1379 is 1405
9999 mem: storing 100 in location 1405
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1377 is 1340
9999 mem: location 1340 is 99
9999 mem: location 1341 is 0
9999 mem: location 1342 is 1275
9999 mem: location 1377 is 1340
9999 run: address to copy is 1341
9999 run: its type is address
9999 mem: location 1341 is 0
9999 mem: storing 0 in location 1380
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1377 is 1340
9999 mem: location 1340 is 99
9999 mem: location 1341 is 0
9999 mem: location 1342 is 1275
9999 mem: location 1377 is 1340
9999 run: address to copy is 1341
9999 mem: storing 1341 in location 1381
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1378 is 1405
9999 mem: location 1381 is 1341
9999 mem: storing 1405 in location 1341
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1378 is 1405
9999 mem: location 1405 is 100
9999 mem: location 1406 is 0
9999 mem: location 1407 is 0
9999 mem: location 1378 is 1405
9999 run: address to copy is 1407
9999 mem: storing 1407 in location 1381
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1377 is 1340
9999 mem: location 1381 is 1407
9999 mem: storing 1340 in location 1407
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1378 is 1405
9999 mem: location 1405 is 100
9999 mem: location 1406 is 0
9999 mem: location 1407 is 1340
9999 mem: location 1378 is 1405
9999 run: address to copy is 1406
9999 mem: storing 1406 in location 1381
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1380 is 0
9999 mem: location 1381 is 1406
9999 mem: storing 0 in location 1406
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1380 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1378 is 1405
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1118 is 1340
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1408
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1340 in location 1410
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1410 is 1340
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1410 is 1340
9999 mem: location 1340 is 99
9999 mem: location 1341 is 1405
9999 mem: location 1342 is 1275
9999 mem: location 1410 is 1340
9999 run: address to copy is 1341
9999 run: its type is address
9999 mem: location 1341 is 1405
9999 mem: storing 1405 in location 1411
 103 run: reply result:address:duplex-list
9999 mem: location 1411 is 1405
9999 run: result 0 is 1405
9999 mem: storing 1405 in location 1118
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1117 is 3
9999 mem: storing 4 in location 1117
 102 run: loop 
9999 run: jumping to instruction 36
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1117 is 4
9999 mem: location 1116 is 4
9999 mem: storing 1 in location 1119
 102 run: break-if done?:boolean, 
9999 mem: location 1119 is 1
9999 run: jumping to instruction 43
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 1176
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 1114
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1115 is 1135
9999 mem: location 1135 is 1176
9999 mem: location 1114 is 1136
9999 mem: storing 1176 in location 1136
 102 run: bottom:address:number <- get-address result:address:editor-data/deref, bottom:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 1176
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1140
9999 mem: storing 1140 in location 1121
 102 run: result:address:editor-data <- render result:address:editor-data
9999 mem: location 1110 is 1134
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1439
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1134 in location 1441
 103 run: screen:address <- get editor:address:editor-data/deref, screen:offset
9999 mem: location 1441 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 1176
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1441 is 1134
9999 run: address to copy is 1137
9999 run: its type is address
9999 mem: location 1137 is 1031
9999 mem: storing 1031 in location 1442
 103 run: top:number <- get editor:address:editor-data/deref, top:offset
9999 mem: location 1441 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 1176
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1441 is 1134
9999 run: address to copy is 1138
9999 run: its type is number
9999 mem: location 1138 is 0
9999 mem: storing 0 in location 1443
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1441 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 1176
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1441 is 1134
9999 run: address to copy is 1139
9999 run: its type is number
9999 mem: location 1139 is 0
9999 mem: storing 0 in location 1444
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1442 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1470
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1472
 104 run: break-unless x:address:screen, 
9999 mem: location 1472 is 1031
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1472 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1472 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1473
 104 run: reply height:number
9999 mem: location 1473 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1445
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1441 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 1176
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1441 is 1134
9999 run: address to copy is 1141
9999 run: its type is number
9999 mem: location 1141 is 4
9999 mem: storing 4 in location 1446
 103 run: hide-screen screen:address
9999 mem: location 1442 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1501
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1503
 104 run: break-unless x:address:screen, 
9999 mem: location 1503 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 1503 is 1031
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, top-of-screen:offset
9999 mem: location 1441 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 1176
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1441 is 1134
9999 run: address to copy is 1135
9999 run: its type is address
9999 mem: location 1135 is 1176
9999 mem: storing 1176 in location 1447
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1447 is 1176
9999 mem: storing 1176 in location 1448
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1447 is 1176
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1532
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1534
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1534 is 1176
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1534 is 1176
9999 mem: location 1176 is 167
9999 mem: location 1177 is 1210
9999 mem: location 1178 is 0
9999 mem: location 1534 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1210
9999 mem: storing 1210 in location 1535
 104 run: reply result:address:duplex-list
9999 mem: location 1535 is 1210
9999 run: result 0 is 1210
9999 mem: storing 1210 in location 1447
 103 run: row:number <- copy top:number
9999 mem: location 1443 is 0
9999 mem: storing 0 in location 1449
 103 run: column:number <- copy left:number
9999 mem: location 1444 is 0
9999 mem: storing 0 in location 1450
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1441 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 1176
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1441 is 1134
9999 run: address to copy is 1142
9999 mem: storing 1142 in location 1451
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1441 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 1176
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1441 is 1134
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 1452
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1441 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 1176
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1441 is 1134
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 1453
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1442 is 1031
9999 mem: location 1449 is 0
9999 mem: location 1450 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1563
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1565
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 1566
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1567
 104 run: break-unless x:address:screen, 
9999 mem: location 1565 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1565 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1565 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1568
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1566 is 0
9999 mem: location 1568 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1565 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1565 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1569
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1567 is 0
9999 mem: location 1569 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1565 is 1031
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1447 is 1210
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1449 is 0
9999 mem: location 1445 is 3
9999 mem: storing 0 in location 1454
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1454 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1449 is 0
9999 mem: location 1451 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 1455
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1455 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1450 is 0
9999 mem: location 1452 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 1 in location 1456
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1456 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1447 is 1210
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1594
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1210 in location 1596
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1596 is 1210
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1596 is 1210
9999 mem: location 1210 is 97
9999 mem: location 1211 is 1275
9999 mem: location 1212 is 1176
9999 mem: location 1596 is 1210
9999 run: address to copy is 1212
9999 run: its type is address
9999 mem: location 1212 is 1176
9999 mem: storing 1176 in location 1597
 104 run: reply result:address:duplex-list
9999 mem: location 1597 is 1176
9999 run: result 0 is 1176
9999 mem: location 1453 is 1136
9999 mem: storing 1176 in location 1136
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1447 is 1210
9999 mem: location 1210 is 97
9999 mem: location 1211 is 1275
9999 mem: location 1212 is 1176
9999 mem: location 1447 is 1210
9999 run: address to copy is 1210
9999 run: its type is number
9999 mem: location 1210 is 97
9999 mem: storing 97 in location 1457
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1457 is 97
9999 mem: storing 0 in location 1458
 103 run: break-unless newline?:boolean, 
9999 mem: location 1458 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1450 is 0
9999 mem: location 1446 is 4
9999 mem: storing 0 in location 1461
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1461 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 1442 is 1031
9999 mem: location 1457 is 97
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1625
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1627
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1628
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1629
9999 mem: storing 0 in location 1630
 104 run: break-if color-found?:boolean, 
9999 mem: location 1630 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1629
 104 run: break-unless x:address:screen, 
9999 mem: location 1627 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1627 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1627 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1631
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1627 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1627 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1632
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1627 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1627 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1633
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1627 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1627 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1634
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1628 is 97
9999 mem: storing 0 in location 1635
 104 run: break-unless newline?:boolean, 
9999 mem: location 1635 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1631 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1633 is 5
9999 mem: storing 0 in location 1638
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1638 is 0
9999 mem: location 1632 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 0 in location 1638
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1627 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1627 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1639
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1628 is 97
9999 mem: storing 0 in location 1640
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1640 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1639 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1638 is 0
9999 mem: location 1639 is 1036
9999 mem: location 1638 is 0
9999 mem: storing 1037 in location 1642
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1642 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1642 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1643
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1642 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1642 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1644
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1628 is 97
9999 mem: location 1643 is 1037
9999 mem: storing 97 in location 1037
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1629 is 7
9999 mem: location 1644 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1633 is 5
9999 mem: storing 4 in location 1645
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1632 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1645 is 4
9999 mem: storing 0 in location 1646
 104 run: break-if at-right?:boolean, 
9999 mem: location 1646 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1632 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1632 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1627 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1447 is 1210
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1656
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1210 in location 1658
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1658 is 1210
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1658 is 1210
9999 mem: location 1210 is 97
9999 mem: location 1211 is 1275
9999 mem: location 1212 is 1176
9999 mem: location 1658 is 1210
9999 run: address to copy is 1211
9999 run: its type is address
9999 mem: location 1211 is 1275
9999 mem: storing 1275 in location 1659
 104 run: reply result:address:duplex-list
9999 mem: location 1659 is 1275
9999 run: result 0 is 1275
9999 mem: storing 1275 in location 1447
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1448 is 1176
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1687
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1689
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1689 is 1176
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1689 is 1176
9999 mem: location 1176 is 167
9999 mem: location 1177 is 1210
9999 mem: location 1178 is 0
9999 mem: location 1689 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1210
9999 mem: storing 1210 in location 1690
 104 run: reply result:address:duplex-list
9999 mem: location 1690 is 1210
9999 run: result 0 is 1210
9999 mem: storing 1210 in location 1448
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1450 is 0
9999 mem: storing 1 in location 1450
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1447 is 1275
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1449 is 0
9999 mem: location 1445 is 3
9999 mem: storing 0 in location 1454
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1454 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1449 is 0
9999 mem: location 1451 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 1455
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1455 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1450 is 1
9999 mem: location 1452 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1456
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1456 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1447 is 1275
9999 mem: location 1275 is 98
9999 mem: location 1276 is 1340
9999 mem: location 1277 is 1210
9999 mem: location 1447 is 1275
9999 run: address to copy is 1275
9999 run: its type is number
9999 mem: location 1275 is 98
9999 mem: storing 98 in location 1457
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1457 is 98
9999 mem: storing 0 in location 1458
 103 run: break-unless newline?:boolean, 
9999 mem: location 1458 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1450 is 1
9999 mem: location 1446 is 4
9999 mem: storing 0 in location 1461
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1461 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 1442 is 1031
9999 mem: location 1457 is 98
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1718
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1720
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1721
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1722
9999 mem: storing 0 in location 1723
 104 run: break-if color-found?:boolean, 
9999 mem: location 1723 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1722
 104 run: break-unless x:address:screen, 
9999 mem: location 1720 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1720 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1720 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1724
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1720 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1720 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1725
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1720 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1720 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1726
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1720 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1720 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1727
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1721 is 98
9999 mem: storing 0 in location 1728
 104 run: break-unless newline?:boolean, 
9999 mem: location 1728 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1724 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1726 is 5
9999 mem: storing 0 in location 1731
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1731 is 0
9999 mem: location 1725 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 1 in location 1731
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1720 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1720 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1732
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1721 is 98
9999 mem: storing 0 in location 1733
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1733 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1732 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1731 is 1
9999 mem: location 1732 is 1036
9999 mem: location 1731 is 1
9999 mem: storing 1039 in location 1735
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1735 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1735 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1736
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1735 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1735 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1737
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1721 is 98
9999 mem: location 1736 is 1039
9999 mem: storing 98 in location 1039
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1722 is 7
9999 mem: location 1737 is 1040
9999 mem: storing 7 in location 1040
schedule: print-character/render/new-editor/editor-wraps-line-on-insert
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1726 is 5
9999 mem: storing 4 in location 1738
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1725 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1738 is 4
9999 mem: storing 0 in location 1739
 104 run: break-if at-right?:boolean, 
9999 mem: location 1739 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1725 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1725 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1720 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1447 is 1275
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1749
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1275 in location 1751
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1751 is 1275
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1751 is 1275
9999 mem: location 1275 is 98
9999 mem: location 1276 is 1340
9999 mem: location 1277 is 1210
9999 mem: location 1751 is 1275
9999 run: address to copy is 1276
9999 run: its type is address
9999 mem: location 1276 is 1340
9999 mem: storing 1340 in location 1752
 104 run: reply result:address:duplex-list
9999 mem: location 1752 is 1340
9999 run: result 0 is 1340
9999 mem: storing 1340 in location 1447
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1448 is 1210
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1780
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1210 in location 1782
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1782 is 1210
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1782 is 1210
9999 mem: location 1210 is 97
9999 mem: location 1211 is 1275
9999 mem: location 1212 is 1176
9999 mem: location 1782 is 1210
9999 run: address to copy is 1211
9999 run: its type is address
9999 mem: location 1211 is 1275
9999 mem: storing 1275 in location 1783
 104 run: reply result:address:duplex-list
9999 mem: location 1783 is 1275
9999 run: result 0 is 1275
9999 mem: storing 1275 in location 1448
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1450 is 1
9999 mem: storing 2 in location 1450
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1447 is 1340
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1449 is 0
9999 mem: location 1445 is 3
9999 mem: storing 0 in location 1454
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1454 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1449 is 0
9999 mem: location 1451 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 1455
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1455 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1450 is 2
9999 mem: location 1452 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1456
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1456 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1447 is 1340
9999 mem: location 1340 is 99
9999 mem: location 1341 is 1405
9999 mem: location 1342 is 1275
9999 mem: location 1447 is 1340
9999 run: address to copy is 1340
9999 run: its type is number
9999 mem: location 1340 is 99
9999 mem: storing 99 in location 1457
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1457 is 99
9999 mem: storing 0 in location 1458
 103 run: break-unless newline?:boolean, 
9999 mem: location 1458 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1450 is 2
9999 mem: location 1446 is 4
9999 mem: storing 0 in location 1461
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1461 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 1442 is 1031
9999 mem: location 1457 is 99
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1811
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1813
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1814
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1815
9999 mem: storing 0 in location 1816
 104 run: break-if color-found?:boolean, 
9999 mem: location 1816 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1815
 104 run: break-unless x:address:screen, 
9999 mem: location 1813 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1813 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1813 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1817
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1813 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1813 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1818
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1813 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1813 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1819
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1813 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1813 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1820
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1814 is 99
9999 mem: storing 0 in location 1821
 104 run: break-unless newline?:boolean, 
9999 mem: location 1821 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1817 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1819 is 5
9999 mem: storing 0 in location 1824
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1824 is 0
9999 mem: location 1818 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 2 in location 1824
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1813 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1813 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1825
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1814 is 99
9999 mem: storing 0 in location 1826
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1826 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1825 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1824 is 2
9999 mem: location 1825 is 1036
9999 mem: location 1824 is 2
9999 mem: storing 1041 in location 1828
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1828 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1828 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1829
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1828 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1828 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1830
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1814 is 99
9999 mem: location 1829 is 1041
9999 mem: storing 99 in location 1041
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1815 is 7
9999 mem: location 1830 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1819 is 5
9999 mem: storing 4 in location 1831
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1818 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1831 is 4
9999 mem: storing 0 in location 1832
 104 run: break-if at-right?:boolean, 
9999 mem: location 1832 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1818 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1818 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1813 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1447 is 1340
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1842
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1340 in location 1844
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1844 is 1340
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1844 is 1340
9999 mem: location 1340 is 99
9999 mem: location 1341 is 1405
9999 mem: location 1342 is 1275
9999 mem: location 1844 is 1340
9999 run: address to copy is 1341
9999 run: its type is address
9999 mem: location 1341 is 1405
9999 mem: storing 1405 in location 1845
 104 run: reply result:address:duplex-list
9999 mem: location 1845 is 1405
9999 run: result 0 is 1405
9999 mem: storing 1405 in location 1447
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1448 is 1275
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1873
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1275 in location 1875
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1875 is 1275
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1875 is 1275
9999 mem: location 1275 is 98
9999 mem: location 1276 is 1340
9999 mem: location 1277 is 1210
9999 mem: location 1875 is 1275
9999 run: address to copy is 1276
9999 run: its type is address
9999 mem: location 1276 is 1340
9999 mem: storing 1340 in location 1876
 104 run: reply result:address:duplex-list
9999 mem: location 1876 is 1340
9999 run: result 0 is 1340
9999 mem: storing 1340 in location 1448
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1450 is 2
9999 mem: storing 3 in location 1450
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1447 is 1405
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1449 is 0
9999 mem: location 1445 is 3
9999 mem: storing 0 in location 1454
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1454 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1449 is 0
9999 mem: location 1451 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 1455
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1455 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1450 is 3
9999 mem: location 1452 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1456
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1456 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1447 is 1405
9999 mem: location 1405 is 100
9999 mem: location 1406 is 0
9999 mem: location 1407 is 1340
9999 mem: location 1447 is 1405
9999 run: address to copy is 1405
9999 run: its type is number
9999 mem: location 1405 is 100
9999 mem: storing 100 in location 1457
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1457 is 100
9999 mem: storing 0 in location 1458
 103 run: break-unless newline?:boolean, 
9999 mem: location 1458 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1450 is 3
9999 mem: location 1446 is 4
9999 mem: storing 0 in location 1461
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1461 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 1442 is 1031
9999 mem: location 1457 is 100
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1904
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1906
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1907
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1908
9999 mem: storing 0 in location 1909
 104 run: break-if color-found?:boolean, 
9999 mem: location 1909 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1908
 104 run: break-unless x:address:screen, 
9999 mem: location 1906 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1906 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1906 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1910
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1906 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1906 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1911
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1906 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1906 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1912
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1906 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1906 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1913
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1907 is 100
9999 mem: storing 0 in location 1914
 104 run: break-unless newline?:boolean, 
9999 mem: location 1914 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1910 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1912 is 5
9999 mem: storing 0 in location 1917
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1917 is 0
9999 mem: location 1911 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 3 in location 1917
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1906 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1906 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1918
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1907 is 100
9999 mem: storing 0 in location 1919
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1919 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1918 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1917 is 3
9999 mem: location 1918 is 1036
9999 mem: location 1917 is 3
9999 mem: storing 1043 in location 1921
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1921 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1921 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1922
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1921 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1921 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1923
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1907 is 100
9999 mem: location 1922 is 1043
9999 mem: storing 100 in location 1043
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1908 is 7
9999 mem: location 1923 is 1044
9999 mem: storing 7 in location 1044
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1912 is 5
9999 mem: storing 4 in location 1924
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1911 is 1034
9999 mem: location 1034 is 3
9999 mem: location 1924 is 4
9999 mem: storing 0 in location 1925
 104 run: break-if at-right?:boolean, 
9999 mem: location 1925 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1911 is 1034
9999 mem: location 1034 is 3
9999 mem: location 1911 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1906 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1447 is 1405
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1935
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1405 in location 1937
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1937 is 1405
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1937 is 1405
9999 mem: location 1405 is 100
9999 mem: location 1406 is 0
9999 mem: location 1407 is 1340
9999 mem: location 1937 is 1405
9999 run: address to copy is 1406
9999 run: its type is address
9999 mem: location 1406 is 0
9999 mem: storing 0 in location 1938
 104 run: reply result:address:duplex-list
9999 mem: location 1938 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1447
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1448 is 1340
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1966
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1340 in location 1968
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1968 is 1340
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1968 is 1340
9999 mem: location 1340 is 99
9999 mem: location 1341 is 1405
9999 mem: location 1342 is 1275
9999 mem: location 1968 is 1340
9999 run: address to copy is 1341
9999 run: its type is address
9999 mem: location 1341 is 1405
9999 mem: storing 1405 in location 1969
 104 run: reply result:address:duplex-list
9999 mem: location 1969 is 1405
9999 run: result 0 is 1405
9999 mem: storing 1405 in location 1448
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1450 is 3
9999 mem: storing 4 in location 1450
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1447 is 0
9999 run: jumping to instruction 74
 103 run: bottom:address:number <- get-address editor:address:editor-data/deref, bottom:offset
9999 mem: location 1441 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 1176
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1441 is 1134
9999 run: address to copy is 1140
9999 mem: storing 1140 in location 1465
 103 run: bottom:address:number/deref <- copy row:number
9999 mem: location 1449 is 0
9999 mem: location 1465 is 1140
9999 mem: storing 0 in location 1140
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1449 is 0
9999 mem: location 1451 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 1455
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1450 is 4
9999 mem: location 1452 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1466
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1455 is 1
9999 mem: location 1466 is 0
9999 mem: storing 0 in location 1467
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1449 is 0
9999 mem: location 1451 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 0 in location 1468
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1467 is 0
9999 mem: location 1468 is 0
9999 mem: storing 0 in location 1469
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 1469 is 0
9999 run: jumping to instruction 87
 103 run: move-cursor screen:address, cursor-row:address:number/deref, cursor-column:address:number/deref
9999 mem: location 1442 is 1031
9999 mem: location 1451 is 1142
9999 mem: location 1142 is 0
9999 mem: location 1452 is 1143
9999 mem: location 1143 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1997
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1999
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 2000
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2001
 104 run: break-unless x:address:screen, 
9999 mem: location 1999 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1999 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1999 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2002
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2000 is 0
9999 mem: location 2002 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1999 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1999 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2003
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2001 is 0
9999 mem: location 2003 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1999 is 1031
 103 run: show-screen screen:address
9999 mem: location 1442 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2028
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2030
 104 run: break-unless x:address:screen, 
9999 mem: location 2030 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 2030 is 1031
 103 run: reply editor:address:editor-data/same-as-ingredient:0
9999 mem: location 1441 is 1134
9999 run: result 0 is 1134
9999 mem: storing 1134 in location 1110
 102 run: reply result:address:editor-data
9999 mem: location 1110 is 1134
9999 run: result 0 is 1134
9999 mem: storing 1134 in location 2
 101 run: assume-console [
    type [e]
  ]
parse: instruction: type
parse:   ingredient: {name: "e", properties: [_: "literal-string"]}
 101 run: run [
    event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1001
after-brace: event-loop ...
 101 run: event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1031
9999 mem: location 901 is 2064
9999 mem: location 2 is 1134
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2066
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2068
 102 run: console:address <- next-ingredient 
9999 mem: storing 2064 in location 2069
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1134 in location 2070
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 2069 is 2064
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2097
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 2064 in location 2099
 103 run: break-unless x:address:console, 
9999 mem: location 2099 is 2064
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 2099 is 2064
9999 mem: location 2064 is 0
9999 mem: location 2065 is 2059
9999 mem: location 2099 is 2064
9999 run: address to copy is 2064
9999 mem: storing 2064 in location 2100
 103 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 2099 is 2064
9999 mem: location 2064 is 0
9999 mem: location 2065 is 2059
9999 mem: location 2099 is 2064
9999 run: address to copy is 2065
9999 run: its type is address
9999 mem: location 2065 is 2059
9999 mem: storing 2059 in location 2101
 103 run: max:number <- length buf:address:array:event/deref
9999 mem: location 2101 is 2059
9999 mem: location 2059 is 1
9999 mem: location 2060 is 0
9999 mem: location 2061 is 101
9999 mem: location 2062 is 0
9999 mem: location 2063 is 0
9999 mem: location 2101 is 2059
9999 mem: storing 1 in location 2102
 103 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 2100 is 2064
9999 mem: location 2064 is 0
9999 mem: location 2102 is 1
9999 mem: storing 0 in location 2103
 103 run: break-unless done?:boolean, 
9999 mem: location 2103 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index buf:address:array:event/deref, idx:address:number/deref
9999 mem: location 2101 is 2059
9999 mem: location 2059 is 1
9999 mem: location 2060 is 0
9999 mem: location 2061 is 101
9999 mem: location 2062 is 0
9999 mem: location 2063 is 0
9999 mem: location 2100 is 2064
9999 mem: location 2064 is 0
9999 mem: location 2101 is 2059
9999 mem: location 2100 is 2064
9999 mem: location 2064 is 0
9999 run: address to copy is 2060
9999 run: its type is event
9999 mem: location 2060 is 0
9999 mem: location 2061 is 101
9999 mem: location 2062 is 0
9999 mem: location 2063 is 0
9999 mem: storing 0 in location 2105
9999 mem: storing 101 in location 2106
9999 mem: storing 0 in location 2107
9999 mem: storing 0 in location 2108
 103 run: idx:address:number/deref <- add idx:address:number/deref, 1:literal
9999 mem: location 2100 is 2064
9999 mem: location 2064 is 0
9999 mem: location 2100 is 2064
9999 mem: storing 1 in location 2064
 103 run: reply result:event, x:address:console/same-as-ingredient:0, 1:literal/found, 0:literal/quit
9999 mem: location 2105 is 0
9999 mem: location 2106 is 101
9999 mem: location 2107 is 0
9999 mem: location 2108 is 0
9999 mem: location 2099 is 2064
9999 run: result 0 is [0, 101, 0, 0]
9999 run: result 1 is 2064
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 2071
9999 mem: storing 101 in location 2072
9999 mem: storing 0 in location 2073
9999 mem: storing 0 in location 2074
9999 mem: storing 2064 in location 2069
9999 mem: storing 1 in location 2075
9999 mem: storing 0 in location 2076
 102 run: loop-unless found?:boolean, 
9999 mem: location 2075 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?:boolean, 
9999 mem: location 2076 is 0
9999 run: jump-if fell through
 102 run: trace [app], [next-event]
   1 app: next-event
 102 run: t:address:touch-event <- maybe-convert e:event, touch:variant
9999 mem: location 2071 is 0
9999 mem: location 2072 is 101
9999 mem: location 2073 is 0
9999 mem: location 2074 is 0
9999 mem: storing 0 in location 2077
 102 run: break-unless t:address:touch-event, 
9999 mem: location 2077 is 0
9999 run: jumping to instruction 15
 102 run: c:address:character <- maybe-convert e:event, text:variant
9999 mem: location 2071 is 0
9999 mem: location 2072 is 101
9999 mem: location 2073 is 0
9999 mem: location 2074 is 0
9999 mem: storing 2072 in location 2078
 102 run: break-unless c:address:character, 
9999 mem: location 2078 is 2072
9999 run: jump-unless fell through
 102 run: editor:address:editor-data <- insert-at-cursor editor:address:editor-data, c:address:character/deref
9999 mem: location 2070 is 1134
9999 mem: location 2078 is 2072
9999 mem: location 2072 is 101
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2128
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1134 in location 2130
 103 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 2131
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 2130 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 1176
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 2130 is 1134
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 2132
 103 run: d:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 2130 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 1176
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 2130 is 1134
9999 run: address to copy is 1134
9999 run: its type is address
9999 mem: location 1134 is 1176
9999 mem: storing 1176 in location 2133
 103 run: insert-duplex c:character, before-cursor:address:address:duplex-list/deref
9999 mem: location 2131 is 101
9999 mem: location 2132 is 1136
9999 mem: location 1136 is 1176
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2159
 104 run: x:location <- next-ingredient 
9999 mem: storing 101 in location 2161
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 2162
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 2190
9999 mem: storing 2190 in location 2163
 104 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 2163 is 2190
9999 mem: location 2190 is 0
9999 mem: location 2191 is 0
9999 mem: location 2192 is 0
9999 mem: location 2163 is 2190
9999 run: address to copy is 2190
9999 mem: storing 2190 in location 2164
 104 run: val:address:location/deref <- copy x:location
9999 mem: location 2161 is 101
9999 mem: location 2164 is 2190
9999 mem: storing 101 in location 2190
 104 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2162 is 1176
9999 mem: location 1176 is 167
9999 mem: location 1177 is 1210
9999 mem: location 1178 is 0
9999 mem: location 2162 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1210
9999 mem: storing 1210 in location 2165
 104 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 2162 is 1176
9999 mem: location 1176 is 167
9999 mem: location 1177 is 1210
9999 mem: location 1178 is 0
9999 mem: location 2162 is 1176
9999 run: address to copy is 1177
9999 mem: storing 1177 in location 2166
 104 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 2163 is 2190
9999 mem: location 2166 is 1177
9999 mem: storing 2190 in location 1177
 104 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 2163 is 2190
9999 mem: location 2190 is 101
9999 mem: location 2191 is 0
9999 mem: location 2192 is 0
9999 mem: location 2163 is 2190
9999 run: address to copy is 2192
9999 mem: storing 2192 in location 2166
 104 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 2162 is 1176
9999 mem: location 2166 is 2192
9999 mem: storing 1176 in location 2192
 104 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 2163 is 2190
9999 mem: location 2190 is 101
9999 mem: location 2191 is 0
9999 mem: location 2192 is 1176
9999 mem: location 2163 is 2190
9999 run: address to copy is 2191
9999 mem: storing 2191 in location 2166
 104 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 2165 is 1210
9999 mem: location 2166 is 2191
9999 mem: storing 1210 in location 2191
 104 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 2165 is 1210
9999 run: jumping to instruction 15
 104 run: y:address:address:duplex-list <- get-address next-node:address:duplex-list/deref, prev:offset
9999 mem: location 2165 is 1210
9999 mem: location 1210 is 97
9999 mem: location 1211 is 1275
9999 mem: location 1212 is 1176
9999 mem: location 2165 is 1210
9999 run: address to copy is 1212
9999 mem: storing 1212 in location 2166
 104 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 2163 is 2190
9999 mem: location 2166 is 1212
9999 mem: storing 2190 in location 1212
 104 run: reply new-node:address:duplex-list
9999 mem: location 2163 is 2190
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2131 is 101
9999 mem: storing 0 in location 2134
 103 run: break-unless newline?:boolean, 
9999 mem: location 2134 is 0
9999 run: jumping to instruction 14
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 2130 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 1176
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 2130 is 1134
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 2136
 103 run: cursor-column:address:number/deref <- add cursor-column:address:number/deref, 1:literal
9999 mem: location 2136 is 1143
9999 mem: location 1143 is 0
9999 mem: location 2136 is 1143
9999 mem: storing 1 in location 1143
 103 run: render editor:address:editor-data
9999 mem: location 2130 is 1134
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2193
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1134 in location 2195
 104 run: screen:address <- get editor:address:editor-data/deref, screen:offset
9999 mem: location 2195 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 1176
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 2195 is 1134
9999 run: address to copy is 1137
9999 run: its type is address
9999 mem: location 1137 is 1031
9999 mem: storing 1031 in location 2196
 104 run: top:number <- get editor:address:editor-data/deref, top:offset
9999 mem: location 2195 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 1176
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 2195 is 1134
9999 run: address to copy is 1138
9999 run: its type is number
9999 mem: location 1138 is 0
9999 mem: storing 0 in location 2197
 104 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 2195 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 1176
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 2195 is 1134
9999 run: address to copy is 1139
9999 run: its type is number
9999 mem: location 1139 is 0
9999 mem: storing 0 in location 2198
 104 run: screen-height:number <- screen-height screen:address
9999 mem: location 2196 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2224
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2226
 105 run: break-unless x:address:screen, 
9999 mem: location 2226 is 1031
9999 run: jump-unless fell through
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2226 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2226 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2227
 105 run: reply height:number
9999 mem: location 2227 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 2199
 104 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 2195 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 1176
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 2195 is 1134
9999 run: address to copy is 1141
9999 run: its type is number
9999 mem: location 1141 is 4
9999 mem: storing 4 in location 2200
 104 run: hide-screen screen:address
9999 mem: location 2196 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2255
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2257
 105 run: break-unless x:address:screen, 
9999 mem: location 2257 is 1031
9999 run: jump-unless fell through
 105 run: reply x:address:screen
9999 mem: location 2257 is 1031
 104 run: curr:address:duplex-list <- get editor:address:editor-data/deref, top-of-screen:offset
9999 mem: location 2195 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 1176
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 2195 is 1134
9999 run: address to copy is 1135
9999 run: its type is address
9999 mem: location 1135 is 1176
9999 mem: storing 1176 in location 2201
 104 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 2201 is 1176
9999 mem: storing 1176 in location 2202
 104 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2201 is 1176
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2286
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 2288
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2288 is 1176
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2288 is 1176
9999 mem: location 1176 is 167
9999 mem: location 1177 is 2190
9999 mem: location 1178 is 0
9999 mem: location 2288 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 2190
9999 mem: storing 2190 in location 2289
 105 run: reply result:address:duplex-list
9999 mem: location 2289 is 2190
9999 run: result 0 is 2190
9999 mem: storing 2190 in location 2201
 104 run: row:number <- copy top:number
9999 mem: location 2197 is 0
9999 mem: storing 0 in location 2203
 104 run: column:number <- copy left:number
9999 mem: location 2198 is 0
9999 mem: storing 0 in location 2204
 104 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 2195 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 1176
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 2195 is 1134
9999 run: address to copy is 1142
9999 mem: storing 1142 in location 2205
 104 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 2195 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 1176
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 2195 is 1134
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 2206
 104 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 2195 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 1176
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 2195 is 1134
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 2207
 104 run: move-cursor screen:address, row:number, column:number
9999 mem: location 2196 is 1031
9999 mem: location 2203 is 0
9999 mem: location 2204 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2317
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2319
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 2320
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2321
 105 run: break-unless x:address:screen, 
9999 mem: location 2319 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2319 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2319 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2322
 105 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2320 is 0
9999 mem: location 2322 is 1033
9999 mem: storing 0 in location 1033
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2319 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2319 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2323
 105 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2321 is 0
9999 mem: location 2323 is 1034
9999 mem: storing 0 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2319 is 1031
 104 run: break-unless curr:address:duplex-list, 
9999 mem: location 2201 is 2190
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2203 is 0
9999 mem: location 2199 is 3
9999 mem: storing 0 in location 2208
 104 run: break-if off-screen?:boolean, 
9999 mem: location 2208 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2203 is 0
9999 mem: location 2205 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 2209
 104 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2209 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 2204 is 0
9999 mem: location 2206 is 1143
9999 mem: location 1143 is 1
9999 mem: storing 0 in location 2210
 104 run: break-unless at-cursor?:boolean, 
9999 mem: location 2210 is 0
9999 run: jumping to instruction 28
 104 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2201 is 2190
9999 mem: location 2190 is 101
9999 mem: location 2191 is 1210
9999 mem: location 2192 is 1176
9999 mem: location 2201 is 2190
9999 run: address to copy is 2190
9999 run: its type is number
9999 mem: location 2190 is 101
9999 mem: storing 101 in location 2211
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2211 is 101
9999 mem: storing 0 in location 2212
 104 run: break-unless newline?:boolean, 
9999 mem: location 2212 is 0
9999 run: jumping to instruction 54
 104 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2204 is 0
9999 mem: location 2200 is 4
9999 mem: storing 0 in location 2215
 104 run: break-unless at-right?:boolean, 
9999 mem: location 2215 is 0
9999 run: jumping to instruction 68
 104 run: print-character screen:address, c:character
9999 mem: location 2196 is 1031
9999 mem: location 2211 is 101
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2348
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2350
 105 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 2351
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2352
9999 mem: storing 0 in location 2353
 105 run: break-if color-found?:boolean, 
9999 mem: location 2353 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2352
 105 run: break-unless x:address:screen, 
9999 mem: location 2350 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2350 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2350 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2354
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2350 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2350 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2355
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2350 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2350 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2356
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2350 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2350 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2357
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2351 is 101
9999 mem: storing 0 in location 2358
 105 run: break-unless newline?:boolean, 
9999 mem: location 2358 is 0
9999 run: jumping to instruction 25
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2354 is 1033
9999 mem: location 1033 is 0
9999 mem: location 2356 is 5
9999 mem: storing 0 in location 2361
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2361 is 0
9999 mem: location 2355 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 0 in location 2361
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2350 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2350 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2362
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2351 is 101
9999 mem: storing 0 in location 2363
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2363 is 0
9999 run: jumping to instruction 44
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2362 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2361 is 0
9999 mem: location 2362 is 1036
9999 mem: location 2361 is 0
9999 mem: storing 1037 in location 2365
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2365 is 1037
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 2365 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 2366
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2365 is 1037
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 2365 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 2367
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2351 is 101
9999 mem: location 2366 is 1037
9999 mem: storing 101 in location 1037
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2352 is 7
9999 mem: location 2367 is 1038
9999 mem: storing 7 in location 1038
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2356 is 5
9999 mem: storing 4 in location 2368
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2355 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2368 is 4
9999 mem: storing 0 in location 2369
 105 run: break-if at-right?:boolean, 
9999 mem: location 2369 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2355 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2355 is 1034
9999 mem: storing 1 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2350 is 1031
 104 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2201 is 2190
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2379
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2190 in location 2381
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2381 is 2190
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2381 is 2190
9999 mem: location 2190 is 101
9999 mem: location 2191 is 1210
9999 mem: location 2192 is 1176
9999 mem: location 2381 is 2190
9999 run: address to copy is 2191
9999 run: its type is address
9999 mem: location 2191 is 1210
9999 mem: storing 1210 in location 2382
 105 run: reply result:address:duplex-list
9999 mem: location 2382 is 1210
9999 run: result 0 is 1210
9999 mem: storing 1210 in location 2201
 104 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2202 is 1176
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2410
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 2412
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2412 is 1176
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2412 is 1176
9999 mem: location 1176 is 167
9999 mem: location 1177 is 2190
9999 mem: location 1178 is 0
9999 mem: location 2412 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 2190
9999 mem: storing 2190 in location 2413
 105 run: reply result:address:duplex-list
9999 mem: location 2413 is 2190
9999 run: result 0 is 2190
9999 mem: storing 2190 in location 2202
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2204 is 0
9999 mem: storing 1 in location 2204
 104 run: loop 
9999 run: jumping to instruction 18
 104 run: break-unless curr:address:duplex-list, 
9999 mem: location 2201 is 1210
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2203 is 0
9999 mem: location 2199 is 3
9999 mem: storing 0 in location 2208
 104 run: break-if off-screen?:boolean, 
9999 mem: location 2208 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2203 is 0
9999 mem: location 2205 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 2209
 104 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2209 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 2204 is 1
9999 mem: location 2206 is 1143
9999 mem: location 1143 is 1
9999 mem: storing 1 in location 2210
 104 run: break-unless at-cursor?:boolean, 
9999 mem: location 2210 is 1
9999 run: jump-unless fell through
 104 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 2201 is 1210
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2441
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1210 in location 2443
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2443 is 1210
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 2443 is 1210
9999 mem: location 1210 is 97
9999 mem: location 1211 is 1275
9999 mem: location 1212 is 2190
9999 mem: location 2443 is 1210
9999 run: address to copy is 1212
9999 run: its type is address
9999 mem: location 1212 is 2190
9999 mem: storing 2190 in location 2444
 105 run: reply result:address:duplex-list
9999 mem: location 2444 is 2190
9999 run: result 0 is 2190
9999 mem: location 2207 is 1136
9999 mem: storing 2190 in location 1136
 104 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2201 is 1210
9999 mem: location 1210 is 97
9999 mem: location 1211 is 1275
9999 mem: location 1212 is 2190
9999 mem: location 2201 is 1210
9999 run: address to copy is 1210
9999 run: its type is number
9999 mem: location 1210 is 97
9999 mem: storing 97 in location 2211
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2211 is 97
9999 mem: storing 0 in location 2212
 104 run: break-unless newline?:boolean, 
9999 mem: location 2212 is 0
9999 run: jumping to instruction 54
 104 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2204 is 1
9999 mem: location 2200 is 4
9999 mem: storing 0 in location 2215
 104 run: break-unless at-right?:boolean, 
9999 mem: location 2215 is 0
9999 run: jumping to instruction 68
 104 run: print-character screen:address, c:character
9999 mem: location 2196 is 1031
9999 mem: location 2211 is 97
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2472
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2474
 105 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 2475
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2476
9999 mem: storing 0 in location 2477
 105 run: break-if color-found?:boolean, 
9999 mem: location 2477 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2476
 105 run: break-unless x:address:screen, 
9999 mem: location 2474 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2474 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2474 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2478
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2474 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2474 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2479
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2474 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2474 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2480
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2474 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2474 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2481
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2475 is 97
9999 mem: storing 0 in location 2482
 105 run: break-unless newline?:boolean, 
9999 mem: location 2482 is 0
9999 run: jumping to instruction 25
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2478 is 1033
9999 mem: location 1033 is 0
9999 mem: location 2480 is 5
9999 mem: storing 0 in location 2485
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2485 is 0
9999 mem: location 2479 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 1 in location 2485
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2474 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2474 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2486
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2475 is 97
9999 mem: storing 0 in location 2487
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2487 is 0
9999 run: jumping to instruction 44
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2486 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2485 is 1
9999 mem: location 2486 is 1036
9999 mem: location 2485 is 1
9999 mem: storing 1039 in location 2489
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2489 is 1039
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 2489 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 2490
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2489 is 1039
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 2489 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 2491
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2475 is 97
9999 mem: location 2490 is 1039
9999 mem: storing 97 in location 1039
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2476 is 7
9999 mem: location 2491 is 1040
9999 mem: storing 7 in location 1040
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2480 is 5
9999 mem: storing 4 in location 2492
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2479 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2492 is 4
9999 mem: storing 0 in location 2493
 105 run: break-if at-right?:boolean, 
9999 mem: location 2493 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2479 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2479 is 1034
9999 mem: storing 2 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2474 is 1031
 104 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2201 is 1210
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2503
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1210 in location 2505
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2505 is 1210
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2505 is 1210
9999 mem: location 1210 is 97
9999 mem: location 1211 is 1275
9999 mem: location 1212 is 2190
9999 mem: location 2505 is 1210
9999 run: address to copy is 1211
9999 run: its type is address
9999 mem: location 1211 is 1275
9999 mem: storing 1275 in location 2506
 105 run: reply result:address:duplex-list
9999 mem: location 2506 is 1275
9999 run: result 0 is 1275
9999 mem: storing 1275 in location 2201
 104 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2202 is 2190
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2534
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2190 in location 2536
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2536 is 2190
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2536 is 2190
9999 mem: location 2190 is 101
9999 mem: location 2191 is 1210
9999 mem: location 2192 is 1176
9999 mem: location 2536 is 2190
9999 run: address to copy is 2191
9999 run: its type is address
9999 mem: location 2191 is 1210
9999 mem: storing 1210 in location 2537
 105 run: reply result:address:duplex-list
9999 mem: location 2537 is 1210
9999 run: result 0 is 1210
9999 mem: storing 1210 in location 2202
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2204 is 1
9999 mem: storing 2 in location 2204
 104 run: loop 
9999 run: jumping to instruction 18
 104 run: break-unless curr:address:duplex-list, 
9999 mem: location 2201 is 1275
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2203 is 0
9999 mem: location 2199 is 3
9999 mem: storing 0 in location 2208
 104 run: break-if off-screen?:boolean, 
9999 mem: location 2208 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2203 is 0
9999 mem: location 2205 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 2209
 104 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2209 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 2204 is 2
9999 mem: location 2206 is 1143
9999 mem: location 1143 is 1
9999 mem: storing 0 in location 2210
 104 run: break-unless at-cursor?:boolean, 
9999 mem: location 2210 is 0
9999 run: jumping to instruction 28
 104 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2201 is 1275
9999 mem: location 1275 is 98
9999 mem: location 1276 is 1340
9999 mem: location 1277 is 1210
9999 mem: location 2201 is 1275
9999 run: address to copy is 1275
9999 run: its type is number
9999 mem: location 1275 is 98
9999 mem: storing 98 in location 2211
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2211 is 98
9999 mem: storing 0 in location 2212
 104 run: break-unless newline?:boolean, 
9999 mem: location 2212 is 0
9999 run: jumping to instruction 54
 104 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2204 is 2
9999 mem: location 2200 is 4
9999 mem: storing 0 in location 2215
 104 run: break-unless at-right?:boolean, 
9999 mem: location 2215 is 0
9999 run: jumping to instruction 68
 104 run: print-character screen:address, c:character
9999 mem: location 2196 is 1031
9999 mem: location 2211 is 98
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2565
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2567
 105 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 2568
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2569
9999 mem: storing 0 in location 2570
 105 run: break-if color-found?:boolean, 
9999 mem: location 2570 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2569
 105 run: break-unless x:address:screen, 
9999 mem: location 2567 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2567 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2567 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2571
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2567 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2567 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2572
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2567 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2567 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2573
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2567 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2567 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2574
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2568 is 98
9999 mem: storing 0 in location 2575
 105 run: break-unless newline?:boolean, 
9999 mem: location 2575 is 0
9999 run: jumping to instruction 25
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2571 is 1033
9999 mem: location 1033 is 0
9999 mem: location 2573 is 5
9999 mem: storing 0 in location 2578
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2578 is 0
9999 mem: location 2572 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 2 in location 2578
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2567 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2567 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2579
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2568 is 98
9999 mem: storing 0 in location 2580
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2580 is 0
9999 run: jumping to instruction 44
schedule: print-character/render/insert-at-cursor/event-loop/run1001/editor-wraps-line-on-insert
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2579 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2578 is 2
9999 mem: location 2579 is 1036
9999 mem: location 2578 is 2
9999 mem: storing 1041 in location 2582
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2582 is 1041
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 2582 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 2583
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2582 is 1041
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 2582 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 2584
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2568 is 98
9999 mem: location 2583 is 1041
9999 mem: storing 98 in location 1041
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2569 is 7
9999 mem: location 2584 is 1042
9999 mem: storing 7 in location 1042
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2573 is 5
9999 mem: storing 4 in location 2585
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2572 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2585 is 4
9999 mem: storing 0 in location 2586
 105 run: break-if at-right?:boolean, 
9999 mem: location 2586 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2572 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2572 is 1034
9999 mem: storing 3 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2567 is 1031
 104 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2201 is 1275
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2596
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1275 in location 2598
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2598 is 1275
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2598 is 1275
9999 mem: location 1275 is 98
9999 mem: location 1276 is 1340
9999 mem: location 1277 is 1210
9999 mem: location 2598 is 1275
9999 run: address to copy is 1276
9999 run: its type is address
9999 mem: location 1276 is 1340
9999 mem: storing 1340 in location 2599
 105 run: reply result:address:duplex-list
9999 mem: location 2599 is 1340
9999 run: result 0 is 1340
9999 mem: storing 1340 in location 2201
 104 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2202 is 1210
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2627
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1210 in location 2629
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2629 is 1210
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2629 is 1210
9999 mem: location 1210 is 97
9999 mem: location 1211 is 1275
9999 mem: location 1212 is 2190
9999 mem: location 2629 is 1210
9999 run: address to copy is 1211
9999 run: its type is address
9999 mem: location 1211 is 1275
9999 mem: storing 1275 in location 2630
 105 run: reply result:address:duplex-list
9999 mem: location 2630 is 1275
9999 run: result 0 is 1275
9999 mem: storing 1275 in location 2202
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2204 is 2
9999 mem: storing 3 in location 2204
 104 run: loop 
9999 run: jumping to instruction 18
 104 run: break-unless curr:address:duplex-list, 
9999 mem: location 2201 is 1340
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2203 is 0
9999 mem: location 2199 is 3
9999 mem: storing 0 in location 2208
 104 run: break-if off-screen?:boolean, 
9999 mem: location 2208 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2203 is 0
9999 mem: location 2205 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 2209
 104 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2209 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 2204 is 3
9999 mem: location 2206 is 1143
9999 mem: location 1143 is 1
9999 mem: storing 0 in location 2210
 104 run: break-unless at-cursor?:boolean, 
9999 mem: location 2210 is 0
9999 run: jumping to instruction 28
 104 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2201 is 1340
9999 mem: location 1340 is 99
9999 mem: location 1341 is 1405
9999 mem: location 1342 is 1275
9999 mem: location 2201 is 1340
9999 run: address to copy is 1340
9999 run: its type is number
9999 mem: location 1340 is 99
9999 mem: storing 99 in location 2211
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2211 is 99
9999 mem: storing 0 in location 2212
 104 run: break-unless newline?:boolean, 
9999 mem: location 2212 is 0
9999 run: jumping to instruction 54
 104 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2204 is 3
9999 mem: location 2200 is 4
9999 mem: storing 0 in location 2215
 104 run: break-unless at-right?:boolean, 
9999 mem: location 2215 is 0
9999 run: jumping to instruction 68
 104 run: print-character screen:address, c:character
9999 mem: location 2196 is 1031
9999 mem: location 2211 is 99
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2658
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2660
 105 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 2661
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2662
9999 mem: storing 0 in location 2663
 105 run: break-if color-found?:boolean, 
9999 mem: location 2663 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2662
 105 run: break-unless x:address:screen, 
9999 mem: location 2660 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2660 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2660 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2664
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2660 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2660 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2665
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2660 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2660 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2666
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2660 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2660 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2667
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2661 is 99
9999 mem: storing 0 in location 2668
 105 run: break-unless newline?:boolean, 
9999 mem: location 2668 is 0
9999 run: jumping to instruction 25
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2664 is 1033
9999 mem: location 1033 is 0
9999 mem: location 2666 is 5
9999 mem: storing 0 in location 2671
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2671 is 0
9999 mem: location 2665 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 3 in location 2671
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2660 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2660 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2672
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2661 is 99
9999 mem: storing 0 in location 2673
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2673 is 0
9999 run: jumping to instruction 44
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2672 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2671 is 3
9999 mem: location 2672 is 1036
9999 mem: location 2671 is 3
9999 mem: storing 1043 in location 2675
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2675 is 1043
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 2675 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 2676
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2675 is 1043
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 2675 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 2677
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2661 is 99
9999 mem: location 2676 is 1043
9999 mem: storing 99 in location 1043
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2662 is 7
9999 mem: location 2677 is 1044
9999 mem: storing 7 in location 1044
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2666 is 5
9999 mem: storing 4 in location 2678
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2665 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2678 is 4
9999 mem: storing 0 in location 2679
 105 run: break-if at-right?:boolean, 
9999 mem: location 2679 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2665 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2665 is 1034
9999 mem: storing 4 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2660 is 1031
 104 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2201 is 1340
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2689
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1340 in location 2691
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2691 is 1340
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2691 is 1340
9999 mem: location 1340 is 99
9999 mem: location 1341 is 1405
9999 mem: location 1342 is 1275
9999 mem: location 2691 is 1340
9999 run: address to copy is 1341
9999 run: its type is address
9999 mem: location 1341 is 1405
9999 mem: storing 1405 in location 2692
 105 run: reply result:address:duplex-list
9999 mem: location 2692 is 1405
9999 run: result 0 is 1405
9999 mem: storing 1405 in location 2201
 104 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2202 is 1275
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2720
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1275 in location 2722
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2722 is 1275
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2722 is 1275
9999 mem: location 1275 is 98
9999 mem: location 1276 is 1340
9999 mem: location 1277 is 1210
9999 mem: location 2722 is 1275
9999 run: address to copy is 1276
9999 run: its type is address
9999 mem: location 1276 is 1340
9999 mem: storing 1340 in location 2723
 105 run: reply result:address:duplex-list
9999 mem: location 2723 is 1340
9999 run: result 0 is 1340
9999 mem: storing 1340 in location 2202
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2204 is 3
9999 mem: storing 4 in location 2204
 104 run: loop 
9999 run: jumping to instruction 18
 104 run: break-unless curr:address:duplex-list, 
9999 mem: location 2201 is 1405
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2203 is 0
9999 mem: location 2199 is 3
9999 mem: storing 0 in location 2208
 104 run: break-if off-screen?:boolean, 
9999 mem: location 2208 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2203 is 0
9999 mem: location 2205 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 2209
 104 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2209 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 2204 is 4
9999 mem: location 2206 is 1143
9999 mem: location 1143 is 1
9999 mem: storing 0 in location 2210
 104 run: break-unless at-cursor?:boolean, 
9999 mem: location 2210 is 0
9999 run: jumping to instruction 28
 104 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2201 is 1405
9999 mem: location 1405 is 100
9999 mem: location 1406 is 0
9999 mem: location 1407 is 1340
9999 mem: location 2201 is 1405
9999 run: address to copy is 1405
9999 run: its type is number
9999 mem: location 1405 is 100
9999 mem: storing 100 in location 2211
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2211 is 100
9999 mem: storing 0 in location 2212
 104 run: break-unless newline?:boolean, 
9999 mem: location 2212 is 0
9999 run: jumping to instruction 54
 104 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2204 is 4
9999 mem: location 2200 is 4
9999 mem: storing 1 in location 2215
 104 run: break-unless at-right?:boolean, 
9999 mem: location 2215 is 1
9999 run: jump-unless fell through
 104 run: next-node:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2201 is 1405
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2751
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1405 in location 2753
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2753 is 1405
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2753 is 1405
9999 mem: location 1405 is 100
9999 mem: location 1406 is 0
9999 mem: location 1407 is 1340
9999 mem: location 2753 is 1405
9999 run: address to copy is 1406
9999 run: its type is address
9999 mem: location 1406 is 0
9999 mem: storing 0 in location 2754
 105 run: reply result:address:duplex-list
9999 mem: location 2754 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 2216
 104 run: break-unless next-node:address:duplex-list, 
9999 mem: location 2216 is 0
9999 run: jumping to instruction 68
 104 run: print-character screen:address, c:character
9999 mem: location 2196 is 1031
9999 mem: location 2211 is 100
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2782
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2784
 105 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 2785
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2786
9999 mem: storing 0 in location 2787
 105 run: break-if color-found?:boolean, 
9999 mem: location 2787 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2786
 105 run: break-unless x:address:screen, 
9999 mem: location 2784 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2784 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2784 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2788
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2784 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2784 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2789
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2784 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2784 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2790
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2784 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2784 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2791
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2785 is 100
9999 mem: storing 0 in location 2792
 105 run: break-unless newline?:boolean, 
9999 mem: location 2792 is 0
9999 run: jumping to instruction 25
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2788 is 1033
9999 mem: location 1033 is 0
9999 mem: location 2790 is 5
9999 mem: storing 0 in location 2795
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2795 is 0
9999 mem: location 2789 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 4 in location 2795
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2784 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2784 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2796
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2785 is 100
9999 mem: storing 0 in location 2797
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2797 is 0
9999 run: jumping to instruction 44
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2796 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2795 is 4
9999 mem: location 2796 is 1036
9999 mem: location 2795 is 4
9999 mem: storing 1045 in location 2799
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2799 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 2799 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 2800
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2799 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 2799 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 2801
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2785 is 100
9999 mem: location 2800 is 1045
9999 mem: storing 100 in location 1045
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2786 is 7
9999 mem: location 2801 is 1046
9999 mem: storing 7 in location 1046
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2790 is 5
9999 mem: storing 4 in location 2802
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2789 is 1034
9999 mem: location 1034 is 4
9999 mem: location 2802 is 4
9999 mem: storing 1 in location 2803
 105 run: break-if at-right?:boolean, 
9999 mem: location 2803 is 1
9999 run: jumping to instruction 55
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2784 is 1031
 104 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2201 is 1405
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2813
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1405 in location 2815
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2815 is 1405
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2815 is 1405
9999 mem: location 1405 is 100
9999 mem: location 1406 is 0
9999 mem: location 1407 is 1340
9999 mem: location 2815 is 1405
9999 run: address to copy is 1406
9999 run: its type is address
9999 mem: location 1406 is 0
9999 mem: storing 0 in location 2816
 105 run: reply result:address:duplex-list
9999 mem: location 2816 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 2201
 104 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2202 is 1340
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2844
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1340 in location 2846
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2846 is 1340
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2846 is 1340
9999 mem: location 1340 is 99
9999 mem: location 1341 is 1405
9999 mem: location 1342 is 1275
9999 mem: location 2846 is 1340
9999 run: address to copy is 1341
9999 run: its type is address
9999 mem: location 1341 is 1405
9999 mem: storing 1405 in location 2847
 105 run: reply result:address:duplex-list
9999 mem: location 2847 is 1405
9999 run: result 0 is 1405
9999 mem: storing 1405 in location 2202
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2204 is 4
9999 mem: storing 5 in location 2204
 104 run: loop 
9999 run: jumping to instruction 18
 104 run: break-unless curr:address:duplex-list, 
9999 mem: location 2201 is 0
9999 run: jumping to instruction 74
 104 run: bottom:address:number <- get-address editor:address:editor-data/deref, bottom:offset
9999 mem: location 2195 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 2190
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 2195 is 1134
9999 run: address to copy is 1140
9999 mem: storing 1140 in location 2219
 104 run: bottom:address:number/deref <- copy row:number
9999 mem: location 2203 is 0
9999 mem: location 2219 is 1140
9999 mem: storing 0 in location 1140
 104 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2203 is 0
9999 mem: location 2205 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 2209
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 2204 is 5
9999 mem: location 2206 is 1143
9999 mem: location 1143 is 1
9999 mem: storing 0 in location 2220
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 2209 is 1
9999 mem: location 2220 is 0
9999 mem: storing 0 in location 2221
 104 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 2203 is 0
9999 mem: location 2205 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 0 in location 2222
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 2221 is 0
9999 mem: location 2222 is 0
9999 mem: storing 0 in location 2223
 104 run: break-unless before-cursor?:boolean, 
9999 mem: location 2223 is 0
9999 run: jumping to instruction 87
 104 run: move-cursor screen:address, cursor-row:address:number/deref, cursor-column:address:number/deref
9999 mem: location 2196 is 1031
9999 mem: location 2205 is 1142
9999 mem: location 1142 is 0
9999 mem: location 2206 is 1143
9999 mem: location 1143 is 1
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2875
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2877
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 2878
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 2879
 105 run: break-unless x:address:screen, 
9999 mem: location 2877 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2877 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2877 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2880
 105 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2878 is 0
9999 mem: location 2880 is 1033
9999 mem: storing 0 in location 1033
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2877 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2877 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2881
 105 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2879 is 1
9999 mem: location 2881 is 1034
9999 mem: storing 1 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2877 is 1031
 104 run: show-screen screen:address
9999 mem: location 2196 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2906
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2908
 105 run: break-unless x:address:screen, 
9999 mem: location 2908 is 1031
9999 run: jump-unless fell through
 105 run: reply x:address:screen
9999 mem: location 2908 is 1031
 104 run: reply editor:address:editor-data/same-as-ingredient:0
9999 mem: location 2195 is 1134
 103 run: reply editor:address:editor-data/same-as-ingredient:0
9999 mem: location 2130 is 1134
9999 run: result 0 is 1134
9999 mem: storing 1134 in location 2070
 102 run: loop +next-event:label
9999 run: jumping to instruction 6
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 2069 is 2064
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2937
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 2064 in location 2939
 103 run: break-unless x:address:console, 
9999 mem: location 2939 is 2064
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 2939 is 2064
9999 mem: location 2064 is 1
9999 mem: location 2065 is 2059
9999 mem: location 2939 is 2064
9999 run: address to copy is 2064
9999 mem: storing 2064 in location 2940
 103 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 2939 is 2064
9999 mem: location 2064 is 1
9999 mem: location 2065 is 2059
9999 mem: location 2939 is 2064
9999 run: address to copy is 2065
9999 run: its type is address
9999 mem: location 2065 is 2059
9999 mem: storing 2059 in location 2941
 103 run: max:number <- length buf:address:array:event/deref
9999 mem: location 2941 is 2059
9999 mem: location 2059 is 1
9999 mem: location 2060 is 0
9999 mem: location 2061 is 101
9999 mem: location 2062 is 0
9999 mem: location 2063 is 0
9999 mem: location 2941 is 2059
9999 mem: storing 1 in location 2942
 103 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 2940 is 2064
9999 mem: location 2064 is 1
9999 mem: location 2942 is 1
9999 mem: storing 1 in location 2943
 103 run: break-unless done?:boolean, 
9999 mem: location 2943 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: new alloc: 2968
9999 mem: storing 2968 in location 2944
 103 run: reply dummy:address:event/deref, x:address:console/same-as-ingredient:0, 1:literal/found, 1:literal/quit
9999 mem: location 2944 is 2968
9999 mem: location 2968 is 0
9999 mem: location 2969 is 0
9999 mem: location 2970 is 0
9999 mem: location 2971 is 0
9999 mem: location 2939 is 2064
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 2064
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 2071
9999 mem: storing 0 in location 2072
9999 mem: storing 0 in location 2073
9999 mem: storing 0 in location 2074
9999 mem: storing 2064 in location 2069
9999 mem: storing 1 in location 2075
9999 mem: storing 1 in location 2076
 102 run: loop-unless found?:boolean, 
9999 mem: location 2075 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?:boolean, 
9999 mem: location 2076 is 1
9999 run: jumping to instruction 65
 100 run: screen-should-contain [
    .eabcd.
    .     .
  ]
 100 run: assume-console [
    type [f]
  ]
parse: instruction: type
parse:   ingredient: {name: "f", properties: [_: "literal-string"]}
 100 run: run [
    event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1002
after-brace: event-loop ...
 100 run: event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1031
9999 mem: location 901 is 2977
9999 mem: location 2 is 1134
 101 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2979
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2981
 101 run: console:address <- next-ingredient 
9999 mem: storing 2977 in location 2982
 101 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1134 in location 2983
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 2982 is 2977
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3010
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 2977 in location 3012
 102 run: break-unless x:address:console, 
9999 mem: location 3012 is 2977
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 3012 is 2977
9999 mem: location 2977 is 0
9999 mem: location 2978 is 2972
9999 mem: location 3012 is 2977
9999 run: address to copy is 2977
9999 mem: storing 2977 in location 3013
 102 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 3012 is 2977
9999 mem: location 2977 is 0
9999 mem: location 2978 is 2972
9999 mem: location 3012 is 2977
9999 run: address to copy is 2978
9999 run: its type is address
9999 mem: location 2978 is 2972
9999 mem: storing 2972 in location 3014
 102 run: max:number <- length buf:address:array:event/deref
9999 mem: location 3014 is 2972
9999 mem: location 2972 is 1
9999 mem: location 2973 is 0
9999 mem: location 2974 is 102
9999 mem: location 2975 is 0
9999 mem: location 2976 is 0
9999 mem: location 3014 is 2972
9999 mem: storing 1 in location 3015
 102 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 3013 is 2977
9999 mem: location 2977 is 0
9999 mem: location 3015 is 1
9999 mem: storing 0 in location 3016
 102 run: break-unless done?:boolean, 
9999 mem: location 3016 is 0
9999 run: jumping to instruction 12
 102 run: result:event <- index buf:address:array:event/deref, idx:address:number/deref
9999 mem: location 3014 is 2972
9999 mem: location 2972 is 1
9999 mem: location 2973 is 0
9999 mem: location 2974 is 102
9999 mem: location 2975 is 0
9999 mem: location 2976 is 0
9999 mem: location 3013 is 2977
9999 mem: location 2977 is 0
9999 mem: location 3014 is 2972
9999 mem: location 3013 is 2977
9999 mem: location 2977 is 0
9999 run: address to copy is 2973
9999 run: its type is event
9999 mem: location 2973 is 0
9999 mem: location 2974 is 102
9999 mem: location 2975 is 0
9999 mem: location 2976 is 0
9999 mem: storing 0 in location 3018
9999 mem: storing 102 in location 3019
9999 mem: storing 0 in location 3020
9999 mem: storing 0 in location 3021
 102 run: idx:address:number/deref <- add idx:address:number/deref, 1:literal
9999 mem: location 3013 is 2977
9999 mem: location 2977 is 0
9999 mem: location 3013 is 2977
9999 mem: storing 1 in location 2977
 102 run: reply result:event, x:address:console/same-as-ingredient:0, 1:literal/found, 0:literal/quit
9999 mem: location 3018 is 0
9999 mem: location 3019 is 102
9999 mem: location 3020 is 0
9999 mem: location 3021 is 0
9999 mem: location 3012 is 2977
9999 run: result 0 is [0, 102, 0, 0]
9999 run: result 1 is 2977
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 2984
9999 mem: storing 102 in location 2985
9999 mem: storing 0 in location 2986
9999 mem: storing 0 in location 2987
9999 mem: storing 2977 in location 2982
9999 mem: storing 1 in location 2988
9999 mem: storing 0 in location 2989
 101 run: loop-unless found?:boolean, 
9999 mem: location 2988 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?:boolean, 
9999 mem: location 2989 is 0
9999 run: jump-if fell through
 101 run: trace [app], [next-event]
   1 app: next-event
 101 run: t:address:touch-event <- maybe-convert e:event, touch:variant
9999 mem: location 2984 is 0
9999 mem: location 2985 is 102
9999 mem: location 2986 is 0
9999 mem: location 2987 is 0
9999 mem: storing 0 in location 2990
 101 run: break-unless t:address:touch-event, 
9999 mem: location 2990 is 0
9999 run: jumping to instruction 15
 101 run: c:address:character <- maybe-convert e:event, text:variant
9999 mem: location 2984 is 0
9999 mem: location 2985 is 102
9999 mem: location 2986 is 0
9999 mem: location 2987 is 0
9999 mem: storing 2985 in location 2991
 101 run: break-unless c:address:character, 
9999 mem: location 2991 is 2985
9999 run: jump-unless fell through
 101 run: editor:address:editor-data <- insert-at-cursor editor:address:editor-data, c:address:character/deref
9999 mem: location 2983 is 1134
9999 mem: location 2991 is 2985
9999 mem: location 2985 is 102
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3041
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1134 in location 3043
 102 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 3044
 102 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 3043 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 2190
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 3043 is 1134
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 3045
 102 run: d:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 3043 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 2190
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 3043 is 1134
9999 run: address to copy is 1134
9999 run: its type is address
9999 mem: location 1134 is 1176
9999 mem: storing 1176 in location 3046
 102 run: insert-duplex c:character, before-cursor:address:address:duplex-list/deref
9999 mem: location 3044 is 102
9999 mem: location 3045 is 1136
9999 mem: location 1136 is 2190
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3072
 103 run: x:location <- next-ingredient 
9999 mem: storing 102 in location 3074
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2190 in location 3075
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 3103
9999 mem: storing 3103 in location 3076
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 3076 is 3103
9999 mem: location 3103 is 0
9999 mem: location 3104 is 0
9999 mem: location 3105 is 0
9999 mem: location 3076 is 3103
9999 run: address to copy is 3103
9999 mem: storing 3103 in location 3077
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 3074 is 102
9999 mem: location 3077 is 3103
9999 mem: storing 102 in location 3103
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3075 is 2190
9999 mem: location 2190 is 101
9999 mem: location 2191 is 1210
9999 mem: location 2192 is 1176
9999 mem: location 3075 is 2190
9999 run: address to copy is 2191
9999 run: its type is address
9999 mem: location 2191 is 1210
9999 mem: storing 1210 in location 3078
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 3075 is 2190
9999 mem: location 2190 is 101
9999 mem: location 2191 is 1210
9999 mem: location 2192 is 1176
9999 mem: location 3075 is 2190
9999 run: address to copy is 2191
9999 mem: storing 2191 in location 3079
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 3076 is 3103
9999 mem: location 3079 is 2191
9999 mem: storing 3103 in location 2191
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 3076 is 3103
9999 mem: location 3103 is 102
9999 mem: location 3104 is 0
9999 mem: location 3105 is 0
9999 mem: location 3076 is 3103
9999 run: address to copy is 3105
9999 mem: storing 3105 in location 3079
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 3075 is 2190
9999 mem: location 3079 is 3105
9999 mem: storing 2190 in location 3105
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 3076 is 3103
9999 mem: location 3103 is 102
9999 mem: location 3104 is 0
9999 mem: location 3105 is 2190
9999 mem: location 3076 is 3103
9999 run: address to copy is 3104
9999 mem: storing 3104 in location 3079
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 3078 is 1210
9999 mem: location 3079 is 3104
9999 mem: storing 1210 in location 3104
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 3078 is 1210
9999 run: jumping to instruction 15
 103 run: y:address:address:duplex-list <- get-address next-node:address:duplex-list/deref, prev:offset
9999 mem: location 3078 is 1210
9999 mem: location 1210 is 97
9999 mem: location 1211 is 1275
9999 mem: location 1212 is 2190
9999 mem: location 3078 is 1210
9999 run: address to copy is 1212
9999 mem: storing 1212 in location 3079
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 3076 is 3103
9999 mem: location 3079 is 1212
9999 mem: storing 3103 in location 1212
 103 run: reply new-node:address:duplex-list
9999 mem: location 3076 is 3103
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3044 is 102
9999 mem: storing 0 in location 3047
 102 run: break-unless newline?:boolean, 
9999 mem: location 3047 is 0
9999 run: jumping to instruction 14
 102 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 3043 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 2190
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 3043 is 1134
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 3049
 102 run: cursor-column:address:number/deref <- add cursor-column:address:number/deref, 1:literal
9999 mem: location 3049 is 1143
9999 mem: location 1143 is 1
9999 mem: location 3049 is 1143
9999 mem: storing 2 in location 1143
 102 run: render editor:address:editor-data
9999 mem: location 3043 is 1134
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3106
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1134 in location 3108
 103 run: screen:address <- get editor:address:editor-data/deref, screen:offset
9999 mem: location 3108 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 2190
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 3108 is 1134
9999 run: address to copy is 1137
9999 run: its type is address
9999 mem: location 1137 is 1031
9999 mem: storing 1031 in location 3109
 103 run: top:number <- get editor:address:editor-data/deref, top:offset
9999 mem: location 3108 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 2190
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 3108 is 1134
9999 run: address to copy is 1138
9999 run: its type is number
9999 mem: location 1138 is 0
9999 mem: storing 0 in location 3110
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 3108 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 2190
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 3108 is 1134
9999 run: address to copy is 1139
9999 run: its type is number
9999 mem: location 1139 is 0
9999 mem: storing 0 in location 3111
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 3109 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3137
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3139
 104 run: break-unless x:address:screen, 
9999 mem: location 3139 is 1031
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3139 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3139 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 3140
 104 run: reply height:number
9999 mem: location 3140 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 3112
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 3108 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 2190
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 3108 is 1134
9999 run: address to copy is 1141
9999 run: its type is number
9999 mem: location 1141 is 4
9999 mem: storing 4 in location 3113
 103 run: hide-screen screen:address
9999 mem: location 3109 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3168
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3170
 104 run: break-unless x:address:screen, 
9999 mem: location 3170 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 3170 is 1031
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, top-of-screen:offset
9999 mem: location 3108 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 2190
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 3108 is 1134
9999 run: address to copy is 1135
9999 run: its type is address
9999 mem: location 1135 is 1176
9999 mem: storing 1176 in location 3114
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 3114 is 1176
9999 mem: storing 1176 in location 3115
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3114 is 1176
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3199
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 3201
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3201 is 1176
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3201 is 1176
9999 mem: location 1176 is 167
9999 mem: location 1177 is 2190
9999 mem: location 1178 is 0
9999 mem: location 3201 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 2190
9999 mem: storing 2190 in location 3202
 104 run: reply result:address:duplex-list
9999 mem: location 3202 is 2190
9999 run: result 0 is 2190
9999 mem: storing 2190 in location 3114
 103 run: row:number <- copy top:number
9999 mem: location 3110 is 0
9999 mem: storing 0 in location 3116
 103 run: column:number <- copy left:number
9999 mem: location 3111 is 0
9999 mem: storing 0 in location 3117
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 3108 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 2190
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 3108 is 1134
9999 run: address to copy is 1142
9999 mem: storing 1142 in location 3118
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 3108 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 2190
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 3108 is 1134
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 3119
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 3108 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 2190
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 3108 is 1134
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 3120
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 3109 is 1031
9999 mem: location 3116 is 0
9999 mem: location 3117 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3230
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3232
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 3233
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 3234
 104 run: break-unless x:address:screen, 
9999 mem: location 3232 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3232 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3232 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3235
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 3233 is 0
9999 mem: location 3235 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3232 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3232 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3236
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 3234 is 0
9999 mem: location 3236 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3232 is 1031
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 3114 is 2190
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3116 is 0
9999 mem: location 3112 is 3
9999 mem: storing 0 in location 3121
 103 run: break-if off-screen?:boolean, 
9999 mem: location 3121 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3116 is 0
9999 mem: location 3118 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 3122
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3122 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 3117 is 0
9999 mem: location 3119 is 1143
9999 mem: location 1143 is 2
9999 mem: storing 0 in location 3123
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 3123 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3114 is 2190
9999 mem: location 2190 is 101
9999 mem: location 2191 is 3103
9999 mem: location 2192 is 1176
9999 mem: location 3114 is 2190
9999 run: address to copy is 2190
9999 run: its type is number
9999 mem: location 2190 is 101
9999 mem: storing 101 in location 3124
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3124 is 101
9999 mem: storing 0 in location 3125
 103 run: break-unless newline?:boolean, 
9999 mem: location 3125 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3117 is 0
9999 mem: location 3113 is 4
9999 mem: storing 0 in location 3128
 103 run: break-unless at-right?:boolean, 
9999 mem: location 3128 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 3109 is 1031
9999 mem: location 3124 is 101
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3261
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3263
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 3264
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3265
9999 mem: storing 0 in location 3266
 104 run: break-if color-found?:boolean, 
9999 mem: location 3266 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3265
 104 run: break-unless x:address:screen, 
9999 mem: location 3263 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3263 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3263 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3267
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3263 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3263 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3268
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3263 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3263 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3269
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3263 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3263 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 3270
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3264 is 101
9999 mem: storing 0 in location 3271
 104 run: break-unless newline?:boolean, 
9999 mem: location 3271 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3267 is 1033
9999 mem: location 1033 is 0
9999 mem: location 3269 is 5
9999 mem: storing 0 in location 3274
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3274 is 0
9999 mem: location 3268 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 0 in location 3274
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3263 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3263 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3275
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3264 is 101
9999 mem: storing 0 in location 3276
 104 run: break-unless backspace?:boolean, 
9999 mem: location 3276 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3275 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 100
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 3274 is 0
9999 mem: location 3275 is 1036
9999 mem: location 3274 is 0
9999 mem: storing 1037 in location 3278
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3278 is 1037
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 3278 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 3279
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3278 is 1037
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 3278 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 3280
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3264 is 101
9999 mem: location 3279 is 1037
9999 mem: storing 101 in location 1037
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3265 is 7
9999 mem: location 3280 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3269 is 5
9999 mem: storing 4 in location 3281
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3268 is 1034
9999 mem: location 1034 is 0
9999 mem: location 3281 is 4
9999 mem: storing 0 in location 3282
 104 run: break-if at-right?:boolean, 
9999 mem: location 3282 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3268 is 1034
9999 mem: location 1034 is 0
9999 mem: location 3268 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3263 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3114 is 2190
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3292
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2190 in location 3294
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3294 is 2190
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3294 is 2190
9999 mem: location 2190 is 101
9999 mem: location 2191 is 3103
9999 mem: location 2192 is 1176
9999 mem: location 3294 is 2190
9999 run: address to copy is 2191
9999 run: its type is address
9999 mem: location 2191 is 3103
9999 mem: storing 3103 in location 3295
 104 run: reply result:address:duplex-list
9999 mem: location 3295 is 3103
9999 run: result 0 is 3103
9999 mem: storing 3103 in location 3114
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3115 is 1176
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3323
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 3325
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3325 is 1176
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3325 is 1176
9999 mem: location 1176 is 167
9999 mem: location 1177 is 2190
9999 mem: location 1178 is 0
9999 mem: location 3325 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 2190
9999 mem: storing 2190 in location 3326
 104 run: reply result:address:duplex-list
9999 mem: location 3326 is 2190
9999 run: result 0 is 2190
9999 mem: storing 2190 in location 3115
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 3117 is 0
9999 mem: storing 1 in location 3117
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 3114 is 3103
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3116 is 0
9999 mem: location 3112 is 3
9999 mem: storing 0 in location 3121
 103 run: break-if off-screen?:boolean, 
9999 mem: location 3121 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3116 is 0
9999 mem: location 3118 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 3122
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3122 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 3117 is 1
9999 mem: location 3119 is 1143
9999 mem: location 1143 is 2
9999 mem: storing 0 in location 3123
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 3123 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3114 is 3103
9999 mem: location 3103 is 102
9999 mem: location 3104 is 1210
9999 mem: location 3105 is 2190
9999 mem: location 3114 is 3103
9999 run: address to copy is 3103
9999 run: its type is number
9999 mem: location 3103 is 102
9999 mem: storing 102 in location 3124
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3124 is 102
9999 mem: storing 0 in location 3125
 103 run: break-unless newline?:boolean, 
9999 mem: location 3125 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3117 is 1
9999 mem: location 3113 is 4
9999 mem: storing 0 in location 3128
 103 run: break-unless at-right?:boolean, 
9999 mem: location 3128 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 3109 is 1031
9999 mem: location 3124 is 102
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3354
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3356
 104 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 3357
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3358
9999 mem: storing 0 in location 3359
 104 run: break-if color-found?:boolean, 
9999 mem: location 3359 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3358
 104 run: break-unless x:address:screen, 
9999 mem: location 3356 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3356 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3356 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3360
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3356 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3356 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3361
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3356 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3356 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3362
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3356 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3356 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 3363
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3357 is 102
9999 mem: storing 0 in location 3364
 104 run: break-unless newline?:boolean, 
9999 mem: location 3364 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3360 is 1033
9999 mem: location 1033 is 0
9999 mem: location 3362 is 5
9999 mem: storing 0 in location 3367
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3367 is 0
9999 mem: location 3361 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 1 in location 3367
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3356 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3356 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3368
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3357 is 102
9999 mem: storing 0 in location 3369
 104 run: break-unless backspace?:boolean, 
9999 mem: location 3369 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3368 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 100
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 3367 is 1
9999 mem: location 3368 is 1036
9999 mem: location 3367 is 1
9999 mem: storing 1039 in location 3371
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3371 is 1039
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 3371 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 3372
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3371 is 1039
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 3371 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 3373
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3357 is 102
9999 mem: location 3372 is 1039
9999 mem: storing 102 in location 1039
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3358 is 7
9999 mem: location 3373 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3362 is 5
9999 mem: storing 4 in location 3374
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3361 is 1034
9999 mem: location 1034 is 1
9999 mem: location 3374 is 4
9999 mem: storing 0 in location 3375
 104 run: break-if at-right?:boolean, 
9999 mem: location 3375 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3361 is 1034
9999 mem: location 1034 is 1
9999 mem: location 3361 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3356 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3114 is 3103
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3385
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 3103 in location 3387
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3387 is 3103
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3387 is 3103
9999 mem: location 3103 is 102
9999 mem: location 3104 is 1210
9999 mem: location 3105 is 2190
9999 mem: location 3387 is 3103
9999 run: address to copy is 3104
9999 run: its type is address
9999 mem: location 3104 is 1210
9999 mem: storing 1210 in location 3388
 104 run: reply result:address:duplex-list
9999 mem: location 3388 is 1210
9999 run: result 0 is 1210
9999 mem: storing 1210 in location 3114
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3115 is 2190
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3416
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2190 in location 3418
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3418 is 2190
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3418 is 2190
9999 mem: location 2190 is 101
9999 mem: location 2191 is 3103
9999 mem: location 2192 is 1176
9999 mem: location 3418 is 2190
9999 run: address to copy is 2191
9999 run: its type is address
9999 mem: location 2191 is 3103
9999 mem: storing 3103 in location 3419
 104 run: reply result:address:duplex-list
9999 mem: location 3419 is 3103
9999 run: result 0 is 3103
9999 mem: storing 3103 in location 3115
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 3117 is 1
9999 mem: storing 2 in location 3117
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 3114 is 1210
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3116 is 0
9999 mem: location 3112 is 3
9999 mem: storing 0 in location 3121
 103 run: break-if off-screen?:boolean, 
9999 mem: location 3121 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3116 is 0
9999 mem: location 3118 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 3122
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3122 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 3117 is 2
9999 mem: location 3119 is 1143
9999 mem: location 1143 is 2
9999 mem: storing 1 in location 3123
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 3123 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 3114 is 1210
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3447
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1210 in location 3449
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3449 is 1210
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 3449 is 1210
9999 mem: location 1210 is 97
9999 mem: location 1211 is 1275
9999 mem: location 1212 is 3103
9999 mem: location 3449 is 1210
9999 run: address to copy is 1212
9999 run: its type is address
9999 mem: location 1212 is 3103
9999 mem: storing 3103 in location 3450
 104 run: reply result:address:duplex-list
9999 mem: location 3450 is 3103
9999 run: result 0 is 3103
9999 mem: location 3120 is 1136
9999 mem: storing 3103 in location 1136
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3114 is 1210
9999 mem: location 1210 is 97
9999 mem: location 1211 is 1275
9999 mem: location 1212 is 3103
9999 mem: location 3114 is 1210
9999 run: address to copy is 1210
9999 run: its type is number
9999 mem: location 1210 is 97
9999 mem: storing 97 in location 3124
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3124 is 97
9999 mem: storing 0 in location 3125
 103 run: break-unless newline?:boolean, 
9999 mem: location 3125 is 0
9999 run: jumping to instruction 54
schedule: render/insert-at-cursor/event-loop/run1002/editor-wraps-line-on-insert
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3117 is 2
9999 mem: location 3113 is 4
9999 mem: storing 0 in location 3128
 103 run: break-unless at-right?:boolean, 
9999 mem: location 3128 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 3109 is 1031
9999 mem: location 3124 is 97
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3478
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3480
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 3481
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3482
9999 mem: storing 0 in location 3483
 104 run: break-if color-found?:boolean, 
9999 mem: location 3483 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3482
 104 run: break-unless x:address:screen, 
9999 mem: location 3480 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3480 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3480 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3484
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3480 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3480 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3485
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3480 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3480 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3486
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3480 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3480 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 3487
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3481 is 97
9999 mem: storing 0 in location 3488
 104 run: break-unless newline?:boolean, 
9999 mem: location 3488 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3484 is 1033
9999 mem: location 1033 is 0
9999 mem: location 3486 is 5
9999 mem: storing 0 in location 3491
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3491 is 0
9999 mem: location 3485 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 2 in location 3491
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3480 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3480 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3492
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3481 is 97
9999 mem: storing 0 in location 3493
 104 run: break-unless backspace?:boolean, 
9999 mem: location 3493 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3492 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 102
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 100
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 3491 is 2
9999 mem: location 3492 is 1036
9999 mem: location 3491 is 2
9999 mem: storing 1041 in location 3495
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3495 is 1041
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 3495 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 3496
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3495 is 1041
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 3495 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 3497
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3481 is 97
9999 mem: location 3496 is 1041
9999 mem: storing 97 in location 1041
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3482 is 7
9999 mem: location 3497 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3486 is 5
9999 mem: storing 4 in location 3498
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3485 is 1034
9999 mem: location 1034 is 2
9999 mem: location 3498 is 4
9999 mem: storing 0 in location 3499
 104 run: break-if at-right?:boolean, 
9999 mem: location 3499 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3485 is 1034
9999 mem: location 1034 is 2
9999 mem: location 3485 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3480 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3114 is 1210
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3509
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1210 in location 3511
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3511 is 1210
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3511 is 1210
9999 mem: location 1210 is 97
9999 mem: location 1211 is 1275
9999 mem: location 1212 is 3103
9999 mem: location 3511 is 1210
9999 run: address to copy is 1211
9999 run: its type is address
9999 mem: location 1211 is 1275
9999 mem: storing 1275 in location 3512
 104 run: reply result:address:duplex-list
9999 mem: location 3512 is 1275
9999 run: result 0 is 1275
9999 mem: storing 1275 in location 3114
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3115 is 3103
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3540
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 3103 in location 3542
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3542 is 3103
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3542 is 3103
9999 mem: location 3103 is 102
9999 mem: location 3104 is 1210
9999 mem: location 3105 is 2190
9999 mem: location 3542 is 3103
9999 run: address to copy is 3104
9999 run: its type is address
9999 mem: location 3104 is 1210
9999 mem: storing 1210 in location 3543
 104 run: reply result:address:duplex-list
9999 mem: location 3543 is 1210
9999 run: result 0 is 1210
9999 mem: storing 1210 in location 3115
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 3117 is 2
9999 mem: storing 3 in location 3117
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 3114 is 1275
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3116 is 0
9999 mem: location 3112 is 3
9999 mem: storing 0 in location 3121
 103 run: break-if off-screen?:boolean, 
9999 mem: location 3121 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3116 is 0
9999 mem: location 3118 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 3122
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3122 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 3117 is 3
9999 mem: location 3119 is 1143
9999 mem: location 1143 is 2
9999 mem: storing 0 in location 3123
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 3123 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3114 is 1275
9999 mem: location 1275 is 98
9999 mem: location 1276 is 1340
9999 mem: location 1277 is 1210
9999 mem: location 3114 is 1275
9999 run: address to copy is 1275
9999 run: its type is number
9999 mem: location 1275 is 98
9999 mem: storing 98 in location 3124
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3124 is 98
9999 mem: storing 0 in location 3125
 103 run: break-unless newline?:boolean, 
9999 mem: location 3125 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3117 is 3
9999 mem: location 3113 is 4
9999 mem: storing 0 in location 3128
 103 run: break-unless at-right?:boolean, 
9999 mem: location 3128 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 3109 is 1031
9999 mem: location 3124 is 98
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3571
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3573
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 3574
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3575
9999 mem: storing 0 in location 3576
 104 run: break-if color-found?:boolean, 
9999 mem: location 3576 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3575
 104 run: break-unless x:address:screen, 
9999 mem: location 3573 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3573 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3573 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3577
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3573 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3573 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3578
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3573 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3573 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3579
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3573 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3573 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 3580
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3574 is 98
9999 mem: storing 0 in location 3581
 104 run: break-unless newline?:boolean, 
9999 mem: location 3581 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3577 is 1033
9999 mem: location 1033 is 0
9999 mem: location 3579 is 5
9999 mem: storing 0 in location 3584
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3584 is 0
9999 mem: location 3578 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 3 in location 3584
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3573 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3573 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3585
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3574 is 98
9999 mem: storing 0 in location 3586
 104 run: break-unless backspace?:boolean, 
9999 mem: location 3586 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3585 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 102
9999 mem: location 1040 is 7
9999 mem: location 1041 is 97
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 100
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 3584 is 3
9999 mem: location 3585 is 1036
9999 mem: location 3584 is 3
9999 mem: storing 1043 in location 3588
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3588 is 1043
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 3588 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 3589
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3588 is 1043
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 3588 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 3590
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3574 is 98
9999 mem: location 3589 is 1043
9999 mem: storing 98 in location 1043
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3575 is 7
9999 mem: location 3590 is 1044
9999 mem: storing 7 in location 1044
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3579 is 5
9999 mem: storing 4 in location 3591
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3578 is 1034
9999 mem: location 1034 is 3
9999 mem: location 3591 is 4
9999 mem: storing 0 in location 3592
 104 run: break-if at-right?:boolean, 
9999 mem: location 3592 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3578 is 1034
9999 mem: location 1034 is 3
9999 mem: location 3578 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3573 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3114 is 1275
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3602
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1275 in location 3604
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3604 is 1275
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3604 is 1275
9999 mem: location 1275 is 98
9999 mem: location 1276 is 1340
9999 mem: location 1277 is 1210
9999 mem: location 3604 is 1275
9999 run: address to copy is 1276
9999 run: its type is address
9999 mem: location 1276 is 1340
9999 mem: storing 1340 in location 3605
 104 run: reply result:address:duplex-list
9999 mem: location 3605 is 1340
9999 run: result 0 is 1340
9999 mem: storing 1340 in location 3114
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3115 is 1210
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3633
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1210 in location 3635
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3635 is 1210
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3635 is 1210
9999 mem: location 1210 is 97
9999 mem: location 1211 is 1275
9999 mem: location 1212 is 3103
9999 mem: location 3635 is 1210
9999 run: address to copy is 1211
9999 run: its type is address
9999 mem: location 1211 is 1275
9999 mem: storing 1275 in location 3636
 104 run: reply result:address:duplex-list
9999 mem: location 3636 is 1275
9999 run: result 0 is 1275
9999 mem: storing 1275 in location 3115
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 3117 is 3
9999 mem: storing 4 in location 3117
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 3114 is 1340
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3116 is 0
9999 mem: location 3112 is 3
9999 mem: storing 0 in location 3121
 103 run: break-if off-screen?:boolean, 
9999 mem: location 3121 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3116 is 0
9999 mem: location 3118 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 3122
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3122 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 3117 is 4
9999 mem: location 3119 is 1143
9999 mem: location 1143 is 2
9999 mem: storing 0 in location 3123
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 3123 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3114 is 1340
9999 mem: location 1340 is 99
9999 mem: location 1341 is 1405
9999 mem: location 1342 is 1275
9999 mem: location 3114 is 1340
9999 run: address to copy is 1340
9999 run: its type is number
9999 mem: location 1340 is 99
9999 mem: storing 99 in location 3124
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3124 is 99
9999 mem: storing 0 in location 3125
 103 run: break-unless newline?:boolean, 
9999 mem: location 3125 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3117 is 4
9999 mem: location 3113 is 4
9999 mem: storing 1 in location 3128
 103 run: break-unless at-right?:boolean, 
9999 mem: location 3128 is 1
9999 run: jump-unless fell through
 103 run: next-node:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3114 is 1340
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3664
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1340 in location 3666
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3666 is 1340
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3666 is 1340
9999 mem: location 1340 is 99
9999 mem: location 1341 is 1405
9999 mem: location 1342 is 1275
9999 mem: location 3666 is 1340
9999 run: address to copy is 1341
9999 run: its type is address
9999 mem: location 1341 is 1405
9999 mem: storing 1405 in location 3667
 104 run: reply result:address:duplex-list
9999 mem: location 3667 is 1405
9999 run: result 0 is 1405
9999 mem: storing 1405 in location 3129
 103 run: break-unless next-node:address:duplex-list, 
9999 mem: location 3129 is 1405
9999 run: jump-unless fell through
 103 run: next:character <- get next-node:address:duplex-list/deref, value:offset
9999 mem: location 3129 is 1405
9999 mem: location 1405 is 100
9999 mem: location 1406 is 0
9999 mem: location 1407 is 1340
9999 mem: location 3129 is 1405
9999 run: address to copy is 1405
9999 run: its type is number
9999 mem: location 1405 is 100
9999 mem: storing 100 in location 3130
 103 run: next-character-is-newline?:boolean <- equal next:character, 10:literal/newline
9999 mem: location 3130 is 100
9999 mem: storing 0 in location 3131
 103 run: break-if next-character-is-newline?:boolean, 
9999 mem: location 3131 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 8617:literal/loop-back-to-left, 245:literal/grey
9999 mem: location 3109 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3695
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3697
 104 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 3698
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 3699
9999 mem: storing 1 in location 3700
 104 run: break-if color-found?:boolean, 
9999 mem: location 3700 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 3697 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3697 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3697 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3701
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3697 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3697 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3702
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3697 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3697 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3703
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3697 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3697 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 3704
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3698 is 8617
9999 mem: storing 0 in location 3705
 104 run: break-unless newline?:boolean, 
9999 mem: location 3705 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3701 is 1033
9999 mem: location 1033 is 0
9999 mem: location 3703 is 5
9999 mem: storing 0 in location 3708
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3708 is 0
9999 mem: location 3702 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 4 in location 3708
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3697 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3697 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3709
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3698 is 8617
9999 mem: storing 0 in location 3710
 104 run: break-unless backspace?:boolean, 
9999 mem: location 3710 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3709 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 102
9999 mem: location 1040 is 7
9999 mem: location 1041 is 97
9999 mem: location 1042 is 7
9999 mem: location 1043 is 98
9999 mem: location 1044 is 7
9999 mem: location 1045 is 100
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 3708 is 4
9999 mem: location 3709 is 1036
9999 mem: location 3708 is 4
9999 mem: storing 1045 in location 3712
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3712 is 1045
9999 mem: location 1045 is 100
9999 mem: location 1046 is 7
9999 mem: location 3712 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 3713
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3712 is 1045
9999 mem: location 1045 is 100
9999 mem: location 1046 is 7
9999 mem: location 3712 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 3714
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3698 is 8617
9999 mem: location 3713 is 1045
9999 mem: storing 8617 in location 1045
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3699 is 245
9999 mem: location 3714 is 1046
9999 mem: storing 245 in location 1046
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3703 is 5
9999 mem: storing 4 in location 3715
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3702 is 1034
9999 mem: location 1034 is 4
9999 mem: location 3715 is 4
9999 mem: storing 1 in location 3716
 104 run: break-if at-right?:boolean, 
9999 mem: location 3716 is 1
9999 run: jumping to instruction 55
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3697 is 1031
 103 run: column:number <- copy left:number
9999 mem: location 3111 is 0
9999 mem: storing 0 in location 3117
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 3116 is 0
9999 mem: storing 1 in location 3116
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 3109 is 1031
9999 mem: location 3116 is 1
9999 mem: location 3117 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3726
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3728
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 3729
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 3730
 104 run: break-unless x:address:screen, 
9999 mem: location 3728 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3728 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3728 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3731
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 3729 is 1
9999 mem: location 3731 is 1033
9999 mem: storing 1 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3728 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3728 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3732
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 3730 is 0
9999 mem: location 3732 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3728 is 1031
 103 run: loop +next-character:label
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 3114 is 1340
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3116 is 1
9999 mem: location 3112 is 3
9999 mem: storing 0 in location 3121
 103 run: break-if off-screen?:boolean, 
9999 mem: location 3121 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3116 is 1
9999 mem: location 3118 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 0 in location 3122
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3122 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3114 is 1340
9999 mem: location 1340 is 99
9999 mem: location 1341 is 1405
9999 mem: location 1342 is 1275
9999 mem: location 3114 is 1340
9999 run: address to copy is 1340
9999 run: its type is number
9999 mem: location 1340 is 99
9999 mem: storing 99 in location 3124
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3124 is 99
9999 mem: storing 0 in location 3125
 103 run: break-unless newline?:boolean, 
9999 mem: location 3125 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3117 is 0
9999 mem: location 3113 is 4
9999 mem: storing 0 in location 3128
 103 run: break-unless at-right?:boolean, 
9999 mem: location 3128 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 3109 is 1031
9999 mem: location 3124 is 99
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3757
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3759
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 3760
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3761
9999 mem: storing 0 in location 3762
 104 run: break-if color-found?:boolean, 
9999 mem: location 3762 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3761
 104 run: break-unless x:address:screen, 
9999 mem: location 3759 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3759 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3759 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3763
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3759 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3759 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3764
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3759 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3759 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3765
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3759 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3759 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 3766
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3760 is 99
9999 mem: storing 0 in location 3767
 104 run: break-unless newline?:boolean, 
9999 mem: location 3767 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3763 is 1033
9999 mem: location 1033 is 1
9999 mem: location 3765 is 5
9999 mem: storing 5 in location 3770
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3770 is 5
9999 mem: location 3764 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 5 in location 3770
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3759 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3759 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3771
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3760 is 99
9999 mem: storing 0 in location 3772
 104 run: break-unless backspace?:boolean, 
9999 mem: location 3772 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3771 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 102
9999 mem: location 1040 is 7
9999 mem: location 1041 is 97
9999 mem: location 1042 is 7
9999 mem: location 1043 is 98
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 3770 is 5
9999 mem: location 3771 is 1036
9999 mem: location 3770 is 5
9999 mem: storing 1047 in location 3774
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3774 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 3774 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 3775
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3774 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 3774 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 3776
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3760 is 99
9999 mem: location 3775 is 1047
9999 mem: storing 99 in location 1047
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3761 is 7
9999 mem: location 3776 is 1048
9999 mem: storing 7 in location 1048
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3765 is 5
9999 mem: storing 4 in location 3777
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3764 is 1034
9999 mem: location 1034 is 0
9999 mem: location 3777 is 4
9999 mem: storing 0 in location 3778
 104 run: break-if at-right?:boolean, 
9999 mem: location 3778 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3764 is 1034
9999 mem: location 1034 is 0
9999 mem: location 3764 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3759 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3114 is 1340
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3788
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1340 in location 3790
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3790 is 1340
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3790 is 1340
9999 mem: location 1340 is 99
9999 mem: location 1341 is 1405
9999 mem: location 1342 is 1275
9999 mem: location 3790 is 1340
9999 run: address to copy is 1341
9999 run: its type is address
9999 mem: location 1341 is 1405
9999 mem: storing 1405 in location 3791
 104 run: reply result:address:duplex-list
9999 mem: location 3791 is 1405
9999 run: result 0 is 1405
9999 mem: storing 1405 in location 3114
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3115 is 1275
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3819
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1275 in location 3821
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3821 is 1275
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3821 is 1275
9999 mem: location 1275 is 98
9999 mem: location 1276 is 1340
9999 mem: location 1277 is 1210
9999 mem: location 3821 is 1275
9999 run: address to copy is 1276
9999 run: its type is address
9999 mem: location 1276 is 1340
9999 mem: storing 1340 in location 3822
 104 run: reply result:address:duplex-list
9999 mem: location 3822 is 1340
9999 run: result 0 is 1340
9999 mem: storing 1340 in location 3115
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 3117 is 0
9999 mem: storing 1 in location 3117
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 3114 is 1405
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3116 is 1
9999 mem: location 3112 is 3
9999 mem: storing 0 in location 3121
 103 run: break-if off-screen?:boolean, 
9999 mem: location 3121 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3116 is 1
9999 mem: location 3118 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 0 in location 3122
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3122 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3114 is 1405
9999 mem: location 1405 is 100
9999 mem: location 1406 is 0
9999 mem: location 1407 is 1340
9999 mem: location 3114 is 1405
9999 run: address to copy is 1405
9999 run: its type is number
9999 mem: location 1405 is 100
9999 mem: storing 100 in location 3124
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3124 is 100
9999 mem: storing 0 in location 3125
 103 run: break-unless newline?:boolean, 
9999 mem: location 3125 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3117 is 1
9999 mem: location 3113 is 4
9999 mem: storing 0 in location 3128
 103 run: break-unless at-right?:boolean, 
9999 mem: location 3128 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 3109 is 1031
9999 mem: location 3124 is 100
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3850
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3852
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 3853
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3854
9999 mem: storing 0 in location 3855
 104 run: break-if color-found?:boolean, 
9999 mem: location 3855 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3854
 104 run: break-unless x:address:screen, 
9999 mem: location 3852 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3852 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3852 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3856
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3852 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3852 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3857
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3852 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3852 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3858
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3852 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3852 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 3859
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3853 is 100
9999 mem: storing 0 in location 3860
 104 run: break-unless newline?:boolean, 
9999 mem: location 3860 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3856 is 1033
9999 mem: location 1033 is 1
9999 mem: location 3858 is 5
9999 mem: storing 5 in location 3863
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3863 is 5
9999 mem: location 3857 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 6 in location 3863
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3852 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3852 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3864
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3853 is 100
9999 mem: storing 0 in location 3865
 104 run: break-unless backspace?:boolean, 
9999 mem: location 3865 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3864 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 102
9999 mem: location 1040 is 7
9999 mem: location 1041 is 97
9999 mem: location 1042 is 7
9999 mem: location 1043 is 98
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 99
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 3863 is 6
9999 mem: location 3864 is 1036
9999 mem: location 3863 is 6
9999 mem: storing 1049 in location 3867
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3867 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 3867 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 3868
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3867 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 3867 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 3869
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3853 is 100
9999 mem: location 3868 is 1049
9999 mem: storing 100 in location 1049
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3854 is 7
9999 mem: location 3869 is 1050
9999 mem: storing 7 in location 1050
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3858 is 5
9999 mem: storing 4 in location 3870
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3857 is 1034
9999 mem: location 1034 is 1
9999 mem: location 3870 is 4
9999 mem: storing 0 in location 3871
 104 run: break-if at-right?:boolean, 
9999 mem: location 3871 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3857 is 1034
9999 mem: location 1034 is 1
9999 mem: location 3857 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3852 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3114 is 1405
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3881
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1405 in location 3883
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3883 is 1405
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3883 is 1405
9999 mem: location 1405 is 100
9999 mem: location 1406 is 0
9999 mem: location 1407 is 1340
9999 mem: location 3883 is 1405
9999 run: address to copy is 1406
9999 run: its type is address
9999 mem: location 1406 is 0
9999 mem: storing 0 in location 3884
 104 run: reply result:address:duplex-list
9999 mem: location 3884 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 3114
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3115 is 1340
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3912
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1340 in location 3914
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3914 is 1340
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3914 is 1340
9999 mem: location 1340 is 99
9999 mem: location 1341 is 1405
9999 mem: location 1342 is 1275
9999 mem: location 3914 is 1340
9999 run: address to copy is 1341
9999 run: its type is address
9999 mem: location 1341 is 1405
9999 mem: storing 1405 in location 3915
 104 run: reply result:address:duplex-list
9999 mem: location 3915 is 1405
9999 run: result 0 is 1405
9999 mem: storing 1405 in location 3115
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 3117 is 1
9999 mem: storing 2 in location 3117
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 3114 is 0
9999 run: jumping to instruction 74
 103 run: bottom:address:number <- get-address editor:address:editor-data/deref, bottom:offset
9999 mem: location 3108 is 1134
9999 mem: location 1134 is 1176
9999 mem: location 1135 is 1176
9999 mem: location 1136 is 3103
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 3108 is 1134
9999 run: address to copy is 1140
9999 mem: storing 1140 in location 3132
 103 run: bottom:address:number/deref <- copy row:number
9999 mem: location 3116 is 1
9999 mem: location 3132 is 1140
9999 mem: storing 1 in location 1140
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3116 is 1
9999 mem: location 3118 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 0 in location 3122
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 3117 is 2
9999 mem: location 3119 is 1143
9999 mem: location 1143 is 2
9999 mem: storing 1 in location 3133
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 3122 is 0
9999 mem: location 3133 is 1
9999 mem: storing 0 in location 3134
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 3116 is 1
9999 mem: location 3118 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 0 in location 3135
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 3134 is 0
9999 mem: location 3135 is 0
9999 mem: storing 0 in location 3136
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 3136 is 0
9999 run: jumping to instruction 87
 103 run: move-cursor screen:address, cursor-row:address:number/deref, cursor-column:address:number/deref
9999 mem: location 3109 is 1031
9999 mem: location 3118 is 1142
9999 mem: location 1142 is 0
9999 mem: location 3119 is 1143
9999 mem: location 1143 is 2
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3943
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3945
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 3946
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 2 in location 3947
 104 run: break-unless x:address:screen, 
9999 mem: location 3945 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3945 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3945 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3948
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 3946 is 0
9999 mem: location 3948 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3945 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3945 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3949
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 3947 is 2
9999 mem: location 3949 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3945 is 1031
 103 run: show-screen screen:address
9999 mem: location 3109 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3974
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3976
 104 run: break-unless x:address:screen, 
9999 mem: location 3976 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 3976 is 1031
 103 run: reply editor:address:editor-data/same-as-ingredient:0
9999 mem: location 3108 is 1134
 102 run: reply editor:address:editor-data/same-as-ingredient:0
9999 mem: location 3043 is 1134
9999 run: result 0 is 1134
9999 mem: storing 1134 in location 2983
 101 run: loop +next-event:label
9999 run: jumping to instruction 6
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 2982 is 2977
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4005
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 2977 in location 4007
 102 run: break-unless x:address:console, 
9999 mem: location 4007 is 2977
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 4007 is 2977
9999 mem: location 2977 is 1
9999 mem: location 2978 is 2972
9999 mem: location 4007 is 2977
9999 run: address to copy is 2977
9999 mem: storing 2977 in location 4008
 102 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 4007 is 2977
9999 mem: location 2977 is 1
9999 mem: location 2978 is 2972
9999 mem: location 4007 is 2977
9999 run: address to copy is 2978
9999 run: its type is address
9999 mem: location 2978 is 2972
9999 mem: storing 2972 in location 4009
 102 run: max:number <- length buf:address:array:event/deref
9999 mem: location 4009 is 2972
9999 mem: location 2972 is 1
9999 mem: location 2973 is 0
9999 mem: location 2974 is 102
9999 mem: location 2975 is 0
9999 mem: location 2976 is 0
9999 mem: location 4009 is 2972
9999 mem: storing 1 in location 4010
 102 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 4008 is 2977
9999 mem: location 2977 is 1
9999 mem: location 4010 is 1
9999 mem: storing 1 in location 4011
 102 run: break-unless done?:boolean, 
9999 mem: location 4011 is 1
9999 run: jump-unless fell through
 102 run: dummy:address:event <- new event:type
9999 mem: new alloc: 4036
9999 mem: storing 4036 in location 4012
 102 run: reply dummy:address:event/deref, x:address:console/same-as-ingredient:0, 1:literal/found, 1:literal/quit
9999 mem: location 4012 is 4036
9999 mem: location 4036 is 0
9999 mem: location 4037 is 0
9999 mem: location 4038 is 0
9999 mem: location 4039 is 0
9999 mem: location 4007 is 2977
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 2977
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 2984
9999 mem: storing 0 in location 2985
9999 mem: storing 0 in location 2986
9999 mem: storing 0 in location 2987
9999 mem: storing 2977 in location 2982
9999 mem: storing 1 in location 2988
9999 mem: storing 1 in location 2989
 101 run: loop-unless found?:boolean, 
9999 mem: location 2988 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?:boolean, 
9999 mem: location 2989 is 1
9999 run: jumping to instruction 65
  99 run: screen-should-contain [
    .efabâ†©.
    .cd   .
    .     .
  ]
