parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "3", properties: ["3": "literal", "height": ]}
parse: instruction: new
parse:   ingredient: {name: "abcd", properties: [_: "literal-string"]}
parse:   product: {name: "1", properties: ["1": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "1", properties: ["1": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "top": ]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
parse:   product: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    type [e]\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    event-loop screen:address, console:address, 2:address:editor-data\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .eabcd.\n    .     .\n  ", properties: [_: "literal-string"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    type [f]\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    event-loop screen:address, console:address, 2:address:editor-data\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .efabâ†©.\n    .cd   .\n    .     .\n  ", properties: [_: "literal-string"]}
after-brace: recipe editor-wraps-line-on-insert
after-brace: new-fake-screen ...
after-brace: new ...
after-brace: new-editor ...
after-brace: assume-console ...
after-brace: run ...
after-brace: screen-should-contain ...
after-brace: assume-console ...
after-brace: run ...
after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: editor-wraps-line-on-insert
 101 run: screen:address <- new-fake-screen 5:literal/width, 3:literal/height
 102 run: default-space:address:array:location <- new location:type, 30:literal/capacity
9999 mem: array size is 30
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1031
9999 mem: storing 1031 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1032
9999 mem: storing 5 in location 1032
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1031
9999 mem: storing 3 in location 1031
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1033
9999 mem: storing 0 in location 1033
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1034
9999 mem: storing 0 in location 1034
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1032
9999 mem: location 1032 is 5
9999 mem: location 1004 is 1031
9999 mem: location 1031 is 3
9999 mem: storing 15 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 15
9999 mem: array size is 15
9999 mem: new alloc: 1036
9999 mem: location 1008 is 1035
9999 mem: storing 1036 in location 1035
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1067
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1069
 103 run: break-unless x:address:screen, 
9999 mem: location 1069 is 1031
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1070
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1070 is 1036
9999 mem: storing 15 in location 1071
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1072
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 0
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 0
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 0
9999 mem: storing 1037 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 0
9999 mem: storing 1 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 1
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 1
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 1
9999 mem: storing 1039 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 1
9999 mem: storing 2 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 2
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 2
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 2
9999 mem: storing 1041 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 2
9999 mem: storing 3 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 3
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 3
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 3
9999 mem: storing 1043 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 3
9999 mem: storing 4 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 4
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 4
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 4
9999 mem: storing 1045 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 4
9999 mem: storing 5 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 5
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 5
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 5
9999 mem: storing 1047 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 5
9999 mem: storing 6 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 6
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 6
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 6
9999 mem: storing 1049 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 6
9999 mem: storing 7 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 7
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 7
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 7
9999 mem: storing 1051 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 7
9999 mem: storing 8 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 8
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 8
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 8
9999 mem: storing 1053 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 8
9999 mem: storing 9 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 9
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 9
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 9
9999 mem: storing 1055 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 9
9999 mem: storing 10 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 10
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 10
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 10
9999 mem: storing 1057 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 10
9999 mem: storing 11 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 11
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 11
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 11
9999 mem: storing 1059 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 11
9999 mem: storing 12 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 12
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 12
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 12
9999 mem: storing 1061 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 12
9999 mem: storing 13 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 13
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 13
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 13
9999 mem: storing 1063 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 13
9999 mem: storing 14 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 14
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 14
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 14
9999 mem: storing 1065 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1066
9999 mem: storing 7 in location 1066
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 14
9999 mem: storing 15 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 15
9999 mem: location 1071 is 15
9999 mem: storing 1 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1033
9999 mem: storing 0 in location 1033
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1069 is 1031
 102 run: reply result:address:screen
9999 mem: location 1002 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 101 run: 1:address:array:character <- new [abcd]
9999 mem: storing 1098 in location 1
 101 run: 2:address:editor-data <- new-editor 1:address:array:character, screen:address, 0:literal/top, 0:literal/left, 5:literal/right
9999 mem: location 1 is 1098
9999 mem: location 900 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1103
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1098 in location 1105
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1106
 102 run: top:number <- next-ingredient 
9999 mem: storing 0 in location 1107
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1108
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1109
 102 run: right:number <- subtract right:number, 1:literal
9999 mem: location 1109 is 5
9999 mem: storing 4 in location 1109
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: new alloc: 1134
9999 mem: storing 1134 in location 1110
 102 run: sc:address:address:screen <- get-address result:address:editor-data/deref, screen:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1137
9999 mem: storing 1137 in location 1111
 102 run: sc:address:address:screen/deref <- copy screen:address
9999 mem: location 1106 is 1031
9999 mem: location 1111 is 1137
9999 mem: storing 1031 in location 1137
 102 run: x:address:number <- get-address result:address:editor-data/deref, top:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1138
9999 mem: storing 1138 in location 1112
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1107 is 0
9999 mem: location 1112 is 1138
9999 mem: storing 0 in location 1138
 102 run: x:address:number <- get-address result:address:editor-data/deref, left:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1139
9999 mem: storing 1139 in location 1112
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1108 is 0
9999 mem: location 1112 is 1139
9999 mem: storing 0 in location 1139
 102 run: x:address:number <- get-address result:address:editor-data/deref, right:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1141
9999 mem: storing 1141 in location 1112
 102 run: x:address:number/deref <- copy right:number
9999 mem: location 1109 is 4
9999 mem: location 1112 is 1141
9999 mem: storing 4 in location 1141
 102 run: x:address:number <- get-address result:address:editor-data/deref, bottom:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1140
9999 mem: storing 1140 in location 1112
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1107 is 0
9999 mem: location 1112 is 1140
9999 mem: storing 0 in location 1140
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-row:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1142
9999 mem: storing 1142 in location 1112
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1107 is 0
9999 mem: location 1112 is 1142
9999 mem: storing 0 in location 1142
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-column:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 1112
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1108 is 0
9999 mem: location 1112 is 1143
9999 mem: storing 0 in location 1143
 102 run: d:address:address:duplex-list <- get-address result:address:editor-data/deref, data:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1134
9999 mem: storing 1134 in location 1113
 102 run: d:address:address:duplex-list/deref <- push-duplex 167:literal/Â§, 0:literal/tail
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1146
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1148
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1149
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1177
9999 mem: storing 1177 in location 1150
 103 run: val:address:location <- get-address result:address:duplex-list/deref, value:offset
9999 mem: location 1150 is 1177
9999 mem: location 1177 is 0
9999 mem: location 1178 is 0
9999 mem: location 1179 is 0
9999 mem: location 1150 is 1177
9999 run: address to copy is 1177
9999 mem: storing 1177 in location 1151
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1148 is 167
9999 mem: location 1151 is 1177
9999 mem: storing 167 in location 1177
 103 run: next:address:address:duplex-list <- get-address result:address:duplex-list/deref, next:offset
9999 mem: location 1150 is 1177
9999 mem: location 1177 is 167
9999 mem: location 1178 is 0
9999 mem: location 1179 is 0
9999 mem: location 1150 is 1177
9999 run: address to copy is 1178
9999 mem: storing 1178 in location 1152
 103 run: next:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1149 is 0
9999 mem: location 1152 is 1178
9999 mem: storing 0 in location 1178
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1149 is 0
9999 run: jump-if fell through
 103 run: reply result:address:duplex-list
9999 mem: location 1150 is 1177
9999 run: result 0 is 1177
9999 mem: location 1113 is 1134
9999 mem: storing 1177 in location 1134
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 1114
 102 run: y:address:address:duplex-list/deref <- copy d:address:address:duplex-list/deref
9999 mem: location 1113 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1114 is 1136
9999 mem: storing 1177 in location 1136
 102 run: init:address:address:duplex-list <- get-address result:address:editor-data/deref, top-of-screen:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1135
9999 mem: storing 1135 in location 1115
 102 run: init:address:address:duplex-list/deref <- copy d:address:address:duplex-list/deref
9999 mem: location 1113 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1115 is 1135
9999 mem: storing 1177 in location 1135
 102 run: b:address:boolean <- get-address result:address:editor-data/deref, in-focus?:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1145
9999 mem: storing 1145 in location 1116
 102 run: b:address:boolean/deref <- copy 1:literal/true
9999 mem: location 1116 is 1145
9999 mem: storing 1 in location 1145
 102 run: jump-if s:address:array:character, 1:offset
9999 mem: location 1105 is 1098
9999 run: jumping to instruction 32
 102 run: len:number <- length s:address:array:character/deref
9999 mem: location 1105 is 1098
9999 mem: location 1098 is 4
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 100
9999 mem: location 1105 is 1098
9999 mem: storing 4 in location 1117
 102 run: jump-if len:number, 1:offset
9999 mem: location 1117 is 4
9999 run: jumping to instruction 35
 102 run: idx:number <- copy 0:literal
9999 mem: storing 0 in location 1118
 102 run: curr:address:duplex-list <- copy init:address:address:duplex-list/deref
9999 mem: location 1115 is 1135
9999 mem: location 1135 is 1177
9999 mem: storing 1177 in location 1119
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1118 is 0
9999 mem: location 1117 is 4
9999 mem: storing 0 in location 1120
 102 run: break-if done?:boolean, 
9999 mem: location 1120 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1105 is 1098
9999 mem: location 1098 is 4
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 100
9999 mem: location 1118 is 0
9999 mem: location 1105 is 1098
9999 mem: location 1118 is 0
9999 run: address to copy is 1099
9999 run: its type is character
9999 mem: location 1099 is 97
9999 mem: storing 97 in location 1121
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1121 is 97
9999 mem: location 1119 is 1177
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1180
 103 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1182
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1183
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1211
9999 mem: storing 1211 in location 1184
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1184 is 1211
9999 mem: location 1211 is 0
9999 mem: location 1212 is 0
9999 mem: location 1213 is 0
9999 mem: location 1184 is 1211
9999 run: address to copy is 1211
9999 mem: storing 1211 in location 1185
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1182 is 97
9999 mem: location 1185 is 1211
9999 mem: storing 97 in location 1211
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1183 is 1177
9999 mem: location 1177 is 167
9999 mem: location 1178 is 0
9999 mem: location 1179 is 0
9999 mem: location 1183 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1186
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1183 is 1177
9999 mem: location 1177 is 167
9999 mem: location 1178 is 0
9999 mem: location 1179 is 0
9999 mem: location 1183 is 1177
9999 run: address to copy is 1178
9999 mem: storing 1178 in location 1187
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1184 is 1211
9999 mem: location 1187 is 1178
9999 mem: storing 1211 in location 1178
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1184 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 0
9999 mem: location 1213 is 0
9999 mem: location 1184 is 1211
9999 run: address to copy is 1213
9999 mem: storing 1213 in location 1187
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1183 is 1177
9999 mem: location 1187 is 1213
9999 mem: storing 1177 in location 1213
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1184 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 0
9999 mem: location 1213 is 1177
9999 mem: location 1184 is 1211
9999 run: address to copy is 1212
9999 mem: storing 1212 in location 1187
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1186 is 0
9999 mem: location 1187 is 1212
9999 mem: storing 0 in location 1212
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1186 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1184 is 1211
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1119 is 1177
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1214
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1216
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1216 is 1177
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1216 is 1177
9999 mem: location 1177 is 167
9999 mem: location 1178 is 1211
9999 mem: location 1179 is 0
9999 mem: location 1216 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1211
9999 mem: storing 1211 in location 1217
 103 run: reply result:address:duplex-list
9999 mem: location 1217 is 1211
9999 run: result 0 is 1211
9999 mem: storing 1211 in location 1119
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1118 is 0
9999 mem: storing 1 in location 1118
 102 run: loop 
9999 run: jumping to instruction 38
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1118 is 1
9999 mem: location 1117 is 4
9999 mem: storing 0 in location 1120
 102 run: break-if done?:boolean, 
9999 mem: location 1120 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1105 is 1098
9999 mem: location 1098 is 4
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 100
9999 mem: location 1118 is 1
9999 mem: location 1105 is 1098
9999 mem: location 1118 is 1
9999 run: address to copy is 1100
9999 run: its type is character
9999 mem: location 1100 is 98
9999 mem: storing 98 in location 1121
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1121 is 98
9999 mem: location 1119 is 1211
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1245
 103 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1247
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1211 in location 1248
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1276
9999 mem: storing 1276 in location 1249
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1249 is 1276
9999 mem: location 1276 is 0
9999 mem: location 1277 is 0
9999 mem: location 1278 is 0
9999 mem: location 1249 is 1276
9999 run: address to copy is 1276
9999 mem: storing 1276 in location 1250
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1247 is 98
9999 mem: location 1250 is 1276
9999 mem: storing 98 in location 1276
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1248 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 0
9999 mem: location 1213 is 1177
9999 mem: location 1248 is 1211
9999 run: address to copy is 1212
9999 run: its type is address
9999 mem: location 1212 is 0
9999 mem: storing 0 in location 1251
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1248 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 0
9999 mem: location 1213 is 1177
9999 mem: location 1248 is 1211
9999 run: address to copy is 1212
9999 mem: storing 1212 in location 1252
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1249 is 1276
9999 mem: location 1252 is 1212
9999 mem: storing 1276 in location 1212
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1249 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 0
9999 mem: location 1278 is 0
9999 mem: location 1249 is 1276
9999 run: address to copy is 1278
9999 mem: storing 1278 in location 1252
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1248 is 1211
9999 mem: location 1252 is 1278
9999 mem: storing 1211 in location 1278
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1249 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 0
9999 mem: location 1278 is 1211
9999 mem: location 1249 is 1276
9999 run: address to copy is 1277
9999 mem: storing 1277 in location 1252
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1251 is 0
9999 mem: location 1252 is 1277
9999 mem: storing 0 in location 1277
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1251 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1249 is 1276
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1119 is 1211
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1279
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1211 in location 1281
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1281 is 1211
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1281 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 1177
9999 mem: location 1281 is 1211
9999 run: address to copy is 1212
9999 run: its type is address
9999 mem: location 1212 is 1276
9999 mem: storing 1276 in location 1282
 103 run: reply result:address:duplex-list
9999 mem: location 1282 is 1276
9999 run: result 0 is 1276
9999 mem: storing 1276 in location 1119
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1118 is 1
9999 mem: storing 2 in location 1118
 102 run: loop 
9999 run: jumping to instruction 38
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1118 is 2
9999 mem: location 1117 is 4
9999 mem: storing 0 in location 1120
 102 run: break-if done?:boolean, 
9999 mem: location 1120 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1105 is 1098
9999 mem: location 1098 is 4
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 100
9999 mem: location 1118 is 2
9999 mem: location 1105 is 1098
9999 mem: location 1118 is 2
9999 run: address to copy is 1101
9999 run: its type is character
9999 mem: location 1101 is 99
9999 mem: storing 99 in location 1121
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1121 is 99
9999 mem: location 1119 is 1276
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1310
 103 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1312
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1276 in location 1313
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1341
9999 mem: storing 1341 in location 1314
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1314 is 1341
9999 mem: location 1341 is 0
9999 mem: location 1342 is 0
9999 mem: location 1343 is 0
9999 mem: location 1314 is 1341
9999 run: address to copy is 1341
9999 mem: storing 1341 in location 1315
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1312 is 99
9999 mem: location 1315 is 1341
9999 mem: storing 99 in location 1341
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1313 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 0
9999 mem: location 1278 is 1211
9999 mem: location 1313 is 1276
9999 run: address to copy is 1277
9999 run: its type is address
9999 mem: location 1277 is 0
9999 mem: storing 0 in location 1316
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1313 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 0
9999 mem: location 1278 is 1211
9999 mem: location 1313 is 1276
9999 run: address to copy is 1277
9999 mem: storing 1277 in location 1317
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1314 is 1341
9999 mem: location 1317 is 1277
9999 mem: storing 1341 in location 1277
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1314 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 0
9999 mem: location 1343 is 0
9999 mem: location 1314 is 1341
9999 run: address to copy is 1343
9999 mem: storing 1343 in location 1317
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1313 is 1276
9999 mem: location 1317 is 1343
9999 mem: storing 1276 in location 1343
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1314 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 0
9999 mem: location 1343 is 1276
9999 mem: location 1314 is 1341
9999 run: address to copy is 1342
9999 mem: storing 1342 in location 1317
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1316 is 0
9999 mem: location 1317 is 1342
9999 mem: storing 0 in location 1342
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1316 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1314 is 1341
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1119 is 1276
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1344
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1276 in location 1346
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1346 is 1276
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1346 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 1341
9999 mem: location 1278 is 1211
9999 mem: location 1346 is 1276
9999 run: address to copy is 1277
9999 run: its type is address
9999 mem: location 1277 is 1341
9999 mem: storing 1341 in location 1347
 103 run: reply result:address:duplex-list
9999 mem: location 1347 is 1341
9999 run: result 0 is 1341
9999 mem: storing 1341 in location 1119
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1118 is 2
9999 mem: storing 3 in location 1118
 102 run: loop 
9999 run: jumping to instruction 38
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1118 is 3
9999 mem: location 1117 is 4
9999 mem: storing 0 in location 1120
 102 run: break-if done?:boolean, 
9999 mem: location 1120 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1105 is 1098
9999 mem: location 1098 is 4
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 100
9999 mem: location 1118 is 3
9999 mem: location 1105 is 1098
9999 mem: location 1118 is 3
9999 run: address to copy is 1102
9999 run: its type is character
9999 mem: location 1102 is 100
9999 mem: storing 100 in location 1121
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1121 is 100
9999 mem: location 1119 is 1341
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1375
 103 run: x:location <- next-ingredient 
9999 mem: storing 100 in location 1377
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1341 in location 1378
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1406
9999 mem: storing 1406 in location 1379
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1379 is 1406
9999 mem: location 1406 is 0
9999 mem: location 1407 is 0
9999 mem: location 1408 is 0
9999 mem: location 1379 is 1406
9999 run: address to copy is 1406
9999 mem: storing 1406 in location 1380
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1377 is 100
9999 mem: location 1380 is 1406
9999 mem: storing 100 in location 1406
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1378 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 0
9999 mem: location 1343 is 1276
9999 mem: location 1378 is 1341
9999 run: address to copy is 1342
9999 run: its type is address
9999 mem: location 1342 is 0
9999 mem: storing 0 in location 1381
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1378 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 0
9999 mem: location 1343 is 1276
9999 mem: location 1378 is 1341
9999 run: address to copy is 1342
9999 mem: storing 1342 in location 1382
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1379 is 1406
9999 mem: location 1382 is 1342
9999 mem: storing 1406 in location 1342
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1379 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 0
9999 mem: location 1408 is 0
9999 mem: location 1379 is 1406
9999 run: address to copy is 1408
9999 mem: storing 1408 in location 1382
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1378 is 1341
9999 mem: location 1382 is 1408
9999 mem: storing 1341 in location 1408
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1379 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 0
9999 mem: location 1408 is 1341
9999 mem: location 1379 is 1406
9999 run: address to copy is 1407
9999 mem: storing 1407 in location 1382
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1381 is 0
9999 mem: location 1382 is 1407
9999 mem: storing 0 in location 1407
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1381 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1379 is 1406
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1119 is 1341
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1409
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1341 in location 1411
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1411 is 1341
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1411 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 1411 is 1341
9999 run: address to copy is 1342
9999 run: its type is address
9999 mem: location 1342 is 1406
9999 mem: storing 1406 in location 1412
 103 run: reply result:address:duplex-list
9999 mem: location 1412 is 1406
9999 run: result 0 is 1406
9999 mem: storing 1406 in location 1119
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1118 is 3
9999 mem: storing 4 in location 1118
 102 run: loop 
9999 run: jumping to instruction 38
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1118 is 4
9999 mem: location 1117 is 4
9999 mem: storing 1 in location 1120
 102 run: break-if done?:boolean, 
9999 mem: location 1120 is 1
9999 run: jumping to instruction 45
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1110 is 1134
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 1114
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1115 is 1135
9999 mem: location 1135 is 1177
9999 mem: location 1114 is 1136
9999 mem: storing 1177 in location 1136
 102 run: bottom:address:number <- get-address result:address:editor-data/deref, bottom:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1110 is 1134
9999 run: address to copy is 1140
9999 mem: storing 1140 in location 1122
 102 run: result:address:editor-data <- render result:address:editor-data
9999 mem: location 1110 is 1134
 103 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 1440
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1134 in location 1442
 103 run: screen:address <- get editor:address:editor-data/deref, screen:offset
9999 mem: location 1442 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1442 is 1134
9999 run: address to copy is 1137
9999 run: its type is address
9999 mem: location 1137 is 1031
9999 mem: storing 1031 in location 1443
 103 run: top:number <- get editor:address:editor-data/deref, top:offset
9999 mem: location 1442 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1442 is 1134
9999 run: address to copy is 1138
9999 run: its type is number
9999 mem: location 1138 is 0
9999 mem: storing 0 in location 1444
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1442 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1442 is 1134
9999 run: address to copy is 1139
9999 run: its type is number
9999 mem: location 1139 is 0
9999 mem: storing 0 in location 1445
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1443 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1481
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1483
 104 run: break-unless x:address:screen, 
9999 mem: location 1483 is 1031
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1483 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1483 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1484
 104 run: reply height:number
9999 mem: location 1484 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1446
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1442 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1442 is 1134
9999 run: address to copy is 1141
9999 run: its type is number
9999 mem: location 1141 is 4
9999 mem: storing 4 in location 1447
 103 run: hide-screen screen:address
9999 mem: location 1443 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1512
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1514
 104 run: break-unless x:address:screen, 
9999 mem: location 1514 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 1514 is 1031
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, top-of-screen:offset
9999 mem: location 1442 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1442 is 1134
9999 run: address to copy is 1135
9999 run: its type is address
9999 mem: location 1135 is 1177
9999 mem: storing 1177 in location 1448
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1448 is 1177
9999 mem: storing 1177 in location 1449
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1448 is 1177
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1543
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1545
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1545 is 1177
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1545 is 1177
9999 mem: location 1177 is 167
9999 mem: location 1178 is 1211
9999 mem: location 1179 is 0
9999 mem: location 1545 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1211
9999 mem: storing 1211 in location 1546
 104 run: reply result:address:duplex-list
9999 mem: location 1546 is 1211
9999 run: result 0 is 1211
9999 mem: storing 1211 in location 1448
 103 run: row:number <- copy top:number
9999 mem: location 1444 is 0
9999 mem: storing 0 in location 1450
 103 run: column:number <- copy left:number
9999 mem: location 1445 is 0
9999 mem: storing 0 in location 1451
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1442 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1442 is 1134
9999 run: address to copy is 1142
9999 mem: storing 1142 in location 1452
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1442 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1442 is 1134
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 1453
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1442 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1442 is 1134
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 1454
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1443 is 1031
9999 mem: location 1450 is 0
9999 mem: location 1451 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1574
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1576
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 1577
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1578
 104 run: break-unless x:address:screen, 
9999 mem: location 1576 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1576 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1576 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1579
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1577 is 0
9999 mem: location 1579 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1576 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1576 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1580
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1578 is 0
9999 mem: location 1580 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1576 is 1031
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1448 is 1211
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1450 is 0
9999 mem: location 1446 is 3
9999 mem: storing 0 in location 1455
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1455 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1450 is 0
9999 mem: location 1452 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 1456
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1456 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1451 is 0
9999 mem: location 1453 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 1 in location 1457
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1457 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1448 is 1211
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1605
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1211 in location 1607
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1607 is 1211
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1607 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 1177
9999 mem: location 1607 is 1211
9999 run: address to copy is 1213
9999 run: its type is address
9999 mem: location 1213 is 1177
9999 mem: storing 1177 in location 1608
 104 run: reply result:address:duplex-list
9999 mem: location 1608 is 1177
9999 run: result 0 is 1177
9999 mem: location 1454 is 1136
9999 mem: storing 1177 in location 1136
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1448 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 1177
9999 mem: location 1448 is 1211
9999 run: address to copy is 1211
9999 run: its type is number
9999 mem: location 1211 is 97
9999 mem: storing 97 in location 1458
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1458 is 97
9999 mem: storing 0 in location 1459
 103 run: break-unless newline?:boolean, 
9999 mem: location 1459 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1451 is 0
9999 mem: location 1447 is 4
9999 mem: storing 0 in location 1462
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1462 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 1443 is 1031
9999 mem: location 1458 is 97
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1636
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1638
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1639
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1640
9999 mem: storing 0 in location 1641
 104 run: break-if color-found?:boolean, 
9999 mem: location 1641 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1640
 104 run: break-unless x:address:screen, 
9999 mem: location 1638 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1638 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1638 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1642
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1638 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1638 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1643
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1638 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1638 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1644
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1638 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1638 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1645
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1639 is 97
9999 mem: storing 0 in location 1646
 104 run: break-unless newline?:boolean, 
9999 mem: location 1646 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1642 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1644 is 5
9999 mem: storing 0 in location 1649
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1649 is 0
9999 mem: location 1643 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 0 in location 1649
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1638 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1638 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1650
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1639 is 97
9999 mem: storing 0 in location 1651
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1651 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1650 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1649 is 0
9999 mem: location 1650 is 1036
9999 mem: location 1649 is 0
9999 mem: storing 1037 in location 1653
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1653 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1653 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1654
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1653 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1653 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1655
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1639 is 97
9999 mem: location 1654 is 1037
9999 mem: storing 97 in location 1037
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1640 is 7
9999 mem: location 1655 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1644 is 5
9999 mem: storing 4 in location 1656
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1643 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1656 is 4
9999 mem: storing 0 in location 1657
 104 run: break-if at-right?:boolean, 
9999 mem: location 1657 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1643 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1643 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1638 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1448 is 1211
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1667
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1211 in location 1669
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1669 is 1211
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1669 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 1177
9999 mem: location 1669 is 1211
9999 run: address to copy is 1212
9999 run: its type is address
9999 mem: location 1212 is 1276
9999 mem: storing 1276 in location 1670
 104 run: reply result:address:duplex-list
9999 mem: location 1670 is 1276
9999 run: result 0 is 1276
9999 mem: storing 1276 in location 1448
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1449 is 1177
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1698
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1700
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1700 is 1177
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1700 is 1177
9999 mem: location 1177 is 167
9999 mem: location 1178 is 1211
9999 mem: location 1179 is 0
9999 mem: location 1700 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1211
9999 mem: storing 1211 in location 1701
 104 run: reply result:address:duplex-list
9999 mem: location 1701 is 1211
9999 run: result 0 is 1211
9999 mem: storing 1211 in location 1449
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1451 is 0
9999 mem: storing 1 in location 1451
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1448 is 1276
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1450 is 0
9999 mem: location 1446 is 3
9999 mem: storing 0 in location 1455
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1455 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1450 is 0
9999 mem: location 1452 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 1456
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1456 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1451 is 1
9999 mem: location 1453 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1457
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1457 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1448 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 1341
9999 mem: location 1278 is 1211
9999 mem: location 1448 is 1276
9999 run: address to copy is 1276
9999 run: its type is number
9999 mem: location 1276 is 98
9999 mem: storing 98 in location 1458
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1458 is 98
9999 mem: storing 0 in location 1459
 103 run: break-unless newline?:boolean, 
9999 mem: location 1459 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1451 is 1
9999 mem: location 1447 is 4
9999 mem: storing 0 in location 1462
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1462 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 1443 is 1031
9999 mem: location 1458 is 98
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1729
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1731
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1732
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1733
9999 mem: storing 0 in location 1734
 104 run: break-if color-found?:boolean, 
9999 mem: location 1734 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1733
 104 run: break-unless x:address:screen, 
9999 mem: location 1731 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1731 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1731 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1735
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1731 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1731 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1736
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1731 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1731 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1737
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1731 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1731 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1738
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1732 is 98
9999 mem: storing 0 in location 1739
 104 run: break-unless newline?:boolean, 
9999 mem: location 1739 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1735 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1737 is 5
9999 mem: storing 0 in location 1742
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1742 is 0
9999 mem: location 1736 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 1 in location 1742
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1731 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1731 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1743
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1732 is 98
9999 mem: storing 0 in location 1744
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1744 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1743 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1742 is 1
9999 mem: location 1743 is 1036
9999 mem: location 1742 is 1
9999 mem: storing 1039 in location 1746
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1746 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1746 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1747
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1746 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1746 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1748
schedule: print-character/render/new-editor/editor-wraps-line-on-insert
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1732 is 98
9999 mem: location 1747 is 1039
9999 mem: storing 98 in location 1039
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1733 is 7
9999 mem: location 1748 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1737 is 5
9999 mem: storing 4 in location 1749
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1736 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1749 is 4
9999 mem: storing 0 in location 1750
 104 run: break-if at-right?:boolean, 
9999 mem: location 1750 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1736 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1736 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1731 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1448 is 1276
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1760
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1276 in location 1762
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1762 is 1276
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1762 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 1341
9999 mem: location 1278 is 1211
9999 mem: location 1762 is 1276
9999 run: address to copy is 1277
9999 run: its type is address
9999 mem: location 1277 is 1341
9999 mem: storing 1341 in location 1763
 104 run: reply result:address:duplex-list
9999 mem: location 1763 is 1341
9999 run: result 0 is 1341
9999 mem: storing 1341 in location 1448
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1449 is 1211
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1791
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1211 in location 1793
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1793 is 1211
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1793 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 1177
9999 mem: location 1793 is 1211
9999 run: address to copy is 1212
9999 run: its type is address
9999 mem: location 1212 is 1276
9999 mem: storing 1276 in location 1794
 104 run: reply result:address:duplex-list
9999 mem: location 1794 is 1276
9999 run: result 0 is 1276
9999 mem: storing 1276 in location 1449
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1451 is 1
9999 mem: storing 2 in location 1451
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1448 is 1341
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1450 is 0
9999 mem: location 1446 is 3
9999 mem: storing 0 in location 1455
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1455 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1450 is 0
9999 mem: location 1452 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 1456
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1456 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1451 is 2
9999 mem: location 1453 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1457
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1457 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1448 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 1448 is 1341
9999 run: address to copy is 1341
9999 run: its type is number
9999 mem: location 1341 is 99
9999 mem: storing 99 in location 1458
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1458 is 99
9999 mem: storing 0 in location 1459
 103 run: break-unless newline?:boolean, 
9999 mem: location 1459 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1451 is 2
9999 mem: location 1447 is 4
9999 mem: storing 0 in location 1462
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1462 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 1443 is 1031
9999 mem: location 1458 is 99
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1822
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1824
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1825
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1826
9999 mem: storing 0 in location 1827
 104 run: break-if color-found?:boolean, 
9999 mem: location 1827 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1826
 104 run: break-unless x:address:screen, 
9999 mem: location 1824 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1824 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1824 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1828
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1824 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1824 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1829
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1824 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1824 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1830
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1824 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1824 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1831
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1825 is 99
9999 mem: storing 0 in location 1832
 104 run: break-unless newline?:boolean, 
9999 mem: location 1832 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1828 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1830 is 5
9999 mem: storing 0 in location 1835
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1835 is 0
9999 mem: location 1829 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 2 in location 1835
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1824 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1824 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1836
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1825 is 99
9999 mem: storing 0 in location 1837
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1837 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1836 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1835 is 2
9999 mem: location 1836 is 1036
9999 mem: location 1835 is 2
9999 mem: storing 1041 in location 1839
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1839 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1839 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1840
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1839 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1839 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1841
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1825 is 99
9999 mem: location 1840 is 1041
9999 mem: storing 99 in location 1041
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1826 is 7
9999 mem: location 1841 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1830 is 5
9999 mem: storing 4 in location 1842
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1829 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1842 is 4
9999 mem: storing 0 in location 1843
 104 run: break-if at-right?:boolean, 
9999 mem: location 1843 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1829 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1829 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1824 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1448 is 1341
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1853
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1341 in location 1855
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1855 is 1341
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1855 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 1855 is 1341
9999 run: address to copy is 1342
9999 run: its type is address
9999 mem: location 1342 is 1406
9999 mem: storing 1406 in location 1856
 104 run: reply result:address:duplex-list
9999 mem: location 1856 is 1406
9999 run: result 0 is 1406
9999 mem: storing 1406 in location 1448
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1449 is 1276
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1884
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1276 in location 1886
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1886 is 1276
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1886 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 1341
9999 mem: location 1278 is 1211
9999 mem: location 1886 is 1276
9999 run: address to copy is 1277
9999 run: its type is address
9999 mem: location 1277 is 1341
9999 mem: storing 1341 in location 1887
 104 run: reply result:address:duplex-list
9999 mem: location 1887 is 1341
9999 run: result 0 is 1341
9999 mem: storing 1341 in location 1449
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1451 is 2
9999 mem: storing 3 in location 1451
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1448 is 1406
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1450 is 0
9999 mem: location 1446 is 3
9999 mem: storing 0 in location 1455
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1455 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1450 is 0
9999 mem: location 1452 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 1456
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1456 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1451 is 3
9999 mem: location 1453 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1457
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1457 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1448 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 0
9999 mem: location 1408 is 1341
9999 mem: location 1448 is 1406
9999 run: address to copy is 1406
9999 run: its type is number
9999 mem: location 1406 is 100
9999 mem: storing 100 in location 1458
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1458 is 100
9999 mem: storing 0 in location 1459
 103 run: break-unless newline?:boolean, 
9999 mem: location 1459 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1451 is 3
9999 mem: location 1447 is 4
9999 mem: storing 0 in location 1462
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1462 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 1443 is 1031
9999 mem: location 1458 is 100
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1915
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1917
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1918
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1919
9999 mem: storing 0 in location 1920
 104 run: break-if color-found?:boolean, 
9999 mem: location 1920 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1919
 104 run: break-unless x:address:screen, 
9999 mem: location 1917 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1917 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1917 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1921
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1917 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1917 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1922
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1917 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1917 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1923
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1917 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1917 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1924
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1918 is 100
9999 mem: storing 0 in location 1925
 104 run: break-unless newline?:boolean, 
9999 mem: location 1925 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1921 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1923 is 5
9999 mem: storing 0 in location 1928
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1928 is 0
9999 mem: location 1922 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 3 in location 1928
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1917 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1917 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1929
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1918 is 100
9999 mem: storing 0 in location 1930
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1930 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1929 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1928 is 3
9999 mem: location 1929 is 1036
9999 mem: location 1928 is 3
9999 mem: storing 1043 in location 1932
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1932 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1932 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1933
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1932 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1932 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1934
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1918 is 100
9999 mem: location 1933 is 1043
9999 mem: storing 100 in location 1043
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1919 is 7
9999 mem: location 1934 is 1044
9999 mem: storing 7 in location 1044
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1923 is 5
9999 mem: storing 4 in location 1935
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1922 is 1034
9999 mem: location 1034 is 3
9999 mem: location 1935 is 4
9999 mem: storing 0 in location 1936
 104 run: break-if at-right?:boolean, 
9999 mem: location 1936 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1922 is 1034
9999 mem: location 1034 is 3
9999 mem: location 1922 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1917 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1448 is 1406
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1946
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1406 in location 1948
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1948 is 1406
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1948 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 0
9999 mem: location 1408 is 1341
9999 mem: location 1948 is 1406
9999 run: address to copy is 1407
9999 run: its type is address
9999 mem: location 1407 is 0
9999 mem: storing 0 in location 1949
 104 run: reply result:address:duplex-list
9999 mem: location 1949 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1448
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1449 is 1341
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1977
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1341 in location 1979
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1979 is 1341
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1979 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 1979 is 1341
9999 run: address to copy is 1342
9999 run: its type is address
9999 mem: location 1342 is 1406
9999 mem: storing 1406 in location 1980
 104 run: reply result:address:duplex-list
9999 mem: location 1980 is 1406
9999 run: result 0 is 1406
9999 mem: storing 1406 in location 1449
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1451 is 3
9999 mem: storing 4 in location 1451
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1448 is 0
9999 run: jumping to instruction 74
 103 run: bottom:address:number <- get-address editor:address:editor-data/deref, bottom:offset
9999 mem: location 1442 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1442 is 1134
9999 run: address to copy is 1140
9999 mem: storing 1140 in location 1466
 103 run: bottom:address:number/deref <- copy row:number
9999 mem: location 1450 is 0
9999 mem: location 1466 is 1140
9999 mem: storing 0 in location 1140
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1450 is 0
9999 mem: location 1452 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 1456
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1451 is 4
9999 mem: location 1453 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1467
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1456 is 1
9999 mem: location 1467 is 0
9999 mem: storing 0 in location 1468
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1450 is 0
9999 mem: location 1452 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 0 in location 1469
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1468 is 0
9999 mem: location 1469 is 0
9999 mem: storing 0 in location 1470
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 1470 is 0
9999 run: jumping to instruction 87
 103 run: done?:boolean <- greater-or-equal column:number, right:number
9999 mem: location 1451 is 4
9999 mem: location 1447 is 4
9999 mem: storing 1 in location 1461
 103 run: break-if done?:boolean, 
9999 mem: location 1461 is 1
9999 run: jumping to instruction 94
 103 run: in-focus?:boolean <- get editor:address:editor-data/deref, in-focus?:offset
9999 mem: location 1442 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1442 is 1134
9999 run: address to copy is 1145
9999 run: its type is boolean
9999 mem: location 1145 is 1
9999 mem: storing 1 in location 1471
 103 run: break-unless in-focus?:boolean, 
9999 mem: location 1471 is 1
9999 run: jump-unless fell through
 103 run: move-cursor screen:address, cursor-row:address:number/deref, cursor-column:address:number/deref
9999 mem: location 1443 is 1031
9999 mem: location 1452 is 1142
9999 mem: location 1142 is 0
9999 mem: location 1453 is 1143
9999 mem: location 1143 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2008
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2010
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 2011
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2012
 104 run: break-unless x:address:screen, 
9999 mem: location 2010 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2010 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2010 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2013
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2011 is 0
9999 mem: location 2013 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2010 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2010 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2014
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2012 is 0
9999 mem: location 2014 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2010 is 1031
 103 run: show-screen screen:address
9999 mem: location 1443 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2039
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2041
 104 run: break-unless x:address:screen, 
9999 mem: location 2041 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 2041 is 1031
 103 run: reply editor:address:editor-data/same-as-ingredient:0
9999 mem: location 1442 is 1134
9999 run: result 0 is 1134
9999 mem: storing 1134 in location 1110
 102 run: reply result:address:editor-data
9999 mem: location 1110 is 1134
9999 run: result 0 is 1134
9999 mem: storing 1134 in location 2
 101 run: assume-console [
    type [e]
  ]
parse: instruction: type
parse:   ingredient: {name: "e", properties: [_: "literal-string"]}
 101 run: run [
    event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1001
after-brace: event-loop ...
 101 run: event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1031
9999 mem: location 901 is 2075
9999 mem: location 2 is 1134
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2077
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2079
 102 run: console:address <- next-ingredient 
9999 mem: storing 2075 in location 2080
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1134 in location 2081
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 2080 is 2075
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2108
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 2075 in location 2110
 103 run: break-unless x:address:console, 
9999 mem: location 2110 is 2075
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 2110 is 2075
9999 mem: location 2075 is 0
9999 mem: location 2076 is 2070
9999 mem: location 2110 is 2075
9999 run: address to copy is 2075
9999 mem: storing 2075 in location 2111
 103 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 2110 is 2075
9999 mem: location 2075 is 0
9999 mem: location 2076 is 2070
9999 mem: location 2110 is 2075
9999 run: address to copy is 2076
9999 run: its type is address
9999 mem: location 2076 is 2070
9999 mem: storing 2070 in location 2112
 103 run: max:number <- length buf:address:array:event/deref
9999 mem: location 2112 is 2070
9999 mem: location 2070 is 1
9999 mem: location 2071 is 0
9999 mem: location 2072 is 101
9999 mem: location 2073 is 0
9999 mem: location 2074 is 0
9999 mem: location 2112 is 2070
9999 mem: storing 1 in location 2113
 103 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 2111 is 2075
9999 mem: location 2075 is 0
9999 mem: location 2113 is 1
9999 mem: storing 0 in location 2114
 103 run: break-unless done?:boolean, 
9999 mem: location 2114 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index buf:address:array:event/deref, idx:address:number/deref
9999 mem: location 2112 is 2070
9999 mem: location 2070 is 1
9999 mem: location 2071 is 0
9999 mem: location 2072 is 101
9999 mem: location 2073 is 0
9999 mem: location 2074 is 0
9999 mem: location 2111 is 2075
9999 mem: location 2075 is 0
9999 mem: location 2112 is 2070
9999 mem: location 2111 is 2075
9999 mem: location 2075 is 0
9999 run: address to copy is 2071
9999 run: its type is event
9999 mem: location 2071 is 0
9999 mem: location 2072 is 101
9999 mem: location 2073 is 0
9999 mem: location 2074 is 0
9999 mem: storing 0 in location 2116
9999 mem: storing 101 in location 2117
9999 mem: storing 0 in location 2118
9999 mem: storing 0 in location 2119
 103 run: idx:address:number/deref <- add idx:address:number/deref, 1:literal
9999 mem: location 2111 is 2075
9999 mem: location 2075 is 0
9999 mem: location 2111 is 2075
9999 mem: storing 1 in location 2075
 103 run: reply result:event, x:address:console/same-as-ingredient:0, 1:literal/found, 0:literal/quit
9999 mem: location 2116 is 0
9999 mem: location 2117 is 101
9999 mem: location 2118 is 0
9999 mem: location 2119 is 0
9999 mem: location 2110 is 2075
9999 run: result 0 is [0, 101, 0, 0]
9999 run: result 1 is 2075
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 2082
9999 mem: storing 101 in location 2083
9999 mem: storing 0 in location 2084
9999 mem: storing 0 in location 2085
9999 mem: storing 2075 in location 2080
9999 mem: storing 1 in location 2086
9999 mem: storing 0 in location 2087
 102 run: loop-unless found?:boolean, 
9999 mem: location 2086 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?:boolean, 
9999 mem: location 2087 is 0
9999 run: jump-if fell through
 102 run: trace [app], [next-event]
   1 app: next-event
 102 run: curr:address:editor-data <- copy editor:address:editor-data
9999 mem: location 2081 is 1134
9999 mem: storing 1134 in location 2088
 102 run: break-unless curr:address:editor-data, 
9999 mem: location 2088 is 1134
9999 run: jump-unless fell through
 102 run: handle-event screen:address, console:address, curr:address:editor-data, e:event
9999 mem: location 2079 is 1031
9999 mem: location 2080 is 2075
9999 mem: location 2088 is 1134
9999 mem: location 2082 is 0
9999 mem: location 2083 is 101
9999 mem: location 2084 is 0
9999 mem: location 2085 is 0
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2139
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2141
 103 run: console:address <- next-ingredient 
9999 mem: storing 2075 in location 2142
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1134 in location 2143
 103 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 2144
9999 mem: storing 101 in location 2145
9999 mem: storing 0 in location 2146
9999 mem: storing 0 in location 2147
 103 run: t:address:touch-event <- maybe-convert e:event, touch:variant
9999 mem: location 2144 is 0
9999 mem: location 2145 is 101
9999 mem: location 2146 is 0
9999 mem: location 2147 is 0
9999 mem: storing 0 in location 2148
 103 run: break-unless t:address:touch-event, 
9999 mem: location 2148 is 0
9999 run: jumping to instruction 10
 103 run: in-focus?:address:boolean <- get-address editor:address:editor-data/deref, in-focus?:offset
9999 mem: location 2143 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2143 is 1134
9999 run: address to copy is 1145
9999 mem: storing 1145 in location 2149
 103 run: jump-if in-focus?:address:boolean/deref, 1:offset
9999 mem: location 2149 is 1145
9999 mem: location 1145 is 1
9999 run: jumping to instruction 14
 103 run: c:address:character <- maybe-convert e:event, text:variant
9999 mem: location 2144 is 0
9999 mem: location 2145 is 101
9999 mem: location 2146 is 0
9999 mem: location 2147 is 0
9999 mem: storing 2145 in location 2150
 103 run: break-unless c:address:character, 
9999 mem: location 2150 is 2145
9999 run: jump-unless fell through
 103 run: backspace?:boolean <- equal c:address:character/deref, 8:literal/backspace
9999 mem: location 2150 is 2145
9999 mem: location 2145 is 101
9999 mem: storing 0 in location 2151
 103 run: break-unless backspace?:boolean, 
9999 mem: location 2151 is 0
9999 run: jumping to instruction 22
 103 run: insert-at-cursor editor:address:editor-data, c:address:character/deref
9999 mem: location 2143 is 1134
9999 mem: location 2150 is 2145
9999 mem: location 2145 is 101
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2170
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1134 in location 2172
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 2173
 104 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 2172 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2172 is 1134
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 2174
 104 run: d:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 2172 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2172 is 1134
9999 run: address to copy is 1134
9999 run: its type is address
9999 mem: location 1134 is 1177
9999 mem: storing 1177 in location 2175
 104 run: insert-duplex c:character, before-cursor:address:address:duplex-list/deref
9999 mem: location 2173 is 101
9999 mem: location 2174 is 1136
9999 mem: location 1136 is 1177
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2201
 105 run: x:location <- next-ingredient 
9999 mem: storing 101 in location 2203
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 2204
 105 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 2232
9999 mem: storing 2232 in location 2205
 105 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 2205 is 2232
9999 mem: location 2232 is 0
9999 mem: location 2233 is 0
9999 mem: location 2234 is 0
9999 mem: location 2205 is 2232
9999 run: address to copy is 2232
9999 mem: storing 2232 in location 2206
 105 run: val:address:location/deref <- copy x:location
9999 mem: location 2203 is 101
9999 mem: location 2206 is 2232
9999 mem: storing 101 in location 2232
 105 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2204 is 1177
9999 mem: location 1177 is 167
9999 mem: location 1178 is 1211
9999 mem: location 1179 is 0
9999 mem: location 2204 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1211
9999 mem: storing 1211 in location 2207
 105 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 2204 is 1177
9999 mem: location 1177 is 167
9999 mem: location 1178 is 1211
9999 mem: location 1179 is 0
9999 mem: location 2204 is 1177
9999 run: address to copy is 1178
9999 mem: storing 1178 in location 2208
 105 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 2205 is 2232
9999 mem: location 2208 is 1178
9999 mem: storing 2232 in location 1178
 105 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 2205 is 2232
9999 mem: location 2232 is 101
9999 mem: location 2233 is 0
9999 mem: location 2234 is 0
9999 mem: location 2205 is 2232
9999 run: address to copy is 2234
9999 mem: storing 2234 in location 2208
 105 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 2204 is 1177
9999 mem: location 2208 is 2234
9999 mem: storing 1177 in location 2234
 105 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 2205 is 2232
9999 mem: location 2232 is 101
9999 mem: location 2233 is 0
9999 mem: location 2234 is 1177
9999 mem: location 2205 is 2232
9999 run: address to copy is 2233
9999 mem: storing 2233 in location 2208
 105 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 2207 is 1211
9999 mem: location 2208 is 2233
9999 mem: storing 1211 in location 2233
 105 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 2207 is 1211
9999 run: jumping to instruction 15
 105 run: y:address:address:duplex-list <- get-address next-node:address:duplex-list/deref, prev:offset
9999 mem: location 2207 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 1177
9999 mem: location 2207 is 1211
9999 run: address to copy is 1213
9999 mem: storing 1213 in location 2208
 105 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 2205 is 2232
9999 mem: location 2208 is 1213
9999 mem: storing 2232 in location 1213
 105 run: reply new-node:address:duplex-list
9999 mem: location 2205 is 2232
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2173 is 101
9999 mem: storing 0 in location 2176
 104 run: break-unless newline?:boolean, 
9999 mem: location 2176 is 0
9999 run: jumping to instruction 14
 104 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 2172 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2172 is 1134
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 2178
 104 run: cursor-column:address:number/deref <- add cursor-column:address:number/deref, 1:literal
9999 mem: location 2178 is 1143
9999 mem: location 1143 is 0
9999 mem: location 2178 is 1143
9999 mem: storing 1 in location 1143
 103 run: reply 
 102 run: curr:address:editor-data <- get curr:address:editor-data/deref, next-editor:offset
9999 mem: location 2088 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2088 is 1134
9999 run: address to copy is 1144
9999 run: its type is address
9999 mem: location 1144 is 0
9999 mem: storing 0 in location 2088
 102 run: loop 
9999 run: jumping to instruction 11
 102 run: break-unless curr:address:editor-data, 
9999 mem: location 2088 is 0
9999 run: jumping to instruction 15
 102 run: curr:address:editor-data <- copy editor:address:editor-data
9999 mem: location 2081 is 1134
9999 mem: storing 1134 in location 2088
 102 run: break-unless curr:address:editor-data, 
9999 mem: location 2088 is 1134
9999 run: jump-unless fell through
 102 run: render curr:address:editor-data
9999 mem: location 2088 is 1134
 103 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 2235
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1134 in location 2237
 103 run: screen:address <- get editor:address:editor-data/deref, screen:offset
9999 mem: location 2237 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2237 is 1134
9999 run: address to copy is 1137
9999 run: its type is address
9999 mem: location 1137 is 1031
9999 mem: storing 1031 in location 2238
 103 run: top:number <- get editor:address:editor-data/deref, top:offset
9999 mem: location 2237 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2237 is 1134
9999 run: address to copy is 1138
9999 run: its type is number
9999 mem: location 1138 is 0
9999 mem: storing 0 in location 2239
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 2237 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2237 is 1134
9999 run: address to copy is 1139
9999 run: its type is number
9999 mem: location 1139 is 0
9999 mem: storing 0 in location 2240
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 2238 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2276
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2278
 104 run: break-unless x:address:screen, 
9999 mem: location 2278 is 1031
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2278 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2278 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2279
 104 run: reply height:number
9999 mem: location 2279 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 2241
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 2237 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2237 is 1134
9999 run: address to copy is 1141
9999 run: its type is number
9999 mem: location 1141 is 4
9999 mem: storing 4 in location 2242
 103 run: hide-screen screen:address
9999 mem: location 2238 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2307
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2309
 104 run: break-unless x:address:screen, 
9999 mem: location 2309 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 2309 is 1031
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, top-of-screen:offset
9999 mem: location 2237 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2237 is 1134
9999 run: address to copy is 1135
9999 run: its type is address
9999 mem: location 1135 is 1177
9999 mem: storing 1177 in location 2243
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 2243 is 1177
9999 mem: storing 1177 in location 2244
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2243 is 1177
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2338
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 2340
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2340 is 1177
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2340 is 1177
9999 mem: location 1177 is 167
9999 mem: location 1178 is 2232
9999 mem: location 1179 is 0
9999 mem: location 2340 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 2232
9999 mem: storing 2232 in location 2341
 104 run: reply result:address:duplex-list
9999 mem: location 2341 is 2232
9999 run: result 0 is 2232
9999 mem: storing 2232 in location 2243
 103 run: row:number <- copy top:number
9999 mem: location 2239 is 0
9999 mem: storing 0 in location 2245
 103 run: column:number <- copy left:number
9999 mem: location 2240 is 0
9999 mem: storing 0 in location 2246
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 2237 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2237 is 1134
9999 run: address to copy is 1142
9999 mem: storing 1142 in location 2247
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 2237 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2237 is 1134
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 2248
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 2237 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2237 is 1134
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 2249
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 2238 is 1031
9999 mem: location 2245 is 0
9999 mem: location 2246 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2369
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2371
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 2372
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2373
 104 run: break-unless x:address:screen, 
9999 mem: location 2371 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2371 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2371 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2374
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2372 is 0
9999 mem: location 2374 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2371 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2371 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2375
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2373 is 0
9999 mem: location 2375 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2371 is 1031
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 2243 is 2232
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2245 is 0
9999 mem: location 2241 is 3
9999 mem: storing 0 in location 2250
 103 run: break-if off-screen?:boolean, 
9999 mem: location 2250 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2245 is 0
9999 mem: location 2247 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 2251
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2251 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 2246 is 0
9999 mem: location 2248 is 1143
9999 mem: location 1143 is 1
9999 mem: storing 0 in location 2252
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 2252 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2243 is 2232
9999 mem: location 2232 is 101
9999 mem: location 2233 is 1211
9999 mem: location 2234 is 1177
9999 mem: location 2243 is 2232
9999 run: address to copy is 2232
9999 run: its type is number
9999 mem: location 2232 is 101
9999 mem: storing 101 in location 2253
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2253 is 101
9999 mem: storing 0 in location 2254
 103 run: break-unless newline?:boolean, 
9999 mem: location 2254 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2246 is 0
9999 mem: location 2242 is 4
9999 mem: storing 0 in location 2257
 103 run: break-unless at-right?:boolean, 
9999 mem: location 2257 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 2238 is 1031
9999 mem: location 2253 is 101
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2400
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2402
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 2403
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2404
9999 mem: storing 0 in location 2405
 104 run: break-if color-found?:boolean, 
9999 mem: location 2405 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2404
 104 run: break-unless x:address:screen, 
9999 mem: location 2402 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2402 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2402 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2406
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2402 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2402 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2407
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2402 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2402 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2408
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2402 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2402 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2409
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2403 is 101
9999 mem: storing 0 in location 2410
 104 run: break-unless newline?:boolean, 
9999 mem: location 2410 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2406 is 1033
9999 mem: location 1033 is 0
9999 mem: location 2408 is 5
9999 mem: storing 0 in location 2413
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2413 is 0
9999 mem: location 2407 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 0 in location 2413
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2402 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2402 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2414
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2403 is 101
9999 mem: storing 0 in location 2415
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2415 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2414 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2413 is 0
9999 mem: location 2414 is 1036
9999 mem: location 2413 is 0
9999 mem: storing 1037 in location 2417
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2417 is 1037
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 2417 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 2418
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2417 is 1037
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 2417 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 2419
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2403 is 101
9999 mem: location 2418 is 1037
9999 mem: storing 101 in location 1037
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2404 is 7
9999 mem: location 2419 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2408 is 5
9999 mem: storing 4 in location 2420
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2407 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2420 is 4
9999 mem: storing 0 in location 2421
 104 run: break-if at-right?:boolean, 
9999 mem: location 2421 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2407 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2407 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2402 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2243 is 2232
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2431
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2232 in location 2433
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2433 is 2232
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2433 is 2232
9999 mem: location 2232 is 101
9999 mem: location 2233 is 1211
9999 mem: location 2234 is 1177
9999 mem: location 2433 is 2232
9999 run: address to copy is 2233
9999 run: its type is address
9999 mem: location 2233 is 1211
9999 mem: storing 1211 in location 2434
 104 run: reply result:address:duplex-list
9999 mem: location 2434 is 1211
9999 run: result 0 is 1211
9999 mem: storing 1211 in location 2243
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2244 is 1177
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2462
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 2464
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2464 is 1177
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2464 is 1177
9999 mem: location 1177 is 167
9999 mem: location 1178 is 2232
9999 mem: location 1179 is 0
9999 mem: location 2464 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 2232
9999 mem: storing 2232 in location 2465
 104 run: reply result:address:duplex-list
9999 mem: location 2465 is 2232
9999 run: result 0 is 2232
9999 mem: storing 2232 in location 2244
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2246 is 0
9999 mem: storing 1 in location 2246
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 2243 is 1211
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2245 is 0
9999 mem: location 2241 is 3
9999 mem: storing 0 in location 2250
 103 run: break-if off-screen?:boolean, 
9999 mem: location 2250 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2245 is 0
9999 mem: location 2247 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 2251
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2251 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 2246 is 1
9999 mem: location 2248 is 1143
9999 mem: location 1143 is 1
9999 mem: storing 1 in location 2252
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 2252 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 2243 is 1211
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2493
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1211 in location 2495
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2495 is 1211
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 2495 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 2232
9999 mem: location 2495 is 1211
9999 run: address to copy is 1213
9999 run: its type is address
9999 mem: location 1213 is 2232
9999 mem: storing 2232 in location 2496
 104 run: reply result:address:duplex-list
9999 mem: location 2496 is 2232
9999 run: result 0 is 2232
9999 mem: location 2249 is 1136
9999 mem: storing 2232 in location 1136
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2243 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 2232
9999 mem: location 2243 is 1211
9999 run: address to copy is 1211
9999 run: its type is number
9999 mem: location 1211 is 97
9999 mem: storing 97 in location 2253
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2253 is 97
9999 mem: storing 0 in location 2254
 103 run: break-unless newline?:boolean, 
9999 mem: location 2254 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2246 is 1
9999 mem: location 2242 is 4
9999 mem: storing 0 in location 2257
 103 run: break-unless at-right?:boolean, 
9999 mem: location 2257 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 2238 is 1031
9999 mem: location 2253 is 97
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2524
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2526
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 2527
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2528
9999 mem: storing 0 in location 2529
 104 run: break-if color-found?:boolean, 
9999 mem: location 2529 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2528
 104 run: break-unless x:address:screen, 
9999 mem: location 2526 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2526 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2526 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2530
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2526 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2526 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2531
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2526 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2526 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2532
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2526 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2526 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2533
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2527 is 97
9999 mem: storing 0 in location 2534
 104 run: break-unless newline?:boolean, 
9999 mem: location 2534 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2530 is 1033
9999 mem: location 1033 is 0
9999 mem: location 2532 is 5
9999 mem: storing 0 in location 2537
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2537 is 0
9999 mem: location 2531 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 1 in location 2537
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2526 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2526 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2538
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2527 is 97
9999 mem: storing 0 in location 2539
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2539 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2538 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2537 is 1
9999 mem: location 2538 is 1036
9999 mem: location 2537 is 1
9999 mem: storing 1039 in location 2541
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2541 is 1039
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 2541 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 2542
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2541 is 1039
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 2541 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 2543
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2527 is 97
9999 mem: location 2542 is 1039
9999 mem: storing 97 in location 1039
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2528 is 7
9999 mem: location 2543 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2532 is 5
9999 mem: storing 4 in location 2544
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2531 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2544 is 4
9999 mem: storing 0 in location 2545
 104 run: break-if at-right?:boolean, 
9999 mem: location 2545 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2531 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2531 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2526 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2243 is 1211
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2555
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1211 in location 2557
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2557 is 1211
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2557 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 2232
9999 mem: location 2557 is 1211
9999 run: address to copy is 1212
9999 run: its type is address
9999 mem: location 1212 is 1276
9999 mem: storing 1276 in location 2558
 104 run: reply result:address:duplex-list
9999 mem: location 2558 is 1276
9999 run: result 0 is 1276
9999 mem: storing 1276 in location 2243
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2244 is 2232
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2586
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2232 in location 2588
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2588 is 2232
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2588 is 2232
9999 mem: location 2232 is 101
9999 mem: location 2233 is 1211
9999 mem: location 2234 is 1177
9999 mem: location 2588 is 2232
9999 run: address to copy is 2233
9999 run: its type is address
9999 mem: location 2233 is 1211
9999 mem: storing 1211 in location 2589
 104 run: reply result:address:duplex-list
9999 mem: location 2589 is 1211
9999 run: result 0 is 1211
9999 mem: storing 1211 in location 2244
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2246 is 1
9999 mem: storing 2 in location 2246
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 2243 is 1276
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2245 is 0
9999 mem: location 2241 is 3
9999 mem: storing 0 in location 2250
 103 run: break-if off-screen?:boolean, 
9999 mem: location 2250 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2245 is 0
9999 mem: location 2247 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 2251
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2251 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 2246 is 2
9999 mem: location 2248 is 1143
9999 mem: location 1143 is 1
9999 mem: storing 0 in location 2252
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 2252 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2243 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 1341
9999 mem: location 1278 is 1211
9999 mem: location 2243 is 1276
9999 run: address to copy is 1276
9999 run: its type is number
9999 mem: location 1276 is 98
9999 mem: storing 98 in location 2253
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2253 is 98
9999 mem: storing 0 in location 2254
 103 run: break-unless newline?:boolean, 
9999 mem: location 2254 is 0
9999 run: jumping to instruction 54
schedule: render/event-loop/run1001/editor-wraps-line-on-insert
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2246 is 2
9999 mem: location 2242 is 4
9999 mem: storing 0 in location 2257
 103 run: break-unless at-right?:boolean, 
9999 mem: location 2257 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 2238 is 1031
9999 mem: location 2253 is 98
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2617
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2619
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 2620
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2621
9999 mem: storing 0 in location 2622
 104 run: break-if color-found?:boolean, 
9999 mem: location 2622 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2621
 104 run: break-unless x:address:screen, 
9999 mem: location 2619 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2619 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2619 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2623
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2619 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2619 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2624
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2619 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2619 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2625
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2619 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2619 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2626
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2620 is 98
9999 mem: storing 0 in location 2627
 104 run: break-unless newline?:boolean, 
9999 mem: location 2627 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2623 is 1033
9999 mem: location 1033 is 0
9999 mem: location 2625 is 5
9999 mem: storing 0 in location 2630
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2630 is 0
9999 mem: location 2624 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 2 in location 2630
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2619 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2619 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2631
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2620 is 98
9999 mem: storing 0 in location 2632
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2632 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2631 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2630 is 2
9999 mem: location 2631 is 1036
9999 mem: location 2630 is 2
9999 mem: storing 1041 in location 2634
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2634 is 1041
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 2634 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 2635
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2634 is 1041
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 2634 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 2636
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2620 is 98
9999 mem: location 2635 is 1041
9999 mem: storing 98 in location 1041
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2621 is 7
9999 mem: location 2636 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2625 is 5
9999 mem: storing 4 in location 2637
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2624 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2637 is 4
9999 mem: storing 0 in location 2638
 104 run: break-if at-right?:boolean, 
9999 mem: location 2638 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2624 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2624 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2619 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2243 is 1276
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2648
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1276 in location 2650
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2650 is 1276
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2650 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 1341
9999 mem: location 1278 is 1211
9999 mem: location 2650 is 1276
9999 run: address to copy is 1277
9999 run: its type is address
9999 mem: location 1277 is 1341
9999 mem: storing 1341 in location 2651
 104 run: reply result:address:duplex-list
9999 mem: location 2651 is 1341
9999 run: result 0 is 1341
9999 mem: storing 1341 in location 2243
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2244 is 1211
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2679
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1211 in location 2681
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2681 is 1211
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2681 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 2232
9999 mem: location 2681 is 1211
9999 run: address to copy is 1212
9999 run: its type is address
9999 mem: location 1212 is 1276
9999 mem: storing 1276 in location 2682
 104 run: reply result:address:duplex-list
9999 mem: location 2682 is 1276
9999 run: result 0 is 1276
9999 mem: storing 1276 in location 2244
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2246 is 2
9999 mem: storing 3 in location 2246
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 2243 is 1341
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2245 is 0
9999 mem: location 2241 is 3
9999 mem: storing 0 in location 2250
 103 run: break-if off-screen?:boolean, 
9999 mem: location 2250 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2245 is 0
9999 mem: location 2247 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 2251
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2251 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 2246 is 3
9999 mem: location 2248 is 1143
9999 mem: location 1143 is 1
9999 mem: storing 0 in location 2252
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 2252 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2243 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 2243 is 1341
9999 run: address to copy is 1341
9999 run: its type is number
9999 mem: location 1341 is 99
9999 mem: storing 99 in location 2253
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2253 is 99
9999 mem: storing 0 in location 2254
 103 run: break-unless newline?:boolean, 
9999 mem: location 2254 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2246 is 3
9999 mem: location 2242 is 4
9999 mem: storing 0 in location 2257
 103 run: break-unless at-right?:boolean, 
9999 mem: location 2257 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 2238 is 1031
9999 mem: location 2253 is 99
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2710
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2712
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 2713
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2714
9999 mem: storing 0 in location 2715
 104 run: break-if color-found?:boolean, 
9999 mem: location 2715 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2714
 104 run: break-unless x:address:screen, 
9999 mem: location 2712 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2712 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2712 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2716
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2712 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2712 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2717
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2712 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2712 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2718
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2712 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2712 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2719
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2713 is 99
9999 mem: storing 0 in location 2720
 104 run: break-unless newline?:boolean, 
9999 mem: location 2720 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2716 is 1033
9999 mem: location 1033 is 0
9999 mem: location 2718 is 5
9999 mem: storing 0 in location 2723
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2723 is 0
9999 mem: location 2717 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 3 in location 2723
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2712 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2712 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2724
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2713 is 99
9999 mem: storing 0 in location 2725
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2725 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2724 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2723 is 3
9999 mem: location 2724 is 1036
9999 mem: location 2723 is 3
9999 mem: storing 1043 in location 2727
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2727 is 1043
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 2727 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 2728
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2727 is 1043
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 2727 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 2729
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2713 is 99
9999 mem: location 2728 is 1043
9999 mem: storing 99 in location 1043
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2714 is 7
9999 mem: location 2729 is 1044
9999 mem: storing 7 in location 1044
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2718 is 5
9999 mem: storing 4 in location 2730
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2717 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2730 is 4
9999 mem: storing 0 in location 2731
 104 run: break-if at-right?:boolean, 
9999 mem: location 2731 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2717 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2717 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2712 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2243 is 1341
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2741
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1341 in location 2743
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2743 is 1341
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2743 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 2743 is 1341
9999 run: address to copy is 1342
9999 run: its type is address
9999 mem: location 1342 is 1406
9999 mem: storing 1406 in location 2744
 104 run: reply result:address:duplex-list
9999 mem: location 2744 is 1406
9999 run: result 0 is 1406
9999 mem: storing 1406 in location 2243
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2244 is 1276
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2772
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1276 in location 2774
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2774 is 1276
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2774 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 1341
9999 mem: location 1278 is 1211
9999 mem: location 2774 is 1276
9999 run: address to copy is 1277
9999 run: its type is address
9999 mem: location 1277 is 1341
9999 mem: storing 1341 in location 2775
 104 run: reply result:address:duplex-list
9999 mem: location 2775 is 1341
9999 run: result 0 is 1341
9999 mem: storing 1341 in location 2244
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2246 is 3
9999 mem: storing 4 in location 2246
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 2243 is 1406
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2245 is 0
9999 mem: location 2241 is 3
9999 mem: storing 0 in location 2250
 103 run: break-if off-screen?:boolean, 
9999 mem: location 2250 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2245 is 0
9999 mem: location 2247 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 2251
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2251 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 2246 is 4
9999 mem: location 2248 is 1143
9999 mem: location 1143 is 1
9999 mem: storing 0 in location 2252
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 2252 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2243 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 0
9999 mem: location 1408 is 1341
9999 mem: location 2243 is 1406
9999 run: address to copy is 1406
9999 run: its type is number
9999 mem: location 1406 is 100
9999 mem: storing 100 in location 2253
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2253 is 100
9999 mem: storing 0 in location 2254
 103 run: break-unless newline?:boolean, 
9999 mem: location 2254 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2246 is 4
9999 mem: location 2242 is 4
9999 mem: storing 1 in location 2257
 103 run: break-unless at-right?:boolean, 
9999 mem: location 2257 is 1
9999 run: jump-unless fell through
 103 run: next-node:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2243 is 1406
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2803
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1406 in location 2805
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2805 is 1406
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2805 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 0
9999 mem: location 1408 is 1341
9999 mem: location 2805 is 1406
9999 run: address to copy is 1407
9999 run: its type is address
9999 mem: location 1407 is 0
9999 mem: storing 0 in location 2806
 104 run: reply result:address:duplex-list
9999 mem: location 2806 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 2258
 103 run: break-unless next-node:address:duplex-list, 
9999 mem: location 2258 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 2238 is 1031
9999 mem: location 2253 is 100
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2834
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2836
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 2837
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2838
9999 mem: storing 0 in location 2839
 104 run: break-if color-found?:boolean, 
9999 mem: location 2839 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2838
 104 run: break-unless x:address:screen, 
9999 mem: location 2836 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2836 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2836 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2840
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2836 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2836 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2841
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2836 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2836 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2842
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2836 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2836 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2843
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2837 is 100
9999 mem: storing 0 in location 2844
 104 run: break-unless newline?:boolean, 
9999 mem: location 2844 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2840 is 1033
9999 mem: location 1033 is 0
9999 mem: location 2842 is 5
9999 mem: storing 0 in location 2847
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2847 is 0
9999 mem: location 2841 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 4 in location 2847
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2836 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2836 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2848
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2837 is 100
9999 mem: storing 0 in location 2849
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2849 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2848 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2847 is 4
9999 mem: location 2848 is 1036
9999 mem: location 2847 is 4
9999 mem: storing 1045 in location 2851
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2851 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 2851 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 2852
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2851 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 2851 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 2853
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2837 is 100
9999 mem: location 2852 is 1045
9999 mem: storing 100 in location 1045
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2838 is 7
9999 mem: location 2853 is 1046
9999 mem: storing 7 in location 1046
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2842 is 5
9999 mem: storing 4 in location 2854
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2841 is 1034
9999 mem: location 1034 is 4
9999 mem: location 2854 is 4
9999 mem: storing 1 in location 2855
 104 run: break-if at-right?:boolean, 
9999 mem: location 2855 is 1
9999 run: jumping to instruction 55
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2836 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2243 is 1406
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2865
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1406 in location 2867
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2867 is 1406
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2867 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 0
9999 mem: location 1408 is 1341
9999 mem: location 2867 is 1406
9999 run: address to copy is 1407
9999 run: its type is address
9999 mem: location 1407 is 0
9999 mem: storing 0 in location 2868
 104 run: reply result:address:duplex-list
9999 mem: location 2868 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 2243
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2244 is 1341
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2896
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1341 in location 2898
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2898 is 1341
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2898 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 2898 is 1341
9999 run: address to copy is 1342
9999 run: its type is address
9999 mem: location 1342 is 1406
9999 mem: storing 1406 in location 2899
 104 run: reply result:address:duplex-list
9999 mem: location 2899 is 1406
9999 run: result 0 is 1406
9999 mem: storing 1406 in location 2244
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2246 is 4
9999 mem: storing 5 in location 2246
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 2243 is 0
9999 run: jumping to instruction 74
 103 run: bottom:address:number <- get-address editor:address:editor-data/deref, bottom:offset
9999 mem: location 2237 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2232
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2237 is 1134
9999 run: address to copy is 1140
9999 mem: storing 1140 in location 2261
 103 run: bottom:address:number/deref <- copy row:number
9999 mem: location 2245 is 0
9999 mem: location 2261 is 1140
9999 mem: storing 0 in location 1140
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2245 is 0
9999 mem: location 2247 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 2251
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 2246 is 5
9999 mem: location 2248 is 1143
9999 mem: location 1143 is 1
9999 mem: storing 0 in location 2262
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 2251 is 1
9999 mem: location 2262 is 0
9999 mem: storing 0 in location 2263
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 2245 is 0
9999 mem: location 2247 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 0 in location 2264
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 2263 is 0
9999 mem: location 2264 is 0
9999 mem: storing 0 in location 2265
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 2265 is 0
9999 run: jumping to instruction 87
 103 run: done?:boolean <- greater-or-equal column:number, right:number
9999 mem: location 2246 is 5
9999 mem: location 2242 is 4
9999 mem: storing 1 in location 2256
 103 run: break-if done?:boolean, 
9999 mem: location 2256 is 1
9999 run: jumping to instruction 94
 103 run: in-focus?:boolean <- get editor:address:editor-data/deref, in-focus?:offset
9999 mem: location 2237 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2232
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2237 is 1134
9999 run: address to copy is 1145
9999 run: its type is boolean
9999 mem: location 1145 is 1
9999 mem: storing 1 in location 2266
 103 run: break-unless in-focus?:boolean, 
9999 mem: location 2266 is 1
9999 run: jump-unless fell through
 103 run: move-cursor screen:address, cursor-row:address:number/deref, cursor-column:address:number/deref
9999 mem: location 2238 is 1031
9999 mem: location 2247 is 1142
9999 mem: location 1142 is 0
9999 mem: location 2248 is 1143
9999 mem: location 1143 is 1
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2927
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2929
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 2930
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 2931
 104 run: break-unless x:address:screen, 
9999 mem: location 2929 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2929 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2929 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2932
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2930 is 0
9999 mem: location 2932 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2929 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2929 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2933
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2931 is 1
9999 mem: location 2933 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2929 is 1031
 103 run: show-screen screen:address
9999 mem: location 2238 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2958
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2960
 104 run: break-unless x:address:screen, 
9999 mem: location 2960 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 2960 is 1031
 103 run: reply editor:address:editor-data/same-as-ingredient:0
9999 mem: location 2237 is 1134
 102 run: curr:address:editor-data <- get curr:address:editor-data/deref, next-editor:offset
9999 mem: location 2088 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2232
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2088 is 1134
9999 run: address to copy is 1144
9999 run: its type is address
9999 mem: location 1144 is 0
9999 mem: storing 0 in location 2088
 102 run: loop 
9999 run: jumping to instruction 18
 102 run: break-unless curr:address:editor-data, 
9999 mem: location 2088 is 0
9999 run: jumping to instruction 22
 102 run: curr:address:editor-data <- copy editor:address:editor-data
9999 mem: location 2081 is 1134
9999 mem: storing 1134 in location 2088
 102 run: break-unless curr:address:editor-data, 
9999 mem: location 2088 is 1134
9999 run: jump-unless fell through
 102 run: in-focus?:boolean <- get curr:address:editor-data/deref, in-focus?:offset
9999 mem: location 2088 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2232
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2088 is 1134
9999 run: address to copy is 1145
9999 run: its type is boolean
9999 mem: location 1145 is 1
9999 mem: storing 1 in location 2089
 102 run: break-unless in-focus?:boolean, 
9999 mem: location 2089 is 1
9999 run: jump-unless fell through
 102 run: cursor-row:number <- get curr:address:editor-data/deref, cursor-row:offset
9999 mem: location 2088 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2232
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2088 is 1134
9999 run: address to copy is 1142
9999 run: its type is number
9999 mem: location 1142 is 0
9999 mem: storing 0 in location 2090
 102 run: cursor-column:number <- get curr:address:editor-data/deref, cursor-column:offset
9999 mem: location 2088 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2232
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2088 is 1134
9999 run: address to copy is 1143
9999 run: its type is number
9999 mem: location 1143 is 1
9999 mem: storing 1 in location 2091
 102 run: move-cursor screen:address, cursor-row:number, cursor-column:number
9999 mem: location 2079 is 1031
9999 mem: location 2090 is 0
9999 mem: location 2091 is 1
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2989
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2991
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 2992
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 2993
 103 run: break-unless x:address:screen, 
9999 mem: location 2991 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2991 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2991 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2994
 103 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2992 is 0
9999 mem: location 2994 is 1033
9999 mem: storing 0 in location 1033
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2991 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2991 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2995
 103 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2993 is 1
9999 mem: location 2995 is 1034
9999 mem: storing 1 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2991 is 1031
 102 run: curr:address:editor-data <- get curr:address:editor-data/deref, next-editor:offset
9999 mem: location 2088 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2232
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2088 is 1134
9999 run: address to copy is 1144
9999 run: its type is address
9999 mem: location 1144 is 0
9999 mem: storing 0 in location 2088
 102 run: loop 
9999 run: jumping to instruction 25
 102 run: break-unless curr:address:editor-data, 
9999 mem: location 2088 is 0
9999 run: jumping to instruction 35
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 2080 is 2075
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3020
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 2075 in location 3022
 103 run: break-unless x:address:console, 
9999 mem: location 3022 is 2075
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 3022 is 2075
9999 mem: location 2075 is 1
9999 mem: location 2076 is 2070
9999 mem: location 3022 is 2075
9999 run: address to copy is 2075
9999 mem: storing 2075 in location 3023
 103 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 3022 is 2075
9999 mem: location 2075 is 1
9999 mem: location 2076 is 2070
9999 mem: location 3022 is 2075
9999 run: address to copy is 2076
9999 run: its type is address
9999 mem: location 2076 is 2070
9999 mem: storing 2070 in location 3024
 103 run: max:number <- length buf:address:array:event/deref
9999 mem: location 3024 is 2070
9999 mem: location 2070 is 1
9999 mem: location 2071 is 0
9999 mem: location 2072 is 101
9999 mem: location 2073 is 0
9999 mem: location 2074 is 0
9999 mem: location 3024 is 2070
9999 mem: storing 1 in location 3025
 103 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 3023 is 2075
9999 mem: location 2075 is 1
9999 mem: location 3025 is 1
9999 mem: storing 1 in location 3026
 103 run: break-unless done?:boolean, 
9999 mem: location 3026 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: new alloc: 3051
9999 mem: storing 3051 in location 3027
 103 run: reply dummy:address:event/deref, x:address:console/same-as-ingredient:0, 1:literal/found, 1:literal/quit
9999 mem: location 3027 is 3051
9999 mem: location 3051 is 0
9999 mem: location 3052 is 0
9999 mem: location 3053 is 0
9999 mem: location 3054 is 0
9999 mem: location 3022 is 2075
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 2075
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 2082
9999 mem: storing 0 in location 2083
9999 mem: storing 0 in location 2084
9999 mem: storing 0 in location 2085
9999 mem: storing 2075 in location 2080
9999 mem: storing 1 in location 2086
9999 mem: storing 1 in location 2087
 102 run: loop-unless found?:boolean, 
9999 mem: location 2086 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?:boolean, 
9999 mem: location 2087 is 1
9999 run: jumping to instruction 37
 100 run: screen-should-contain [
    .eabcd.
    .     .
  ]
 100 run: assume-console [
    type [f]
  ]
parse: instruction: type
parse:   ingredient: {name: "f", properties: [_: "literal-string"]}
 100 run: run [
    event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1002
after-brace: event-loop ...
 100 run: event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1031
9999 mem: location 901 is 3060
9999 mem: location 2 is 1134
 101 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3062
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 3064
 101 run: console:address <- next-ingredient 
9999 mem: storing 3060 in location 3065
 101 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1134 in location 3066
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 3065 is 3060
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3093
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 3060 in location 3095
 102 run: break-unless x:address:console, 
9999 mem: location 3095 is 3060
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 3095 is 3060
9999 mem: location 3060 is 0
9999 mem: location 3061 is 3055
9999 mem: location 3095 is 3060
9999 run: address to copy is 3060
9999 mem: storing 3060 in location 3096
 102 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 3095 is 3060
9999 mem: location 3060 is 0
9999 mem: location 3061 is 3055
9999 mem: location 3095 is 3060
9999 run: address to copy is 3061
9999 run: its type is address
9999 mem: location 3061 is 3055
9999 mem: storing 3055 in location 3097
 102 run: max:number <- length buf:address:array:event/deref
9999 mem: location 3097 is 3055
9999 mem: location 3055 is 1
9999 mem: location 3056 is 0
9999 mem: location 3057 is 102
9999 mem: location 3058 is 0
9999 mem: location 3059 is 0
9999 mem: location 3097 is 3055
9999 mem: storing 1 in location 3098
 102 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 3096 is 3060
9999 mem: location 3060 is 0
9999 mem: location 3098 is 1
9999 mem: storing 0 in location 3099
 102 run: break-unless done?:boolean, 
9999 mem: location 3099 is 0
9999 run: jumping to instruction 12
 102 run: result:event <- index buf:address:array:event/deref, idx:address:number/deref
9999 mem: location 3097 is 3055
9999 mem: location 3055 is 1
9999 mem: location 3056 is 0
9999 mem: location 3057 is 102
9999 mem: location 3058 is 0
9999 mem: location 3059 is 0
9999 mem: location 3096 is 3060
9999 mem: location 3060 is 0
9999 mem: location 3097 is 3055
9999 mem: location 3096 is 3060
9999 mem: location 3060 is 0
9999 run: address to copy is 3056
9999 run: its type is event
9999 mem: location 3056 is 0
9999 mem: location 3057 is 102
9999 mem: location 3058 is 0
9999 mem: location 3059 is 0
9999 mem: storing 0 in location 3101
9999 mem: storing 102 in location 3102
9999 mem: storing 0 in location 3103
9999 mem: storing 0 in location 3104
 102 run: idx:address:number/deref <- add idx:address:number/deref, 1:literal
9999 mem: location 3096 is 3060
9999 mem: location 3060 is 0
9999 mem: location 3096 is 3060
9999 mem: storing 1 in location 3060
 102 run: reply result:event, x:address:console/same-as-ingredient:0, 1:literal/found, 0:literal/quit
9999 mem: location 3101 is 0
9999 mem: location 3102 is 102
9999 mem: location 3103 is 0
9999 mem: location 3104 is 0
9999 mem: location 3095 is 3060
9999 run: result 0 is [0, 102, 0, 0]
9999 run: result 1 is 3060
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 3067
9999 mem: storing 102 in location 3068
9999 mem: storing 0 in location 3069
9999 mem: storing 0 in location 3070
9999 mem: storing 3060 in location 3065
9999 mem: storing 1 in location 3071
9999 mem: storing 0 in location 3072
 101 run: loop-unless found?:boolean, 
9999 mem: location 3071 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?:boolean, 
9999 mem: location 3072 is 0
9999 run: jump-if fell through
 101 run: trace [app], [next-event]
   1 app: next-event
 101 run: curr:address:editor-data <- copy editor:address:editor-data
9999 mem: location 3066 is 1134
9999 mem: storing 1134 in location 3073
 101 run: break-unless curr:address:editor-data, 
9999 mem: location 3073 is 1134
9999 run: jump-unless fell through
 101 run: handle-event screen:address, console:address, curr:address:editor-data, e:event
9999 mem: location 3064 is 1031
9999 mem: location 3065 is 3060
9999 mem: location 3073 is 1134
9999 mem: location 3067 is 0
9999 mem: location 3068 is 102
9999 mem: location 3069 is 0
9999 mem: location 3070 is 0
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3124
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 3126
 102 run: console:address <- next-ingredient 
9999 mem: storing 3060 in location 3127
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1134 in location 3128
 102 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 3129
9999 mem: storing 102 in location 3130
9999 mem: storing 0 in location 3131
9999 mem: storing 0 in location 3132
 102 run: t:address:touch-event <- maybe-convert e:event, touch:variant
9999 mem: location 3129 is 0
9999 mem: location 3130 is 102
9999 mem: location 3131 is 0
9999 mem: location 3132 is 0
9999 mem: storing 0 in location 3133
 102 run: break-unless t:address:touch-event, 
9999 mem: location 3133 is 0
9999 run: jumping to instruction 10
 102 run: in-focus?:address:boolean <- get-address editor:address:editor-data/deref, in-focus?:offset
9999 mem: location 3128 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2232
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3128 is 1134
9999 run: address to copy is 1145
9999 mem: storing 1145 in location 3134
 102 run: jump-if in-focus?:address:boolean/deref, 1:offset
9999 mem: location 3134 is 1145
9999 mem: location 1145 is 1
9999 run: jumping to instruction 14
 102 run: c:address:character <- maybe-convert e:event, text:variant
9999 mem: location 3129 is 0
9999 mem: location 3130 is 102
9999 mem: location 3131 is 0
9999 mem: location 3132 is 0
9999 mem: storing 3130 in location 3135
 102 run: break-unless c:address:character, 
9999 mem: location 3135 is 3130
9999 run: jump-unless fell through
 102 run: backspace?:boolean <- equal c:address:character/deref, 8:literal/backspace
9999 mem: location 3135 is 3130
9999 mem: location 3130 is 102
9999 mem: storing 0 in location 3136
 102 run: break-unless backspace?:boolean, 
9999 mem: location 3136 is 0
9999 run: jumping to instruction 22
 102 run: insert-at-cursor editor:address:editor-data, c:address:character/deref
9999 mem: location 3128 is 1134
9999 mem: location 3135 is 3130
9999 mem: location 3130 is 102
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3155
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1134 in location 3157
 103 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 3158
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 3157 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2232
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3157 is 1134
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 3159
 103 run: d:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 3157 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2232
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3157 is 1134
9999 run: address to copy is 1134
9999 run: its type is address
9999 mem: location 1134 is 1177
9999 mem: storing 1177 in location 3160
 103 run: insert-duplex c:character, before-cursor:address:address:duplex-list/deref
9999 mem: location 3158 is 102
9999 mem: location 3159 is 1136
9999 mem: location 1136 is 2232
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3186
 104 run: x:location <- next-ingredient 
9999 mem: storing 102 in location 3188
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2232 in location 3189
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 3217
9999 mem: storing 3217 in location 3190
 104 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 3190 is 3217
9999 mem: location 3217 is 0
9999 mem: location 3218 is 0
9999 mem: location 3219 is 0
9999 mem: location 3190 is 3217
9999 run: address to copy is 3217
9999 mem: storing 3217 in location 3191
 104 run: val:address:location/deref <- copy x:location
9999 mem: location 3188 is 102
9999 mem: location 3191 is 3217
9999 mem: storing 102 in location 3217
 104 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3189 is 2232
9999 mem: location 2232 is 101
9999 mem: location 2233 is 1211
9999 mem: location 2234 is 1177
9999 mem: location 3189 is 2232
9999 run: address to copy is 2233
9999 run: its type is address
9999 mem: location 2233 is 1211
9999 mem: storing 1211 in location 3192
 104 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 3189 is 2232
9999 mem: location 2232 is 101
9999 mem: location 2233 is 1211
9999 mem: location 2234 is 1177
9999 mem: location 3189 is 2232
9999 run: address to copy is 2233
9999 mem: storing 2233 in location 3193
 104 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 3190 is 3217
9999 mem: location 3193 is 2233
9999 mem: storing 3217 in location 2233
 104 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 3190 is 3217
9999 mem: location 3217 is 102
9999 mem: location 3218 is 0
9999 mem: location 3219 is 0
9999 mem: location 3190 is 3217
9999 run: address to copy is 3219
9999 mem: storing 3219 in location 3193
 104 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 3189 is 2232
9999 mem: location 3193 is 3219
9999 mem: storing 2232 in location 3219
 104 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 3190 is 3217
9999 mem: location 3217 is 102
9999 mem: location 3218 is 0
9999 mem: location 3219 is 2232
9999 mem: location 3190 is 3217
9999 run: address to copy is 3218
9999 mem: storing 3218 in location 3193
 104 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 3192 is 1211
9999 mem: location 3193 is 3218
9999 mem: storing 1211 in location 3218
 104 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 3192 is 1211
9999 run: jumping to instruction 15
 104 run: y:address:address:duplex-list <- get-address next-node:address:duplex-list/deref, prev:offset
9999 mem: location 3192 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 2232
9999 mem: location 3192 is 1211
9999 run: address to copy is 1213
9999 mem: storing 1213 in location 3193
 104 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 3190 is 3217
9999 mem: location 3193 is 1213
9999 mem: storing 3217 in location 1213
 104 run: reply new-node:address:duplex-list
9999 mem: location 3190 is 3217
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3158 is 102
9999 mem: storing 0 in location 3161
 103 run: break-unless newline?:boolean, 
9999 mem: location 3161 is 0
9999 run: jumping to instruction 14
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 3157 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2232
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3157 is 1134
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 3163
 103 run: cursor-column:address:number/deref <- add cursor-column:address:number/deref, 1:literal
9999 mem: location 3163 is 1143
9999 mem: location 1143 is 1
9999 mem: location 3163 is 1143
9999 mem: storing 2 in location 1143
 102 run: reply 
 101 run: curr:address:editor-data <- get curr:address:editor-data/deref, next-editor:offset
9999 mem: location 3073 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2232
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3073 is 1134
9999 run: address to copy is 1144
9999 run: its type is address
9999 mem: location 1144 is 0
9999 mem: storing 0 in location 3073
 101 run: loop 
9999 run: jumping to instruction 11
 101 run: break-unless curr:address:editor-data, 
9999 mem: location 3073 is 0
9999 run: jumping to instruction 15
 101 run: curr:address:editor-data <- copy editor:address:editor-data
9999 mem: location 3066 is 1134
9999 mem: storing 1134 in location 3073
 101 run: break-unless curr:address:editor-data, 
9999 mem: location 3073 is 1134
9999 run: jump-unless fell through
 101 run: render curr:address:editor-data
9999 mem: location 3073 is 1134
 102 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 3220
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1134 in location 3222
 102 run: screen:address <- get editor:address:editor-data/deref, screen:offset
9999 mem: location 3222 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2232
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3222 is 1134
9999 run: address to copy is 1137
9999 run: its type is address
9999 mem: location 1137 is 1031
9999 mem: storing 1031 in location 3223
 102 run: top:number <- get editor:address:editor-data/deref, top:offset
9999 mem: location 3222 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2232
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3222 is 1134
9999 run: address to copy is 1138
9999 run: its type is number
9999 mem: location 1138 is 0
9999 mem: storing 0 in location 3224
 102 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 3222 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2232
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3222 is 1134
9999 run: address to copy is 1139
9999 run: its type is number
9999 mem: location 1139 is 0
9999 mem: storing 0 in location 3225
 102 run: screen-height:number <- screen-height screen:address
9999 mem: location 3223 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3261
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3263
 103 run: break-unless x:address:screen, 
9999 mem: location 3263 is 1031
9999 run: jump-unless fell through
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3263 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3263 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 3264
 103 run: reply height:number
9999 mem: location 3264 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 3226
 102 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 3222 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2232
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3222 is 1134
9999 run: address to copy is 1141
9999 run: its type is number
9999 mem: location 1141 is 4
9999 mem: storing 4 in location 3227
 102 run: hide-screen screen:address
9999 mem: location 3223 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3292
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3294
 103 run: break-unless x:address:screen, 
9999 mem: location 3294 is 1031
9999 run: jump-unless fell through
 103 run: reply x:address:screen
9999 mem: location 3294 is 1031
 102 run: curr:address:duplex-list <- get editor:address:editor-data/deref, top-of-screen:offset
9999 mem: location 3222 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2232
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3222 is 1134
9999 run: address to copy is 1135
9999 run: its type is address
9999 mem: location 1135 is 1177
9999 mem: storing 1177 in location 3228
 102 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 3228 is 1177
9999 mem: storing 1177 in location 3229
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3228 is 1177
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3323
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 3325
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3325 is 1177
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3325 is 1177
9999 mem: location 1177 is 167
9999 mem: location 1178 is 2232
9999 mem: location 1179 is 0
9999 mem: location 3325 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 2232
9999 mem: storing 2232 in location 3326
 103 run: reply result:address:duplex-list
9999 mem: location 3326 is 2232
9999 run: result 0 is 2232
9999 mem: storing 2232 in location 3228
 102 run: row:number <- copy top:number
9999 mem: location 3224 is 0
9999 mem: storing 0 in location 3230
 102 run: column:number <- copy left:number
9999 mem: location 3225 is 0
9999 mem: storing 0 in location 3231
 102 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 3222 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2232
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3222 is 1134
9999 run: address to copy is 1142
9999 mem: storing 1142 in location 3232
 102 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 3222 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2232
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3222 is 1134
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 3233
 102 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 3222 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2232
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3222 is 1134
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 3234
 102 run: move-cursor screen:address, row:number, column:number
9999 mem: location 3223 is 1031
9999 mem: location 3230 is 0
9999 mem: location 3231 is 0
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3354
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3356
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 3357
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 3358
 103 run: break-unless x:address:screen, 
9999 mem: location 3356 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3356 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3356 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3359
 103 run: row:address:number/deref <- copy new-row:number
9999 mem: location 3357 is 0
9999 mem: location 3359 is 1033
9999 mem: storing 0 in location 1033
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3356 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3356 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3360
 103 run: column:address:number/deref <- copy new-column:number
9999 mem: location 3358 is 0
9999 mem: location 3360 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3356 is 1031
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 3228 is 2232
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3230 is 0
9999 mem: location 3226 is 3
9999 mem: storing 0 in location 3235
 102 run: break-if off-screen?:boolean, 
9999 mem: location 3235 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3230 is 0
9999 mem: location 3232 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 3236
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3236 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 3231 is 0
9999 mem: location 3233 is 1143
9999 mem: location 1143 is 2
9999 mem: storing 0 in location 3237
 102 run: break-unless at-cursor?:boolean, 
9999 mem: location 3237 is 0
9999 run: jumping to instruction 28
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3228 is 2232
9999 mem: location 2232 is 101
9999 mem: location 2233 is 3217
9999 mem: location 2234 is 1177
9999 mem: location 3228 is 2232
9999 run: address to copy is 2232
9999 run: its type is number
9999 mem: location 2232 is 101
9999 mem: storing 101 in location 3238
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3238 is 101
9999 mem: storing 0 in location 3239
 102 run: break-unless newline?:boolean, 
9999 mem: location 3239 is 0
9999 run: jumping to instruction 54
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3231 is 0
9999 mem: location 3227 is 4
9999 mem: storing 0 in location 3242
 102 run: break-unless at-right?:boolean, 
9999 mem: location 3242 is 0
9999 run: jumping to instruction 68
 102 run: print-character screen:address, c:character
9999 mem: location 3223 is 1031
9999 mem: location 3238 is 101
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3385
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3387
 103 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 3388
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3389
9999 mem: storing 0 in location 3390
 103 run: break-if color-found?:boolean, 
9999 mem: location 3390 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3389
 103 run: break-unless x:address:screen, 
9999 mem: location 3387 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3387 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3387 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3391
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3387 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3387 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3392
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3387 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3387 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3393
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3387 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3387 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 3394
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3388 is 101
9999 mem: storing 0 in location 3395
 103 run: break-unless newline?:boolean, 
9999 mem: location 3395 is 0
9999 run: jumping to instruction 25
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3391 is 1033
9999 mem: location 1033 is 0
9999 mem: location 3393 is 5
9999 mem: storing 0 in location 3398
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3398 is 0
9999 mem: location 3392 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 0 in location 3398
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3387 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3387 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3399
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3388 is 101
9999 mem: storing 0 in location 3400
 103 run: break-unless backspace?:boolean, 
9999 mem: location 3400 is 0
9999 run: jumping to instruction 44
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3399 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 100
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 3398 is 0
9999 mem: location 3399 is 1036
9999 mem: location 3398 is 0
9999 mem: storing 1037 in location 3402
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3402 is 1037
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 3402 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 3403
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3402 is 1037
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 3402 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 3404
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3388 is 101
9999 mem: location 3403 is 1037
9999 mem: storing 101 in location 1037
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3389 is 7
9999 mem: location 3404 is 1038
9999 mem: storing 7 in location 1038
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3393 is 5
9999 mem: storing 4 in location 3405
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3392 is 1034
9999 mem: location 1034 is 0
9999 mem: location 3405 is 4
9999 mem: storing 0 in location 3406
 103 run: break-if at-right?:boolean, 
9999 mem: location 3406 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3392 is 1034
9999 mem: location 1034 is 0
9999 mem: location 3392 is 1034
9999 mem: storing 1 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3387 is 1031
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3228 is 2232
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3416
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2232 in location 3418
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3418 is 2232
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3418 is 2232
9999 mem: location 2232 is 101
9999 mem: location 2233 is 3217
9999 mem: location 2234 is 1177
9999 mem: location 3418 is 2232
9999 run: address to copy is 2233
9999 run: its type is address
9999 mem: location 2233 is 3217
9999 mem: storing 3217 in location 3419
 103 run: reply result:address:duplex-list
9999 mem: location 3419 is 3217
9999 run: result 0 is 3217
9999 mem: storing 3217 in location 3228
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3229 is 1177
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3447
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 3449
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3449 is 1177
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3449 is 1177
9999 mem: location 1177 is 167
9999 mem: location 1178 is 2232
9999 mem: location 1179 is 0
9999 mem: location 3449 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 2232
9999 mem: storing 2232 in location 3450
 103 run: reply result:address:duplex-list
9999 mem: location 3450 is 2232
9999 run: result 0 is 2232
9999 mem: storing 2232 in location 3229
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 3231 is 0
9999 mem: storing 1 in location 3231
 102 run: loop 
9999 run: jumping to instruction 18
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 3228 is 3217
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3230 is 0
9999 mem: location 3226 is 3
9999 mem: storing 0 in location 3235
 102 run: break-if off-screen?:boolean, 
9999 mem: location 3235 is 0
9999 run: jump-if fell through
schedule: render/event-loop/run1002/editor-wraps-line-on-insert
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3230 is 0
9999 mem: location 3232 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 3236
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3236 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 3231 is 1
9999 mem: location 3233 is 1143
9999 mem: location 1143 is 2
9999 mem: storing 0 in location 3237
 102 run: break-unless at-cursor?:boolean, 
9999 mem: location 3237 is 0
9999 run: jumping to instruction 28
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3228 is 3217
9999 mem: location 3217 is 102
9999 mem: location 3218 is 1211
9999 mem: location 3219 is 2232
9999 mem: location 3228 is 3217
9999 run: address to copy is 3217
9999 run: its type is number
9999 mem: location 3217 is 102
9999 mem: storing 102 in location 3238
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3238 is 102
9999 mem: storing 0 in location 3239
 102 run: break-unless newline?:boolean, 
9999 mem: location 3239 is 0
9999 run: jumping to instruction 54
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3231 is 1
9999 mem: location 3227 is 4
9999 mem: storing 0 in location 3242
 102 run: break-unless at-right?:boolean, 
9999 mem: location 3242 is 0
9999 run: jumping to instruction 68
 102 run: print-character screen:address, c:character
9999 mem: location 3223 is 1031
9999 mem: location 3238 is 102
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3478
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3480
 103 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 3481
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3482
9999 mem: storing 0 in location 3483
 103 run: break-if color-found?:boolean, 
9999 mem: location 3483 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3482
 103 run: break-unless x:address:screen, 
9999 mem: location 3480 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3480 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3480 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3484
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3480 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3480 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3485
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3480 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3480 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3486
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3480 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3480 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 3487
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3481 is 102
9999 mem: storing 0 in location 3488
 103 run: break-unless newline?:boolean, 
9999 mem: location 3488 is 0
9999 run: jumping to instruction 25
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3484 is 1033
9999 mem: location 1033 is 0
9999 mem: location 3486 is 5
9999 mem: storing 0 in location 3491
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3491 is 0
9999 mem: location 3485 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 1 in location 3491
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3480 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3480 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3492
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3481 is 102
9999 mem: storing 0 in location 3493
 103 run: break-unless backspace?:boolean, 
9999 mem: location 3493 is 0
9999 run: jumping to instruction 44
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3492 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 100
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 3491 is 1
9999 mem: location 3492 is 1036
9999 mem: location 3491 is 1
9999 mem: storing 1039 in location 3495
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3495 is 1039
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 3495 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 3496
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3495 is 1039
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 3495 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 3497
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3481 is 102
9999 mem: location 3496 is 1039
9999 mem: storing 102 in location 1039
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3482 is 7
9999 mem: location 3497 is 1040
9999 mem: storing 7 in location 1040
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3486 is 5
9999 mem: storing 4 in location 3498
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3485 is 1034
9999 mem: location 1034 is 1
9999 mem: location 3498 is 4
9999 mem: storing 0 in location 3499
 103 run: break-if at-right?:boolean, 
9999 mem: location 3499 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3485 is 1034
9999 mem: location 1034 is 1
9999 mem: location 3485 is 1034
9999 mem: storing 2 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3480 is 1031
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3228 is 3217
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3509
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 3217 in location 3511
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3511 is 3217
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3511 is 3217
9999 mem: location 3217 is 102
9999 mem: location 3218 is 1211
9999 mem: location 3219 is 2232
9999 mem: location 3511 is 3217
9999 run: address to copy is 3218
9999 run: its type is address
9999 mem: location 3218 is 1211
9999 mem: storing 1211 in location 3512
 103 run: reply result:address:duplex-list
9999 mem: location 3512 is 1211
9999 run: result 0 is 1211
9999 mem: storing 1211 in location 3228
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3229 is 2232
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3540
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2232 in location 3542
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3542 is 2232
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3542 is 2232
9999 mem: location 2232 is 101
9999 mem: location 2233 is 3217
9999 mem: location 2234 is 1177
9999 mem: location 3542 is 2232
9999 run: address to copy is 2233
9999 run: its type is address
9999 mem: location 2233 is 3217
9999 mem: storing 3217 in location 3543
 103 run: reply result:address:duplex-list
9999 mem: location 3543 is 3217
9999 run: result 0 is 3217
9999 mem: storing 3217 in location 3229
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 3231 is 1
9999 mem: storing 2 in location 3231
 102 run: loop 
9999 run: jumping to instruction 18
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 3228 is 1211
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3230 is 0
9999 mem: location 3226 is 3
9999 mem: storing 0 in location 3235
 102 run: break-if off-screen?:boolean, 
9999 mem: location 3235 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3230 is 0
9999 mem: location 3232 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 3236
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3236 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 3231 is 2
9999 mem: location 3233 is 1143
9999 mem: location 1143 is 2
9999 mem: storing 1 in location 3237
 102 run: break-unless at-cursor?:boolean, 
9999 mem: location 3237 is 1
9999 run: jump-unless fell through
 102 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 3228 is 1211
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3571
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1211 in location 3573
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3573 is 1211
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 3573 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 3217
9999 mem: location 3573 is 1211
9999 run: address to copy is 1213
9999 run: its type is address
9999 mem: location 1213 is 3217
9999 mem: storing 3217 in location 3574
 103 run: reply result:address:duplex-list
9999 mem: location 3574 is 3217
9999 run: result 0 is 3217
9999 mem: location 3234 is 1136
9999 mem: storing 3217 in location 1136
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3228 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 3217
9999 mem: location 3228 is 1211
9999 run: address to copy is 1211
9999 run: its type is number
9999 mem: location 1211 is 97
9999 mem: storing 97 in location 3238
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3238 is 97
9999 mem: storing 0 in location 3239
 102 run: break-unless newline?:boolean, 
9999 mem: location 3239 is 0
9999 run: jumping to instruction 54
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3231 is 2
9999 mem: location 3227 is 4
9999 mem: storing 0 in location 3242
 102 run: break-unless at-right?:boolean, 
9999 mem: location 3242 is 0
9999 run: jumping to instruction 68
 102 run: print-character screen:address, c:character
9999 mem: location 3223 is 1031
9999 mem: location 3238 is 97
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3602
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3604
 103 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 3605
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3606
9999 mem: storing 0 in location 3607
 103 run: break-if color-found?:boolean, 
9999 mem: location 3607 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3606
 103 run: break-unless x:address:screen, 
9999 mem: location 3604 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3604 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3604 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3608
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3604 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3604 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3609
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3604 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3604 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3610
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3604 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3604 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 3611
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3605 is 97
9999 mem: storing 0 in location 3612
 103 run: break-unless newline?:boolean, 
9999 mem: location 3612 is 0
9999 run: jumping to instruction 25
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3608 is 1033
9999 mem: location 1033 is 0
9999 mem: location 3610 is 5
9999 mem: storing 0 in location 3615
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3615 is 0
9999 mem: location 3609 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 2 in location 3615
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3604 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3604 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3616
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3605 is 97
9999 mem: storing 0 in location 3617
 103 run: break-unless backspace?:boolean, 
9999 mem: location 3617 is 0
9999 run: jumping to instruction 44
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3616 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 102
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 100
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 3615 is 2
9999 mem: location 3616 is 1036
9999 mem: location 3615 is 2
9999 mem: storing 1041 in location 3619
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3619 is 1041
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 3619 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 3620
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3619 is 1041
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 3619 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 3621
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3605 is 97
9999 mem: location 3620 is 1041
9999 mem: storing 97 in location 1041
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3606 is 7
9999 mem: location 3621 is 1042
9999 mem: storing 7 in location 1042
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3610 is 5
9999 mem: storing 4 in location 3622
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3609 is 1034
9999 mem: location 1034 is 2
9999 mem: location 3622 is 4
9999 mem: storing 0 in location 3623
 103 run: break-if at-right?:boolean, 
9999 mem: location 3623 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3609 is 1034
9999 mem: location 1034 is 2
9999 mem: location 3609 is 1034
9999 mem: storing 3 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3604 is 1031
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3228 is 1211
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3633
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1211 in location 3635
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3635 is 1211
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3635 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 3217
9999 mem: location 3635 is 1211
9999 run: address to copy is 1212
9999 run: its type is address
9999 mem: location 1212 is 1276
9999 mem: storing 1276 in location 3636
 103 run: reply result:address:duplex-list
9999 mem: location 3636 is 1276
9999 run: result 0 is 1276
9999 mem: storing 1276 in location 3228
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3229 is 3217
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3664
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 3217 in location 3666
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3666 is 3217
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3666 is 3217
9999 mem: location 3217 is 102
9999 mem: location 3218 is 1211
9999 mem: location 3219 is 2232
9999 mem: location 3666 is 3217
9999 run: address to copy is 3218
9999 run: its type is address
9999 mem: location 3218 is 1211
9999 mem: storing 1211 in location 3667
 103 run: reply result:address:duplex-list
9999 mem: location 3667 is 1211
9999 run: result 0 is 1211
9999 mem: storing 1211 in location 3229
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 3231 is 2
9999 mem: storing 3 in location 3231
 102 run: loop 
9999 run: jumping to instruction 18
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 3228 is 1276
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3230 is 0
9999 mem: location 3226 is 3
9999 mem: storing 0 in location 3235
 102 run: break-if off-screen?:boolean, 
9999 mem: location 3235 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3230 is 0
9999 mem: location 3232 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 3236
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3236 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 3231 is 3
9999 mem: location 3233 is 1143
9999 mem: location 1143 is 2
9999 mem: storing 0 in location 3237
 102 run: break-unless at-cursor?:boolean, 
9999 mem: location 3237 is 0
9999 run: jumping to instruction 28
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3228 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 1341
9999 mem: location 1278 is 1211
9999 mem: location 3228 is 1276
9999 run: address to copy is 1276
9999 run: its type is number
9999 mem: location 1276 is 98
9999 mem: storing 98 in location 3238
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3238 is 98
9999 mem: storing 0 in location 3239
 102 run: break-unless newline?:boolean, 
9999 mem: location 3239 is 0
9999 run: jumping to instruction 54
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3231 is 3
9999 mem: location 3227 is 4
9999 mem: storing 0 in location 3242
 102 run: break-unless at-right?:boolean, 
9999 mem: location 3242 is 0
9999 run: jumping to instruction 68
 102 run: print-character screen:address, c:character
9999 mem: location 3223 is 1031
9999 mem: location 3238 is 98
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3695
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3697
 103 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 3698
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3699
9999 mem: storing 0 in location 3700
 103 run: break-if color-found?:boolean, 
9999 mem: location 3700 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3699
 103 run: break-unless x:address:screen, 
9999 mem: location 3697 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3697 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3697 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3701
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3697 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3697 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3702
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3697 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3697 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3703
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3697 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3697 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 3704
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3698 is 98
9999 mem: storing 0 in location 3705
 103 run: break-unless newline?:boolean, 
9999 mem: location 3705 is 0
9999 run: jumping to instruction 25
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3701 is 1033
9999 mem: location 1033 is 0
9999 mem: location 3703 is 5
9999 mem: storing 0 in location 3708
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3708 is 0
9999 mem: location 3702 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 3 in location 3708
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3697 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3697 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3709
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3698 is 98
9999 mem: storing 0 in location 3710
 103 run: break-unless backspace?:boolean, 
9999 mem: location 3710 is 0
9999 run: jumping to instruction 44
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3709 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 102
9999 mem: location 1040 is 7
9999 mem: location 1041 is 97
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 100
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 3708 is 3
9999 mem: location 3709 is 1036
9999 mem: location 3708 is 3
9999 mem: storing 1043 in location 3712
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3712 is 1043
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 3712 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 3713
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3712 is 1043
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 3712 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 3714
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3698 is 98
9999 mem: location 3713 is 1043
9999 mem: storing 98 in location 1043
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3699 is 7
9999 mem: location 3714 is 1044
9999 mem: storing 7 in location 1044
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3703 is 5
9999 mem: storing 4 in location 3715
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3702 is 1034
9999 mem: location 1034 is 3
9999 mem: location 3715 is 4
9999 mem: storing 0 in location 3716
 103 run: break-if at-right?:boolean, 
9999 mem: location 3716 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3702 is 1034
9999 mem: location 1034 is 3
9999 mem: location 3702 is 1034
9999 mem: storing 4 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3697 is 1031
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3228 is 1276
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3726
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1276 in location 3728
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3728 is 1276
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3728 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 1341
9999 mem: location 1278 is 1211
9999 mem: location 3728 is 1276
9999 run: address to copy is 1277
9999 run: its type is address
9999 mem: location 1277 is 1341
9999 mem: storing 1341 in location 3729
 103 run: reply result:address:duplex-list
9999 mem: location 3729 is 1341
9999 run: result 0 is 1341
9999 mem: storing 1341 in location 3228
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3229 is 1211
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3757
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1211 in location 3759
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3759 is 1211
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3759 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 3217
9999 mem: location 3759 is 1211
9999 run: address to copy is 1212
9999 run: its type is address
9999 mem: location 1212 is 1276
9999 mem: storing 1276 in location 3760
 103 run: reply result:address:duplex-list
9999 mem: location 3760 is 1276
9999 run: result 0 is 1276
9999 mem: storing 1276 in location 3229
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 3231 is 3
9999 mem: storing 4 in location 3231
 102 run: loop 
9999 run: jumping to instruction 18
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 3228 is 1341
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3230 is 0
9999 mem: location 3226 is 3
9999 mem: storing 0 in location 3235
 102 run: break-if off-screen?:boolean, 
9999 mem: location 3235 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3230 is 0
9999 mem: location 3232 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 3236
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3236 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 3231 is 4
9999 mem: location 3233 is 1143
9999 mem: location 1143 is 2
9999 mem: storing 0 in location 3237
 102 run: break-unless at-cursor?:boolean, 
9999 mem: location 3237 is 0
9999 run: jumping to instruction 28
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3228 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 3228 is 1341
9999 run: address to copy is 1341
9999 run: its type is number
9999 mem: location 1341 is 99
9999 mem: storing 99 in location 3238
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3238 is 99
9999 mem: storing 0 in location 3239
 102 run: break-unless newline?:boolean, 
9999 mem: location 3239 is 0
9999 run: jumping to instruction 54
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3231 is 4
9999 mem: location 3227 is 4
9999 mem: storing 1 in location 3242
 102 run: break-unless at-right?:boolean, 
9999 mem: location 3242 is 1
9999 run: jump-unless fell through
 102 run: next-node:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3228 is 1341
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3788
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1341 in location 3790
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3790 is 1341
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3790 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 3790 is 1341
9999 run: address to copy is 1342
9999 run: its type is address
9999 mem: location 1342 is 1406
9999 mem: storing 1406 in location 3791
 103 run: reply result:address:duplex-list
9999 mem: location 3791 is 1406
9999 run: result 0 is 1406
9999 mem: storing 1406 in location 3243
 102 run: break-unless next-node:address:duplex-list, 
9999 mem: location 3243 is 1406
9999 run: jump-unless fell through
 102 run: next:character <- get next-node:address:duplex-list/deref, value:offset
9999 mem: location 3243 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 0
9999 mem: location 1408 is 1341
9999 mem: location 3243 is 1406
9999 run: address to copy is 1406
9999 run: its type is number
9999 mem: location 1406 is 100
9999 mem: storing 100 in location 3244
 102 run: next-character-is-newline?:boolean <- equal next:character, 10:literal/newline
9999 mem: location 3244 is 100
9999 mem: storing 0 in location 3245
 102 run: break-if next-character-is-newline?:boolean, 
9999 mem: location 3245 is 0
9999 run: jump-if fell through
 102 run: print-character screen:address, 8617:literal/loop-back-to-left, 245:literal/grey
9999 mem: location 3223 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3819
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3821
 103 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 3822
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 3823
9999 mem: storing 1 in location 3824
 103 run: break-if color-found?:boolean, 
9999 mem: location 3824 is 1
9999 run: jumping to instruction 7
 103 run: break-unless x:address:screen, 
9999 mem: location 3821 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3821 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3821 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3825
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3821 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3821 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3826
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3821 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3821 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3827
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3821 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3821 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 3828
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3822 is 8617
9999 mem: storing 0 in location 3829
 103 run: break-unless newline?:boolean, 
9999 mem: location 3829 is 0
9999 run: jumping to instruction 25
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3825 is 1033
9999 mem: location 1033 is 0
9999 mem: location 3827 is 5
9999 mem: storing 0 in location 3832
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3832 is 0
9999 mem: location 3826 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 4 in location 3832
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3821 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3821 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3833
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3822 is 8617
9999 mem: storing 0 in location 3834
 103 run: break-unless backspace?:boolean, 
9999 mem: location 3834 is 0
9999 run: jumping to instruction 44
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3833 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 102
9999 mem: location 1040 is 7
9999 mem: location 1041 is 97
9999 mem: location 1042 is 7
9999 mem: location 1043 is 98
9999 mem: location 1044 is 7
9999 mem: location 1045 is 100
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 3832 is 4
9999 mem: location 3833 is 1036
9999 mem: location 3832 is 4
9999 mem: storing 1045 in location 3836
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3836 is 1045
9999 mem: location 1045 is 100
9999 mem: location 1046 is 7
9999 mem: location 3836 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 3837
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3836 is 1045
9999 mem: location 1045 is 100
9999 mem: location 1046 is 7
9999 mem: location 3836 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 3838
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3822 is 8617
9999 mem: location 3837 is 1045
9999 mem: storing 8617 in location 1045
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3823 is 245
9999 mem: location 3838 is 1046
9999 mem: storing 245 in location 1046
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3827 is 5
9999 mem: storing 4 in location 3839
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3826 is 1034
9999 mem: location 1034 is 4
9999 mem: location 3839 is 4
9999 mem: storing 1 in location 3840
 103 run: break-if at-right?:boolean, 
9999 mem: location 3840 is 1
9999 run: jumping to instruction 55
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3821 is 1031
 102 run: column:number <- copy left:number
9999 mem: location 3225 is 0
9999 mem: storing 0 in location 3231
 102 run: row:number <- add row:number, 1:literal
9999 mem: location 3230 is 0
9999 mem: storing 1 in location 3230
 102 run: move-cursor screen:address, row:number, column:number
9999 mem: location 3223 is 1031
9999 mem: location 3230 is 1
9999 mem: location 3231 is 0
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3850
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3852
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 3853
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 3854
 103 run: break-unless x:address:screen, 
9999 mem: location 3852 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3852 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3852 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3855
 103 run: row:address:number/deref <- copy new-row:number
9999 mem: location 3853 is 1
9999 mem: location 3855 is 1033
9999 mem: storing 1 in location 1033
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3852 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3852 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3856
 103 run: column:address:number/deref <- copy new-column:number
9999 mem: location 3854 is 0
9999 mem: location 3856 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3852 is 1031
 102 run: loop +next-character:label
9999 run: jumping to instruction 19
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 3228 is 1341
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3230 is 1
9999 mem: location 3226 is 3
9999 mem: storing 0 in location 3235
 102 run: break-if off-screen?:boolean, 
9999 mem: location 3235 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3230 is 1
9999 mem: location 3232 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 0 in location 3236
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3236 is 0
9999 run: jumping to instruction 28
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3228 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 3228 is 1341
9999 run: address to copy is 1341
9999 run: its type is number
9999 mem: location 1341 is 99
9999 mem: storing 99 in location 3238
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3238 is 99
9999 mem: storing 0 in location 3239
 102 run: break-unless newline?:boolean, 
9999 mem: location 3239 is 0
9999 run: jumping to instruction 54
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3231 is 0
9999 mem: location 3227 is 4
9999 mem: storing 0 in location 3242
 102 run: break-unless at-right?:boolean, 
9999 mem: location 3242 is 0
9999 run: jumping to instruction 68
 102 run: print-character screen:address, c:character
9999 mem: location 3223 is 1031
9999 mem: location 3238 is 99
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3881
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3883
 103 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 3884
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3885
9999 mem: storing 0 in location 3886
 103 run: break-if color-found?:boolean, 
9999 mem: location 3886 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3885
 103 run: break-unless x:address:screen, 
9999 mem: location 3883 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3883 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3883 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3887
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3883 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3883 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3888
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3883 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3883 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3889
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3883 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3883 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 3890
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3884 is 99
9999 mem: storing 0 in location 3891
 103 run: break-unless newline?:boolean, 
9999 mem: location 3891 is 0
9999 run: jumping to instruction 25
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3887 is 1033
9999 mem: location 1033 is 1
9999 mem: location 3889 is 5
9999 mem: storing 5 in location 3894
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3894 is 5
9999 mem: location 3888 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 5 in location 3894
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3883 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3883 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3895
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3884 is 99
9999 mem: storing 0 in location 3896
 103 run: break-unless backspace?:boolean, 
9999 mem: location 3896 is 0
9999 run: jumping to instruction 44
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3895 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 102
9999 mem: location 1040 is 7
9999 mem: location 1041 is 97
9999 mem: location 1042 is 7
9999 mem: location 1043 is 98
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 3894 is 5
9999 mem: location 3895 is 1036
9999 mem: location 3894 is 5
9999 mem: storing 1047 in location 3898
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3898 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 3898 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 3899
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3898 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 3898 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 3900
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3884 is 99
9999 mem: location 3899 is 1047
9999 mem: storing 99 in location 1047
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3885 is 7
9999 mem: location 3900 is 1048
9999 mem: storing 7 in location 1048
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3889 is 5
9999 mem: storing 4 in location 3901
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3888 is 1034
9999 mem: location 1034 is 0
9999 mem: location 3901 is 4
9999 mem: storing 0 in location 3902
 103 run: break-if at-right?:boolean, 
9999 mem: location 3902 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3888 is 1034
9999 mem: location 1034 is 0
9999 mem: location 3888 is 1034
9999 mem: storing 1 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3883 is 1031
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3228 is 1341
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3912
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1341 in location 3914
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3914 is 1341
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3914 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 3914 is 1341
9999 run: address to copy is 1342
9999 run: its type is address
9999 mem: location 1342 is 1406
9999 mem: storing 1406 in location 3915
 103 run: reply result:address:duplex-list
9999 mem: location 3915 is 1406
9999 run: result 0 is 1406
9999 mem: storing 1406 in location 3228
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3229 is 1276
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3943
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1276 in location 3945
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3945 is 1276
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3945 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 1341
9999 mem: location 1278 is 1211
9999 mem: location 3945 is 1276
9999 run: address to copy is 1277
9999 run: its type is address
9999 mem: location 1277 is 1341
9999 mem: storing 1341 in location 3946
 103 run: reply result:address:duplex-list
9999 mem: location 3946 is 1341
9999 run: result 0 is 1341
9999 mem: storing 1341 in location 3229
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 3231 is 0
9999 mem: storing 1 in location 3231
 102 run: loop 
9999 run: jumping to instruction 18
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 3228 is 1406
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3230 is 1
9999 mem: location 3226 is 3
9999 mem: storing 0 in location 3235
 102 run: break-if off-screen?:boolean, 
9999 mem: location 3235 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3230 is 1
9999 mem: location 3232 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 0 in location 3236
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3236 is 0
9999 run: jumping to instruction 28
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3228 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 0
9999 mem: location 1408 is 1341
9999 mem: location 3228 is 1406
9999 run: address to copy is 1406
9999 run: its type is number
9999 mem: location 1406 is 100
9999 mem: storing 100 in location 3238
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3238 is 100
9999 mem: storing 0 in location 3239
 102 run: break-unless newline?:boolean, 
9999 mem: location 3239 is 0
9999 run: jumping to instruction 54
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3231 is 1
9999 mem: location 3227 is 4
9999 mem: storing 0 in location 3242
 102 run: break-unless at-right?:boolean, 
9999 mem: location 3242 is 0
9999 run: jumping to instruction 68
 102 run: print-character screen:address, c:character
9999 mem: location 3223 is 1031
9999 mem: location 3238 is 100
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3974
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3976
 103 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 3977
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3978
9999 mem: storing 0 in location 3979
 103 run: break-if color-found?:boolean, 
9999 mem: location 3979 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3978
 103 run: break-unless x:address:screen, 
9999 mem: location 3976 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3976 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3976 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3980
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3976 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3976 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3981
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3976 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3976 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3982
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3976 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3976 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 3983
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3977 is 100
9999 mem: storing 0 in location 3984
 103 run: break-unless newline?:boolean, 
9999 mem: location 3984 is 0
9999 run: jumping to instruction 25
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3980 is 1033
9999 mem: location 1033 is 1
9999 mem: location 3982 is 5
9999 mem: storing 5 in location 3987
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3987 is 5
9999 mem: location 3981 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 6 in location 3987
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3976 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3976 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3988
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3977 is 100
9999 mem: storing 0 in location 3989
 103 run: break-unless backspace?:boolean, 
9999 mem: location 3989 is 0
9999 run: jumping to instruction 44
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3988 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 102
9999 mem: location 1040 is 7
9999 mem: location 1041 is 97
9999 mem: location 1042 is 7
9999 mem: location 1043 is 98
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 99
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 3987 is 6
9999 mem: location 3988 is 1036
9999 mem: location 3987 is 6
9999 mem: storing 1049 in location 3991
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3991 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 3991 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 3992
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3991 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 3991 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 3993
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3977 is 100
9999 mem: location 3992 is 1049
9999 mem: storing 100 in location 1049
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3978 is 7
9999 mem: location 3993 is 1050
9999 mem: storing 7 in location 1050
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3982 is 5
9999 mem: storing 4 in location 3994
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3981 is 1034
9999 mem: location 1034 is 1
9999 mem: location 3994 is 4
9999 mem: storing 0 in location 3995
 103 run: break-if at-right?:boolean, 
9999 mem: location 3995 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3981 is 1034
9999 mem: location 1034 is 1
9999 mem: location 3981 is 1034
9999 mem: storing 2 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3976 is 1031
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3228 is 1406
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4005
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1406 in location 4007
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 4007 is 1406
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 4007 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 0
9999 mem: location 1408 is 1341
9999 mem: location 4007 is 1406
9999 run: address to copy is 1407
9999 run: its type is address
9999 mem: location 1407 is 0
9999 mem: storing 0 in location 4008
 103 run: reply result:address:duplex-list
9999 mem: location 4008 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 3228
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3229 is 1341
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4036
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1341 in location 4038
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 4038 is 1341
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 4038 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 4038 is 1341
9999 run: address to copy is 1342
9999 run: its type is address
9999 mem: location 1342 is 1406
9999 mem: storing 1406 in location 4039
 103 run: reply result:address:duplex-list
9999 mem: location 4039 is 1406
9999 run: result 0 is 1406
9999 mem: storing 1406 in location 3229
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 3231 is 1
9999 mem: storing 2 in location 3231
 102 run: loop 
9999 run: jumping to instruction 18
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 3228 is 0
9999 run: jumping to instruction 74
 102 run: bottom:address:number <- get-address editor:address:editor-data/deref, bottom:offset
9999 mem: location 3222 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 3217
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3222 is 1134
9999 run: address to copy is 1140
9999 mem: storing 1140 in location 3246
 102 run: bottom:address:number/deref <- copy row:number
9999 mem: location 3230 is 1
9999 mem: location 3246 is 1140
9999 mem: storing 1 in location 1140
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3230 is 1
9999 mem: location 3232 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 0 in location 3236
 102 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 3231 is 2
9999 mem: location 3233 is 1143
9999 mem: location 1143 is 2
9999 mem: storing 1 in location 3247
 102 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 3236 is 0
9999 mem: location 3247 is 1
9999 mem: storing 0 in location 3248
 102 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 3230 is 1
9999 mem: location 3232 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 0 in location 3249
 102 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 3248 is 0
9999 mem: location 3249 is 0
9999 mem: storing 0 in location 3250
 102 run: break-unless before-cursor?:boolean, 
9999 mem: location 3250 is 0
9999 run: jumping to instruction 87
 102 run: done?:boolean <- greater-or-equal column:number, right:number
9999 mem: location 3231 is 2
9999 mem: location 3227 is 4
9999 mem: storing 0 in location 3241
 102 run: break-if done?:boolean, 
9999 mem: location 3241 is 0
9999 run: jump-if fell through
 102 run: print-character screen:address, 32:literal/space
9999 mem: location 3223 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4067
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4069
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 4070
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 4071
9999 mem: storing 0 in location 4072
 103 run: break-if color-found?:boolean, 
9999 mem: location 4072 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 4071
 103 run: break-unless x:address:screen, 
9999 mem: location 4069 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 4069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4069 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 4073
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 4069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4069 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 4074
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 4069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4069 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 4075
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 4069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4069 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 4076
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 4070 is 32
9999 mem: storing 0 in location 4077
 103 run: break-unless newline?:boolean, 
9999 mem: location 4077 is 0
9999 run: jumping to instruction 25
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 4073 is 1033
9999 mem: location 1033 is 1
9999 mem: location 4075 is 5
9999 mem: storing 5 in location 4080
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 4080 is 5
9999 mem: location 4074 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 7 in location 4080
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 4069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4069 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 4081
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 4070 is 32
9999 mem: storing 0 in location 4082
 103 run: break-unless backspace?:boolean, 
9999 mem: location 4082 is 0
9999 run: jumping to instruction 44
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 4081 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 102
9999 mem: location 1040 is 7
9999 mem: location 1041 is 97
9999 mem: location 1042 is 7
9999 mem: location 1043 is 98
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 99
9999 mem: location 1048 is 7
9999 mem: location 1049 is 100
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 4080 is 7
9999 mem: location 4081 is 1036
9999 mem: location 4080 is 7
9999 mem: storing 1051 in location 4084
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 4084 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 4084 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 4085
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 4084 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 4084 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 4086
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 4070 is 32
9999 mem: location 4085 is 1051
9999 mem: storing 32 in location 1051
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 4071 is 7
9999 mem: location 4086 is 1052
9999 mem: storing 7 in location 1052
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 4075 is 5
9999 mem: storing 4 in location 4087
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 4074 is 1034
9999 mem: location 1034 is 2
9999 mem: location 4087 is 4
9999 mem: storing 0 in location 4088
 103 run: break-if at-right?:boolean, 
9999 mem: location 4088 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 4074 is 1034
9999 mem: location 1034 is 2
9999 mem: location 4074 is 1034
9999 mem: storing 3 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 4069 is 1031
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 3231 is 2
9999 mem: storing 3 in location 3231
 102 run: loop 
9999 run: jumping to instruction 89
 102 run: done?:boolean <- greater-or-equal column:number, right:number
9999 mem: location 3231 is 3
9999 mem: location 3227 is 4
9999 mem: storing 0 in location 3241
 102 run: break-if done?:boolean, 
9999 mem: location 3241 is 0
9999 run: jump-if fell through
 102 run: print-character screen:address, 32:literal/space
9999 mem: location 3223 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4098
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4100
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 4101
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 4102
9999 mem: storing 0 in location 4103
 103 run: break-if color-found?:boolean, 
9999 mem: location 4103 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 4102
 103 run: break-unless x:address:screen, 
9999 mem: location 4100 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 4100 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 4100 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 4104
schedule: print-character/render/event-loop/run1002/editor-wraps-line-on-insert
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 4100 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 4100 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 4105
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 4100 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 4100 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 4106
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 4100 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 4100 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 4107
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 4101 is 32
9999 mem: storing 0 in location 4108
 103 run: break-unless newline?:boolean, 
9999 mem: location 4108 is 0
9999 run: jumping to instruction 25
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 4104 is 1033
9999 mem: location 1033 is 1
9999 mem: location 4106 is 5
9999 mem: storing 5 in location 4111
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 4111 is 5
9999 mem: location 4105 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 8 in location 4111
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 4100 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 4100 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 4112
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 4101 is 32
9999 mem: storing 0 in location 4113
 103 run: break-unless backspace?:boolean, 
9999 mem: location 4113 is 0
9999 run: jumping to instruction 44
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 4112 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 102
9999 mem: location 1040 is 7
9999 mem: location 1041 is 97
9999 mem: location 1042 is 7
9999 mem: location 1043 is 98
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 99
9999 mem: location 1048 is 7
9999 mem: location 1049 is 100
9999 mem: location 1050 is 7
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 4111 is 8
9999 mem: location 4112 is 1036
9999 mem: location 4111 is 8
9999 mem: storing 1053 in location 4115
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 4115 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 4115 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 4116
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 4115 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 4115 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 4117
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 4101 is 32
9999 mem: location 4116 is 1053
9999 mem: storing 32 in location 1053
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 4102 is 7
9999 mem: location 4117 is 1054
9999 mem: storing 7 in location 1054
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 4106 is 5
9999 mem: storing 4 in location 4118
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 4105 is 1034
9999 mem: location 1034 is 3
9999 mem: location 4118 is 4
9999 mem: storing 0 in location 4119
 103 run: break-if at-right?:boolean, 
9999 mem: location 4119 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 4105 is 1034
9999 mem: location 1034 is 3
9999 mem: location 4105 is 1034
9999 mem: storing 4 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 4100 is 1031
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 3231 is 3
9999 mem: storing 4 in location 3231
 102 run: loop 
9999 run: jumping to instruction 89
 102 run: done?:boolean <- greater-or-equal column:number, right:number
9999 mem: location 3231 is 4
9999 mem: location 3227 is 4
9999 mem: storing 1 in location 3241
 102 run: break-if done?:boolean, 
9999 mem: location 3241 is 1
9999 run: jumping to instruction 94
 102 run: in-focus?:boolean <- get editor:address:editor-data/deref, in-focus?:offset
9999 mem: location 3222 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 3217
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3222 is 1134
9999 run: address to copy is 1145
9999 run: its type is boolean
9999 mem: location 1145 is 1
9999 mem: storing 1 in location 3251
 102 run: break-unless in-focus?:boolean, 
9999 mem: location 3251 is 1
9999 run: jump-unless fell through
 102 run: move-cursor screen:address, cursor-row:address:number/deref, cursor-column:address:number/deref
9999 mem: location 3223 is 1031
9999 mem: location 3232 is 1142
9999 mem: location 1142 is 0
9999 mem: location 3233 is 1143
9999 mem: location 1143 is 2
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4129
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4131
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 4132
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 2 in location 4133
 103 run: break-unless x:address:screen, 
9999 mem: location 4131 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 4131 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 4131 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 4134
 103 run: row:address:number/deref <- copy new-row:number
9999 mem: location 4132 is 0
9999 mem: location 4134 is 1033
9999 mem: storing 0 in location 1033
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 4131 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 4131 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 4135
 103 run: column:address:number/deref <- copy new-column:number
9999 mem: location 4133 is 2
9999 mem: location 4135 is 1034
9999 mem: storing 2 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 4131 is 1031
 102 run: show-screen screen:address
9999 mem: location 3223 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4160
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4162
 103 run: break-unless x:address:screen, 
9999 mem: location 4162 is 1031
9999 run: jump-unless fell through
 103 run: reply x:address:screen
9999 mem: location 4162 is 1031
 102 run: reply editor:address:editor-data/same-as-ingredient:0
9999 mem: location 3222 is 1134
 101 run: curr:address:editor-data <- get curr:address:editor-data/deref, next-editor:offset
9999 mem: location 3073 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 3217
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3073 is 1134
9999 run: address to copy is 1144
9999 run: its type is address
9999 mem: location 1144 is 0
9999 mem: storing 0 in location 3073
 101 run: loop 
9999 run: jumping to instruction 18
 101 run: break-unless curr:address:editor-data, 
9999 mem: location 3073 is 0
9999 run: jumping to instruction 22
 101 run: curr:address:editor-data <- copy editor:address:editor-data
9999 mem: location 3066 is 1134
9999 mem: storing 1134 in location 3073
 101 run: break-unless curr:address:editor-data, 
9999 mem: location 3073 is 1134
9999 run: jump-unless fell through
 101 run: in-focus?:boolean <- get curr:address:editor-data/deref, in-focus?:offset
9999 mem: location 3073 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 3217
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3073 is 1134
9999 run: address to copy is 1145
9999 run: its type is boolean
9999 mem: location 1145 is 1
9999 mem: storing 1 in location 3074
 101 run: break-unless in-focus?:boolean, 
9999 mem: location 3074 is 1
9999 run: jump-unless fell through
 101 run: cursor-row:number <- get curr:address:editor-data/deref, cursor-row:offset
9999 mem: location 3073 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 3217
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3073 is 1134
9999 run: address to copy is 1142
9999 run: its type is number
9999 mem: location 1142 is 0
9999 mem: storing 0 in location 3075
 101 run: cursor-column:number <- get curr:address:editor-data/deref, cursor-column:offset
9999 mem: location 3073 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 3217
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3073 is 1134
9999 run: address to copy is 1143
9999 run: its type is number
9999 mem: location 1143 is 2
9999 mem: storing 2 in location 3076
 101 run: move-cursor screen:address, cursor-row:number, cursor-column:number
9999 mem: location 3064 is 1031
9999 mem: location 3075 is 0
9999 mem: location 3076 is 2
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4191
 102 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4193
 102 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 4194
 102 run: new-column:number <- next-ingredient 
9999 mem: storing 2 in location 4195
 102 run: break-unless x:address:screen, 
9999 mem: location 4193 is 1031
9999 run: jump-unless fell through
 102 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 4193 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4193 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 4196
 102 run: row:address:number/deref <- copy new-row:number
9999 mem: location 4194 is 0
9999 mem: location 4196 is 1033
9999 mem: storing 0 in location 1033
 102 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 4193 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4193 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 4197
 102 run: column:address:number/deref <- copy new-column:number
9999 mem: location 4195 is 2
9999 mem: location 4197 is 1034
9999 mem: storing 2 in location 1034
 102 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 4193 is 1031
 101 run: curr:address:editor-data <- get curr:address:editor-data/deref, next-editor:offset
9999 mem: location 3073 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 3217
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3073 is 1134
9999 run: address to copy is 1144
9999 run: its type is address
9999 mem: location 1144 is 0
9999 mem: storing 0 in location 3073
 101 run: loop 
9999 run: jumping to instruction 25
 101 run: break-unless curr:address:editor-data, 
9999 mem: location 3073 is 0
9999 run: jumping to instruction 35
 101 run: loop 
9999 run: jumping to instruction 5
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 3065 is 3060
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4222
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 3060 in location 4224
 102 run: break-unless x:address:console, 
9999 mem: location 4224 is 3060
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 4224 is 3060
9999 mem: location 3060 is 1
9999 mem: location 3061 is 3055
9999 mem: location 4224 is 3060
9999 run: address to copy is 3060
9999 mem: storing 3060 in location 4225
 102 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 4224 is 3060
9999 mem: location 3060 is 1
9999 mem: location 3061 is 3055
9999 mem: location 4224 is 3060
9999 run: address to copy is 3061
9999 run: its type is address
9999 mem: location 3061 is 3055
9999 mem: storing 3055 in location 4226
 102 run: max:number <- length buf:address:array:event/deref
9999 mem: location 4226 is 3055
9999 mem: location 3055 is 1
9999 mem: location 3056 is 0
9999 mem: location 3057 is 102
9999 mem: location 3058 is 0
9999 mem: location 3059 is 0
9999 mem: location 4226 is 3055
9999 mem: storing 1 in location 4227
 102 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 4225 is 3060
9999 mem: location 3060 is 1
9999 mem: location 4227 is 1
9999 mem: storing 1 in location 4228
 102 run: break-unless done?:boolean, 
9999 mem: location 4228 is 1
9999 run: jump-unless fell through
 102 run: dummy:address:event <- new event:type
9999 mem: new alloc: 4253
9999 mem: storing 4253 in location 4229
 102 run: reply dummy:address:event/deref, x:address:console/same-as-ingredient:0, 1:literal/found, 1:literal/quit
9999 mem: location 4229 is 4253
9999 mem: location 4253 is 0
9999 mem: location 4254 is 0
9999 mem: location 4255 is 0
9999 mem: location 4256 is 0
9999 mem: location 4224 is 3060
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 3060
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 3067
9999 mem: storing 0 in location 3068
9999 mem: storing 0 in location 3069
9999 mem: storing 0 in location 3070
9999 mem: storing 3060 in location 3065
9999 mem: storing 1 in location 3071
9999 mem: storing 1 in location 3072
 101 run: loop-unless found?:boolean, 
9999 mem: location 3071 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?:boolean, 
9999 mem: location 3072 is 1
9999 run: jumping to instruction 37
  99 run: screen-should-contain [
    .efabâ†©.
    .cd   .
    .     .
  ]
