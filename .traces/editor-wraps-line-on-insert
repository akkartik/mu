parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "3", properties: ["3": "literal", "height": ]}
parse: instruction: new
parse:   ingredient: {name: "abcd", properties: [_: "literal-string"]}
parse:   product: {name: "1", properties: ["1": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "1", properties: ["1": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "top": ]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
parse:   product: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    type [e]\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    event-loop screen:address, console:address, 2:address:editor-data\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .eabcd.\n    .     .\n  ", properties: [_: "literal-string"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    type [f]\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    event-loop screen:address, console:address, 2:address:editor-data\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .efabâ†©.\n    .cd   .\n    .     .\n  ", properties: [_: "literal-string"]}
after-brace: recipe editor-wraps-line-on-insert
after-brace: new-fake-screen ...
after-brace: new ...
after-brace: new-editor ...
after-brace: assume-console ...
after-brace: run ...
after-brace: screen-should-contain ...
after-brace: assume-console ...
after-brace: run ...
after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: editor-wraps-line-on-insert
 101 run: screen:address <- new-fake-screen 5:literal/width, 3:literal/height
 102 run: default-space:address:array:location <- new location:type, 30:literal/capacity
9999 mem: array size is 30
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1031
9999 mem: storing 1031 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1032
9999 mem: storing 5 in location 1032
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1031
9999 mem: storing 3 in location 1031
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1033
9999 mem: storing 0 in location 1033
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1034
9999 mem: storing 0 in location 1034
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1032
9999 mem: location 1032 is 5
9999 mem: location 1004 is 1031
9999 mem: location 1031 is 3
9999 mem: storing 15 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 15
9999 mem: array size is 15
9999 mem: new alloc: 1036
9999 mem: location 1008 is 1035
9999 mem: storing 1036 in location 1035
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1067
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1069
 103 run: break-unless x:address:screen, 
9999 mem: location 1069 is 1031
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1070
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1070 is 1036
9999 mem: storing 15 in location 1071
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1072
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 0
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 0
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 0
9999 mem: storing 1037 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 0
9999 mem: storing 1 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 1
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 1
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 1
9999 mem: storing 1039 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 1
9999 mem: storing 2 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 2
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 2
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 2
9999 mem: storing 1041 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 2
9999 mem: storing 3 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 3
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 3
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 3
9999 mem: storing 1043 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 3
9999 mem: storing 4 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 4
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 4
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 4
9999 mem: storing 1045 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 4
9999 mem: storing 5 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 5
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 5
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 5
9999 mem: storing 1047 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 5
9999 mem: storing 6 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 6
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 6
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 6
9999 mem: storing 1049 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 6
9999 mem: storing 7 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 7
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 7
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 7
9999 mem: storing 1051 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 7
9999 mem: storing 8 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 8
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 8
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 8
9999 mem: storing 1053 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 8
9999 mem: storing 9 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 9
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 9
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 9
9999 mem: storing 1055 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 9
9999 mem: storing 10 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 10
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 10
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 10
9999 mem: storing 1057 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 10
9999 mem: storing 11 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 11
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 11
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 11
9999 mem: storing 1059 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 11
9999 mem: storing 12 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 12
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 12
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 12
9999 mem: storing 1061 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 12
9999 mem: storing 13 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 13
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 13
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 13
9999 mem: storing 1063 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 13
9999 mem: storing 14 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 14
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 14
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 14
9999 mem: storing 1065 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1066
9999 mem: storing 7 in location 1066
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 14
9999 mem: storing 15 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 15
9999 mem: location 1071 is 15
9999 mem: storing 1 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1033
9999 mem: storing 0 in location 1033
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1069 is 1031
 102 run: reply result:address:screen
9999 mem: location 1002 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 101 run: 1:address:array:character <- new [abcd]
9999 mem: storing 1098 in location 1
 101 run: 2:address:editor-data <- new-editor 1:address:array:character, screen:address, 0:literal/top, 0:literal/left, 5:literal/right
9999 mem: location 1 is 1098
9999 mem: location 900 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1103
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1098 in location 1105
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1106
 102 run: top:number <- next-ingredient 
9999 mem: storing 0 in location 1107
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1108
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1109
 102 run: right:number <- subtract right:number, 1:literal
9999 mem: location 1109 is 5
9999 mem: storing 4 in location 1109
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: new alloc: 1134
9999 mem: storing 1134 in location 1110
 102 run: sc:address:address:screen <- get-address result:address:editor-data/deref, screen:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1137
9999 mem: storing 1137 in location 1111
 102 run: sc:address:address:screen/deref <- copy screen:address
9999 mem: location 1106 is 1031
9999 mem: location 1111 is 1137
9999 mem: storing 1031 in location 1137
 102 run: x:address:number <- get-address result:address:editor-data/deref, top:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1138
9999 mem: storing 1138 in location 1112
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1107 is 0
9999 mem: location 1112 is 1138
9999 mem: storing 0 in location 1138
 102 run: x:address:number <- get-address result:address:editor-data/deref, left:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1139
9999 mem: storing 1139 in location 1112
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1108 is 0
9999 mem: location 1112 is 1139
9999 mem: storing 0 in location 1139
 102 run: x:address:number <- get-address result:address:editor-data/deref, right:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1141
9999 mem: storing 1141 in location 1112
 102 run: x:address:number/deref <- copy right:number
9999 mem: location 1109 is 4
9999 mem: location 1112 is 1141
9999 mem: storing 4 in location 1141
 102 run: x:address:number <- get-address result:address:editor-data/deref, bottom:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1140
9999 mem: storing 1140 in location 1112
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1107 is 0
9999 mem: location 1112 is 1140
9999 mem: storing 0 in location 1140
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-row:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1142
9999 mem: storing 1142 in location 1112
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1107 is 0
9999 mem: location 1112 is 1142
9999 mem: storing 0 in location 1142
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-column:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 1112
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1108 is 0
9999 mem: location 1112 is 1143
9999 mem: storing 0 in location 1143
 102 run: d:address:address:duplex-list <- get-address result:address:editor-data/deref, data:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1134
9999 mem: storing 1134 in location 1113
 102 run: d:address:address:duplex-list/deref <- push-duplex 167:literal/Â§, 0:literal/tail
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1146
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1148
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1149
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1177
9999 mem: storing 1177 in location 1150
 103 run: val:address:location <- get-address result:address:duplex-list/deref, value:offset
9999 mem: location 1150 is 1177
9999 mem: location 1177 is 0
9999 mem: location 1178 is 0
9999 mem: location 1179 is 0
9999 mem: location 1150 is 1177
9999 run: address to copy is 1177
9999 mem: storing 1177 in location 1151
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1148 is 167
9999 mem: location 1151 is 1177
9999 mem: storing 167 in location 1177
 103 run: next:address:address:duplex-list <- get-address result:address:duplex-list/deref, next:offset
9999 mem: location 1150 is 1177
9999 mem: location 1177 is 167
9999 mem: location 1178 is 0
9999 mem: location 1179 is 0
9999 mem: location 1150 is 1177
9999 run: address to copy is 1178
9999 mem: storing 1178 in location 1152
 103 run: next:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1149 is 0
9999 mem: location 1152 is 1178
9999 mem: storing 0 in location 1178
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1149 is 0
9999 run: jump-if fell through
 103 run: reply result:address:duplex-list
9999 mem: location 1150 is 1177
9999 run: result 0 is 1177
9999 mem: location 1113 is 1134
9999 mem: storing 1177 in location 1134
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 1114
 102 run: y:address:address:duplex-list/deref <- copy d:address:address:duplex-list/deref
9999 mem: location 1113 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1114 is 1136
9999 mem: storing 1177 in location 1136
 102 run: init:address:address:duplex-list <- get-address result:address:editor-data/deref, top-of-screen:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1135
9999 mem: storing 1135 in location 1115
 102 run: init:address:address:duplex-list/deref <- copy d:address:address:duplex-list/deref
9999 mem: location 1113 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1115 is 1135
9999 mem: storing 1177 in location 1135
 102 run: b:address:boolean <- get-address result:address:editor-data/deref, in-focus?:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1110 is 1134
9999 run: address to copy is 1145
9999 mem: storing 1145 in location 1116
 102 run: b:address:boolean/deref <- copy 1:literal/true
9999 mem: location 1116 is 1145
9999 mem: storing 1 in location 1145
 102 run: jump-if s:address:array:character, 1:offset
9999 mem: location 1105 is 1098
9999 run: jumping to instruction 32
 102 run: len:number <- length s:address:array:character/deref
9999 mem: location 1105 is 1098
9999 mem: location 1098 is 4
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 100
9999 mem: location 1105 is 1098
9999 mem: storing 4 in location 1117
 102 run: jump-if len:number, 1:offset
9999 mem: location 1117 is 4
9999 run: jumping to instruction 35
 102 run: idx:number <- copy 0:literal
9999 mem: storing 0 in location 1118
 102 run: curr:address:duplex-list <- copy init:address:address:duplex-list/deref
9999 mem: location 1115 is 1135
9999 mem: location 1135 is 1177
9999 mem: storing 1177 in location 1119
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1118 is 0
9999 mem: location 1117 is 4
9999 mem: storing 0 in location 1120
 102 run: break-if done?:boolean, 
9999 mem: location 1120 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1105 is 1098
9999 mem: location 1098 is 4
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 100
9999 mem: location 1118 is 0
9999 mem: location 1105 is 1098
9999 mem: location 1118 is 0
9999 run: address to copy is 1099
9999 run: its type is character
9999 mem: location 1099 is 97
9999 mem: storing 97 in location 1121
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1121 is 97
9999 mem: location 1119 is 1177
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1180
 103 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1182
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1183
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1211
9999 mem: storing 1211 in location 1184
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1184 is 1211
9999 mem: location 1211 is 0
9999 mem: location 1212 is 0
9999 mem: location 1213 is 0
9999 mem: location 1184 is 1211
9999 run: address to copy is 1211
9999 mem: storing 1211 in location 1185
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1182 is 97
9999 mem: location 1185 is 1211
9999 mem: storing 97 in location 1211
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1183 is 1177
9999 mem: location 1177 is 167
9999 mem: location 1178 is 0
9999 mem: location 1179 is 0
9999 mem: location 1183 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1186
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1183 is 1177
9999 mem: location 1177 is 167
9999 mem: location 1178 is 0
9999 mem: location 1179 is 0
9999 mem: location 1183 is 1177
9999 run: address to copy is 1178
9999 mem: storing 1178 in location 1187
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1184 is 1211
9999 mem: location 1187 is 1178
9999 mem: storing 1211 in location 1178
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1184 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 0
9999 mem: location 1213 is 0
9999 mem: location 1184 is 1211
9999 run: address to copy is 1213
9999 mem: storing 1213 in location 1187
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1183 is 1177
9999 mem: location 1187 is 1213
9999 mem: storing 1177 in location 1213
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1184 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 0
9999 mem: location 1213 is 1177
9999 mem: location 1184 is 1211
9999 run: address to copy is 1212
9999 mem: storing 1212 in location 1187
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1186 is 0
9999 mem: location 1187 is 1212
9999 mem: storing 0 in location 1212
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1186 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1184 is 1211
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1119 is 1177
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1214
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1216
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1216 is 1177
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1216 is 1177
9999 mem: location 1177 is 167
9999 mem: location 1178 is 1211
9999 mem: location 1179 is 0
9999 mem: location 1216 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1211
9999 mem: storing 1211 in location 1217
 103 run: reply result:address:duplex-list
9999 mem: location 1217 is 1211
9999 run: result 0 is 1211
9999 mem: storing 1211 in location 1119
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1118 is 0
9999 mem: storing 1 in location 1118
 102 run: loop 
9999 run: jumping to instruction 38
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1118 is 1
9999 mem: location 1117 is 4
9999 mem: storing 0 in location 1120
 102 run: break-if done?:boolean, 
9999 mem: location 1120 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1105 is 1098
9999 mem: location 1098 is 4
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 100
9999 mem: location 1118 is 1
9999 mem: location 1105 is 1098
9999 mem: location 1118 is 1
9999 run: address to copy is 1100
9999 run: its type is character
9999 mem: location 1100 is 98
9999 mem: storing 98 in location 1121
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1121 is 98
9999 mem: location 1119 is 1211
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1245
 103 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1247
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1211 in location 1248
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1276
9999 mem: storing 1276 in location 1249
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1249 is 1276
9999 mem: location 1276 is 0
9999 mem: location 1277 is 0
9999 mem: location 1278 is 0
9999 mem: location 1249 is 1276
9999 run: address to copy is 1276
9999 mem: storing 1276 in location 1250
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1247 is 98
9999 mem: location 1250 is 1276
9999 mem: storing 98 in location 1276
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1248 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 0
9999 mem: location 1213 is 1177
9999 mem: location 1248 is 1211
9999 run: address to copy is 1212
9999 run: its type is address
9999 mem: location 1212 is 0
9999 mem: storing 0 in location 1251
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1248 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 0
9999 mem: location 1213 is 1177
9999 mem: location 1248 is 1211
9999 run: address to copy is 1212
9999 mem: storing 1212 in location 1252
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1249 is 1276
9999 mem: location 1252 is 1212
9999 mem: storing 1276 in location 1212
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1249 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 0
9999 mem: location 1278 is 0
9999 mem: location 1249 is 1276
9999 run: address to copy is 1278
9999 mem: storing 1278 in location 1252
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1248 is 1211
9999 mem: location 1252 is 1278
9999 mem: storing 1211 in location 1278
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1249 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 0
9999 mem: location 1278 is 1211
9999 mem: location 1249 is 1276
9999 run: address to copy is 1277
9999 mem: storing 1277 in location 1252
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1251 is 0
9999 mem: location 1252 is 1277
9999 mem: storing 0 in location 1277
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1251 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1249 is 1276
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1119 is 1211
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1279
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1211 in location 1281
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1281 is 1211
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1281 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 1177
9999 mem: location 1281 is 1211
9999 run: address to copy is 1212
9999 run: its type is address
9999 mem: location 1212 is 1276
9999 mem: storing 1276 in location 1282
 103 run: reply result:address:duplex-list
9999 mem: location 1282 is 1276
9999 run: result 0 is 1276
9999 mem: storing 1276 in location 1119
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1118 is 1
9999 mem: storing 2 in location 1118
 102 run: loop 
9999 run: jumping to instruction 38
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1118 is 2
9999 mem: location 1117 is 4
9999 mem: storing 0 in location 1120
 102 run: break-if done?:boolean, 
9999 mem: location 1120 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1105 is 1098
9999 mem: location 1098 is 4
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 100
9999 mem: location 1118 is 2
9999 mem: location 1105 is 1098
9999 mem: location 1118 is 2
9999 run: address to copy is 1101
9999 run: its type is character
9999 mem: location 1101 is 99
9999 mem: storing 99 in location 1121
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1121 is 99
9999 mem: location 1119 is 1276
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1310
 103 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1312
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1276 in location 1313
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1341
9999 mem: storing 1341 in location 1314
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1314 is 1341
9999 mem: location 1341 is 0
9999 mem: location 1342 is 0
9999 mem: location 1343 is 0
9999 mem: location 1314 is 1341
9999 run: address to copy is 1341
9999 mem: storing 1341 in location 1315
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1312 is 99
9999 mem: location 1315 is 1341
9999 mem: storing 99 in location 1341
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1313 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 0
9999 mem: location 1278 is 1211
9999 mem: location 1313 is 1276
9999 run: address to copy is 1277
9999 run: its type is address
9999 mem: location 1277 is 0
9999 mem: storing 0 in location 1316
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1313 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 0
9999 mem: location 1278 is 1211
9999 mem: location 1313 is 1276
9999 run: address to copy is 1277
9999 mem: storing 1277 in location 1317
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1314 is 1341
9999 mem: location 1317 is 1277
9999 mem: storing 1341 in location 1277
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1314 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 0
9999 mem: location 1343 is 0
9999 mem: location 1314 is 1341
9999 run: address to copy is 1343
9999 mem: storing 1343 in location 1317
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1313 is 1276
9999 mem: location 1317 is 1343
9999 mem: storing 1276 in location 1343
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1314 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 0
9999 mem: location 1343 is 1276
9999 mem: location 1314 is 1341
9999 run: address to copy is 1342
9999 mem: storing 1342 in location 1317
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1316 is 0
9999 mem: location 1317 is 1342
9999 mem: storing 0 in location 1342
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1316 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1314 is 1341
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1119 is 1276
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1344
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1276 in location 1346
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1346 is 1276
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1346 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 1341
9999 mem: location 1278 is 1211
9999 mem: location 1346 is 1276
9999 run: address to copy is 1277
9999 run: its type is address
9999 mem: location 1277 is 1341
9999 mem: storing 1341 in location 1347
 103 run: reply result:address:duplex-list
9999 mem: location 1347 is 1341
9999 run: result 0 is 1341
9999 mem: storing 1341 in location 1119
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1118 is 2
9999 mem: storing 3 in location 1118
 102 run: loop 
9999 run: jumping to instruction 38
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1118 is 3
9999 mem: location 1117 is 4
9999 mem: storing 0 in location 1120
 102 run: break-if done?:boolean, 
9999 mem: location 1120 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1105 is 1098
9999 mem: location 1098 is 4
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 100
9999 mem: location 1118 is 3
9999 mem: location 1105 is 1098
9999 mem: location 1118 is 3
9999 run: address to copy is 1102
9999 run: its type is character
9999 mem: location 1102 is 100
9999 mem: storing 100 in location 1121
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1121 is 100
9999 mem: location 1119 is 1341
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1375
 103 run: x:location <- next-ingredient 
9999 mem: storing 100 in location 1377
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1341 in location 1378
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1406
9999 mem: storing 1406 in location 1379
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1379 is 1406
9999 mem: location 1406 is 0
9999 mem: location 1407 is 0
9999 mem: location 1408 is 0
9999 mem: location 1379 is 1406
9999 run: address to copy is 1406
9999 mem: storing 1406 in location 1380
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1377 is 100
9999 mem: location 1380 is 1406
9999 mem: storing 100 in location 1406
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1378 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 0
9999 mem: location 1343 is 1276
9999 mem: location 1378 is 1341
9999 run: address to copy is 1342
9999 run: its type is address
9999 mem: location 1342 is 0
9999 mem: storing 0 in location 1381
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1378 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 0
9999 mem: location 1343 is 1276
9999 mem: location 1378 is 1341
9999 run: address to copy is 1342
9999 mem: storing 1342 in location 1382
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1379 is 1406
9999 mem: location 1382 is 1342
9999 mem: storing 1406 in location 1342
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1379 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 0
9999 mem: location 1408 is 0
9999 mem: location 1379 is 1406
9999 run: address to copy is 1408
9999 mem: storing 1408 in location 1382
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1378 is 1341
9999 mem: location 1382 is 1408
9999 mem: storing 1341 in location 1408
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1379 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 0
9999 mem: location 1408 is 1341
9999 mem: location 1379 is 1406
9999 run: address to copy is 1407
9999 mem: storing 1407 in location 1382
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1381 is 0
9999 mem: location 1382 is 1407
9999 mem: storing 0 in location 1407
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1381 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1379 is 1406
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1119 is 1341
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1409
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1341 in location 1411
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1411 is 1341
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1411 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 1411 is 1341
9999 run: address to copy is 1342
9999 run: its type is address
9999 mem: location 1342 is 1406
9999 mem: storing 1406 in location 1412
 103 run: reply result:address:duplex-list
9999 mem: location 1412 is 1406
9999 run: result 0 is 1406
9999 mem: storing 1406 in location 1119
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1118 is 3
9999 mem: storing 4 in location 1118
 102 run: loop 
9999 run: jumping to instruction 38
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1118 is 4
9999 mem: location 1117 is 4
9999 mem: storing 1 in location 1120
 102 run: break-if done?:boolean, 
9999 mem: location 1120 is 1
9999 run: jumping to instruction 45
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1110 is 1134
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 1114
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1115 is 1135
9999 mem: location 1135 is 1177
9999 mem: location 1114 is 1136
9999 mem: storing 1177 in location 1136
 102 run: bottom:address:number <- get-address result:address:editor-data/deref, bottom:offset
9999 mem: location 1110 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1110 is 1134
9999 run: address to copy is 1140
9999 mem: storing 1140 in location 1122
 102 run: result:address:editor-data <- render result:address:editor-data
9999 mem: location 1110 is 1134
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1440
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1134 in location 1442
 103 run: screen:address <- get editor:address:editor-data/deref, screen:offset
9999 mem: location 1442 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1442 is 1134
9999 run: address to copy is 1137
9999 run: its type is address
9999 mem: location 1137 is 1031
9999 mem: storing 1031 in location 1443
 103 run: top:number <- get editor:address:editor-data/deref, top:offset
9999 mem: location 1442 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1442 is 1134
9999 run: address to copy is 1138
9999 run: its type is number
9999 mem: location 1138 is 0
9999 mem: storing 0 in location 1444
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1442 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1442 is 1134
9999 run: address to copy is 1139
9999 run: its type is number
9999 mem: location 1139 is 0
9999 mem: storing 0 in location 1445
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1443 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1471
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1473
 104 run: break-unless x:address:screen, 
9999 mem: location 1473 is 1031
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1473 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1473 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1474
 104 run: reply height:number
9999 mem: location 1474 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1446
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1442 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1442 is 1134
9999 run: address to copy is 1141
9999 run: its type is number
9999 mem: location 1141 is 4
9999 mem: storing 4 in location 1447
 103 run: hide-screen screen:address
9999 mem: location 1443 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1502
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1504
 104 run: break-unless x:address:screen, 
9999 mem: location 1504 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 1504 is 1031
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, top-of-screen:offset
9999 mem: location 1442 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1442 is 1134
9999 run: address to copy is 1135
9999 run: its type is address
9999 mem: location 1135 is 1177
9999 mem: storing 1177 in location 1448
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1448 is 1177
9999 mem: storing 1177 in location 1449
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1448 is 1177
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1533
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1535
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1535 is 1177
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1535 is 1177
9999 mem: location 1177 is 167
9999 mem: location 1178 is 1211
9999 mem: location 1179 is 0
9999 mem: location 1535 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1211
9999 mem: storing 1211 in location 1536
 104 run: reply result:address:duplex-list
9999 mem: location 1536 is 1211
9999 run: result 0 is 1211
9999 mem: storing 1211 in location 1448
 103 run: row:number <- copy top:number
9999 mem: location 1444 is 0
9999 mem: storing 0 in location 1450
 103 run: column:number <- copy left:number
9999 mem: location 1445 is 0
9999 mem: storing 0 in location 1451
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1442 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1442 is 1134
9999 run: address to copy is 1142
9999 mem: storing 1142 in location 1452
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1442 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1442 is 1134
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 1453
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1442 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1442 is 1134
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 1454
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1443 is 1031
9999 mem: location 1450 is 0
9999 mem: location 1451 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1564
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1566
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 1567
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1568
 104 run: break-unless x:address:screen, 
9999 mem: location 1566 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1566 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1566 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1569
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1567 is 0
9999 mem: location 1569 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1566 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1566 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1570
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1568 is 0
9999 mem: location 1570 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1566 is 1031
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1448 is 1211
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1450 is 0
9999 mem: location 1446 is 3
9999 mem: storing 0 in location 1455
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1455 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1450 is 0
9999 mem: location 1452 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 1456
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1456 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1451 is 0
9999 mem: location 1453 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 1 in location 1457
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1457 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1448 is 1211
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1595
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1211 in location 1597
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1597 is 1211
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1597 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 1177
9999 mem: location 1597 is 1211
9999 run: address to copy is 1213
9999 run: its type is address
9999 mem: location 1213 is 1177
9999 mem: storing 1177 in location 1598
 104 run: reply result:address:duplex-list
9999 mem: location 1598 is 1177
9999 run: result 0 is 1177
9999 mem: location 1454 is 1136
9999 mem: storing 1177 in location 1136
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1448 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 1177
9999 mem: location 1448 is 1211
9999 run: address to copy is 1211
9999 run: its type is number
9999 mem: location 1211 is 97
9999 mem: storing 97 in location 1458
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1458 is 97
9999 mem: storing 0 in location 1459
 103 run: break-unless newline?:boolean, 
9999 mem: location 1459 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1451 is 0
9999 mem: location 1447 is 4
9999 mem: storing 0 in location 1462
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1462 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 1443 is 1031
9999 mem: location 1458 is 97
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1626
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1628
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1629
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1630
9999 mem: storing 0 in location 1631
 104 run: break-if color-found?:boolean, 
9999 mem: location 1631 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1630
 104 run: break-unless x:address:screen, 
9999 mem: location 1628 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1628 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1628 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1632
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1628 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1628 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1633
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1628 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1628 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1634
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1628 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1628 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1635
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1629 is 97
9999 mem: storing 0 in location 1636
 104 run: break-unless newline?:boolean, 
9999 mem: location 1636 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1632 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1634 is 5
9999 mem: storing 0 in location 1639
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1639 is 0
9999 mem: location 1633 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 0 in location 1639
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1628 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1628 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1640
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1629 is 97
9999 mem: storing 0 in location 1641
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1641 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1640 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1639 is 0
9999 mem: location 1640 is 1036
9999 mem: location 1639 is 0
9999 mem: storing 1037 in location 1643
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1643 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1643 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1644
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1643 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1643 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1645
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1629 is 97
9999 mem: location 1644 is 1037
9999 mem: storing 97 in location 1037
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1630 is 7
9999 mem: location 1645 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1634 is 5
9999 mem: storing 4 in location 1646
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1633 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1646 is 4
9999 mem: storing 0 in location 1647
 104 run: break-if at-right?:boolean, 
9999 mem: location 1647 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1633 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1633 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1628 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1448 is 1211
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1657
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1211 in location 1659
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1659 is 1211
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1659 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 1177
9999 mem: location 1659 is 1211
9999 run: address to copy is 1212
9999 run: its type is address
9999 mem: location 1212 is 1276
9999 mem: storing 1276 in location 1660
 104 run: reply result:address:duplex-list
9999 mem: location 1660 is 1276
9999 run: result 0 is 1276
9999 mem: storing 1276 in location 1448
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1449 is 1177
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1688
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1690
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1690 is 1177
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1690 is 1177
9999 mem: location 1177 is 167
9999 mem: location 1178 is 1211
9999 mem: location 1179 is 0
9999 mem: location 1690 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1211
9999 mem: storing 1211 in location 1691
 104 run: reply result:address:duplex-list
9999 mem: location 1691 is 1211
9999 run: result 0 is 1211
9999 mem: storing 1211 in location 1449
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1451 is 0
9999 mem: storing 1 in location 1451
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1448 is 1276
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1450 is 0
9999 mem: location 1446 is 3
9999 mem: storing 0 in location 1455
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1455 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1450 is 0
9999 mem: location 1452 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 1456
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1456 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1451 is 1
9999 mem: location 1453 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1457
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1457 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1448 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 1341
9999 mem: location 1278 is 1211
9999 mem: location 1448 is 1276
9999 run: address to copy is 1276
9999 run: its type is number
9999 mem: location 1276 is 98
9999 mem: storing 98 in location 1458
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1458 is 98
9999 mem: storing 0 in location 1459
 103 run: break-unless newline?:boolean, 
9999 mem: location 1459 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1451 is 1
9999 mem: location 1447 is 4
9999 mem: storing 0 in location 1462
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1462 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 1443 is 1031
9999 mem: location 1458 is 98
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1719
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1721
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1722
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1723
9999 mem: storing 0 in location 1724
 104 run: break-if color-found?:boolean, 
9999 mem: location 1724 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1723
 104 run: break-unless x:address:screen, 
9999 mem: location 1721 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1721 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1721 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1725
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1721 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1721 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1726
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1721 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1721 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1727
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1721 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1721 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1728
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1722 is 98
9999 mem: storing 0 in location 1729
 104 run: break-unless newline?:boolean, 
9999 mem: location 1729 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1725 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1727 is 5
9999 mem: storing 0 in location 1732
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1732 is 0
9999 mem: location 1726 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 1 in location 1732
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1721 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1721 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1733
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1722 is 98
9999 mem: storing 0 in location 1734
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1734 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1733 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1732 is 1
9999 mem: location 1733 is 1036
9999 mem: location 1732 is 1
9999 mem: storing 1039 in location 1736
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1736 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1736 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1737
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1736 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1736 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1738
schedule: print-character/render/new-editor/editor-wraps-line-on-insert
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1722 is 98
9999 mem: location 1737 is 1039
9999 mem: storing 98 in location 1039
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1723 is 7
9999 mem: location 1738 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1727 is 5
9999 mem: storing 4 in location 1739
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1726 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1739 is 4
9999 mem: storing 0 in location 1740
 104 run: break-if at-right?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1726 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1726 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1721 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1448 is 1276
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1750
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1276 in location 1752
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1752 is 1276
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1752 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 1341
9999 mem: location 1278 is 1211
9999 mem: location 1752 is 1276
9999 run: address to copy is 1277
9999 run: its type is address
9999 mem: location 1277 is 1341
9999 mem: storing 1341 in location 1753
 104 run: reply result:address:duplex-list
9999 mem: location 1753 is 1341
9999 run: result 0 is 1341
9999 mem: storing 1341 in location 1448
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1449 is 1211
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1781
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1211 in location 1783
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1783 is 1211
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1783 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 1177
9999 mem: location 1783 is 1211
9999 run: address to copy is 1212
9999 run: its type is address
9999 mem: location 1212 is 1276
9999 mem: storing 1276 in location 1784
 104 run: reply result:address:duplex-list
9999 mem: location 1784 is 1276
9999 run: result 0 is 1276
9999 mem: storing 1276 in location 1449
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1451 is 1
9999 mem: storing 2 in location 1451
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1448 is 1341
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1450 is 0
9999 mem: location 1446 is 3
9999 mem: storing 0 in location 1455
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1455 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1450 is 0
9999 mem: location 1452 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 1456
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1456 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1451 is 2
9999 mem: location 1453 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1457
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1457 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1448 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 1448 is 1341
9999 run: address to copy is 1341
9999 run: its type is number
9999 mem: location 1341 is 99
9999 mem: storing 99 in location 1458
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1458 is 99
9999 mem: storing 0 in location 1459
 103 run: break-unless newline?:boolean, 
9999 mem: location 1459 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1451 is 2
9999 mem: location 1447 is 4
9999 mem: storing 0 in location 1462
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1462 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 1443 is 1031
9999 mem: location 1458 is 99
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1812
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1814
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1815
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1816
9999 mem: storing 0 in location 1817
 104 run: break-if color-found?:boolean, 
9999 mem: location 1817 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1816
 104 run: break-unless x:address:screen, 
9999 mem: location 1814 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1814 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1814 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1818
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1814 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1814 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1819
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1814 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1814 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1820
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1814 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1814 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1821
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1815 is 99
9999 mem: storing 0 in location 1822
 104 run: break-unless newline?:boolean, 
9999 mem: location 1822 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1818 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1820 is 5
9999 mem: storing 0 in location 1825
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1825 is 0
9999 mem: location 1819 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 2 in location 1825
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1814 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1814 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1826
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1815 is 99
9999 mem: storing 0 in location 1827
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1827 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1826 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1825 is 2
9999 mem: location 1826 is 1036
9999 mem: location 1825 is 2
9999 mem: storing 1041 in location 1829
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1829 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1829 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1830
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1829 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1829 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1831
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1815 is 99
9999 mem: location 1830 is 1041
9999 mem: storing 99 in location 1041
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1816 is 7
9999 mem: location 1831 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1820 is 5
9999 mem: storing 4 in location 1832
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1819 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1832 is 4
9999 mem: storing 0 in location 1833
 104 run: break-if at-right?:boolean, 
9999 mem: location 1833 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1819 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1819 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1814 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1448 is 1341
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1843
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1341 in location 1845
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1845 is 1341
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1845 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 1845 is 1341
9999 run: address to copy is 1342
9999 run: its type is address
9999 mem: location 1342 is 1406
9999 mem: storing 1406 in location 1846
 104 run: reply result:address:duplex-list
9999 mem: location 1846 is 1406
9999 run: result 0 is 1406
9999 mem: storing 1406 in location 1448
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1449 is 1276
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1874
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1276 in location 1876
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1876 is 1276
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1876 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 1341
9999 mem: location 1278 is 1211
9999 mem: location 1876 is 1276
9999 run: address to copy is 1277
9999 run: its type is address
9999 mem: location 1277 is 1341
9999 mem: storing 1341 in location 1877
 104 run: reply result:address:duplex-list
9999 mem: location 1877 is 1341
9999 run: result 0 is 1341
9999 mem: storing 1341 in location 1449
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1451 is 2
9999 mem: storing 3 in location 1451
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1448 is 1406
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1450 is 0
9999 mem: location 1446 is 3
9999 mem: storing 0 in location 1455
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1455 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1450 is 0
9999 mem: location 1452 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 1456
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1456 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1451 is 3
9999 mem: location 1453 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1457
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1457 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1448 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 0
9999 mem: location 1408 is 1341
9999 mem: location 1448 is 1406
9999 run: address to copy is 1406
9999 run: its type is number
9999 mem: location 1406 is 100
9999 mem: storing 100 in location 1458
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1458 is 100
9999 mem: storing 0 in location 1459
 103 run: break-unless newline?:boolean, 
9999 mem: location 1459 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1451 is 3
9999 mem: location 1447 is 4
9999 mem: storing 0 in location 1462
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1462 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 1443 is 1031
9999 mem: location 1458 is 100
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1905
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1907
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1908
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1909
9999 mem: storing 0 in location 1910
 104 run: break-if color-found?:boolean, 
9999 mem: location 1910 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1909
 104 run: break-unless x:address:screen, 
9999 mem: location 1907 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1907 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1907 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1911
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1907 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1907 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1912
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1907 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1907 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1913
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1907 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1907 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1914
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1908 is 100
9999 mem: storing 0 in location 1915
 104 run: break-unless newline?:boolean, 
9999 mem: location 1915 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1911 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1913 is 5
9999 mem: storing 0 in location 1918
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1918 is 0
9999 mem: location 1912 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 3 in location 1918
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1907 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1907 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1919
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1908 is 100
9999 mem: storing 0 in location 1920
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1920 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1919 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1918 is 3
9999 mem: location 1919 is 1036
9999 mem: location 1918 is 3
9999 mem: storing 1043 in location 1922
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1922 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1922 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1923
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1922 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1922 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1924
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1908 is 100
9999 mem: location 1923 is 1043
9999 mem: storing 100 in location 1043
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1909 is 7
9999 mem: location 1924 is 1044
9999 mem: storing 7 in location 1044
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1913 is 5
9999 mem: storing 4 in location 1925
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1912 is 1034
9999 mem: location 1034 is 3
9999 mem: location 1925 is 4
9999 mem: storing 0 in location 1926
 104 run: break-if at-right?:boolean, 
9999 mem: location 1926 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1912 is 1034
9999 mem: location 1034 is 3
9999 mem: location 1912 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1907 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1448 is 1406
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1936
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1406 in location 1938
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1938 is 1406
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1938 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 0
9999 mem: location 1408 is 1341
9999 mem: location 1938 is 1406
9999 run: address to copy is 1407
9999 run: its type is address
9999 mem: location 1407 is 0
9999 mem: storing 0 in location 1939
 104 run: reply result:address:duplex-list
9999 mem: location 1939 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1448
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1449 is 1341
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1967
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1341 in location 1969
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1969 is 1341
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1969 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 1969 is 1341
9999 run: address to copy is 1342
9999 run: its type is address
9999 mem: location 1342 is 1406
9999 mem: storing 1406 in location 1970
 104 run: reply result:address:duplex-list
9999 mem: location 1970 is 1406
9999 run: result 0 is 1406
9999 mem: storing 1406 in location 1449
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1451 is 3
9999 mem: storing 4 in location 1451
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1448 is 0
9999 run: jumping to instruction 74
 103 run: bottom:address:number <- get-address editor:address:editor-data/deref, bottom:offset
9999 mem: location 1442 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1442 is 1134
9999 run: address to copy is 1140
9999 mem: storing 1140 in location 1466
 103 run: bottom:address:number/deref <- copy row:number
9999 mem: location 1450 is 0
9999 mem: location 1466 is 1140
9999 mem: storing 0 in location 1140
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1450 is 0
9999 mem: location 1452 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 1456
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1451 is 4
9999 mem: location 1453 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1467
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1456 is 1
9999 mem: location 1467 is 0
9999 mem: storing 0 in location 1468
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1450 is 0
9999 mem: location 1452 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 0 in location 1469
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1468 is 0
9999 mem: location 1469 is 0
9999 mem: storing 0 in location 1470
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 1470 is 0
9999 run: jumping to instruction 87
 103 run: done?:boolean <- greater-or-equal column:number, right:number
9999 mem: location 1451 is 4
9999 mem: location 1447 is 4
9999 mem: storing 1 in location 1461
 103 run: break-if done?:boolean, 
9999 mem: location 1461 is 1
9999 run: jumping to instruction 94
 103 run: move-cursor screen:address, cursor-row:address:number/deref, cursor-column:address:number/deref
9999 mem: location 1443 is 1031
9999 mem: location 1452 is 1142
9999 mem: location 1142 is 0
9999 mem: location 1453 is 1143
9999 mem: location 1143 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1998
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2000
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 2001
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2002
 104 run: break-unless x:address:screen, 
9999 mem: location 2000 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2000 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2000 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2003
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2001 is 0
9999 mem: location 2003 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2000 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2000 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2004
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2002 is 0
9999 mem: location 2004 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2000 is 1031
 103 run: show-screen screen:address
9999 mem: location 1443 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2029
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2031
 104 run: break-unless x:address:screen, 
9999 mem: location 2031 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 2031 is 1031
 103 run: reply editor:address:editor-data/same-as-ingredient:0
9999 mem: location 1442 is 1134
9999 run: result 0 is 1134
9999 mem: storing 1134 in location 1110
 102 run: reply result:address:editor-data
9999 mem: location 1110 is 1134
9999 run: result 0 is 1134
9999 mem: storing 1134 in location 2
 101 run: assume-console [
    type [e]
  ]
parse: instruction: type
parse:   ingredient: {name: "e", properties: [_: "literal-string"]}
 101 run: run [
    event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1001
after-brace: event-loop ...
 101 run: event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1031
9999 mem: location 901 is 2065
9999 mem: location 2 is 1134
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2067
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2069
 102 run: console:address <- next-ingredient 
9999 mem: storing 2065 in location 2070
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1134 in location 2071
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 2070 is 2065
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2098
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 2065 in location 2100
 103 run: break-unless x:address:console, 
9999 mem: location 2100 is 2065
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 2100 is 2065
9999 mem: location 2065 is 0
9999 mem: location 2066 is 2060
9999 mem: location 2100 is 2065
9999 run: address to copy is 2065
9999 mem: storing 2065 in location 2101
 103 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 2100 is 2065
9999 mem: location 2065 is 0
9999 mem: location 2066 is 2060
9999 mem: location 2100 is 2065
9999 run: address to copy is 2066
9999 run: its type is address
9999 mem: location 2066 is 2060
9999 mem: storing 2060 in location 2102
 103 run: max:number <- length buf:address:array:event/deref
9999 mem: location 2102 is 2060
9999 mem: location 2060 is 1
9999 mem: location 2061 is 0
9999 mem: location 2062 is 101
9999 mem: location 2063 is 0
9999 mem: location 2064 is 0
9999 mem: location 2102 is 2060
9999 mem: storing 1 in location 2103
 103 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 2101 is 2065
9999 mem: location 2065 is 0
9999 mem: location 2103 is 1
9999 mem: storing 0 in location 2104
 103 run: break-unless done?:boolean, 
9999 mem: location 2104 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index buf:address:array:event/deref, idx:address:number/deref
9999 mem: location 2102 is 2060
9999 mem: location 2060 is 1
9999 mem: location 2061 is 0
9999 mem: location 2062 is 101
9999 mem: location 2063 is 0
9999 mem: location 2064 is 0
9999 mem: location 2101 is 2065
9999 mem: location 2065 is 0
9999 mem: location 2102 is 2060
9999 mem: location 2101 is 2065
9999 mem: location 2065 is 0
9999 run: address to copy is 2061
9999 run: its type is event
9999 mem: location 2061 is 0
9999 mem: location 2062 is 101
9999 mem: location 2063 is 0
9999 mem: location 2064 is 0
9999 mem: storing 0 in location 2106
9999 mem: storing 101 in location 2107
9999 mem: storing 0 in location 2108
9999 mem: storing 0 in location 2109
 103 run: idx:address:number/deref <- add idx:address:number/deref, 1:literal
9999 mem: location 2101 is 2065
9999 mem: location 2065 is 0
9999 mem: location 2101 is 2065
9999 mem: storing 1 in location 2065
 103 run: reply result:event, x:address:console/same-as-ingredient:0, 1:literal/found, 0:literal/quit
9999 mem: location 2106 is 0
9999 mem: location 2107 is 101
9999 mem: location 2108 is 0
9999 mem: location 2109 is 0
9999 mem: location 2100 is 2065
9999 run: result 0 is [0, 101, 0, 0]
9999 run: result 1 is 2065
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 2072
9999 mem: storing 101 in location 2073
9999 mem: storing 0 in location 2074
9999 mem: storing 0 in location 2075
9999 mem: storing 2065 in location 2070
9999 mem: storing 1 in location 2076
9999 mem: storing 0 in location 2077
 102 run: loop-unless found?:boolean, 
9999 mem: location 2076 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?:boolean, 
9999 mem: location 2077 is 0
9999 run: jump-if fell through
 102 run: trace [app], [next-event]
   1 app: next-event
 102 run: curr:address:editor-data <- copy editor:address:editor-data
9999 mem: location 2071 is 1134
9999 mem: storing 1134 in location 2078
 102 run: break-unless curr:address:editor-data, 
9999 mem: location 2078 is 1134
9999 run: jump-unless fell through
 102 run: handle-event screen:address, console:address, curr:address:editor-data, e:event
9999 mem: location 2069 is 1031
9999 mem: location 2070 is 2065
9999 mem: location 2078 is 1134
9999 mem: location 2072 is 0
9999 mem: location 2073 is 101
9999 mem: location 2074 is 0
9999 mem: location 2075 is 0
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2129
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2131
 103 run: console:address <- next-ingredient 
9999 mem: storing 2065 in location 2132
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1134 in location 2133
 103 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 2134
9999 mem: storing 101 in location 2135
9999 mem: storing 0 in location 2136
9999 mem: storing 0 in location 2137
 103 run: t:address:touch-event <- maybe-convert e:event, touch:variant
9999 mem: location 2134 is 0
9999 mem: location 2135 is 101
9999 mem: location 2136 is 0
9999 mem: location 2137 is 0
9999 mem: storing 0 in location 2138
 103 run: break-unless t:address:touch-event, 
9999 mem: location 2138 is 0
9999 run: jumping to instruction 10
 103 run: in-focus?:address:boolean <- get-address editor:address:editor-data/deref, in-focus?:offset
9999 mem: location 2133 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2133 is 1134
9999 run: address to copy is 1145
9999 mem: storing 1145 in location 2139
 103 run: jump-if in-focus?:address:boolean/deref, 1:offset
9999 mem: location 2139 is 1145
9999 mem: location 1145 is 1
9999 run: jumping to instruction 14
 103 run: c:address:character <- maybe-convert e:event, text:variant
9999 mem: location 2134 is 0
9999 mem: location 2135 is 101
9999 mem: location 2136 is 0
9999 mem: location 2137 is 0
9999 mem: storing 2135 in location 2140
 103 run: break-unless c:address:character, 
9999 mem: location 2140 is 2135
9999 run: jump-unless fell through
 103 run: backspace?:boolean <- equal c:address:character/deref, 8:literal/backspace
9999 mem: location 2140 is 2135
9999 mem: location 2135 is 101
9999 mem: storing 0 in location 2141
 103 run: break-unless backspace?:boolean, 
9999 mem: location 2141 is 0
9999 run: jumping to instruction 22
 103 run: insert-at-cursor editor:address:editor-data, c:address:character/deref
9999 mem: location 2133 is 1134
9999 mem: location 2140 is 2135
9999 mem: location 2135 is 101
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2160
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1134 in location 2162
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 2163
 104 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 2162 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2162 is 1134
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 2164
 104 run: d:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 2162 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2162 is 1134
9999 run: address to copy is 1134
9999 run: its type is address
9999 mem: location 1134 is 1177
9999 mem: storing 1177 in location 2165
 104 run: insert-duplex c:character, before-cursor:address:address:duplex-list/deref
9999 mem: location 2163 is 101
9999 mem: location 2164 is 1136
9999 mem: location 1136 is 1177
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2191
 105 run: x:location <- next-ingredient 
9999 mem: storing 101 in location 2193
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 2194
 105 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 2222
9999 mem: storing 2222 in location 2195
 105 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 2195 is 2222
9999 mem: location 2222 is 0
9999 mem: location 2223 is 0
9999 mem: location 2224 is 0
9999 mem: location 2195 is 2222
9999 run: address to copy is 2222
9999 mem: storing 2222 in location 2196
 105 run: val:address:location/deref <- copy x:location
9999 mem: location 2193 is 101
9999 mem: location 2196 is 2222
9999 mem: storing 101 in location 2222
 105 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2194 is 1177
9999 mem: location 1177 is 167
9999 mem: location 1178 is 1211
9999 mem: location 1179 is 0
9999 mem: location 2194 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1211
9999 mem: storing 1211 in location 2197
 105 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 2194 is 1177
9999 mem: location 1177 is 167
9999 mem: location 1178 is 1211
9999 mem: location 1179 is 0
9999 mem: location 2194 is 1177
9999 run: address to copy is 1178
9999 mem: storing 1178 in location 2198
 105 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 2195 is 2222
9999 mem: location 2198 is 1178
9999 mem: storing 2222 in location 1178
 105 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 2195 is 2222
9999 mem: location 2222 is 101
9999 mem: location 2223 is 0
9999 mem: location 2224 is 0
9999 mem: location 2195 is 2222
9999 run: address to copy is 2224
9999 mem: storing 2224 in location 2198
 105 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 2194 is 1177
9999 mem: location 2198 is 2224
9999 mem: storing 1177 in location 2224
 105 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 2195 is 2222
9999 mem: location 2222 is 101
9999 mem: location 2223 is 0
9999 mem: location 2224 is 1177
9999 mem: location 2195 is 2222
9999 run: address to copy is 2223
9999 mem: storing 2223 in location 2198
 105 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 2197 is 1211
9999 mem: location 2198 is 2223
9999 mem: storing 1211 in location 2223
 105 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 2197 is 1211
9999 run: jumping to instruction 15
 105 run: y:address:address:duplex-list <- get-address next-node:address:duplex-list/deref, prev:offset
9999 mem: location 2197 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 1177
9999 mem: location 2197 is 1211
9999 run: address to copy is 1213
9999 mem: storing 1213 in location 2198
 105 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 2195 is 2222
9999 mem: location 2198 is 1213
9999 mem: storing 2222 in location 1213
 105 run: reply new-node:address:duplex-list
9999 mem: location 2195 is 2222
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2163 is 101
9999 mem: storing 0 in location 2166
 104 run: break-unless newline?:boolean, 
9999 mem: location 2166 is 0
9999 run: jumping to instruction 14
 104 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 2162 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2162 is 1134
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 2168
 104 run: cursor-column:address:number/deref <- add cursor-column:address:number/deref, 1:literal
9999 mem: location 2168 is 1143
9999 mem: location 1143 is 0
9999 mem: location 2168 is 1143
9999 mem: storing 1 in location 1143
 103 run: reply 
 102 run: curr:address:editor-data <- get curr:address:editor-data/deref, next-editor:offset
9999 mem: location 2078 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2078 is 1134
9999 run: address to copy is 1144
9999 run: its type is address
9999 mem: location 1144 is 0
9999 mem: storing 0 in location 2078
 102 run: loop 
9999 run: jumping to instruction 11
 102 run: break-unless curr:address:editor-data, 
9999 mem: location 2078 is 0
9999 run: jumping to instruction 15
 102 run: curr:address:editor-data <- copy editor:address:editor-data
9999 mem: location 2071 is 1134
9999 mem: storing 1134 in location 2078
 102 run: break-unless curr:address:editor-data, 
9999 mem: location 2078 is 1134
9999 run: jump-unless fell through
 102 run: render curr:address:editor-data
9999 mem: location 2078 is 1134
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2225
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1134 in location 2227
 103 run: screen:address <- get editor:address:editor-data/deref, screen:offset
9999 mem: location 2227 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2227 is 1134
9999 run: address to copy is 1137
9999 run: its type is address
9999 mem: location 1137 is 1031
9999 mem: storing 1031 in location 2228
 103 run: top:number <- get editor:address:editor-data/deref, top:offset
9999 mem: location 2227 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2227 is 1134
9999 run: address to copy is 1138
9999 run: its type is number
9999 mem: location 1138 is 0
9999 mem: storing 0 in location 2229
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 2227 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2227 is 1134
9999 run: address to copy is 1139
9999 run: its type is number
9999 mem: location 1139 is 0
9999 mem: storing 0 in location 2230
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 2228 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2256
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2258
 104 run: break-unless x:address:screen, 
9999 mem: location 2258 is 1031
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2258 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2258 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2259
 104 run: reply height:number
9999 mem: location 2259 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 2231
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 2227 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2227 is 1134
9999 run: address to copy is 1141
9999 run: its type is number
9999 mem: location 1141 is 4
9999 mem: storing 4 in location 2232
 103 run: hide-screen screen:address
9999 mem: location 2228 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2287
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2289
 104 run: break-unless x:address:screen, 
9999 mem: location 2289 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 2289 is 1031
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, top-of-screen:offset
9999 mem: location 2227 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2227 is 1134
9999 run: address to copy is 1135
9999 run: its type is address
9999 mem: location 1135 is 1177
9999 mem: storing 1177 in location 2233
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 2233 is 1177
9999 mem: storing 1177 in location 2234
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2233 is 1177
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2318
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 2320
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2320 is 1177
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2320 is 1177
9999 mem: location 1177 is 167
9999 mem: location 1178 is 2222
9999 mem: location 1179 is 0
9999 mem: location 2320 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 2222
9999 mem: storing 2222 in location 2321
 104 run: reply result:address:duplex-list
9999 mem: location 2321 is 2222
9999 run: result 0 is 2222
9999 mem: storing 2222 in location 2233
 103 run: row:number <- copy top:number
9999 mem: location 2229 is 0
9999 mem: storing 0 in location 2235
 103 run: column:number <- copy left:number
9999 mem: location 2230 is 0
9999 mem: storing 0 in location 2236
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 2227 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2227 is 1134
9999 run: address to copy is 1142
9999 mem: storing 1142 in location 2237
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 2227 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2227 is 1134
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 2238
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 2227 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 1177
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2227 is 1134
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 2239
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 2228 is 1031
9999 mem: location 2235 is 0
9999 mem: location 2236 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2349
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2351
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 2352
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2353
 104 run: break-unless x:address:screen, 
9999 mem: location 2351 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2351 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2351 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2354
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2352 is 0
9999 mem: location 2354 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2351 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2351 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2355
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2353 is 0
9999 mem: location 2355 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2351 is 1031
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 2233 is 2222
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2235 is 0
9999 mem: location 2231 is 3
9999 mem: storing 0 in location 2240
 103 run: break-if off-screen?:boolean, 
9999 mem: location 2240 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2235 is 0
9999 mem: location 2237 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 2241
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2241 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 2236 is 0
9999 mem: location 2238 is 1143
9999 mem: location 1143 is 1
9999 mem: storing 0 in location 2242
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 2242 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2233 is 2222
9999 mem: location 2222 is 101
9999 mem: location 2223 is 1211
9999 mem: location 2224 is 1177
9999 mem: location 2233 is 2222
9999 run: address to copy is 2222
9999 run: its type is number
9999 mem: location 2222 is 101
9999 mem: storing 101 in location 2243
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2243 is 101
9999 mem: storing 0 in location 2244
 103 run: break-unless newline?:boolean, 
9999 mem: location 2244 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2236 is 0
9999 mem: location 2232 is 4
9999 mem: storing 0 in location 2247
 103 run: break-unless at-right?:boolean, 
9999 mem: location 2247 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 2228 is 1031
9999 mem: location 2243 is 101
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2380
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2382
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 2383
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2384
9999 mem: storing 0 in location 2385
 104 run: break-if color-found?:boolean, 
9999 mem: location 2385 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2384
 104 run: break-unless x:address:screen, 
9999 mem: location 2382 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2382 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2382 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2386
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2382 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2382 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2387
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2382 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2382 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2388
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2382 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2382 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2389
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2383 is 101
9999 mem: storing 0 in location 2390
 104 run: break-unless newline?:boolean, 
9999 mem: location 2390 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2386 is 1033
9999 mem: location 1033 is 0
9999 mem: location 2388 is 5
9999 mem: storing 0 in location 2393
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2393 is 0
9999 mem: location 2387 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 0 in location 2393
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2382 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2382 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2394
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2383 is 101
9999 mem: storing 0 in location 2395
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2395 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2394 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2393 is 0
9999 mem: location 2394 is 1036
9999 mem: location 2393 is 0
9999 mem: storing 1037 in location 2397
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2397 is 1037
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 2397 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 2398
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2397 is 1037
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 2397 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 2399
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2383 is 101
9999 mem: location 2398 is 1037
9999 mem: storing 101 in location 1037
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2384 is 7
9999 mem: location 2399 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2388 is 5
9999 mem: storing 4 in location 2400
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2387 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2400 is 4
9999 mem: storing 0 in location 2401
 104 run: break-if at-right?:boolean, 
9999 mem: location 2401 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2387 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2387 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2382 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2233 is 2222
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2411
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2222 in location 2413
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2413 is 2222
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2413 is 2222
9999 mem: location 2222 is 101
9999 mem: location 2223 is 1211
9999 mem: location 2224 is 1177
9999 mem: location 2413 is 2222
9999 run: address to copy is 2223
9999 run: its type is address
9999 mem: location 2223 is 1211
9999 mem: storing 1211 in location 2414
 104 run: reply result:address:duplex-list
9999 mem: location 2414 is 1211
9999 run: result 0 is 1211
9999 mem: storing 1211 in location 2233
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2234 is 1177
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2442
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 2444
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2444 is 1177
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2444 is 1177
9999 mem: location 1177 is 167
9999 mem: location 1178 is 2222
9999 mem: location 1179 is 0
9999 mem: location 2444 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 2222
9999 mem: storing 2222 in location 2445
 104 run: reply result:address:duplex-list
9999 mem: location 2445 is 2222
9999 run: result 0 is 2222
9999 mem: storing 2222 in location 2234
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2236 is 0
9999 mem: storing 1 in location 2236
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 2233 is 1211
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2235 is 0
9999 mem: location 2231 is 3
9999 mem: storing 0 in location 2240
 103 run: break-if off-screen?:boolean, 
9999 mem: location 2240 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2235 is 0
9999 mem: location 2237 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 2241
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2241 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 2236 is 1
9999 mem: location 2238 is 1143
9999 mem: location 1143 is 1
9999 mem: storing 1 in location 2242
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 2242 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 2233 is 1211
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2473
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1211 in location 2475
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2475 is 1211
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 2475 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 2222
9999 mem: location 2475 is 1211
9999 run: address to copy is 1213
9999 run: its type is address
9999 mem: location 1213 is 2222
9999 mem: storing 2222 in location 2476
 104 run: reply result:address:duplex-list
9999 mem: location 2476 is 2222
9999 run: result 0 is 2222
9999 mem: location 2239 is 1136
9999 mem: storing 2222 in location 1136
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2233 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 2222
9999 mem: location 2233 is 1211
9999 run: address to copy is 1211
9999 run: its type is number
9999 mem: location 1211 is 97
9999 mem: storing 97 in location 2243
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2243 is 97
9999 mem: storing 0 in location 2244
 103 run: break-unless newline?:boolean, 
9999 mem: location 2244 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2236 is 1
9999 mem: location 2232 is 4
9999 mem: storing 0 in location 2247
 103 run: break-unless at-right?:boolean, 
9999 mem: location 2247 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 2228 is 1031
9999 mem: location 2243 is 97
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2504
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2506
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 2507
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2508
9999 mem: storing 0 in location 2509
 104 run: break-if color-found?:boolean, 
9999 mem: location 2509 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2508
 104 run: break-unless x:address:screen, 
9999 mem: location 2506 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2506 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2506 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2510
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2506 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2506 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2511
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2506 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2506 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2512
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2506 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2506 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2513
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2507 is 97
9999 mem: storing 0 in location 2514
 104 run: break-unless newline?:boolean, 
9999 mem: location 2514 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2510 is 1033
9999 mem: location 1033 is 0
9999 mem: location 2512 is 5
9999 mem: storing 0 in location 2517
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2517 is 0
9999 mem: location 2511 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 1 in location 2517
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2506 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2506 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2518
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2507 is 97
9999 mem: storing 0 in location 2519
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2519 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2518 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2517 is 1
9999 mem: location 2518 is 1036
9999 mem: location 2517 is 1
9999 mem: storing 1039 in location 2521
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2521 is 1039
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 2521 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 2522
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2521 is 1039
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 2521 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 2523
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2507 is 97
9999 mem: location 2522 is 1039
9999 mem: storing 97 in location 1039
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2508 is 7
9999 mem: location 2523 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2512 is 5
9999 mem: storing 4 in location 2524
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2511 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2524 is 4
9999 mem: storing 0 in location 2525
 104 run: break-if at-right?:boolean, 
9999 mem: location 2525 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2511 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2511 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2506 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2233 is 1211
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2535
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1211 in location 2537
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2537 is 1211
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2537 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 2222
9999 mem: location 2537 is 1211
9999 run: address to copy is 1212
9999 run: its type is address
9999 mem: location 1212 is 1276
9999 mem: storing 1276 in location 2538
 104 run: reply result:address:duplex-list
9999 mem: location 2538 is 1276
9999 run: result 0 is 1276
9999 mem: storing 1276 in location 2233
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2234 is 2222
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2566
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2222 in location 2568
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2568 is 2222
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2568 is 2222
9999 mem: location 2222 is 101
9999 mem: location 2223 is 1211
9999 mem: location 2224 is 1177
9999 mem: location 2568 is 2222
9999 run: address to copy is 2223
9999 run: its type is address
9999 mem: location 2223 is 1211
9999 mem: storing 1211 in location 2569
 104 run: reply result:address:duplex-list
9999 mem: location 2569 is 1211
9999 run: result 0 is 1211
9999 mem: storing 1211 in location 2234
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2236 is 1
9999 mem: storing 2 in location 2236
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 2233 is 1276
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2235 is 0
9999 mem: location 2231 is 3
9999 mem: storing 0 in location 2240
 103 run: break-if off-screen?:boolean, 
9999 mem: location 2240 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2235 is 0
9999 mem: location 2237 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 2241
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2241 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 2236 is 2
9999 mem: location 2238 is 1143
9999 mem: location 1143 is 1
9999 mem: storing 0 in location 2242
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 2242 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2233 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 1341
9999 mem: location 1278 is 1211
9999 mem: location 2233 is 1276
9999 run: address to copy is 1276
9999 run: its type is number
9999 mem: location 1276 is 98
9999 mem: storing 98 in location 2243
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2243 is 98
9999 mem: storing 0 in location 2244
 103 run: break-unless newline?:boolean, 
9999 mem: location 2244 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2236 is 2
9999 mem: location 2232 is 4
9999 mem: storing 0 in location 2247
 103 run: break-unless at-right?:boolean, 
9999 mem: location 2247 is 0
9999 run: jumping to instruction 68
schedule: render/event-loop/run1001/editor-wraps-line-on-insert
 103 run: print-character screen:address, c:character
9999 mem: location 2228 is 1031
9999 mem: location 2243 is 98
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2597
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2599
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 2600
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2601
9999 mem: storing 0 in location 2602
 104 run: break-if color-found?:boolean, 
9999 mem: location 2602 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2601
 104 run: break-unless x:address:screen, 
9999 mem: location 2599 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2599 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2599 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2603
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2599 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2599 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2604
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2599 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2599 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2605
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2599 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2599 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2606
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2600 is 98
9999 mem: storing 0 in location 2607
 104 run: break-unless newline?:boolean, 
9999 mem: location 2607 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2603 is 1033
9999 mem: location 1033 is 0
9999 mem: location 2605 is 5
9999 mem: storing 0 in location 2610
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2610 is 0
9999 mem: location 2604 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 2 in location 2610
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2599 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2599 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2611
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2600 is 98
9999 mem: storing 0 in location 2612
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2612 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2611 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2610 is 2
9999 mem: location 2611 is 1036
9999 mem: location 2610 is 2
9999 mem: storing 1041 in location 2614
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2614 is 1041
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 2614 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 2615
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2614 is 1041
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 2614 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 2616
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2600 is 98
9999 mem: location 2615 is 1041
9999 mem: storing 98 in location 1041
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2601 is 7
9999 mem: location 2616 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2605 is 5
9999 mem: storing 4 in location 2617
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2604 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2617 is 4
9999 mem: storing 0 in location 2618
 104 run: break-if at-right?:boolean, 
9999 mem: location 2618 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2604 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2604 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2599 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2233 is 1276
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2628
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1276 in location 2630
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2630 is 1276
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2630 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 1341
9999 mem: location 1278 is 1211
9999 mem: location 2630 is 1276
9999 run: address to copy is 1277
9999 run: its type is address
9999 mem: location 1277 is 1341
9999 mem: storing 1341 in location 2631
 104 run: reply result:address:duplex-list
9999 mem: location 2631 is 1341
9999 run: result 0 is 1341
9999 mem: storing 1341 in location 2233
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2234 is 1211
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2659
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1211 in location 2661
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2661 is 1211
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2661 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 2222
9999 mem: location 2661 is 1211
9999 run: address to copy is 1212
9999 run: its type is address
9999 mem: location 1212 is 1276
9999 mem: storing 1276 in location 2662
 104 run: reply result:address:duplex-list
9999 mem: location 2662 is 1276
9999 run: result 0 is 1276
9999 mem: storing 1276 in location 2234
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2236 is 2
9999 mem: storing 3 in location 2236
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 2233 is 1341
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2235 is 0
9999 mem: location 2231 is 3
9999 mem: storing 0 in location 2240
 103 run: break-if off-screen?:boolean, 
9999 mem: location 2240 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2235 is 0
9999 mem: location 2237 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 2241
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2241 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 2236 is 3
9999 mem: location 2238 is 1143
9999 mem: location 1143 is 1
9999 mem: storing 0 in location 2242
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 2242 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2233 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 2233 is 1341
9999 run: address to copy is 1341
9999 run: its type is number
9999 mem: location 1341 is 99
9999 mem: storing 99 in location 2243
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2243 is 99
9999 mem: storing 0 in location 2244
 103 run: break-unless newline?:boolean, 
9999 mem: location 2244 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2236 is 3
9999 mem: location 2232 is 4
9999 mem: storing 0 in location 2247
 103 run: break-unless at-right?:boolean, 
9999 mem: location 2247 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 2228 is 1031
9999 mem: location 2243 is 99
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2690
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2692
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 2693
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2694
9999 mem: storing 0 in location 2695
 104 run: break-if color-found?:boolean, 
9999 mem: location 2695 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2694
 104 run: break-unless x:address:screen, 
9999 mem: location 2692 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2692 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2692 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2696
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2692 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2692 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2697
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2692 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2692 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2698
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2692 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2692 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2699
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2693 is 99
9999 mem: storing 0 in location 2700
 104 run: break-unless newline?:boolean, 
9999 mem: location 2700 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2696 is 1033
9999 mem: location 1033 is 0
9999 mem: location 2698 is 5
9999 mem: storing 0 in location 2703
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2703 is 0
9999 mem: location 2697 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 3 in location 2703
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2692 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2692 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2704
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2693 is 99
9999 mem: storing 0 in location 2705
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2705 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2704 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2703 is 3
9999 mem: location 2704 is 1036
9999 mem: location 2703 is 3
9999 mem: storing 1043 in location 2707
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2707 is 1043
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 2707 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 2708
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2707 is 1043
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 2707 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 2709
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2693 is 99
9999 mem: location 2708 is 1043
9999 mem: storing 99 in location 1043
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2694 is 7
9999 mem: location 2709 is 1044
9999 mem: storing 7 in location 1044
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2698 is 5
9999 mem: storing 4 in location 2710
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2697 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2710 is 4
9999 mem: storing 0 in location 2711
 104 run: break-if at-right?:boolean, 
9999 mem: location 2711 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2697 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2697 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2692 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2233 is 1341
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2721
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1341 in location 2723
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2723 is 1341
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2723 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 2723 is 1341
9999 run: address to copy is 1342
9999 run: its type is address
9999 mem: location 1342 is 1406
9999 mem: storing 1406 in location 2724
 104 run: reply result:address:duplex-list
9999 mem: location 2724 is 1406
9999 run: result 0 is 1406
9999 mem: storing 1406 in location 2233
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2234 is 1276
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2752
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1276 in location 2754
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2754 is 1276
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2754 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 1341
9999 mem: location 1278 is 1211
9999 mem: location 2754 is 1276
9999 run: address to copy is 1277
9999 run: its type is address
9999 mem: location 1277 is 1341
9999 mem: storing 1341 in location 2755
 104 run: reply result:address:duplex-list
9999 mem: location 2755 is 1341
9999 run: result 0 is 1341
9999 mem: storing 1341 in location 2234
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2236 is 3
9999 mem: storing 4 in location 2236
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 2233 is 1406
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2235 is 0
9999 mem: location 2231 is 3
9999 mem: storing 0 in location 2240
 103 run: break-if off-screen?:boolean, 
9999 mem: location 2240 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2235 is 0
9999 mem: location 2237 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 2241
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2241 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 2236 is 4
9999 mem: location 2238 is 1143
9999 mem: location 1143 is 1
9999 mem: storing 0 in location 2242
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 2242 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2233 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 0
9999 mem: location 1408 is 1341
9999 mem: location 2233 is 1406
9999 run: address to copy is 1406
9999 run: its type is number
9999 mem: location 1406 is 100
9999 mem: storing 100 in location 2243
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2243 is 100
9999 mem: storing 0 in location 2244
 103 run: break-unless newline?:boolean, 
9999 mem: location 2244 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2236 is 4
9999 mem: location 2232 is 4
9999 mem: storing 1 in location 2247
 103 run: break-unless at-right?:boolean, 
9999 mem: location 2247 is 1
9999 run: jump-unless fell through
 103 run: next-node:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2233 is 1406
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2783
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1406 in location 2785
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2785 is 1406
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2785 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 0
9999 mem: location 1408 is 1341
9999 mem: location 2785 is 1406
9999 run: address to copy is 1407
9999 run: its type is address
9999 mem: location 1407 is 0
9999 mem: storing 0 in location 2786
 104 run: reply result:address:duplex-list
9999 mem: location 2786 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 2248
 103 run: break-unless next-node:address:duplex-list, 
9999 mem: location 2248 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 2228 is 1031
9999 mem: location 2243 is 100
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2814
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2816
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 2817
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2818
9999 mem: storing 0 in location 2819
 104 run: break-if color-found?:boolean, 
9999 mem: location 2819 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2818
 104 run: break-unless x:address:screen, 
9999 mem: location 2816 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2816 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2816 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2820
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2816 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2816 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2821
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2816 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2816 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2822
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2816 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2816 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2823
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2817 is 100
9999 mem: storing 0 in location 2824
 104 run: break-unless newline?:boolean, 
9999 mem: location 2824 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2820 is 1033
9999 mem: location 1033 is 0
9999 mem: location 2822 is 5
9999 mem: storing 0 in location 2827
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2827 is 0
9999 mem: location 2821 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 4 in location 2827
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2816 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2816 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2828
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2817 is 100
9999 mem: storing 0 in location 2829
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2829 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2828 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2827 is 4
9999 mem: location 2828 is 1036
9999 mem: location 2827 is 4
9999 mem: storing 1045 in location 2831
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2831 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 2831 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 2832
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2831 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 2831 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 2833
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2817 is 100
9999 mem: location 2832 is 1045
9999 mem: storing 100 in location 1045
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2818 is 7
9999 mem: location 2833 is 1046
9999 mem: storing 7 in location 1046
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2822 is 5
9999 mem: storing 4 in location 2834
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2821 is 1034
9999 mem: location 1034 is 4
9999 mem: location 2834 is 4
9999 mem: storing 1 in location 2835
 104 run: break-if at-right?:boolean, 
9999 mem: location 2835 is 1
9999 run: jumping to instruction 55
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2816 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2233 is 1406
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2845
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1406 in location 2847
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2847 is 1406
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2847 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 0
9999 mem: location 1408 is 1341
9999 mem: location 2847 is 1406
9999 run: address to copy is 1407
9999 run: its type is address
9999 mem: location 1407 is 0
9999 mem: storing 0 in location 2848
 104 run: reply result:address:duplex-list
9999 mem: location 2848 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 2233
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2234 is 1341
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2876
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1341 in location 2878
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2878 is 1341
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2878 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 2878 is 1341
9999 run: address to copy is 1342
9999 run: its type is address
9999 mem: location 1342 is 1406
9999 mem: storing 1406 in location 2879
 104 run: reply result:address:duplex-list
9999 mem: location 2879 is 1406
9999 run: result 0 is 1406
9999 mem: storing 1406 in location 2234
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2236 is 4
9999 mem: storing 5 in location 2236
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 2233 is 0
9999 run: jumping to instruction 74
 103 run: bottom:address:number <- get-address editor:address:editor-data/deref, bottom:offset
9999 mem: location 2227 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2222
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2227 is 1134
9999 run: address to copy is 1140
9999 mem: storing 1140 in location 2251
 103 run: bottom:address:number/deref <- copy row:number
9999 mem: location 2235 is 0
9999 mem: location 2251 is 1140
9999 mem: storing 0 in location 1140
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2235 is 0
9999 mem: location 2237 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 2241
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 2236 is 5
9999 mem: location 2238 is 1143
9999 mem: location 1143 is 1
9999 mem: storing 0 in location 2252
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 2241 is 1
9999 mem: location 2252 is 0
9999 mem: storing 0 in location 2253
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 2235 is 0
9999 mem: location 2237 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 0 in location 2254
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 2253 is 0
9999 mem: location 2254 is 0
9999 mem: storing 0 in location 2255
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 2255 is 0
9999 run: jumping to instruction 87
 103 run: done?:boolean <- greater-or-equal column:number, right:number
9999 mem: location 2236 is 5
9999 mem: location 2232 is 4
9999 mem: storing 1 in location 2246
 103 run: break-if done?:boolean, 
9999 mem: location 2246 is 1
9999 run: jumping to instruction 94
 103 run: move-cursor screen:address, cursor-row:address:number/deref, cursor-column:address:number/deref
9999 mem: location 2228 is 1031
9999 mem: location 2237 is 1142
9999 mem: location 1142 is 0
9999 mem: location 2238 is 1143
9999 mem: location 1143 is 1
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2907
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2909
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 2910
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 2911
 104 run: break-unless x:address:screen, 
9999 mem: location 2909 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2909 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2909 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2912
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2910 is 0
9999 mem: location 2912 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2909 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2909 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2913
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2911 is 1
9999 mem: location 2913 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2909 is 1031
 103 run: show-screen screen:address
9999 mem: location 2228 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2938
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2940
 104 run: break-unless x:address:screen, 
9999 mem: location 2940 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 2940 is 1031
 103 run: reply editor:address:editor-data/same-as-ingredient:0
9999 mem: location 2227 is 1134
 102 run: curr:address:editor-data <- get curr:address:editor-data/deref, next-editor:offset
9999 mem: location 2078 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2222
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 2078 is 1134
9999 run: address to copy is 1144
9999 run: its type is address
9999 mem: location 1144 is 0
9999 mem: storing 0 in location 2078
 102 run: loop 
9999 run: jumping to instruction 18
 102 run: break-unless curr:address:editor-data, 
9999 mem: location 2078 is 0
9999 run: jumping to instruction 22
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 2070 is 2065
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2969
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 2065 in location 2971
 103 run: break-unless x:address:console, 
9999 mem: location 2971 is 2065
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 2971 is 2065
9999 mem: location 2065 is 1
9999 mem: location 2066 is 2060
9999 mem: location 2971 is 2065
9999 run: address to copy is 2065
9999 mem: storing 2065 in location 2972
 103 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 2971 is 2065
9999 mem: location 2065 is 1
9999 mem: location 2066 is 2060
9999 mem: location 2971 is 2065
9999 run: address to copy is 2066
9999 run: its type is address
9999 mem: location 2066 is 2060
9999 mem: storing 2060 in location 2973
 103 run: max:number <- length buf:address:array:event/deref
9999 mem: location 2973 is 2060
9999 mem: location 2060 is 1
9999 mem: location 2061 is 0
9999 mem: location 2062 is 101
9999 mem: location 2063 is 0
9999 mem: location 2064 is 0
9999 mem: location 2973 is 2060
9999 mem: storing 1 in location 2974
 103 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 2972 is 2065
9999 mem: location 2065 is 1
9999 mem: location 2974 is 1
9999 mem: storing 1 in location 2975
 103 run: break-unless done?:boolean, 
9999 mem: location 2975 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: new alloc: 3000
9999 mem: storing 3000 in location 2976
 103 run: reply dummy:address:event/deref, x:address:console/same-as-ingredient:0, 1:literal/found, 1:literal/quit
9999 mem: location 2976 is 3000
9999 mem: location 3000 is 0
9999 mem: location 3001 is 0
9999 mem: location 3002 is 0
9999 mem: location 3003 is 0
9999 mem: location 2971 is 2065
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 2065
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 2072
9999 mem: storing 0 in location 2073
9999 mem: storing 0 in location 2074
9999 mem: storing 0 in location 2075
9999 mem: storing 2065 in location 2070
9999 mem: storing 1 in location 2076
9999 mem: storing 1 in location 2077
 102 run: loop-unless found?:boolean, 
9999 mem: location 2076 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?:boolean, 
9999 mem: location 2077 is 1
9999 run: jumping to instruction 24
 100 run: screen-should-contain [
    .eabcd.
    .     .
  ]
 100 run: assume-console [
    type [f]
  ]
parse: instruction: type
parse:   ingredient: {name: "f", properties: [_: "literal-string"]}
 100 run: run [
    event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1002
after-brace: event-loop ...
 100 run: event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1031
9999 mem: location 901 is 3009
9999 mem: location 2 is 1134
 101 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3011
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 3013
 101 run: console:address <- next-ingredient 
9999 mem: storing 3009 in location 3014
 101 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1134 in location 3015
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 3014 is 3009
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3042
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 3009 in location 3044
 102 run: break-unless x:address:console, 
9999 mem: location 3044 is 3009
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 3044 is 3009
9999 mem: location 3009 is 0
9999 mem: location 3010 is 3004
9999 mem: location 3044 is 3009
9999 run: address to copy is 3009
9999 mem: storing 3009 in location 3045
 102 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 3044 is 3009
9999 mem: location 3009 is 0
9999 mem: location 3010 is 3004
9999 mem: location 3044 is 3009
9999 run: address to copy is 3010
9999 run: its type is address
9999 mem: location 3010 is 3004
9999 mem: storing 3004 in location 3046
 102 run: max:number <- length buf:address:array:event/deref
9999 mem: location 3046 is 3004
9999 mem: location 3004 is 1
9999 mem: location 3005 is 0
9999 mem: location 3006 is 102
9999 mem: location 3007 is 0
9999 mem: location 3008 is 0
9999 mem: location 3046 is 3004
9999 mem: storing 1 in location 3047
 102 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 3045 is 3009
9999 mem: location 3009 is 0
9999 mem: location 3047 is 1
9999 mem: storing 0 in location 3048
 102 run: break-unless done?:boolean, 
9999 mem: location 3048 is 0
9999 run: jumping to instruction 12
 102 run: result:event <- index buf:address:array:event/deref, idx:address:number/deref
9999 mem: location 3046 is 3004
9999 mem: location 3004 is 1
9999 mem: location 3005 is 0
9999 mem: location 3006 is 102
9999 mem: location 3007 is 0
9999 mem: location 3008 is 0
9999 mem: location 3045 is 3009
9999 mem: location 3009 is 0
9999 mem: location 3046 is 3004
9999 mem: location 3045 is 3009
9999 mem: location 3009 is 0
9999 run: address to copy is 3005
9999 run: its type is event
9999 mem: location 3005 is 0
9999 mem: location 3006 is 102
9999 mem: location 3007 is 0
9999 mem: location 3008 is 0
9999 mem: storing 0 in location 3050
9999 mem: storing 102 in location 3051
9999 mem: storing 0 in location 3052
9999 mem: storing 0 in location 3053
 102 run: idx:address:number/deref <- add idx:address:number/deref, 1:literal
9999 mem: location 3045 is 3009
9999 mem: location 3009 is 0
9999 mem: location 3045 is 3009
9999 mem: storing 1 in location 3009
 102 run: reply result:event, x:address:console/same-as-ingredient:0, 1:literal/found, 0:literal/quit
9999 mem: location 3050 is 0
9999 mem: location 3051 is 102
9999 mem: location 3052 is 0
9999 mem: location 3053 is 0
9999 mem: location 3044 is 3009
9999 run: result 0 is [0, 102, 0, 0]
9999 run: result 1 is 3009
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 3016
9999 mem: storing 102 in location 3017
9999 mem: storing 0 in location 3018
9999 mem: storing 0 in location 3019
9999 mem: storing 3009 in location 3014
9999 mem: storing 1 in location 3020
9999 mem: storing 0 in location 3021
 101 run: loop-unless found?:boolean, 
9999 mem: location 3020 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?:boolean, 
9999 mem: location 3021 is 0
9999 run: jump-if fell through
 101 run: trace [app], [next-event]
   1 app: next-event
 101 run: curr:address:editor-data <- copy editor:address:editor-data
9999 mem: location 3015 is 1134
9999 mem: storing 1134 in location 3022
 101 run: break-unless curr:address:editor-data, 
9999 mem: location 3022 is 1134
9999 run: jump-unless fell through
 101 run: handle-event screen:address, console:address, curr:address:editor-data, e:event
9999 mem: location 3013 is 1031
9999 mem: location 3014 is 3009
9999 mem: location 3022 is 1134
9999 mem: location 3016 is 0
9999 mem: location 3017 is 102
9999 mem: location 3018 is 0
9999 mem: location 3019 is 0
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3073
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 3075
 102 run: console:address <- next-ingredient 
9999 mem: storing 3009 in location 3076
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1134 in location 3077
 102 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 3078
9999 mem: storing 102 in location 3079
9999 mem: storing 0 in location 3080
9999 mem: storing 0 in location 3081
 102 run: t:address:touch-event <- maybe-convert e:event, touch:variant
9999 mem: location 3078 is 0
9999 mem: location 3079 is 102
9999 mem: location 3080 is 0
9999 mem: location 3081 is 0
9999 mem: storing 0 in location 3082
 102 run: break-unless t:address:touch-event, 
9999 mem: location 3082 is 0
9999 run: jumping to instruction 10
 102 run: in-focus?:address:boolean <- get-address editor:address:editor-data/deref, in-focus?:offset
9999 mem: location 3077 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2222
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3077 is 1134
9999 run: address to copy is 1145
9999 mem: storing 1145 in location 3083
 102 run: jump-if in-focus?:address:boolean/deref, 1:offset
9999 mem: location 3083 is 1145
9999 mem: location 1145 is 1
9999 run: jumping to instruction 14
 102 run: c:address:character <- maybe-convert e:event, text:variant
9999 mem: location 3078 is 0
9999 mem: location 3079 is 102
9999 mem: location 3080 is 0
9999 mem: location 3081 is 0
9999 mem: storing 3079 in location 3084
 102 run: break-unless c:address:character, 
9999 mem: location 3084 is 3079
9999 run: jump-unless fell through
 102 run: backspace?:boolean <- equal c:address:character/deref, 8:literal/backspace
9999 mem: location 3084 is 3079
9999 mem: location 3079 is 102
9999 mem: storing 0 in location 3085
 102 run: break-unless backspace?:boolean, 
9999 mem: location 3085 is 0
9999 run: jumping to instruction 22
 102 run: insert-at-cursor editor:address:editor-data, c:address:character/deref
9999 mem: location 3077 is 1134
9999 mem: location 3084 is 3079
9999 mem: location 3079 is 102
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3104
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1134 in location 3106
 103 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 3107
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 3106 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2222
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3106 is 1134
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 3108
 103 run: d:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 3106 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2222
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3106 is 1134
9999 run: address to copy is 1134
9999 run: its type is address
9999 mem: location 1134 is 1177
9999 mem: storing 1177 in location 3109
 103 run: insert-duplex c:character, before-cursor:address:address:duplex-list/deref
9999 mem: location 3107 is 102
9999 mem: location 3108 is 1136
9999 mem: location 1136 is 2222
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3135
 104 run: x:location <- next-ingredient 
9999 mem: storing 102 in location 3137
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2222 in location 3138
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 3166
9999 mem: storing 3166 in location 3139
 104 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 3139 is 3166
9999 mem: location 3166 is 0
9999 mem: location 3167 is 0
9999 mem: location 3168 is 0
9999 mem: location 3139 is 3166
9999 run: address to copy is 3166
9999 mem: storing 3166 in location 3140
 104 run: val:address:location/deref <- copy x:location
9999 mem: location 3137 is 102
9999 mem: location 3140 is 3166
9999 mem: storing 102 in location 3166
 104 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3138 is 2222
9999 mem: location 2222 is 101
9999 mem: location 2223 is 1211
9999 mem: location 2224 is 1177
9999 mem: location 3138 is 2222
9999 run: address to copy is 2223
9999 run: its type is address
9999 mem: location 2223 is 1211
9999 mem: storing 1211 in location 3141
 104 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 3138 is 2222
9999 mem: location 2222 is 101
9999 mem: location 2223 is 1211
9999 mem: location 2224 is 1177
9999 mem: location 3138 is 2222
9999 run: address to copy is 2223
9999 mem: storing 2223 in location 3142
 104 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 3139 is 3166
9999 mem: location 3142 is 2223
9999 mem: storing 3166 in location 2223
 104 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 3139 is 3166
9999 mem: location 3166 is 102
9999 mem: location 3167 is 0
9999 mem: location 3168 is 0
9999 mem: location 3139 is 3166
9999 run: address to copy is 3168
9999 mem: storing 3168 in location 3142
 104 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 3138 is 2222
9999 mem: location 3142 is 3168
9999 mem: storing 2222 in location 3168
 104 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 3139 is 3166
9999 mem: location 3166 is 102
9999 mem: location 3167 is 0
9999 mem: location 3168 is 2222
9999 mem: location 3139 is 3166
9999 run: address to copy is 3167
9999 mem: storing 3167 in location 3142
 104 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 3141 is 1211
9999 mem: location 3142 is 3167
9999 mem: storing 1211 in location 3167
 104 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 3141 is 1211
9999 run: jumping to instruction 15
 104 run: y:address:address:duplex-list <- get-address next-node:address:duplex-list/deref, prev:offset
9999 mem: location 3141 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 2222
9999 mem: location 3141 is 1211
9999 run: address to copy is 1213
9999 mem: storing 1213 in location 3142
 104 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 3139 is 3166
9999 mem: location 3142 is 1213
9999 mem: storing 3166 in location 1213
 104 run: reply new-node:address:duplex-list
9999 mem: location 3139 is 3166
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3107 is 102
9999 mem: storing 0 in location 3110
 103 run: break-unless newline?:boolean, 
9999 mem: location 3110 is 0
9999 run: jumping to instruction 14
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 3106 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2222
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3106 is 1134
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 3112
 103 run: cursor-column:address:number/deref <- add cursor-column:address:number/deref, 1:literal
9999 mem: location 3112 is 1143
9999 mem: location 1143 is 1
9999 mem: location 3112 is 1143
9999 mem: storing 2 in location 1143
 102 run: reply 
 101 run: curr:address:editor-data <- get curr:address:editor-data/deref, next-editor:offset
9999 mem: location 3022 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2222
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3022 is 1134
9999 run: address to copy is 1144
9999 run: its type is address
9999 mem: location 1144 is 0
9999 mem: storing 0 in location 3022
 101 run: loop 
9999 run: jumping to instruction 11
 101 run: break-unless curr:address:editor-data, 
9999 mem: location 3022 is 0
9999 run: jumping to instruction 15
 101 run: curr:address:editor-data <- copy editor:address:editor-data
9999 mem: location 3015 is 1134
9999 mem: storing 1134 in location 3022
 101 run: break-unless curr:address:editor-data, 
9999 mem: location 3022 is 1134
9999 run: jump-unless fell through
 101 run: render curr:address:editor-data
9999 mem: location 3022 is 1134
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3169
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1134 in location 3171
 102 run: screen:address <- get editor:address:editor-data/deref, screen:offset
9999 mem: location 3171 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2222
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3171 is 1134
9999 run: address to copy is 1137
9999 run: its type is address
9999 mem: location 1137 is 1031
9999 mem: storing 1031 in location 3172
 102 run: top:number <- get editor:address:editor-data/deref, top:offset
9999 mem: location 3171 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2222
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3171 is 1134
9999 run: address to copy is 1138
9999 run: its type is number
9999 mem: location 1138 is 0
9999 mem: storing 0 in location 3173
 102 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 3171 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2222
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3171 is 1134
9999 run: address to copy is 1139
9999 run: its type is number
9999 mem: location 1139 is 0
9999 mem: storing 0 in location 3174
 102 run: screen-height:number <- screen-height screen:address
9999 mem: location 3172 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3200
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3202
 103 run: break-unless x:address:screen, 
9999 mem: location 3202 is 1031
9999 run: jump-unless fell through
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3202 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3202 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 3203
 103 run: reply height:number
9999 mem: location 3203 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 3175
 102 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 3171 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2222
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3171 is 1134
9999 run: address to copy is 1141
9999 run: its type is number
9999 mem: location 1141 is 4
9999 mem: storing 4 in location 3176
 102 run: hide-screen screen:address
9999 mem: location 3172 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3231
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3233
 103 run: break-unless x:address:screen, 
9999 mem: location 3233 is 1031
9999 run: jump-unless fell through
 103 run: reply x:address:screen
9999 mem: location 3233 is 1031
 102 run: curr:address:duplex-list <- get editor:address:editor-data/deref, top-of-screen:offset
9999 mem: location 3171 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2222
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3171 is 1134
9999 run: address to copy is 1135
9999 run: its type is address
9999 mem: location 1135 is 1177
9999 mem: storing 1177 in location 3177
 102 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 3177 is 1177
9999 mem: storing 1177 in location 3178
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3177 is 1177
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3262
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 3264
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3264 is 1177
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3264 is 1177
9999 mem: location 1177 is 167
9999 mem: location 1178 is 2222
9999 mem: location 1179 is 0
9999 mem: location 3264 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 2222
9999 mem: storing 2222 in location 3265
 103 run: reply result:address:duplex-list
9999 mem: location 3265 is 2222
9999 run: result 0 is 2222
9999 mem: storing 2222 in location 3177
 102 run: row:number <- copy top:number
9999 mem: location 3173 is 0
9999 mem: storing 0 in location 3179
 102 run: column:number <- copy left:number
9999 mem: location 3174 is 0
9999 mem: storing 0 in location 3180
 102 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 3171 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2222
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3171 is 1134
9999 run: address to copy is 1142
9999 mem: storing 1142 in location 3181
 102 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 3171 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2222
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3171 is 1134
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 3182
 102 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 3171 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 2222
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3171 is 1134
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 3183
 102 run: move-cursor screen:address, row:number, column:number
9999 mem: location 3172 is 1031
9999 mem: location 3179 is 0
9999 mem: location 3180 is 0
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3293
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3295
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 3296
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 3297
 103 run: break-unless x:address:screen, 
9999 mem: location 3295 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3295 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3295 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3298
 103 run: row:address:number/deref <- copy new-row:number
9999 mem: location 3296 is 0
9999 mem: location 3298 is 1033
9999 mem: storing 0 in location 1033
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3295 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3295 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3299
 103 run: column:address:number/deref <- copy new-column:number
9999 mem: location 3297 is 0
9999 mem: location 3299 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3295 is 1031
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 3177 is 2222
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3179 is 0
9999 mem: location 3175 is 3
9999 mem: storing 0 in location 3184
 102 run: break-if off-screen?:boolean, 
9999 mem: location 3184 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3179 is 0
9999 mem: location 3181 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 3185
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3185 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 3180 is 0
9999 mem: location 3182 is 1143
9999 mem: location 1143 is 2
9999 mem: storing 0 in location 3186
 102 run: break-unless at-cursor?:boolean, 
9999 mem: location 3186 is 0
9999 run: jumping to instruction 28
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3177 is 2222
9999 mem: location 2222 is 101
9999 mem: location 2223 is 3166
9999 mem: location 2224 is 1177
9999 mem: location 3177 is 2222
9999 run: address to copy is 2222
9999 run: its type is number
9999 mem: location 2222 is 101
9999 mem: storing 101 in location 3187
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3187 is 101
9999 mem: storing 0 in location 3188
 102 run: break-unless newline?:boolean, 
9999 mem: location 3188 is 0
9999 run: jumping to instruction 54
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3180 is 0
9999 mem: location 3176 is 4
9999 mem: storing 0 in location 3191
 102 run: break-unless at-right?:boolean, 
9999 mem: location 3191 is 0
9999 run: jumping to instruction 68
 102 run: print-character screen:address, c:character
9999 mem: location 3172 is 1031
9999 mem: location 3187 is 101
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3324
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3326
 103 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 3327
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3328
9999 mem: storing 0 in location 3329
 103 run: break-if color-found?:boolean, 
9999 mem: location 3329 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3328
 103 run: break-unless x:address:screen, 
9999 mem: location 3326 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3326 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3326 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3330
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3326 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3326 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3331
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3326 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3326 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3332
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3326 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3326 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 3333
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3327 is 101
9999 mem: storing 0 in location 3334
 103 run: break-unless newline?:boolean, 
9999 mem: location 3334 is 0
9999 run: jumping to instruction 25
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3330 is 1033
9999 mem: location 1033 is 0
9999 mem: location 3332 is 5
9999 mem: storing 0 in location 3337
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3337 is 0
9999 mem: location 3331 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 0 in location 3337
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3326 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3326 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3338
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3327 is 101
9999 mem: storing 0 in location 3339
 103 run: break-unless backspace?:boolean, 
9999 mem: location 3339 is 0
9999 run: jumping to instruction 44
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3338 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 100
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 3337 is 0
9999 mem: location 3338 is 1036
9999 mem: location 3337 is 0
9999 mem: storing 1037 in location 3341
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3341 is 1037
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 3341 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 3342
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3341 is 1037
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 3341 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 3343
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3327 is 101
9999 mem: location 3342 is 1037
9999 mem: storing 101 in location 1037
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3328 is 7
9999 mem: location 3343 is 1038
9999 mem: storing 7 in location 1038
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3332 is 5
9999 mem: storing 4 in location 3344
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3331 is 1034
9999 mem: location 1034 is 0
9999 mem: location 3344 is 4
9999 mem: storing 0 in location 3345
 103 run: break-if at-right?:boolean, 
9999 mem: location 3345 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3331 is 1034
9999 mem: location 1034 is 0
9999 mem: location 3331 is 1034
9999 mem: storing 1 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3326 is 1031
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3177 is 2222
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3355
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2222 in location 3357
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3357 is 2222
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3357 is 2222
9999 mem: location 2222 is 101
9999 mem: location 2223 is 3166
9999 mem: location 2224 is 1177
9999 mem: location 3357 is 2222
9999 run: address to copy is 2223
9999 run: its type is address
9999 mem: location 2223 is 3166
9999 mem: storing 3166 in location 3358
 103 run: reply result:address:duplex-list
9999 mem: location 3358 is 3166
9999 run: result 0 is 3166
9999 mem: storing 3166 in location 3177
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3178 is 1177
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3386
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 3388
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3388 is 1177
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3388 is 1177
9999 mem: location 1177 is 167
9999 mem: location 1178 is 2222
9999 mem: location 1179 is 0
9999 mem: location 3388 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 2222
9999 mem: storing 2222 in location 3389
 103 run: reply result:address:duplex-list
9999 mem: location 3389 is 2222
9999 run: result 0 is 2222
9999 mem: storing 2222 in location 3178
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 3180 is 0
9999 mem: storing 1 in location 3180
 102 run: loop 
9999 run: jumping to instruction 18
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 3177 is 3166
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3179 is 0
9999 mem: location 3175 is 3
9999 mem: storing 0 in location 3184
 102 run: break-if off-screen?:boolean, 
9999 mem: location 3184 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3179 is 0
9999 mem: location 3181 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 3185
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3185 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 3180 is 1
9999 mem: location 3182 is 1143
9999 mem: location 1143 is 2
9999 mem: storing 0 in location 3186
 102 run: break-unless at-cursor?:boolean, 
9999 mem: location 3186 is 0
9999 run: jumping to instruction 28
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3177 is 3166
9999 mem: location 3166 is 102
9999 mem: location 3167 is 1211
9999 mem: location 3168 is 2222
9999 mem: location 3177 is 3166
9999 run: address to copy is 3166
9999 run: its type is number
9999 mem: location 3166 is 102
9999 mem: storing 102 in location 3187
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3187 is 102
9999 mem: storing 0 in location 3188
 102 run: break-unless newline?:boolean, 
9999 mem: location 3188 is 0
9999 run: jumping to instruction 54
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3180 is 1
9999 mem: location 3176 is 4
9999 mem: storing 0 in location 3191
 102 run: break-unless at-right?:boolean, 
9999 mem: location 3191 is 0
9999 run: jumping to instruction 68
 102 run: print-character screen:address, c:character
9999 mem: location 3172 is 1031
9999 mem: location 3187 is 102
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3417
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3419
 103 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 3420
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3421
9999 mem: storing 0 in location 3422
 103 run: break-if color-found?:boolean, 
9999 mem: location 3422 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3421
 103 run: break-unless x:address:screen, 
9999 mem: location 3419 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3419 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3419 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3423
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3419 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3419 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3424
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3419 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3419 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3425
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3419 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3419 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 3426
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3420 is 102
9999 mem: storing 0 in location 3427
 103 run: break-unless newline?:boolean, 
9999 mem: location 3427 is 0
9999 run: jumping to instruction 25
schedule: print-character/render/event-loop/run1002/editor-wraps-line-on-insert
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3423 is 1033
9999 mem: location 1033 is 0
9999 mem: location 3425 is 5
9999 mem: storing 0 in location 3430
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3430 is 0
9999 mem: location 3424 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 1 in location 3430
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3419 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3419 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3431
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3420 is 102
9999 mem: storing 0 in location 3432
 103 run: break-unless backspace?:boolean, 
9999 mem: location 3432 is 0
9999 run: jumping to instruction 44
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3431 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 100
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 3430 is 1
9999 mem: location 3431 is 1036
9999 mem: location 3430 is 1
9999 mem: storing 1039 in location 3434
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3434 is 1039
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 3434 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 3435
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3434 is 1039
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 3434 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 3436
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3420 is 102
9999 mem: location 3435 is 1039
9999 mem: storing 102 in location 1039
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3421 is 7
9999 mem: location 3436 is 1040
9999 mem: storing 7 in location 1040
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3425 is 5
9999 mem: storing 4 in location 3437
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3424 is 1034
9999 mem: location 1034 is 1
9999 mem: location 3437 is 4
9999 mem: storing 0 in location 3438
 103 run: break-if at-right?:boolean, 
9999 mem: location 3438 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3424 is 1034
9999 mem: location 1034 is 1
9999 mem: location 3424 is 1034
9999 mem: storing 2 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3419 is 1031
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3177 is 3166
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3448
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 3166 in location 3450
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3450 is 3166
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3450 is 3166
9999 mem: location 3166 is 102
9999 mem: location 3167 is 1211
9999 mem: location 3168 is 2222
9999 mem: location 3450 is 3166
9999 run: address to copy is 3167
9999 run: its type is address
9999 mem: location 3167 is 1211
9999 mem: storing 1211 in location 3451
 103 run: reply result:address:duplex-list
9999 mem: location 3451 is 1211
9999 run: result 0 is 1211
9999 mem: storing 1211 in location 3177
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3178 is 2222
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3479
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2222 in location 3481
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3481 is 2222
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3481 is 2222
9999 mem: location 2222 is 101
9999 mem: location 2223 is 3166
9999 mem: location 2224 is 1177
9999 mem: location 3481 is 2222
9999 run: address to copy is 2223
9999 run: its type is address
9999 mem: location 2223 is 3166
9999 mem: storing 3166 in location 3482
 103 run: reply result:address:duplex-list
9999 mem: location 3482 is 3166
9999 run: result 0 is 3166
9999 mem: storing 3166 in location 3178
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 3180 is 1
9999 mem: storing 2 in location 3180
 102 run: loop 
9999 run: jumping to instruction 18
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 3177 is 1211
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3179 is 0
9999 mem: location 3175 is 3
9999 mem: storing 0 in location 3184
 102 run: break-if off-screen?:boolean, 
9999 mem: location 3184 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3179 is 0
9999 mem: location 3181 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 3185
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3185 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 3180 is 2
9999 mem: location 3182 is 1143
9999 mem: location 1143 is 2
9999 mem: storing 1 in location 3186
 102 run: break-unless at-cursor?:boolean, 
9999 mem: location 3186 is 1
9999 run: jump-unless fell through
 102 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 3177 is 1211
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3510
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1211 in location 3512
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3512 is 1211
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 3512 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 3166
9999 mem: location 3512 is 1211
9999 run: address to copy is 1213
9999 run: its type is address
9999 mem: location 1213 is 3166
9999 mem: storing 3166 in location 3513
 103 run: reply result:address:duplex-list
9999 mem: location 3513 is 3166
9999 run: result 0 is 3166
9999 mem: location 3183 is 1136
9999 mem: storing 3166 in location 1136
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3177 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 3166
9999 mem: location 3177 is 1211
9999 run: address to copy is 1211
9999 run: its type is number
9999 mem: location 1211 is 97
9999 mem: storing 97 in location 3187
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3187 is 97
9999 mem: storing 0 in location 3188
 102 run: break-unless newline?:boolean, 
9999 mem: location 3188 is 0
9999 run: jumping to instruction 54
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3180 is 2
9999 mem: location 3176 is 4
9999 mem: storing 0 in location 3191
 102 run: break-unless at-right?:boolean, 
9999 mem: location 3191 is 0
9999 run: jumping to instruction 68
 102 run: print-character screen:address, c:character
9999 mem: location 3172 is 1031
9999 mem: location 3187 is 97
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3541
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3543
 103 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 3544
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3545
9999 mem: storing 0 in location 3546
 103 run: break-if color-found?:boolean, 
9999 mem: location 3546 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3545
 103 run: break-unless x:address:screen, 
9999 mem: location 3543 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3543 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3543 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3547
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3543 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3543 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3548
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3543 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3543 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3549
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3543 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3543 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 3550
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3544 is 97
9999 mem: storing 0 in location 3551
 103 run: break-unless newline?:boolean, 
9999 mem: location 3551 is 0
9999 run: jumping to instruction 25
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3547 is 1033
9999 mem: location 1033 is 0
9999 mem: location 3549 is 5
9999 mem: storing 0 in location 3554
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3554 is 0
9999 mem: location 3548 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 2 in location 3554
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3543 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3543 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3555
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3544 is 97
9999 mem: storing 0 in location 3556
 103 run: break-unless backspace?:boolean, 
9999 mem: location 3556 is 0
9999 run: jumping to instruction 44
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3555 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 102
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 100
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 3554 is 2
9999 mem: location 3555 is 1036
9999 mem: location 3554 is 2
9999 mem: storing 1041 in location 3558
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3558 is 1041
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 3558 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 3559
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3558 is 1041
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 3558 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 3560
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3544 is 97
9999 mem: location 3559 is 1041
9999 mem: storing 97 in location 1041
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3545 is 7
9999 mem: location 3560 is 1042
9999 mem: storing 7 in location 1042
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3549 is 5
9999 mem: storing 4 in location 3561
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3548 is 1034
9999 mem: location 1034 is 2
9999 mem: location 3561 is 4
9999 mem: storing 0 in location 3562
 103 run: break-if at-right?:boolean, 
9999 mem: location 3562 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3548 is 1034
9999 mem: location 1034 is 2
9999 mem: location 3548 is 1034
9999 mem: storing 3 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3543 is 1031
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3177 is 1211
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3572
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1211 in location 3574
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3574 is 1211
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3574 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 3166
9999 mem: location 3574 is 1211
9999 run: address to copy is 1212
9999 run: its type is address
9999 mem: location 1212 is 1276
9999 mem: storing 1276 in location 3575
 103 run: reply result:address:duplex-list
9999 mem: location 3575 is 1276
9999 run: result 0 is 1276
9999 mem: storing 1276 in location 3177
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3178 is 3166
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3603
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 3166 in location 3605
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3605 is 3166
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3605 is 3166
9999 mem: location 3166 is 102
9999 mem: location 3167 is 1211
9999 mem: location 3168 is 2222
9999 mem: location 3605 is 3166
9999 run: address to copy is 3167
9999 run: its type is address
9999 mem: location 3167 is 1211
9999 mem: storing 1211 in location 3606
 103 run: reply result:address:duplex-list
9999 mem: location 3606 is 1211
9999 run: result 0 is 1211
9999 mem: storing 1211 in location 3178
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 3180 is 2
9999 mem: storing 3 in location 3180
 102 run: loop 
9999 run: jumping to instruction 18
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 3177 is 1276
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3179 is 0
9999 mem: location 3175 is 3
9999 mem: storing 0 in location 3184
 102 run: break-if off-screen?:boolean, 
9999 mem: location 3184 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3179 is 0
9999 mem: location 3181 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 3185
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3185 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 3180 is 3
9999 mem: location 3182 is 1143
9999 mem: location 1143 is 2
9999 mem: storing 0 in location 3186
 102 run: break-unless at-cursor?:boolean, 
9999 mem: location 3186 is 0
9999 run: jumping to instruction 28
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3177 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 1341
9999 mem: location 1278 is 1211
9999 mem: location 3177 is 1276
9999 run: address to copy is 1276
9999 run: its type is number
9999 mem: location 1276 is 98
9999 mem: storing 98 in location 3187
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3187 is 98
9999 mem: storing 0 in location 3188
 102 run: break-unless newline?:boolean, 
9999 mem: location 3188 is 0
9999 run: jumping to instruction 54
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3180 is 3
9999 mem: location 3176 is 4
9999 mem: storing 0 in location 3191
 102 run: break-unless at-right?:boolean, 
9999 mem: location 3191 is 0
9999 run: jumping to instruction 68
 102 run: print-character screen:address, c:character
9999 mem: location 3172 is 1031
9999 mem: location 3187 is 98
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3634
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3636
 103 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 3637
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3638
9999 mem: storing 0 in location 3639
 103 run: break-if color-found?:boolean, 
9999 mem: location 3639 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3638
 103 run: break-unless x:address:screen, 
9999 mem: location 3636 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3636 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3636 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3640
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3636 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3636 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3641
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3636 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3636 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3642
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3636 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3636 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 3643
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3637 is 98
9999 mem: storing 0 in location 3644
 103 run: break-unless newline?:boolean, 
9999 mem: location 3644 is 0
9999 run: jumping to instruction 25
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3640 is 1033
9999 mem: location 1033 is 0
9999 mem: location 3642 is 5
9999 mem: storing 0 in location 3647
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3647 is 0
9999 mem: location 3641 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 3 in location 3647
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3636 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3636 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3648
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3637 is 98
9999 mem: storing 0 in location 3649
 103 run: break-unless backspace?:boolean, 
9999 mem: location 3649 is 0
9999 run: jumping to instruction 44
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3648 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 102
9999 mem: location 1040 is 7
9999 mem: location 1041 is 97
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 100
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 3647 is 3
9999 mem: location 3648 is 1036
9999 mem: location 3647 is 3
9999 mem: storing 1043 in location 3651
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3651 is 1043
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 3651 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 3652
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3651 is 1043
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 3651 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 3653
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3637 is 98
9999 mem: location 3652 is 1043
9999 mem: storing 98 in location 1043
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3638 is 7
9999 mem: location 3653 is 1044
9999 mem: storing 7 in location 1044
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3642 is 5
9999 mem: storing 4 in location 3654
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3641 is 1034
9999 mem: location 1034 is 3
9999 mem: location 3654 is 4
9999 mem: storing 0 in location 3655
 103 run: break-if at-right?:boolean, 
9999 mem: location 3655 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3641 is 1034
9999 mem: location 1034 is 3
9999 mem: location 3641 is 1034
9999 mem: storing 4 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3636 is 1031
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3177 is 1276
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3665
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1276 in location 3667
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3667 is 1276
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3667 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 1341
9999 mem: location 1278 is 1211
9999 mem: location 3667 is 1276
9999 run: address to copy is 1277
9999 run: its type is address
9999 mem: location 1277 is 1341
9999 mem: storing 1341 in location 3668
 103 run: reply result:address:duplex-list
9999 mem: location 3668 is 1341
9999 run: result 0 is 1341
9999 mem: storing 1341 in location 3177
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3178 is 1211
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3696
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1211 in location 3698
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3698 is 1211
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3698 is 1211
9999 mem: location 1211 is 97
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 3166
9999 mem: location 3698 is 1211
9999 run: address to copy is 1212
9999 run: its type is address
9999 mem: location 1212 is 1276
9999 mem: storing 1276 in location 3699
 103 run: reply result:address:duplex-list
9999 mem: location 3699 is 1276
9999 run: result 0 is 1276
9999 mem: storing 1276 in location 3178
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 3180 is 3
9999 mem: storing 4 in location 3180
 102 run: loop 
9999 run: jumping to instruction 18
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 3177 is 1341
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3179 is 0
9999 mem: location 3175 is 3
9999 mem: storing 0 in location 3184
 102 run: break-if off-screen?:boolean, 
9999 mem: location 3184 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3179 is 0
9999 mem: location 3181 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 3185
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3185 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 3180 is 4
9999 mem: location 3182 is 1143
9999 mem: location 1143 is 2
9999 mem: storing 0 in location 3186
 102 run: break-unless at-cursor?:boolean, 
9999 mem: location 3186 is 0
9999 run: jumping to instruction 28
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3177 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 3177 is 1341
9999 run: address to copy is 1341
9999 run: its type is number
9999 mem: location 1341 is 99
9999 mem: storing 99 in location 3187
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3187 is 99
9999 mem: storing 0 in location 3188
 102 run: break-unless newline?:boolean, 
9999 mem: location 3188 is 0
9999 run: jumping to instruction 54
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3180 is 4
9999 mem: location 3176 is 4
9999 mem: storing 1 in location 3191
 102 run: break-unless at-right?:boolean, 
9999 mem: location 3191 is 1
9999 run: jump-unless fell through
 102 run: next-node:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3177 is 1341
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3727
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1341 in location 3729
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3729 is 1341
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3729 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 3729 is 1341
9999 run: address to copy is 1342
9999 run: its type is address
9999 mem: location 1342 is 1406
9999 mem: storing 1406 in location 3730
 103 run: reply result:address:duplex-list
9999 mem: location 3730 is 1406
9999 run: result 0 is 1406
9999 mem: storing 1406 in location 3192
 102 run: break-unless next-node:address:duplex-list, 
9999 mem: location 3192 is 1406
9999 run: jump-unless fell through
 102 run: next:character <- get next-node:address:duplex-list/deref, value:offset
9999 mem: location 3192 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 0
9999 mem: location 1408 is 1341
9999 mem: location 3192 is 1406
9999 run: address to copy is 1406
9999 run: its type is number
9999 mem: location 1406 is 100
9999 mem: storing 100 in location 3193
 102 run: next-character-is-newline?:boolean <- equal next:character, 10:literal/newline
9999 mem: location 3193 is 100
9999 mem: storing 0 in location 3194
 102 run: break-if next-character-is-newline?:boolean, 
9999 mem: location 3194 is 0
9999 run: jump-if fell through
 102 run: print-character screen:address, 8617:literal/loop-back-to-left, 245:literal/grey
9999 mem: location 3172 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3758
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3760
 103 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 3761
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 3762
9999 mem: storing 1 in location 3763
 103 run: break-if color-found?:boolean, 
9999 mem: location 3763 is 1
9999 run: jumping to instruction 7
 103 run: break-unless x:address:screen, 
9999 mem: location 3760 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3760 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3760 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3764
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3760 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3760 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3765
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3760 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3760 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3766
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3760 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3760 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 3767
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3761 is 8617
9999 mem: storing 0 in location 3768
 103 run: break-unless newline?:boolean, 
9999 mem: location 3768 is 0
9999 run: jumping to instruction 25
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3764 is 1033
9999 mem: location 1033 is 0
9999 mem: location 3766 is 5
9999 mem: storing 0 in location 3771
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3771 is 0
9999 mem: location 3765 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 4 in location 3771
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3760 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3760 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3772
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3761 is 8617
9999 mem: storing 0 in location 3773
 103 run: break-unless backspace?:boolean, 
9999 mem: location 3773 is 0
9999 run: jumping to instruction 44
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3772 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 102
9999 mem: location 1040 is 7
9999 mem: location 1041 is 97
9999 mem: location 1042 is 7
9999 mem: location 1043 is 98
9999 mem: location 1044 is 7
9999 mem: location 1045 is 100
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 3771 is 4
9999 mem: location 3772 is 1036
9999 mem: location 3771 is 4
9999 mem: storing 1045 in location 3775
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3775 is 1045
9999 mem: location 1045 is 100
9999 mem: location 1046 is 7
9999 mem: location 3775 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 3776
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3775 is 1045
9999 mem: location 1045 is 100
9999 mem: location 1046 is 7
9999 mem: location 3775 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 3777
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3761 is 8617
9999 mem: location 3776 is 1045
9999 mem: storing 8617 in location 1045
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3762 is 245
9999 mem: location 3777 is 1046
9999 mem: storing 245 in location 1046
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3766 is 5
9999 mem: storing 4 in location 3778
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3765 is 1034
9999 mem: location 1034 is 4
9999 mem: location 3778 is 4
9999 mem: storing 1 in location 3779
 103 run: break-if at-right?:boolean, 
9999 mem: location 3779 is 1
9999 run: jumping to instruction 55
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3760 is 1031
 102 run: column:number <- copy left:number
9999 mem: location 3174 is 0
9999 mem: storing 0 in location 3180
 102 run: row:number <- add row:number, 1:literal
9999 mem: location 3179 is 0
9999 mem: storing 1 in location 3179
 102 run: move-cursor screen:address, row:number, column:number
9999 mem: location 3172 is 1031
9999 mem: location 3179 is 1
9999 mem: location 3180 is 0
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3789
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3791
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 3792
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 3793
 103 run: break-unless x:address:screen, 
9999 mem: location 3791 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3791 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3791 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3794
 103 run: row:address:number/deref <- copy new-row:number
9999 mem: location 3792 is 1
9999 mem: location 3794 is 1033
9999 mem: storing 1 in location 1033
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3791 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3791 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3795
 103 run: column:address:number/deref <- copy new-column:number
9999 mem: location 3793 is 0
9999 mem: location 3795 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3791 is 1031
 102 run: loop +next-character:label
9999 run: jumping to instruction 19
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 3177 is 1341
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3179 is 1
9999 mem: location 3175 is 3
9999 mem: storing 0 in location 3184
 102 run: break-if off-screen?:boolean, 
9999 mem: location 3184 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3179 is 1
9999 mem: location 3181 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 0 in location 3185
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3185 is 0
9999 run: jumping to instruction 28
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3177 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 3177 is 1341
9999 run: address to copy is 1341
9999 run: its type is number
9999 mem: location 1341 is 99
9999 mem: storing 99 in location 3187
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3187 is 99
9999 mem: storing 0 in location 3188
 102 run: break-unless newline?:boolean, 
9999 mem: location 3188 is 0
9999 run: jumping to instruction 54
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3180 is 0
9999 mem: location 3176 is 4
9999 mem: storing 0 in location 3191
 102 run: break-unless at-right?:boolean, 
9999 mem: location 3191 is 0
9999 run: jumping to instruction 68
 102 run: print-character screen:address, c:character
9999 mem: location 3172 is 1031
9999 mem: location 3187 is 99
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3820
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3822
 103 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 3823
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3824
9999 mem: storing 0 in location 3825
 103 run: break-if color-found?:boolean, 
9999 mem: location 3825 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3824
 103 run: break-unless x:address:screen, 
9999 mem: location 3822 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3822 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3822 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3826
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3822 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3822 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3827
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3822 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3822 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3828
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3822 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3822 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 3829
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3823 is 99
9999 mem: storing 0 in location 3830
 103 run: break-unless newline?:boolean, 
9999 mem: location 3830 is 0
9999 run: jumping to instruction 25
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3826 is 1033
9999 mem: location 1033 is 1
9999 mem: location 3828 is 5
9999 mem: storing 5 in location 3833
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3833 is 5
9999 mem: location 3827 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 5 in location 3833
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3822 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3822 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3834
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3823 is 99
9999 mem: storing 0 in location 3835
 103 run: break-unless backspace?:boolean, 
9999 mem: location 3835 is 0
9999 run: jumping to instruction 44
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3834 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 102
9999 mem: location 1040 is 7
9999 mem: location 1041 is 97
9999 mem: location 1042 is 7
9999 mem: location 1043 is 98
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 3833 is 5
9999 mem: location 3834 is 1036
9999 mem: location 3833 is 5
9999 mem: storing 1047 in location 3837
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3837 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 3837 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 3838
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3837 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 3837 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 3839
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3823 is 99
9999 mem: location 3838 is 1047
9999 mem: storing 99 in location 1047
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3824 is 7
9999 mem: location 3839 is 1048
9999 mem: storing 7 in location 1048
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3828 is 5
9999 mem: storing 4 in location 3840
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3827 is 1034
9999 mem: location 1034 is 0
9999 mem: location 3840 is 4
9999 mem: storing 0 in location 3841
 103 run: break-if at-right?:boolean, 
9999 mem: location 3841 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3827 is 1034
9999 mem: location 1034 is 0
9999 mem: location 3827 is 1034
9999 mem: storing 1 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3822 is 1031
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3177 is 1341
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3851
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1341 in location 3853
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3853 is 1341
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3853 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 3853 is 1341
9999 run: address to copy is 1342
9999 run: its type is address
9999 mem: location 1342 is 1406
9999 mem: storing 1406 in location 3854
 103 run: reply result:address:duplex-list
9999 mem: location 3854 is 1406
9999 run: result 0 is 1406
9999 mem: storing 1406 in location 3177
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3178 is 1276
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3882
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1276 in location 3884
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3884 is 1276
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3884 is 1276
9999 mem: location 1276 is 98
9999 mem: location 1277 is 1341
9999 mem: location 1278 is 1211
9999 mem: location 3884 is 1276
9999 run: address to copy is 1277
9999 run: its type is address
9999 mem: location 1277 is 1341
9999 mem: storing 1341 in location 3885
 103 run: reply result:address:duplex-list
9999 mem: location 3885 is 1341
9999 run: result 0 is 1341
9999 mem: storing 1341 in location 3178
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 3180 is 0
9999 mem: storing 1 in location 3180
 102 run: loop 
9999 run: jumping to instruction 18
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 3177 is 1406
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3179 is 1
9999 mem: location 3175 is 3
9999 mem: storing 0 in location 3184
 102 run: break-if off-screen?:boolean, 
9999 mem: location 3184 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3179 is 1
9999 mem: location 3181 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 0 in location 3185
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3185 is 0
9999 run: jumping to instruction 28
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3177 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 0
9999 mem: location 1408 is 1341
9999 mem: location 3177 is 1406
9999 run: address to copy is 1406
9999 run: its type is number
9999 mem: location 1406 is 100
9999 mem: storing 100 in location 3187
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3187 is 100
9999 mem: storing 0 in location 3188
 102 run: break-unless newline?:boolean, 
9999 mem: location 3188 is 0
9999 run: jumping to instruction 54
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3180 is 1
9999 mem: location 3176 is 4
9999 mem: storing 0 in location 3191
 102 run: break-unless at-right?:boolean, 
9999 mem: location 3191 is 0
9999 run: jumping to instruction 68
 102 run: print-character screen:address, c:character
9999 mem: location 3172 is 1031
9999 mem: location 3187 is 100
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3913
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3915
 103 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 3916
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3917
9999 mem: storing 0 in location 3918
 103 run: break-if color-found?:boolean, 
9999 mem: location 3918 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3917
 103 run: break-unless x:address:screen, 
9999 mem: location 3915 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3915 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3915 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3919
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3915 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3915 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3920
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3915 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3915 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3921
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3915 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3915 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 3922
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3916 is 100
9999 mem: storing 0 in location 3923
 103 run: break-unless newline?:boolean, 
9999 mem: location 3923 is 0
9999 run: jumping to instruction 25
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3919 is 1033
9999 mem: location 1033 is 1
9999 mem: location 3921 is 5
9999 mem: storing 5 in location 3926
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3926 is 5
9999 mem: location 3920 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 6 in location 3926
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3915 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3915 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3927
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3916 is 100
9999 mem: storing 0 in location 3928
 103 run: break-unless backspace?:boolean, 
9999 mem: location 3928 is 0
9999 run: jumping to instruction 44
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3927 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 102
9999 mem: location 1040 is 7
9999 mem: location 1041 is 97
9999 mem: location 1042 is 7
9999 mem: location 1043 is 98
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 99
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 3926 is 6
9999 mem: location 3927 is 1036
9999 mem: location 3926 is 6
9999 mem: storing 1049 in location 3930
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3930 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 3930 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 3931
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3930 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 3930 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 3932
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3916 is 100
9999 mem: location 3931 is 1049
9999 mem: storing 100 in location 1049
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3917 is 7
9999 mem: location 3932 is 1050
9999 mem: storing 7 in location 1050
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3921 is 5
9999 mem: storing 4 in location 3933
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3920 is 1034
9999 mem: location 1034 is 1
9999 mem: location 3933 is 4
9999 mem: storing 0 in location 3934
 103 run: break-if at-right?:boolean, 
9999 mem: location 3934 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3920 is 1034
9999 mem: location 1034 is 1
9999 mem: location 3920 is 1034
9999 mem: storing 2 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3915 is 1031
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3177 is 1406
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3944
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1406 in location 3946
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3946 is 1406
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3946 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 0
9999 mem: location 1408 is 1341
9999 mem: location 3946 is 1406
9999 run: address to copy is 1407
9999 run: its type is address
9999 mem: location 1407 is 0
9999 mem: storing 0 in location 3947
 103 run: reply result:address:duplex-list
9999 mem: location 3947 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 3177
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3178 is 1341
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3975
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1341 in location 3977
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3977 is 1341
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3977 is 1341
9999 mem: location 1341 is 99
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 3977 is 1341
9999 run: address to copy is 1342
9999 run: its type is address
9999 mem: location 1342 is 1406
9999 mem: storing 1406 in location 3978
 103 run: reply result:address:duplex-list
9999 mem: location 3978 is 1406
9999 run: result 0 is 1406
9999 mem: storing 1406 in location 3178
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 3180 is 1
9999 mem: storing 2 in location 3180
 102 run: loop 
9999 run: jumping to instruction 18
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 3177 is 0
9999 run: jumping to instruction 74
 102 run: bottom:address:number <- get-address editor:address:editor-data/deref, bottom:offset
9999 mem: location 3171 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 3166
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3171 is 1134
9999 run: address to copy is 1140
9999 mem: storing 1140 in location 3195
 102 run: bottom:address:number/deref <- copy row:number
9999 mem: location 3179 is 1
9999 mem: location 3195 is 1140
9999 mem: storing 1 in location 1140
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3179 is 1
9999 mem: location 3181 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 0 in location 3185
 102 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 3180 is 2
9999 mem: location 3182 is 1143
9999 mem: location 1143 is 2
9999 mem: storing 1 in location 3196
 102 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 3185 is 0
9999 mem: location 3196 is 1
9999 mem: storing 0 in location 3197
 102 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 3179 is 1
9999 mem: location 3181 is 1142
9999 mem: location 1142 is 0
9999 mem: storing 0 in location 3198
 102 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 3197 is 0
9999 mem: location 3198 is 0
9999 mem: storing 0 in location 3199
 102 run: break-unless before-cursor?:boolean, 
9999 mem: location 3199 is 0
9999 run: jumping to instruction 87
 102 run: done?:boolean <- greater-or-equal column:number, right:number
9999 mem: location 3180 is 2
9999 mem: location 3176 is 4
9999 mem: storing 0 in location 3190
 102 run: break-if done?:boolean, 
9999 mem: location 3190 is 0
9999 run: jump-if fell through
 102 run: print-character screen:address, 32:literal/space
9999 mem: location 3172 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4006
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4008
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 4009
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 4010
9999 mem: storing 0 in location 4011
 103 run: break-if color-found?:boolean, 
9999 mem: location 4011 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 4010
 103 run: break-unless x:address:screen, 
9999 mem: location 4008 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 4008 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4008 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 4012
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 4008 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4008 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 4013
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 4008 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4008 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 4014
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 4008 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4008 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 4015
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 4009 is 32
9999 mem: storing 0 in location 4016
 103 run: break-unless newline?:boolean, 
9999 mem: location 4016 is 0
9999 run: jumping to instruction 25
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 4012 is 1033
9999 mem: location 1033 is 1
9999 mem: location 4014 is 5
9999 mem: storing 5 in location 4019
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 4019 is 5
9999 mem: location 4013 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 7 in location 4019
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 4008 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4008 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 4020
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 4009 is 32
9999 mem: storing 0 in location 4021
 103 run: break-unless backspace?:boolean, 
9999 mem: location 4021 is 0
9999 run: jumping to instruction 44
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 4020 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 102
9999 mem: location 1040 is 7
9999 mem: location 1041 is 97
9999 mem: location 1042 is 7
9999 mem: location 1043 is 98
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 99
9999 mem: location 1048 is 7
9999 mem: location 1049 is 100
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 4019 is 7
9999 mem: location 4020 is 1036
9999 mem: location 4019 is 7
9999 mem: storing 1051 in location 4023
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 4023 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 4023 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 4024
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 4023 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 4023 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 4025
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 4009 is 32
9999 mem: location 4024 is 1051
9999 mem: storing 32 in location 1051
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 4010 is 7
9999 mem: location 4025 is 1052
9999 mem: storing 7 in location 1052
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 4014 is 5
9999 mem: storing 4 in location 4026
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 4013 is 1034
9999 mem: location 1034 is 2
9999 mem: location 4026 is 4
9999 mem: storing 0 in location 4027
 103 run: break-if at-right?:boolean, 
9999 mem: location 4027 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 4013 is 1034
9999 mem: location 1034 is 2
9999 mem: location 4013 is 1034
9999 mem: storing 3 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 4008 is 1031
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 3180 is 2
9999 mem: storing 3 in location 3180
 102 run: loop 
9999 run: jumping to instruction 89
 102 run: done?:boolean <- greater-or-equal column:number, right:number
9999 mem: location 3180 is 3
9999 mem: location 3176 is 4
9999 mem: storing 0 in location 3190
 102 run: break-if done?:boolean, 
9999 mem: location 3190 is 0
9999 run: jump-if fell through
 102 run: print-character screen:address, 32:literal/space
9999 mem: location 3172 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4037
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4039
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 4040
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 4041
9999 mem: storing 0 in location 4042
 103 run: break-if color-found?:boolean, 
9999 mem: location 4042 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 4041
 103 run: break-unless x:address:screen, 
9999 mem: location 4039 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 4039 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 4039 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 4043
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 4039 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 4039 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 4044
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 4039 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 4039 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 4045
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 4039 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 4039 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 4046
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 4040 is 32
9999 mem: storing 0 in location 4047
 103 run: break-unless newline?:boolean, 
9999 mem: location 4047 is 0
9999 run: jumping to instruction 25
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 4043 is 1033
9999 mem: location 1033 is 1
9999 mem: location 4045 is 5
9999 mem: storing 5 in location 4050
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 4050 is 5
9999 mem: location 4044 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 8 in location 4050
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 4039 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 4039 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 4051
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 4040 is 32
9999 mem: storing 0 in location 4052
 103 run: break-unless backspace?:boolean, 
9999 mem: location 4052 is 0
9999 run: jumping to instruction 44
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 4051 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 101
9999 mem: location 1038 is 7
9999 mem: location 1039 is 102
9999 mem: location 1040 is 7
9999 mem: location 1041 is 97
9999 mem: location 1042 is 7
9999 mem: location 1043 is 98
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 99
9999 mem: location 1048 is 7
9999 mem: location 1049 is 100
9999 mem: location 1050 is 7
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 4050 is 8
9999 mem: location 4051 is 1036
9999 mem: location 4050 is 8
9999 mem: storing 1053 in location 4054
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 4054 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 4054 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 4055
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 4054 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 4054 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 4056
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 4040 is 32
9999 mem: location 4055 is 1053
9999 mem: storing 32 in location 1053
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 4041 is 7
9999 mem: location 4056 is 1054
9999 mem: storing 7 in location 1054
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 4045 is 5
9999 mem: storing 4 in location 4057
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 4044 is 1034
9999 mem: location 1034 is 3
9999 mem: location 4057 is 4
9999 mem: storing 0 in location 4058
 103 run: break-if at-right?:boolean, 
9999 mem: location 4058 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 4044 is 1034
9999 mem: location 1034 is 3
9999 mem: location 4044 is 1034
9999 mem: storing 4 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 4039 is 1031
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 3180 is 3
9999 mem: storing 4 in location 3180
 102 run: loop 
9999 run: jumping to instruction 89
 102 run: done?:boolean <- greater-or-equal column:number, right:number
9999 mem: location 3180 is 4
9999 mem: location 3176 is 4
9999 mem: storing 1 in location 3190
 102 run: break-if done?:boolean, 
9999 mem: location 3190 is 1
9999 run: jumping to instruction 94
 102 run: move-cursor screen:address, cursor-row:address:number/deref, cursor-column:address:number/deref
9999 mem: location 3172 is 1031
9999 mem: location 3181 is 1142
9999 mem: location 1142 is 0
9999 mem: location 3182 is 1143
9999 mem: location 1143 is 2
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4068
schedule: move-cursor/render/event-loop/run1002/editor-wraps-line-on-insert
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4070
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 4071
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 2 in location 4072
 103 run: break-unless x:address:screen, 
9999 mem: location 4070 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 4070 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 4070 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 4073
 103 run: row:address:number/deref <- copy new-row:number
9999 mem: location 4071 is 0
9999 mem: location 4073 is 1033
9999 mem: storing 0 in location 1033
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 4070 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 4070 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 4074
 103 run: column:address:number/deref <- copy new-column:number
9999 mem: location 4072 is 2
9999 mem: location 4074 is 1034
9999 mem: storing 2 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 4070 is 1031
 102 run: show-screen screen:address
9999 mem: location 3172 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4099
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4101
 103 run: break-unless x:address:screen, 
9999 mem: location 4101 is 1031
9999 run: jump-unless fell through
 103 run: reply x:address:screen
9999 mem: location 4101 is 1031
 102 run: reply editor:address:editor-data/same-as-ingredient:0
9999 mem: location 3171 is 1134
 101 run: curr:address:editor-data <- get curr:address:editor-data/deref, next-editor:offset
9999 mem: location 3022 is 1134
9999 mem: location 1134 is 1177
9999 mem: location 1135 is 1177
9999 mem: location 1136 is 3166
9999 mem: location 1137 is 1031
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 4
9999 mem: location 1142 is 0
9999 mem: location 1143 is 2
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 3022 is 1134
9999 run: address to copy is 1144
9999 run: its type is address
9999 mem: location 1144 is 0
9999 mem: storing 0 in location 3022
 101 run: loop 
9999 run: jumping to instruction 18
 101 run: break-unless curr:address:editor-data, 
9999 mem: location 3022 is 0
9999 run: jumping to instruction 22
 101 run: loop 
9999 run: jumping to instruction 5
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 3014 is 3009
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4130
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 3009 in location 4132
 102 run: break-unless x:address:console, 
9999 mem: location 4132 is 3009
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 4132 is 3009
9999 mem: location 3009 is 1
9999 mem: location 3010 is 3004
9999 mem: location 4132 is 3009
9999 run: address to copy is 3009
9999 mem: storing 3009 in location 4133
 102 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 4132 is 3009
9999 mem: location 3009 is 1
9999 mem: location 3010 is 3004
9999 mem: location 4132 is 3009
9999 run: address to copy is 3010
9999 run: its type is address
9999 mem: location 3010 is 3004
9999 mem: storing 3004 in location 4134
 102 run: max:number <- length buf:address:array:event/deref
9999 mem: location 4134 is 3004
9999 mem: location 3004 is 1
9999 mem: location 3005 is 0
9999 mem: location 3006 is 102
9999 mem: location 3007 is 0
9999 mem: location 3008 is 0
9999 mem: location 4134 is 3004
9999 mem: storing 1 in location 4135
 102 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 4133 is 3009
9999 mem: location 3009 is 1
9999 mem: location 4135 is 1
9999 mem: storing 1 in location 4136
 102 run: break-unless done?:boolean, 
9999 mem: location 4136 is 1
9999 run: jump-unless fell through
 102 run: dummy:address:event <- new event:type
9999 mem: new alloc: 4161
9999 mem: storing 4161 in location 4137
 102 run: reply dummy:address:event/deref, x:address:console/same-as-ingredient:0, 1:literal/found, 1:literal/quit
9999 mem: location 4137 is 4161
9999 mem: location 4161 is 0
9999 mem: location 4162 is 0
9999 mem: location 4163 is 0
9999 mem: location 4164 is 0
9999 mem: location 4132 is 3009
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 3009
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 3016
9999 mem: storing 0 in location 3017
9999 mem: storing 0 in location 3018
9999 mem: storing 0 in location 3019
9999 mem: storing 3009 in location 3014
9999 mem: storing 1 in location 3020
9999 mem: storing 1 in location 3021
 101 run: loop-unless found?:boolean, 
9999 mem: location 3020 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?:boolean, 
9999 mem: location 3021 is 1
9999 run: jumping to instruction 24
  99 run: screen-should-contain [
    .efabâ†©.
    .cd   .
    .     .
  ]
