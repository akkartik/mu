parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "height": ]}
parse: instruction: new
parse:   ingredient: {name: "abc", properties: [_: "literal-string"]}
parse:   product: {name: "1", properties: ["1": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "1", properties: ["1": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
parse:   product: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    type [e]\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .     .\n    .eabc .\n    .     .\n    .     .\n  ", properties: [_: "literal-string"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    type [f]\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .     .\n    .efabâ†©.\n    .c    .\n    .     .\n  ", properties: [_: "literal-string"]}
after-brace: recipe editor-wraps-line-on-insert
after-brace: new-fake-screen ...
after-brace: new ...
after-brace: new-editor ...
after-brace: assume-console ...
after-brace: run ...
after-brace: screen-should-contain ...
after-brace: assume-console ...
after-brace: run ...
after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: editor-wraps-line-on-insert
 101 run: screen:address <- new-fake-screen 5:literal/width, 5:literal/height
 102 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1009
9999 mem: storing 1009 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1010
9999 mem: storing 1010 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1010
9999 mem: storing 5 in location 1010
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1009
9999 mem: storing 1009 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1009
9999 mem: storing 5 in location 1009
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1011
9999 mem: storing 0 in location 1011
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1012
9999 mem: storing 0 in location 1012
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1010
9999 mem: location 1010 is 5
9999 mem: location 1004 is 1009
9999 mem: location 1009 is 5
9999 mem: storing 25 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1013
9999 mem: storing 1013 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 25
9999 mem: array size is 25
9999 mem: new alloc: 1014
9999 mem: location 1008 is 1013
9999 mem: storing 1014 in location 1013
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1009
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1065
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1067
 103 run: break-unless x:address:screen, 
9999 mem: location 1067 is 1009
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1067 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1067 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1068
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1068 is 1014
9999 mem: storing 25 in location 1069
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1070
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 0
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 0
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 0
9999 mem: storing 1015 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1072 is 1015
9999 run: address to copy is 1015
9999 mem: storing 1015 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1015
9999 mem: storing 0 in location 1015
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1072 is 1015
9999 run: address to copy is 1016
9999 mem: storing 1016 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1016
9999 mem: storing 7 in location 1016
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 0
9999 mem: storing 1 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 1
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 1
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 1
9999 mem: storing 1017 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1072 is 1017
9999 run: address to copy is 1017
9999 mem: storing 1017 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1017
9999 mem: storing 0 in location 1017
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1072 is 1017
9999 run: address to copy is 1018
9999 mem: storing 1018 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1018
9999 mem: storing 7 in location 1018
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 1
9999 mem: storing 2 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 2
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 2
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 2
9999 mem: storing 1019 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1072 is 1019
9999 run: address to copy is 1019
9999 mem: storing 1019 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1019
9999 mem: storing 0 in location 1019
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1072 is 1019
9999 run: address to copy is 1020
9999 mem: storing 1020 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1020
9999 mem: storing 7 in location 1020
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 2
9999 mem: storing 3 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 3
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 3
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 3
9999 mem: storing 1021 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1072 is 1021
9999 run: address to copy is 1021
9999 mem: storing 1021 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1021
9999 mem: storing 0 in location 1021
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1072 is 1021
9999 run: address to copy is 1022
9999 mem: storing 1022 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1022
9999 mem: storing 7 in location 1022
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 3
9999 mem: storing 4 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 4
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 4
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 4
9999 mem: storing 1023 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1072 is 1023
9999 run: address to copy is 1023
9999 mem: storing 1023 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1023
9999 mem: storing 0 in location 1023
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1072 is 1023
9999 run: address to copy is 1024
9999 mem: storing 1024 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1024
9999 mem: storing 7 in location 1024
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 4
9999 mem: storing 5 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 5
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 5
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 5
9999 mem: storing 1025 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1072 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1025
9999 mem: storing 0 in location 1025
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1072 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1026
9999 mem: storing 7 in location 1026
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 5
9999 mem: storing 6 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 6
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 6
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 6
9999 mem: storing 1027 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1072 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1027
9999 mem: storing 0 in location 1027
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1072 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1028
9999 mem: storing 7 in location 1028
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 6
9999 mem: storing 7 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 7
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 7
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 7
9999 mem: storing 1029 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1072 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1029
9999 mem: storing 0 in location 1029
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1072 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1030
9999 mem: storing 7 in location 1030
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 7
9999 mem: storing 8 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 8
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 8
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 8
9999 mem: storing 1031 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1072 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1031
9999 mem: storing 0 in location 1031
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1072 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1032
9999 mem: storing 7 in location 1032
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 8
9999 mem: storing 9 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 9
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 9
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 9
9999 mem: storing 1033 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1072 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1033
9999 mem: storing 0 in location 1033
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1072 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1034
9999 mem: storing 7 in location 1034
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 9
9999 mem: storing 10 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 10
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 10
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 10
9999 mem: storing 1035 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1072 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1035
9999 mem: storing 0 in location 1035
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1072 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1036
9999 mem: storing 7 in location 1036
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 10
9999 mem: storing 11 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 11
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 11
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 11
9999 mem: storing 1037 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1072 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1072 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 11
9999 mem: storing 12 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 12
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 12
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 12
9999 mem: storing 1039 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1072 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1072 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 12
9999 mem: storing 13 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 13
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 13
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 13
9999 mem: storing 1041 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1072 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1072 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 13
9999 mem: storing 14 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 14
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 14
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 14
9999 mem: storing 1043 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1072 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1072 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 14
9999 mem: storing 15 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 15
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 15
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 15
9999 mem: storing 1045 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1072 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1072 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 15
9999 mem: storing 16 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 16
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 16
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 16
9999 mem: storing 1047 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1072 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1072 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 16
9999 mem: storing 17 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 17
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 17
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 17
9999 mem: storing 1049 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1072 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1072 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 17
9999 mem: storing 18 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 18
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 18
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 18
9999 mem: storing 1051 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1072 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1072 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 18
9999 mem: storing 19 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 19
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 19
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 19
9999 mem: storing 1053 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1072 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1072 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 19
9999 mem: storing 20 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 20
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 20
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 20
9999 mem: storing 1055 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1072 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1072 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 20
9999 mem: storing 21 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 21
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 21
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 21
9999 mem: storing 1057 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1072 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1072 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 21
9999 mem: storing 22 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 22
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 22
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 22
9999 mem: storing 1059 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1072 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1072 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 22
9999 mem: storing 23 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 23
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 23
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 23
9999 mem: storing 1061 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1072 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1072 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 23
9999 mem: storing 24 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 24
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 24
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 24
9999 mem: storing 1063 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1072 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1072 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 24
9999 mem: storing 25 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 25
9999 mem: location 1069 is 25
9999 mem: storing 1 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1067 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1067 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1075
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1075 is 1011
9999 mem: storing 0 in location 1011
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1067 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1067 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1075
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1075 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1067 is 1009
 102 run: reply result:address:screen
9999 mem: location 1002 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 900
 101 run: 1:address:array:character <- new [abc]
9999 mem: storing 1076 in location 1
 101 run: 2:address:editor-data <- new-editor 1:address:array:character, screen:address, 0:literal/left, 5:literal/right
9999 mem: location 1 is 1076
9999 mem: location 900 is 1009
 102 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1080
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1076 in location 1082
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1083
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1084
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1085
 102 run: right:number <- subtract right:number, 1:literal
9999 mem: location 1085 is 5
9999 mem: storing 4 in location 1085
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: new alloc: 1095
9999 mem: storing 1095 in location 1086
 102 run: x:address:number <- get-address result:address:editor-data/deref, left:offset
9999 mem: location 1086 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1086 is 1095
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1087
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1084 is 0
9999 mem: location 1087 is 1097
9999 mem: storing 0 in location 1097
 102 run: x:address:number <- get-address result:address:editor-data/deref, right:offset
9999 mem: location 1086 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1086 is 1095
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1087
 102 run: x:address:number/deref <- copy right:number
9999 mem: location 1085 is 4
9999 mem: location 1087 is 1098
9999 mem: storing 4 in location 1098
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-row:offset
9999 mem: location 1086 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1086 is 1095
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1087
 102 run: x:address:number/deref <- copy 1:literal/top
9999 mem: location 1087 is 1099
9999 mem: storing 1 in location 1099
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-column:offset
9999 mem: location 1086 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1086 is 1095
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1087
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1084 is 0
9999 mem: location 1087 is 1100
9999 mem: storing 0 in location 1100
 102 run: init:address:address:duplex-list <- get-address result:address:editor-data/deref, data:offset
9999 mem: location 1086 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1086 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1088
 102 run: init:address:address:duplex-list/deref <- push-duplex 167:literal/Â§, 0:literal/tail
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1101
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1103
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1104
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1109
9999 mem: storing 1109 in location 1105
 103 run: val:address:location <- get-address result:address:duplex-list/deref, value:offset
9999 mem: location 1105 is 1109
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1105 is 1109
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1106
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1103 is 167
9999 mem: location 1106 is 1109
9999 mem: storing 167 in location 1109
 103 run: next:address:address:duplex-list <- get-address result:address:duplex-list/deref, next:offset
9999 mem: location 1105 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1105 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1107
 103 run: next:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1104 is 0
9999 mem: location 1107 is 1110
9999 mem: storing 0 in location 1110
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1104 is 0
9999 run: jump-if fell through
 103 run: reply result:address:duplex-list
9999 mem: location 1105 is 1109
9999 run: result 0 is 1109
9999 mem: location 1088 is 1095
9999 mem: storing 1109 in location 1095
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1086 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1086 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1089
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1088 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1089 is 1096
9999 mem: storing 1109 in location 1096
 102 run: jump-if s:address:array:character, 1:offset
9999 mem: location 1082 is 1076
9999 run: jumping to instruction 21
 102 run: len:number <- length s:address:array:character/deref
9999 mem: location 1082 is 1076
9999 mem: location 1076 is 3
9999 mem: location 1077 is 97
9999 mem: location 1078 is 98
9999 mem: location 1079 is 99
9999 mem: location 1082 is 1076
9999 mem: storing 3 in location 1090
 102 run: jump-if len:number, 1:offset
9999 mem: location 1090 is 3
9999 run: jumping to instruction 24
 102 run: idx:number <- copy 0:literal
9999 mem: storing 0 in location 1091
 102 run: curr:address:duplex-list <- copy init:address:address:duplex-list/deref
9999 mem: location 1088 is 1095
9999 mem: location 1095 is 1109
9999 mem: storing 1109 in location 1092
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1091 is 0
9999 mem: location 1090 is 3
9999 mem: storing 0 in location 1093
 102 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1082 is 1076
9999 mem: location 1076 is 3
9999 mem: location 1077 is 97
9999 mem: location 1078 is 98
9999 mem: location 1079 is 99
9999 mem: location 1091 is 0
9999 mem: location 1082 is 1076
9999 mem: location 1091 is 0
9999 run: address to copy is 1077
9999 run: its type is character
9999 mem: location 1077 is 97
9999 mem: storing 97 in location 1094
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1094 is 97
9999 mem: location 1092 is 1109
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1112
 103 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1114
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1109 in location 1115
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1120
9999 mem: storing 1120 in location 1116
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1116 is 1120
9999 mem: location 1120 is 0
9999 mem: location 1121 is 0
9999 mem: location 1122 is 0
9999 mem: location 1116 is 1120
9999 run: address to copy is 1120
9999 mem: storing 1120 in location 1117
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1114 is 97
9999 mem: location 1117 is 1120
9999 mem: storing 97 in location 1120
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1115 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1115 is 1109
9999 run: address to copy is 1110
9999 run: its type is address
9999 mem: location 1110 is 0
9999 mem: storing 0 in location 1118
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1115 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1115 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1119
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1116 is 1120
9999 mem: location 1119 is 1110
9999 mem: storing 1120 in location 1110
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1116 is 1120
9999 mem: location 1120 is 97
9999 mem: location 1121 is 0
9999 mem: location 1122 is 0
9999 mem: location 1116 is 1120
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1119
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1115 is 1109
9999 mem: location 1119 is 1122
9999 mem: storing 1109 in location 1122
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1116 is 1120
9999 mem: location 1120 is 97
9999 mem: location 1121 is 0
9999 mem: location 1122 is 1109
9999 mem: location 1116 is 1120
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1119
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1118 is 0
9999 mem: location 1119 is 1121
9999 mem: storing 0 in location 1121
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1118 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1116 is 1120
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1092 is 1109
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1123
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1109 in location 1125
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1125 is 1109
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1125 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 1120
9999 mem: location 1111 is 0
9999 mem: location 1125 is 1109
9999 run: address to copy is 1110
9999 run: its type is address
9999 mem: location 1110 is 1120
9999 mem: storing 1120 in location 1126
 103 run: reply result:address:duplex-list
9999 mem: location 1126 is 1120
9999 run: result 0 is 1120
9999 mem: storing 1120 in location 1092
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1091 is 0
9999 mem: storing 1 in location 1091
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1091 is 1
9999 mem: location 1090 is 3
9999 mem: storing 0 in location 1093
 102 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1082 is 1076
9999 mem: location 1076 is 3
9999 mem: location 1077 is 97
9999 mem: location 1078 is 98
9999 mem: location 1079 is 99
9999 mem: location 1091 is 1
9999 mem: location 1082 is 1076
9999 mem: location 1091 is 1
9999 run: address to copy is 1078
9999 run: its type is character
9999 mem: location 1078 is 98
9999 mem: storing 98 in location 1094
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1094 is 98
9999 mem: location 1092 is 1120
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1127
 103 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1129
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1120 in location 1130
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1135
9999 mem: storing 1135 in location 1131
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1131 is 1135
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1131 is 1135
9999 run: address to copy is 1135
9999 mem: storing 1135 in location 1132
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1129 is 98
9999 mem: location 1132 is 1135
9999 mem: storing 98 in location 1135
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1130 is 1120
9999 mem: location 1120 is 97
9999 mem: location 1121 is 0
9999 mem: location 1122 is 1109
9999 mem: location 1130 is 1120
9999 run: address to copy is 1121
9999 run: its type is address
9999 mem: location 1121 is 0
9999 mem: storing 0 in location 1133
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1130 is 1120
9999 mem: location 1120 is 97
9999 mem: location 1121 is 0
9999 mem: location 1122 is 1109
9999 mem: location 1130 is 1120
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1134
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1131 is 1135
9999 mem: location 1134 is 1121
9999 mem: storing 1135 in location 1121
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1131 is 1135
9999 mem: location 1135 is 98
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1131 is 1135
9999 run: address to copy is 1137
9999 mem: storing 1137 in location 1134
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1130 is 1120
9999 mem: location 1134 is 1137
9999 mem: storing 1120 in location 1137
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1131 is 1135
9999 mem: location 1135 is 98
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1120
9999 mem: location 1131 is 1135
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 1134
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1136
9999 mem: storing 0 in location 1136
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1133 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1131 is 1135
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1092 is 1120
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1138
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1120 in location 1140
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1140 is 1120
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1140 is 1120
9999 mem: location 1120 is 97
9999 mem: location 1121 is 1135
9999 mem: location 1122 is 1109
9999 mem: location 1140 is 1120
9999 run: address to copy is 1121
9999 run: its type is address
9999 mem: location 1121 is 1135
9999 mem: storing 1135 in location 1141
 103 run: reply result:address:duplex-list
9999 mem: location 1141 is 1135
9999 run: result 0 is 1135
9999 mem: storing 1135 in location 1092
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1091 is 1
9999 mem: storing 2 in location 1091
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1091 is 2
9999 mem: location 1090 is 3
9999 mem: storing 0 in location 1093
 102 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1082 is 1076
9999 mem: location 1076 is 3
9999 mem: location 1077 is 97
9999 mem: location 1078 is 98
9999 mem: location 1079 is 99
9999 mem: location 1091 is 2
9999 mem: location 1082 is 1076
9999 mem: location 1091 is 2
9999 run: address to copy is 1079
9999 run: its type is character
9999 mem: location 1079 is 99
9999 mem: storing 99 in location 1094
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1094 is 99
9999 mem: location 1092 is 1135
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1142
 103 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1144
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1135 in location 1145
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1150
9999 mem: storing 1150 in location 1146
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1146 is 1150
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1146 is 1150
9999 run: address to copy is 1150
9999 mem: storing 1150 in location 1147
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1144 is 99
9999 mem: location 1147 is 1150
9999 mem: storing 99 in location 1150
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1145 is 1135
9999 mem: location 1135 is 98
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1120
9999 mem: location 1145 is 1135
9999 run: address to copy is 1136
9999 run: its type is address
9999 mem: location 1136 is 0
9999 mem: storing 0 in location 1148
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1145 is 1135
9999 mem: location 1135 is 98
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1120
9999 mem: location 1145 is 1135
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 1149
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1146 is 1150
9999 mem: location 1149 is 1136
9999 mem: storing 1150 in location 1136
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1146 is 1150
9999 mem: location 1150 is 99
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1146 is 1150
9999 run: address to copy is 1152
9999 mem: storing 1152 in location 1149
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1145 is 1135
9999 mem: location 1149 is 1152
9999 mem: storing 1135 in location 1152
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1146 is 1150
9999 mem: location 1150 is 99
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1135
9999 mem: location 1146 is 1150
9999 run: address to copy is 1151
9999 mem: storing 1151 in location 1149
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1151
9999 mem: storing 0 in location 1151
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1148 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1146 is 1150
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1092 is 1135
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1153
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1135 in location 1155
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1155 is 1135
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1155 is 1135
9999 mem: location 1135 is 98
9999 mem: location 1136 is 1150
9999 mem: location 1137 is 1120
9999 mem: location 1155 is 1135
9999 run: address to copy is 1136
9999 run: its type is address
9999 mem: location 1136 is 1150
9999 mem: storing 1150 in location 1156
 103 run: reply result:address:duplex-list
9999 mem: location 1156 is 1150
9999 run: result 0 is 1150
9999 mem: storing 1150 in location 1092
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1091 is 2
9999 mem: storing 3 in location 1091
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1091 is 3
9999 mem: location 1090 is 3
9999 mem: storing 1 in location 1093
 102 run: break-if done?:boolean, 
9999 mem: location 1093 is 1
9999 run: jumping to instruction 34
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1086 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1109
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1086 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1089
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1088 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1089 is 1096
9999 mem: storing 1109 in location 1096
 102 run: _, screen:address <- render screen:address, result:address:editor-data
9999 mem: location 1083 is 1009
9999 mem: location 1086 is 1095
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: new alloc: 1157
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1159
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1160
 103 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 1160 is 1095
9999 run: jumping to instruction 5
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1160 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1109
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1160 is 1095
9999 run: address to copy is 1097
9999 run: its type is number
9999 mem: location 1097 is 0
9999 mem: storing 0 in location 1161
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1159 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1184
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1186
 104 run: break-unless x:address:screen, 
9999 mem: location 1186 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1186 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1186 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1187
 104 run: reply height:number
9999 mem: location 1187 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1162
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1160 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1109
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1160 is 1095
9999 run: address to copy is 1098
9999 run: its type is number
9999 mem: location 1098 is 4
9999 mem: storing 4 in location 1163
 103 run: hide-screen screen:address
9999 mem: location 1159 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: new alloc: 1188
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1190
 104 run: break-unless x:address:screen, 
9999 mem: location 1190 is 1009
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 1190 is 1009
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 1160 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1109
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1160 is 1095
9999 run: address to copy is 1095
9999 run: its type is address
9999 mem: location 1095 is 1109
9999 mem: storing 1109 in location 1164
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1164 is 1109
9999 mem: storing 1109 in location 1165
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1164 is 1109
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1191
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1109 in location 1193
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1193 is 1109
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1193 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 1120
9999 mem: location 1111 is 0
9999 mem: location 1193 is 1109
9999 run: address to copy is 1110
9999 run: its type is address
9999 mem: location 1110 is 1120
9999 mem: storing 1120 in location 1194
 104 run: reply result:address:duplex-list
9999 mem: location 1194 is 1120
9999 run: result 0 is 1120
9999 mem: storing 1120 in location 1164
 103 run: row:number <- copy 1:literal/top
9999 mem: storing 1 in location 1166
 103 run: column:number <- copy left:number
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1167
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1160 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1109
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1160 is 1095
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1168
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1160 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1109
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1160 is 1095
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1169
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1160 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1109
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1160 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1170
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1159 is 1009
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1195
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1197
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1198
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1199
 104 run: break-unless x:address:screen, 
9999 mem: location 1197 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1197 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1197 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1200
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1198 is 1
9999 mem: location 1200 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1197 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1197 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1201
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1199 is 0
9999 mem: location 1201 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1197 is 1009
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1164 is 1120
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1166 is 1
9999 mem: location 1162 is 5
9999 mem: storing 0 in location 1171
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1171 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1166 is 1
9999 mem: location 1168 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1172
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1172 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1167 is 0
9999 mem: location 1169 is 1100
9999 mem: location 1100 is 0
9999 mem: storing 1 in location 1173
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1173 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1164 is 1120
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1202
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1120 in location 1204
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1204 is 1120
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1204 is 1120
9999 mem: location 1120 is 97
9999 mem: location 1121 is 1135
9999 mem: location 1122 is 1109
9999 mem: location 1204 is 1120
9999 run: address to copy is 1122
9999 run: its type is address
9999 mem: location 1122 is 1109
9999 mem: storing 1109 in location 1205
 104 run: reply result:address:duplex-list
9999 mem: location 1205 is 1109
9999 run: result 0 is 1109
9999 mem: location 1170 is 1096
9999 mem: storing 1109 in location 1096
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1164 is 1120
9999 mem: location 1120 is 97
9999 mem: location 1121 is 1135
9999 mem: location 1122 is 1109
9999 mem: location 1164 is 1120
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 97
9999 mem: storing 97 in location 1174
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1174 is 97
9999 mem: storing 0 in location 1175
 103 run: break-unless newline?:boolean, 
9999 mem: location 1175 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1167 is 0
9999 mem: location 1163 is 4
9999 mem: storing 0 in location 1177
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1177 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1159 is 1009
9999 mem: location 1174 is 97
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1206
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1208
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1209
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1210
9999 mem: storing 0 in location 1211
 104 run: break-if color-found?:boolean, 
9999 mem: location 1211 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1210
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1212
9999 mem: storing 0 in location 1213
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1212
 104 run: break-unless x:address:screen, 
9999 mem: location 1208 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1208 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1208 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1208 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1208 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1208 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1208 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1216
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1208 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1208 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1217
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1209 is 97
9999 mem: storing 0 in location 1218
 104 run: break-unless newline?:boolean, 
9999 mem: location 1218 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1214 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1216 is 5
9999 mem: storing 5 in location 1221
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1221 is 5
9999 mem: location 1215 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 5 in location 1221
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1208 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1208 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1222
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1209 is 97
9999 mem: storing 0 in location 1223
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1223 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1222 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1221 is 5
9999 mem: location 1222 is 1014
9999 mem: location 1221 is 5
9999 mem: storing 1025 in location 1225
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1225 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1225 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1226
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1225 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1225 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1227
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1209 is 97
9999 mem: location 1226 is 1025
9999 mem: storing 97 in location 1025
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1210 is 7
9999 mem: location 1227 is 1026
9999 mem: storing 7 in location 1026
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1216 is 5
9999 mem: storing 4 in location 1228
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1215 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1228 is 4
9999 mem: storing 0 in location 1229
 104 run: break-if at-right?:boolean, 
9999 mem: location 1229 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1215 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1215 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1208 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1164 is 1120
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1230
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1120 in location 1232
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1232 is 1120
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1232 is 1120
9999 mem: location 1120 is 97
9999 mem: location 1121 is 1135
9999 mem: location 1122 is 1109
9999 mem: location 1232 is 1120
9999 run: address to copy is 1121
9999 run: its type is address
9999 mem: location 1121 is 1135
9999 mem: storing 1135 in location 1233
 104 run: reply result:address:duplex-list
9999 mem: location 1233 is 1135
9999 run: result 0 is 1135
9999 mem: storing 1135 in location 1164
schedule: render/new-editor/editor-wraps-line-on-insert
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1165 is 1109
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1234
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1109 in location 1236
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1236 is 1109
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1236 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 1120
9999 mem: location 1111 is 0
9999 mem: location 1236 is 1109
9999 run: address to copy is 1110
9999 run: its type is address
9999 mem: location 1110 is 1120
9999 mem: storing 1120 in location 1237
 104 run: reply result:address:duplex-list
9999 mem: location 1237 is 1120
9999 run: result 0 is 1120
9999 mem: storing 1120 in location 1165
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1167
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1164 is 1135
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1166 is 1
9999 mem: location 1162 is 5
9999 mem: storing 0 in location 1171
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1171 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1166 is 1
9999 mem: location 1168 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1172
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1172 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1167 is 1
9999 mem: location 1169 is 1100
9999 mem: location 1100 is 0
9999 mem: storing 0 in location 1173
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1173 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1164 is 1135
9999 mem: location 1135 is 98
9999 mem: location 1136 is 1150
9999 mem: location 1137 is 1120
9999 mem: location 1164 is 1135
9999 run: address to copy is 1135
9999 run: its type is number
9999 mem: location 1135 is 98
9999 mem: storing 98 in location 1174
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1174 is 98
9999 mem: storing 0 in location 1175
 103 run: break-unless newline?:boolean, 
9999 mem: location 1175 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1167 is 1
9999 mem: location 1163 is 4
9999 mem: storing 0 in location 1177
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1177 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1159 is 1009
9999 mem: location 1174 is 98
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1238
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1240
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1241
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1242
9999 mem: storing 0 in location 1243
 104 run: break-if color-found?:boolean, 
9999 mem: location 1243 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1242
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1244
9999 mem: storing 0 in location 1245
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1245 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1244
 104 run: break-unless x:address:screen, 
9999 mem: location 1240 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1240 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1246
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1240 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1247
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1240 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1248
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1240 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1249
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1241 is 98
9999 mem: storing 0 in location 1250
 104 run: break-unless newline?:boolean, 
9999 mem: location 1250 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1246 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1248 is 5
9999 mem: storing 5 in location 1253
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1253 is 5
9999 mem: location 1247 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 6 in location 1253
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1240 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1254
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1241 is 98
9999 mem: storing 0 in location 1255
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1255 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1254 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1253 is 6
9999 mem: location 1254 is 1014
9999 mem: location 1253 is 6
9999 mem: storing 1027 in location 1257
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1257 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1257 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 1258
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1257 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1257 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 1259
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1241 is 98
9999 mem: location 1258 is 1027
9999 mem: storing 98 in location 1027
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1242 is 7
9999 mem: location 1259 is 1028
9999 mem: storing 7 in location 1028
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1248 is 5
9999 mem: storing 4 in location 1260
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1247 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1260 is 4
9999 mem: storing 0 in location 1261
 104 run: break-if at-right?:boolean, 
9999 mem: location 1261 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1247 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1247 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1240 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1164 is 1135
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1262
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1135 in location 1264
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1264 is 1135
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1264 is 1135
9999 mem: location 1135 is 98
9999 mem: location 1136 is 1150
9999 mem: location 1137 is 1120
9999 mem: location 1264 is 1135
9999 run: address to copy is 1136
9999 run: its type is address
9999 mem: location 1136 is 1150
9999 mem: storing 1150 in location 1265
 104 run: reply result:address:duplex-list
9999 mem: location 1265 is 1150
9999 run: result 0 is 1150
9999 mem: storing 1150 in location 1164
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1165 is 1120
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1266
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1120 in location 1268
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1268 is 1120
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1268 is 1120
9999 mem: location 1120 is 97
9999 mem: location 1121 is 1135
9999 mem: location 1122 is 1109
9999 mem: location 1268 is 1120
9999 run: address to copy is 1121
9999 run: its type is address
9999 mem: location 1121 is 1135
9999 mem: storing 1135 in location 1269
 104 run: reply result:address:duplex-list
9999 mem: location 1269 is 1135
9999 run: result 0 is 1135
9999 mem: storing 1135 in location 1165
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1167 is 1
9999 mem: storing 2 in location 1167
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1164 is 1150
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1166 is 1
9999 mem: location 1162 is 5
9999 mem: storing 0 in location 1171
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1171 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1166 is 1
9999 mem: location 1168 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1172
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1172 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1167 is 2
9999 mem: location 1169 is 1100
9999 mem: location 1100 is 0
9999 mem: storing 0 in location 1173
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1173 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1164 is 1150
9999 mem: location 1150 is 99
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1135
9999 mem: location 1164 is 1150
9999 run: address to copy is 1150
9999 run: its type is number
9999 mem: location 1150 is 99
9999 mem: storing 99 in location 1174
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1174 is 99
9999 mem: storing 0 in location 1175
 103 run: break-unless newline?:boolean, 
9999 mem: location 1175 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1167 is 2
9999 mem: location 1163 is 4
9999 mem: storing 0 in location 1177
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1177 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1159 is 1009
9999 mem: location 1174 is 99
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1270
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1272
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1273
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 104 run: break-if color-found?:boolean, 
9999 mem: location 1275 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1274
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1276
9999 mem: storing 0 in location 1277
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1277 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1276
 104 run: break-unless x:address:screen, 
9999 mem: location 1272 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1272 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1272 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1278
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1272 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1272 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1279
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1272 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1272 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1280
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1272 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1272 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1281
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1273 is 99
9999 mem: storing 0 in location 1282
 104 run: break-unless newline?:boolean, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1278 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1280 is 5
9999 mem: storing 5 in location 1285
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1285 is 5
9999 mem: location 1279 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 7 in location 1285
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1272 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1272 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1286
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1273 is 99
9999 mem: storing 0 in location 1287
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1287 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1286 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1285 is 7
9999 mem: location 1286 is 1014
9999 mem: location 1285 is 7
9999 mem: storing 1029 in location 1289
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1289 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1289 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 1290
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1289 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1289 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 1291
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1273 is 99
9999 mem: location 1290 is 1029
9999 mem: storing 99 in location 1029
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1274 is 7
9999 mem: location 1291 is 1030
9999 mem: storing 7 in location 1030
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1280 is 5
9999 mem: storing 4 in location 1292
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1279 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1292 is 4
9999 mem: storing 0 in location 1293
 104 run: break-if at-right?:boolean, 
9999 mem: location 1293 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1279 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1279 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1272 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1164 is 1150
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1294
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1150 in location 1296
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1296 is 1150
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1296 is 1150
9999 mem: location 1150 is 99
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1135
9999 mem: location 1296 is 1150
9999 run: address to copy is 1151
9999 run: its type is address
9999 mem: location 1151 is 0
9999 mem: storing 0 in location 1297
 104 run: reply result:address:duplex-list
9999 mem: location 1297 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1164
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1165 is 1135
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1298
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1135 in location 1300
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1300 is 1135
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1300 is 1135
9999 mem: location 1135 is 98
9999 mem: location 1136 is 1150
9999 mem: location 1137 is 1120
9999 mem: location 1300 is 1135
9999 run: address to copy is 1136
9999 run: its type is address
9999 mem: location 1136 is 1150
9999 mem: storing 1150 in location 1301
 104 run: reply result:address:duplex-list
9999 mem: location 1301 is 1150
9999 run: result 0 is 1150
9999 mem: storing 1150 in location 1165
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1167 is 2
9999 mem: storing 3 in location 1167
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1164 is 0
9999 run: jumping to instruction 64
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1166 is 1
9999 mem: location 1168 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1172
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1167 is 3
9999 mem: location 1169 is 1100
9999 mem: location 1100 is 0
9999 mem: storing 0 in location 1178
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1172 is 1
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1179
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1166 is 1
9999 mem: location 1168 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 0 in location 1180
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1181
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 1181 is 0
9999 run: jumping to instruction 83
 103 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1159 is 1009
9999 mem: location 1167 is 3
9999 mem: location 1163 is 4
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1302
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1304
 104 run: left:number <- next-ingredient 
9999 mem: storing 3 in location 1305
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1306
 104 run: column:number <- copy left:number
9999 mem: location 1305 is 3
9999 mem: storing 3 in location 1307
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1307 is 3
9999 mem: location 1306 is 4
9999 mem: storing 0 in location 1308
 104 run: break-if done?:boolean, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1304 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1309
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1311
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1312
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1313
9999 mem: storing 0 in location 1314
 105 run: break-if color-found?:boolean, 
9999 mem: location 1314 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1313
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1315
9999 mem: storing 0 in location 1316
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1316 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1315
 105 run: break-unless x:address:screen, 
9999 mem: location 1311 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1311 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1311 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1317
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1311 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1311 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1318
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1311 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1311 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1319
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1311 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1311 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1320
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1312 is 32
9999 mem: storing 0 in location 1321
 105 run: break-unless newline?:boolean, 
9999 mem: location 1321 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1317 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1319 is 5
9999 mem: storing 5 in location 1324
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1324 is 5
9999 mem: location 1318 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 8 in location 1324
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1311 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1311 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1325
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1312 is 32
9999 mem: storing 0 in location 1326
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1326 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1325 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1324 is 8
9999 mem: location 1325 is 1014
9999 mem: location 1324 is 8
9999 mem: storing 1031 in location 1328
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1328 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1328 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1329
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1328 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1328 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1330
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1312 is 32
9999 mem: location 1329 is 1031
9999 mem: storing 32 in location 1031
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1313 is 7
9999 mem: location 1330 is 1032
9999 mem: storing 7 in location 1032
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1319 is 5
9999 mem: storing 4 in location 1331
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1318 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1332
 105 run: break-if at-right?:boolean, 
9999 mem: location 1332 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1318 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1318 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1311 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1307 is 3
9999 mem: storing 4 in location 1307
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1307 is 4
9999 mem: location 1306 is 4
9999 mem: storing 0 in location 1308
 104 run: break-if done?:boolean, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1304 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1333
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1335
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1336
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1337
9999 mem: storing 0 in location 1338
 105 run: break-if color-found?:boolean, 
9999 mem: location 1338 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1337
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1339
9999 mem: storing 0 in location 1340
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1340 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1339
 105 run: break-unless x:address:screen, 
9999 mem: location 1335 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1335 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1335 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1341
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1335 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1335 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1342
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1335 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1335 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1343
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1335 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1335 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1344
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1336 is 32
9999 mem: storing 0 in location 1345
 105 run: break-unless newline?:boolean, 
9999 mem: location 1345 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1341 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1343 is 5
9999 mem: storing 5 in location 1348
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1348 is 5
9999 mem: location 1342 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 9 in location 1348
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1335 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1335 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1349
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1336 is 32
9999 mem: storing 0 in location 1350
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1350 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1349 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1348 is 9
9999 mem: location 1349 is 1014
9999 mem: location 1348 is 9
9999 mem: storing 1033 in location 1352
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1352 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1352 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1353
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1352 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1352 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1354
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1336 is 32
9999 mem: location 1353 is 1033
9999 mem: storing 32 in location 1033
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1337 is 7
9999 mem: location 1354 is 1034
9999 mem: storing 7 in location 1034
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1343 is 5
9999 mem: storing 4 in location 1355
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1342 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1355 is 4
9999 mem: storing 1 in location 1356
 105 run: break-if at-right?:boolean, 
9999 mem: location 1356 is 1
9999 run: jumping to instruction 60
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1335 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1307 is 4
9999 mem: storing 5 in location 1307
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1307 is 5
9999 mem: location 1306 is 4
9999 mem: storing 1 in location 1308
 104 run: break-if done?:boolean, 
9999 mem: location 1308 is 1
9999 run: jumping to instruction 11
 103 run: reply row:number, screen:address/same-as-ingredient:0
9999 mem: location 1166 is 1
9999 mem: location 1159 is 1009
9999 run: result 0 is 1
9999 run: result 1 is 1009
9999 mem: storing 1009 in location 1083
 102 run: reply result:address:editor-data
9999 mem: location 1086 is 1095
9999 run: result 0 is 1095
9999 mem: storing 1095 in location 2
 101 run: assume-console [
    type [e]
  ]
parse: instruction: type
parse:   ingredient: {name: "e", properties: [_: "literal-string"]}
 101 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1001
after-brace: editor-event-loop ...
 101 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1362
9999 mem: location 2 is 1095
 102 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1364
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1366
 102 run: console:address <- next-ingredient 
9999 mem: storing 1362 in location 1367
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1368
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 1367 is 1362
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1379
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1362 in location 1381
 103 run: break-unless x:address:console, 
9999 mem: location 1381 is 1362
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 1381 is 1362
9999 mem: location 1362 is 0
9999 mem: location 1363 is 1357
9999 mem: location 1381 is 1362
9999 run: address to copy is 1362
9999 mem: storing 1362 in location 1382
 103 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 1381 is 1362
9999 mem: location 1362 is 0
9999 mem: location 1363 is 1357
9999 mem: location 1381 is 1362
9999 run: address to copy is 1363
9999 run: its type is address
9999 mem: location 1363 is 1357
9999 mem: storing 1357 in location 1383
 103 run: max:number <- length buf:address:array:event/deref
9999 mem: location 1383 is 1357
9999 mem: location 1357 is 1
9999 mem: location 1358 is 0
9999 mem: location 1359 is 101
9999 mem: location 1360 is 0
9999 mem: location 1361 is 0
9999 mem: location 1383 is 1357
9999 mem: storing 1 in location 1384
 103 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 1382 is 1362
9999 mem: location 1362 is 0
9999 mem: location 1384 is 1
9999 mem: storing 0 in location 1385
 103 run: break-unless done?:boolean, 
9999 mem: location 1385 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index buf:address:array:event/deref, idx:address:number/deref
9999 mem: location 1383 is 1357
9999 mem: location 1357 is 1
9999 mem: location 1358 is 0
9999 mem: location 1359 is 101
9999 mem: location 1360 is 0
9999 mem: location 1361 is 0
9999 mem: location 1382 is 1362
9999 mem: location 1362 is 0
9999 mem: location 1383 is 1357
9999 mem: location 1382 is 1362
9999 mem: location 1362 is 0
9999 run: address to copy is 1358
9999 run: its type is event
9999 mem: location 1358 is 0
9999 mem: location 1359 is 101
9999 mem: location 1360 is 0
9999 mem: location 1361 is 0
9999 mem: storing 0 in location 1387
9999 mem: storing 101 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
 103 run: idx:address:number/deref <- add idx:address:number/deref, 1:literal
9999 mem: location 1382 is 1362
9999 mem: location 1362 is 0
9999 mem: location 1382 is 1362
9999 mem: storing 1 in location 1362
 103 run: reply result:event, x:address:console/same-as-ingredient:0, 1:literal/found, 0:literal/quit
9999 mem: location 1387 is 0
9999 mem: location 1388 is 101
9999 mem: location 1389 is 0
9999 mem: location 1390 is 0
9999 mem: location 1381 is 1362
9999 run: result 0 is [0, 101, 0, 0]
9999 run: result 1 is 1362
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1369
9999 mem: storing 101 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 1362 in location 1367
9999 mem: storing 1 in location 1373
9999 mem: storing 0 in location 1374
 102 run: loop-unless found?:boolean, 
9999 mem: location 1373 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?:boolean, 
9999 mem: location 1374 is 0
9999 run: jump-if fell through
 102 run: trace [app], [next-event]
   1 app: next-event
 102 run: t:address:touch-event <- maybe-convert e:event, touch:variant
9999 mem: location 1369 is 0
9999 mem: location 1370 is 101
9999 mem: location 1371 is 0
9999 mem: location 1372 is 0
9999 mem: storing 0 in location 1375
 102 run: break-unless t:address:touch-event, 
9999 mem: location 1375 is 0
9999 run: jumping to instruction 15
 102 run: handle-event screen:address, console:address, editor:address:editor-data, e:event
9999 mem: location 1366 is 1009
9999 mem: location 1367 is 1362
9999 mem: location 1368 is 1095
9999 mem: location 1369 is 0
9999 mem: location 1370 is 101
9999 mem: location 1371 is 0
9999 mem: location 1372 is 0
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 38
9999 mem: new alloc: 1392
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1394
 103 run: console:address <- next-ingredient 
9999 mem: storing 1362 in location 1395
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1396
 103 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1397
9999 mem: storing 101 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
 103 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 1396 is 1095
9999 run: jumping to instruction 7
 103 run: c:address:character <- maybe-convert e:event, text:variant
9999 mem: location 1397 is 0
9999 mem: location 1398 is 101
9999 mem: location 1399 is 0
9999 mem: location 1400 is 0
9999 mem: storing 1398 in location 1401
 103 run: break-unless c:address:character, 
9999 mem: location 1401 is 1398
9999 run: jump-unless fell through
 103 run: backspace?:boolean <- equal c:address:character/deref, 8:literal/backspace
9999 mem: location 1401 is 1398
9999 mem: location 1398 is 101
9999 mem: storing 0 in location 1402
 103 run: break-unless backspace?:boolean, 
9999 mem: location 1402 is 0
9999 run: jumping to instruction 15
 103 run: insert-at-cursor editor:address:editor-data, c:address:character/deref, screen:address
9999 mem: location 1396 is 1095
9999 mem: location 1401 is 1398
9999 mem: location 1398 is 101
9999 mem: location 1394 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 15
9999 mem: new alloc: 1431
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1433
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1434
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1435
 104 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1433 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1109
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1433 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1436
 104 run: d:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 1433 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1109
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1433 is 1095
9999 run: address to copy is 1095
9999 run: its type is address
9999 mem: location 1095 is 1109
9999 mem: storing 1109 in location 1437
 104 run: insert-duplex c:character, before-cursor:address:address:duplex-list/deref
9999 mem: location 1434 is 101
9999 mem: location 1436 is 1096
9999 mem: location 1096 is 1109
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1447
 105 run: x:location <- next-ingredient 
9999 mem: storing 101 in location 1449
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1109 in location 1450
 105 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1455
9999 mem: storing 1455 in location 1451
 105 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1451 is 1455
9999 mem: location 1455 is 0
9999 mem: location 1456 is 0
9999 mem: location 1457 is 0
9999 mem: location 1451 is 1455
9999 run: address to copy is 1455
9999 mem: storing 1455 in location 1452
 105 run: val:address:location/deref <- copy x:location
9999 mem: location 1449 is 101
9999 mem: location 1452 is 1455
9999 mem: storing 101 in location 1455
 105 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1450 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 1120
9999 mem: location 1111 is 0
9999 mem: location 1450 is 1109
9999 run: address to copy is 1110
9999 run: its type is address
9999 mem: location 1110 is 1120
9999 mem: storing 1120 in location 1453
 105 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1450 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 1120
9999 mem: location 1111 is 0
9999 mem: location 1450 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1454
 105 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1451 is 1455
9999 mem: location 1454 is 1110
9999 mem: storing 1455 in location 1110
 105 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1451 is 1455
9999 mem: location 1455 is 101
9999 mem: location 1456 is 0
9999 mem: location 1457 is 0
9999 mem: location 1451 is 1455
9999 run: address to copy is 1457
9999 mem: storing 1457 in location 1454
 105 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1450 is 1109
9999 mem: location 1454 is 1457
9999 mem: storing 1109 in location 1457
 105 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1451 is 1455
9999 mem: location 1455 is 101
9999 mem: location 1456 is 0
9999 mem: location 1457 is 1109
9999 mem: location 1451 is 1455
9999 run: address to copy is 1456
9999 mem: storing 1456 in location 1454
 105 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1453 is 1120
9999 mem: location 1454 is 1456
9999 mem: storing 1120 in location 1456
 105 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1453 is 1120
9999 run: jumping to instruction 15
 105 run: y:address:address:duplex-list <- get-address next-node:address:duplex-list/deref, prev:offset
9999 mem: location 1453 is 1120
9999 mem: location 1120 is 97
9999 mem: location 1121 is 1135
9999 mem: location 1122 is 1109
9999 mem: location 1453 is 1120
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1454
 105 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1451 is 1455
9999 mem: location 1454 is 1122
9999 mem: storing 1455 in location 1122
 105 run: reply new-node:address:duplex-list
9999 mem: location 1451 is 1455
 104 run: before-cursor:address:address:duplex-list/deref <- next-duplex before-cursor:address:address:duplex-list/deref
9999 mem: location 1436 is 1096
9999 mem: location 1096 is 1109
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1458
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1109 in location 1460
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1460 is 1109
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1460 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 1455
9999 mem: location 1111 is 0
9999 mem: location 1460 is 1109
9999 run: address to copy is 1110
9999 run: its type is address
9999 mem: location 1110 is 1455
9999 mem: storing 1455 in location 1461
 105 run: reply result:address:duplex-list
9999 mem: location 1461 is 1455
9999 run: result 0 is 1455
9999 mem: location 1436 is 1096
9999 mem: storing 1455 in location 1096
 104 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1433 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1455
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1433 is 1095
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1438
 104 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1433 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1455
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1433 is 1095
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1439
 104 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1433 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1455
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1433 is 1095
9999 run: address to copy is 1097
9999 run: its type is number
9999 mem: location 1097 is 0
9999 mem: storing 0 in location 1440
 104 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1433 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1455
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1433 is 1095
9999 run: address to copy is 1098
9999 run: its type is number
9999 mem: location 1098 is 4
9999 mem: storing 4 in location 1441
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1434 is 101
9999 mem: storing 0 in location 1442
 104 run: break-unless newline?:boolean, 
9999 mem: location 1442 is 0
9999 run: jumping to instruction 18
 104 run: wrap-column:number <- subtract right:number, 1:literal
9999 mem: location 1441 is 4
9999 mem: storing 3 in location 1443
 104 run: at-wrap?:boolean <- greater-or-equal cursor-column:address:number/deref, wrap-column:number
9999 mem: location 1439 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1443 is 3
9999 mem: storing 0 in location 1444
 104 run: break-unless at-wrap?:boolean, 
9999 mem: location 1444 is 0
9999 run: jumping to instruction 29
 104 run: cursor-column:address:number/deref <- add cursor-column:address:number/deref, 1:literal
9999 mem: location 1439 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1439 is 1100
9999 mem: storing 1 in location 1100
 103 run: reply 
 102 run: row:number, screen:address <- render screen:address, editor:address:editor-data
9999 mem: location 1366 is 1009
9999 mem: location 1368 is 1095
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: new alloc: 1462
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1464
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1465
 103 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 1465 is 1095
9999 run: jumping to instruction 5
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1465 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1455
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1465 is 1095
9999 run: address to copy is 1097
9999 run: its type is number
9999 mem: location 1097 is 0
9999 mem: storing 0 in location 1466
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1464 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1489
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1491
 104 run: break-unless x:address:screen, 
9999 mem: location 1491 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1491 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1491 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1492
 104 run: reply height:number
9999 mem: location 1492 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1467
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1465 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1455
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1465 is 1095
9999 run: address to copy is 1098
9999 run: its type is number
9999 mem: location 1098 is 4
9999 mem: storing 4 in location 1468
 103 run: hide-screen screen:address
9999 mem: location 1464 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: new alloc: 1493
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1495
 104 run: break-unless x:address:screen, 
9999 mem: location 1495 is 1009
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 1495 is 1009
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 1465 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1455
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1465 is 1095
9999 run: address to copy is 1095
9999 run: its type is address
9999 mem: location 1095 is 1109
9999 mem: storing 1109 in location 1469
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1469 is 1109
9999 mem: storing 1109 in location 1470
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1469 is 1109
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1496
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1109 in location 1498
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1498 is 1109
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1498 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 1455
9999 mem: location 1111 is 0
9999 mem: location 1498 is 1109
9999 run: address to copy is 1110
9999 run: its type is address
9999 mem: location 1110 is 1455
9999 mem: storing 1455 in location 1499
 104 run: reply result:address:duplex-list
9999 mem: location 1499 is 1455
9999 run: result 0 is 1455
9999 mem: storing 1455 in location 1469
 103 run: row:number <- copy 1:literal/top
9999 mem: storing 1 in location 1471
 103 run: column:number <- copy left:number
9999 mem: location 1466 is 0
9999 mem: storing 0 in location 1472
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1465 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1455
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1465 is 1095
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1473
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1465 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1455
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1465 is 1095
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1474
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1465 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1455
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1465 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1475
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1464 is 1009
9999 mem: location 1471 is 1
9999 mem: location 1472 is 0
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1500
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1502
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1503
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1504
 104 run: break-unless x:address:screen, 
9999 mem: location 1502 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1502 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1502 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1505
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1503 is 1
9999 mem: location 1505 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1502 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1502 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1506
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1504 is 0
9999 mem: location 1506 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1502 is 1009
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1469 is 1455
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1471 is 1
9999 mem: location 1467 is 5
9999 mem: storing 0 in location 1476
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1476 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1471 is 1
9999 mem: location 1473 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1477
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1477 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1472 is 0
9999 mem: location 1474 is 1100
9999 mem: location 1100 is 1
9999 mem: storing 0 in location 1478
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1478 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1469 is 1455
9999 mem: location 1455 is 101
9999 mem: location 1456 is 1120
9999 mem: location 1457 is 1109
9999 mem: location 1469 is 1455
9999 run: address to copy is 1455
9999 run: its type is number
9999 mem: location 1455 is 101
9999 mem: storing 101 in location 1479
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1479 is 101
9999 mem: storing 0 in location 1480
 103 run: break-unless newline?:boolean, 
9999 mem: location 1480 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1472 is 0
9999 mem: location 1468 is 4
9999 mem: storing 0 in location 1482
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1482 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1464 is 1009
9999 mem: location 1479 is 101
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1507
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1509
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1510
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1511
9999 mem: storing 0 in location 1512
 104 run: break-if color-found?:boolean, 
9999 mem: location 1512 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1511
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1513
9999 mem: storing 0 in location 1514
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1514 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1513
 104 run: break-unless x:address:screen, 
9999 mem: location 1509 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1509 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1509 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1515
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1509 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1509 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1516
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1509 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1509 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1517
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1509 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1509 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1518
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1510 is 101
9999 mem: storing 0 in location 1519
 104 run: break-unless newline?:boolean, 
9999 mem: location 1519 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1515 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1517 is 5
9999 mem: storing 5 in location 1522
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1522 is 5
9999 mem: location 1516 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 5 in location 1522
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1509 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1509 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1523
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1510 is 101
9999 mem: storing 0 in location 1524
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1524 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1523 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1522 is 5
9999 mem: location 1523 is 1014
9999 mem: location 1522 is 5
9999 mem: storing 1025 in location 1526
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1526 is 1025
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1526 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1527
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1526 is 1025
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1526 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1528
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1510 is 101
9999 mem: location 1527 is 1025
9999 mem: storing 101 in location 1025
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1511 is 7
9999 mem: location 1528 is 1026
9999 mem: storing 7 in location 1026
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1517 is 5
9999 mem: storing 4 in location 1529
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1516 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1529 is 4
9999 mem: storing 0 in location 1530
 104 run: break-if at-right?:boolean, 
9999 mem: location 1530 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1516 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1516 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1509 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1469 is 1455
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1531
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1455 in location 1533
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1533 is 1455
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1533 is 1455
9999 mem: location 1455 is 101
9999 mem: location 1456 is 1120
9999 mem: location 1457 is 1109
9999 mem: location 1533 is 1455
9999 run: address to copy is 1456
9999 run: its type is address
9999 mem: location 1456 is 1120
9999 mem: storing 1120 in location 1534
 104 run: reply result:address:duplex-list
9999 mem: location 1534 is 1120
9999 run: result 0 is 1120
9999 mem: storing 1120 in location 1469
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1470 is 1109
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1535
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1109 in location 1537
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1537 is 1109
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1537 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 1455
9999 mem: location 1111 is 0
9999 mem: location 1537 is 1109
9999 run: address to copy is 1110
9999 run: its type is address
9999 mem: location 1110 is 1455
9999 mem: storing 1455 in location 1538
 104 run: reply result:address:duplex-list
9999 mem: location 1538 is 1455
9999 run: result 0 is 1455
9999 mem: storing 1455 in location 1470
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1472 is 0
9999 mem: storing 1 in location 1472
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1469 is 1120
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1471 is 1
9999 mem: location 1467 is 5
9999 mem: storing 0 in location 1476
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1476 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1471 is 1
9999 mem: location 1473 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1477
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1477 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1472 is 1
9999 mem: location 1474 is 1100
9999 mem: location 1100 is 1
9999 mem: storing 1 in location 1478
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1478 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1469 is 1120
schedule: prev-duplex/render/editor-event-loop/run1001/editor-wraps-line-on-insert
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1539
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1120 in location 1541
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1541 is 1120
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1541 is 1120
9999 mem: location 1120 is 97
9999 mem: location 1121 is 1135
9999 mem: location 1122 is 1455
9999 mem: location 1541 is 1120
9999 run: address to copy is 1122
9999 run: its type is address
9999 mem: location 1122 is 1455
9999 mem: storing 1455 in location 1542
 104 run: reply result:address:duplex-list
9999 mem: location 1542 is 1455
9999 run: result 0 is 1455
9999 mem: location 1475 is 1096
9999 mem: storing 1455 in location 1096
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1469 is 1120
9999 mem: location 1120 is 97
9999 mem: location 1121 is 1135
9999 mem: location 1122 is 1455
9999 mem: location 1469 is 1120
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 97
9999 mem: storing 97 in location 1479
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1479 is 97
9999 mem: storing 0 in location 1480
 103 run: break-unless newline?:boolean, 
9999 mem: location 1480 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1472 is 1
9999 mem: location 1468 is 4
9999 mem: storing 0 in location 1482
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1482 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1464 is 1009
9999 mem: location 1479 is 97
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1543
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1545
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1546
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1547
9999 mem: storing 0 in location 1548
 104 run: break-if color-found?:boolean, 
9999 mem: location 1548 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1547
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1549
9999 mem: storing 0 in location 1550
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1550 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1549
 104 run: break-unless x:address:screen, 
9999 mem: location 1545 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1545 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1545 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1551
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1545 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1545 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1552
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1545 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1545 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1553
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1545 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1545 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1554
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1546 is 97
9999 mem: storing 0 in location 1555
 104 run: break-unless newline?:boolean, 
9999 mem: location 1555 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1551 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1553 is 5
9999 mem: storing 5 in location 1558
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1558 is 5
9999 mem: location 1552 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 6 in location 1558
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1545 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1545 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1559
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1546 is 97
9999 mem: storing 0 in location 1560
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1560 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1559 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1558 is 6
9999 mem: location 1559 is 1014
9999 mem: location 1558 is 6
9999 mem: storing 1027 in location 1562
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1562 is 1027
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1562 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 1563
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1562 is 1027
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1562 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 1564
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1546 is 97
9999 mem: location 1563 is 1027
9999 mem: storing 97 in location 1027
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1547 is 7
9999 mem: location 1564 is 1028
9999 mem: storing 7 in location 1028
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1553 is 5
9999 mem: storing 4 in location 1565
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1552 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1565 is 4
9999 mem: storing 0 in location 1566
 104 run: break-if at-right?:boolean, 
9999 mem: location 1566 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1552 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1552 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1545 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1469 is 1120
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1567
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1120 in location 1569
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1569 is 1120
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1569 is 1120
9999 mem: location 1120 is 97
9999 mem: location 1121 is 1135
9999 mem: location 1122 is 1455
9999 mem: location 1569 is 1120
9999 run: address to copy is 1121
9999 run: its type is address
9999 mem: location 1121 is 1135
9999 mem: storing 1135 in location 1570
 104 run: reply result:address:duplex-list
9999 mem: location 1570 is 1135
9999 run: result 0 is 1135
9999 mem: storing 1135 in location 1469
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1470 is 1455
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1571
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1455 in location 1573
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1573 is 1455
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1573 is 1455
9999 mem: location 1455 is 101
9999 mem: location 1456 is 1120
9999 mem: location 1457 is 1109
9999 mem: location 1573 is 1455
9999 run: address to copy is 1456
9999 run: its type is address
9999 mem: location 1456 is 1120
9999 mem: storing 1120 in location 1574
 104 run: reply result:address:duplex-list
9999 mem: location 1574 is 1120
9999 run: result 0 is 1120
9999 mem: storing 1120 in location 1470
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1472 is 1
9999 mem: storing 2 in location 1472
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1469 is 1135
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1471 is 1
9999 mem: location 1467 is 5
9999 mem: storing 0 in location 1476
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1476 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1471 is 1
9999 mem: location 1473 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1477
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1477 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1472 is 2
9999 mem: location 1474 is 1100
9999 mem: location 1100 is 1
9999 mem: storing 0 in location 1478
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1478 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1469 is 1135
9999 mem: location 1135 is 98
9999 mem: location 1136 is 1150
9999 mem: location 1137 is 1120
9999 mem: location 1469 is 1135
9999 run: address to copy is 1135
9999 run: its type is number
9999 mem: location 1135 is 98
9999 mem: storing 98 in location 1479
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1479 is 98
9999 mem: storing 0 in location 1480
 103 run: break-unless newline?:boolean, 
9999 mem: location 1480 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1472 is 2
9999 mem: location 1468 is 4
9999 mem: storing 0 in location 1482
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1482 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1464 is 1009
9999 mem: location 1479 is 98
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1575
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1577
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1578
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1579
9999 mem: storing 0 in location 1580
 104 run: break-if color-found?:boolean, 
9999 mem: location 1580 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1579
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1581
9999 mem: storing 0 in location 1582
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1582 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1581
 104 run: break-unless x:address:screen, 
9999 mem: location 1577 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1577 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1577 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1583
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1577 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1577 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1584
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1577 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1577 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1585
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1577 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1577 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1586
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1578 is 98
9999 mem: storing 0 in location 1587
 104 run: break-unless newline?:boolean, 
9999 mem: location 1587 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1583 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1585 is 5
9999 mem: storing 5 in location 1590
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1590 is 5
9999 mem: location 1584 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 7 in location 1590
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1577 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1577 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1591
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1578 is 98
9999 mem: storing 0 in location 1592
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1592 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1591 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1590 is 7
9999 mem: location 1591 is 1014
9999 mem: location 1590 is 7
9999 mem: storing 1029 in location 1594
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1594 is 1029
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1594 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 1595
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1594 is 1029
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1594 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 1596
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1578 is 98
9999 mem: location 1595 is 1029
9999 mem: storing 98 in location 1029
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1579 is 7
9999 mem: location 1596 is 1030
9999 mem: storing 7 in location 1030
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1585 is 5
9999 mem: storing 4 in location 1597
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1584 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1597 is 4
9999 mem: storing 0 in location 1598
 104 run: break-if at-right?:boolean, 
9999 mem: location 1598 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1584 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1584 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1577 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1469 is 1135
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1599
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1135 in location 1601
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1601 is 1135
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1601 is 1135
9999 mem: location 1135 is 98
9999 mem: location 1136 is 1150
9999 mem: location 1137 is 1120
9999 mem: location 1601 is 1135
9999 run: address to copy is 1136
9999 run: its type is address
9999 mem: location 1136 is 1150
9999 mem: storing 1150 in location 1602
 104 run: reply result:address:duplex-list
9999 mem: location 1602 is 1150
9999 run: result 0 is 1150
9999 mem: storing 1150 in location 1469
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1470 is 1120
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1603
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1120 in location 1605
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1605 is 1120
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1605 is 1120
9999 mem: location 1120 is 97
9999 mem: location 1121 is 1135
9999 mem: location 1122 is 1455
9999 mem: location 1605 is 1120
9999 run: address to copy is 1121
9999 run: its type is address
9999 mem: location 1121 is 1135
9999 mem: storing 1135 in location 1606
 104 run: reply result:address:duplex-list
9999 mem: location 1606 is 1135
9999 run: result 0 is 1135
9999 mem: storing 1135 in location 1470
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1472 is 2
9999 mem: storing 3 in location 1472
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1469 is 1150
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1471 is 1
9999 mem: location 1467 is 5
9999 mem: storing 0 in location 1476
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1476 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1471 is 1
9999 mem: location 1473 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1477
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1477 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1472 is 3
9999 mem: location 1474 is 1100
9999 mem: location 1100 is 1
9999 mem: storing 0 in location 1478
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1478 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1469 is 1150
9999 mem: location 1150 is 99
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1135
9999 mem: location 1469 is 1150
9999 run: address to copy is 1150
9999 run: its type is number
9999 mem: location 1150 is 99
9999 mem: storing 99 in location 1479
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1479 is 99
9999 mem: storing 0 in location 1480
 103 run: break-unless newline?:boolean, 
9999 mem: location 1480 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1472 is 3
9999 mem: location 1468 is 4
9999 mem: storing 0 in location 1482
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1482 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1464 is 1009
9999 mem: location 1479 is 99
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1607
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1609
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1610
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1611
9999 mem: storing 0 in location 1612
 104 run: break-if color-found?:boolean, 
9999 mem: location 1612 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1611
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1613
9999 mem: storing 0 in location 1614
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1614 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1613
 104 run: break-unless x:address:screen, 
9999 mem: location 1609 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1609 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1609 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1615
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1609 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1609 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1616
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1609 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1609 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1617
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1609 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1609 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1618
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1610 is 99
9999 mem: storing 0 in location 1619
 104 run: break-unless newline?:boolean, 
9999 mem: location 1619 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1615 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1617 is 5
9999 mem: storing 5 in location 1622
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1622 is 5
9999 mem: location 1616 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 8 in location 1622
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1609 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1609 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1623
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1610 is 99
9999 mem: storing 0 in location 1624
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1624 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1623 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1622 is 8
9999 mem: location 1623 is 1014
9999 mem: location 1622 is 8
9999 mem: storing 1031 in location 1626
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1626 is 1031
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1626 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1627
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1626 is 1031
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1626 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1628
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1610 is 99
9999 mem: location 1627 is 1031
9999 mem: storing 99 in location 1031
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1611 is 7
9999 mem: location 1628 is 1032
9999 mem: storing 7 in location 1032
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1617 is 5
9999 mem: storing 4 in location 1629
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1616 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1629 is 4
9999 mem: storing 0 in location 1630
 104 run: break-if at-right?:boolean, 
9999 mem: location 1630 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1616 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1616 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1609 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1469 is 1150
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1631
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1150 in location 1633
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1633 is 1150
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1633 is 1150
9999 mem: location 1150 is 99
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1135
9999 mem: location 1633 is 1150
9999 run: address to copy is 1151
9999 run: its type is address
9999 mem: location 1151 is 0
9999 mem: storing 0 in location 1634
 104 run: reply result:address:duplex-list
9999 mem: location 1634 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1469
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1470 is 1135
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1635
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1135 in location 1637
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1637 is 1135
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1637 is 1135
9999 mem: location 1135 is 98
9999 mem: location 1136 is 1150
9999 mem: location 1137 is 1120
9999 mem: location 1637 is 1135
9999 run: address to copy is 1136
9999 run: its type is address
9999 mem: location 1136 is 1150
9999 mem: storing 1150 in location 1638
 104 run: reply result:address:duplex-list
9999 mem: location 1638 is 1150
9999 run: result 0 is 1150
9999 mem: storing 1150 in location 1470
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1472 is 3
9999 mem: storing 4 in location 1472
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1469 is 0
9999 run: jumping to instruction 64
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1471 is 1
9999 mem: location 1473 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1477
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1472 is 4
9999 mem: location 1474 is 1100
9999 mem: location 1100 is 1
9999 mem: storing 0 in location 1483
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1477 is 1
9999 mem: location 1483 is 0
9999 mem: storing 0 in location 1484
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1471 is 1
9999 mem: location 1473 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 0 in location 1485
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1484 is 0
9999 mem: location 1485 is 0
9999 mem: storing 0 in location 1486
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 1486 is 0
9999 run: jumping to instruction 83
 103 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1464 is 1009
9999 mem: location 1472 is 4
9999 mem: location 1468 is 4
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1639
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1641
 104 run: left:number <- next-ingredient 
9999 mem: storing 4 in location 1642
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1643
 104 run: column:number <- copy left:number
9999 mem: location 1642 is 4
9999 mem: storing 4 in location 1644
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1644 is 4
9999 mem: location 1643 is 4
9999 mem: storing 0 in location 1645
 104 run: break-if done?:boolean, 
9999 mem: location 1645 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1641 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1646
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1648
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1649
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1650
9999 mem: storing 0 in location 1651
 105 run: break-if color-found?:boolean, 
9999 mem: location 1651 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1650
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1652
9999 mem: storing 0 in location 1653
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1653 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1652
 105 run: break-unless x:address:screen, 
9999 mem: location 1648 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1648 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1648 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1654
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1648 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1648 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1655
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1648 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1648 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1656
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1648 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1648 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1657
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1649 is 32
9999 mem: storing 0 in location 1658
 105 run: break-unless newline?:boolean, 
9999 mem: location 1658 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1654 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1656 is 5
9999 mem: storing 5 in location 1661
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1661 is 5
9999 mem: location 1655 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 9 in location 1661
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1648 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1648 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1662
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1649 is 32
9999 mem: storing 0 in location 1663
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1663 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1662 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1661 is 9
9999 mem: location 1662 is 1014
9999 mem: location 1661 is 9
9999 mem: storing 1033 in location 1665
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1665 is 1033
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1665 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1666
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1665 is 1033
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1665 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1667
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1649 is 32
9999 mem: location 1666 is 1033
9999 mem: storing 32 in location 1033
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1650 is 7
9999 mem: location 1667 is 1034
9999 mem: storing 7 in location 1034
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1656 is 5
9999 mem: storing 4 in location 1668
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1655 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1668 is 4
9999 mem: storing 1 in location 1669
 105 run: break-if at-right?:boolean, 
9999 mem: location 1669 is 1
9999 run: jumping to instruction 60
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1648 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1644 is 4
9999 mem: storing 5 in location 1644
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1644 is 5
9999 mem: location 1643 is 4
9999 mem: storing 1 in location 1645
 104 run: break-if done?:boolean, 
9999 mem: location 1645 is 1
9999 run: jumping to instruction 11
 103 run: reply row:number, screen:address/same-as-ingredient:0
9999 mem: location 1471 is 1
9999 mem: location 1464 is 1009
9999 run: result 0 is 1
9999 run: result 1 is 1009
9999 mem: storing 1 in location 1376
9999 mem: storing 1009 in location 1366
 102 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1368 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1455
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1368 is 1095
9999 run: address to copy is 1097
9999 run: its type is number
9999 mem: location 1097 is 0
9999 mem: storing 0 in location 1377
 102 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1368 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1455
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1368 is 1095
9999 run: address to copy is 1098
9999 run: its type is number
9999 mem: location 1098 is 4
9999 mem: storing 4 in location 1378
 102 run: row:number <- add row:number, 1:literal
9999 mem: location 1376 is 1
9999 mem: storing 2 in location 1376
 102 run: move-cursor screen:address, row:number, left:number
9999 mem: location 1366 is 1009
9999 mem: location 1376 is 2
9999 mem: location 1377 is 0
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1670
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1672
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1673
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1674
 103 run: break-unless x:address:screen, 
9999 mem: location 1672 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1672 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1672 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1675
 103 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1673 is 2
9999 mem: location 1675 is 1011
9999 mem: storing 2 in location 1011
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1672 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1672 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1676
 103 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1674 is 0
9999 mem: location 1676 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1672 is 1009
 102 run: clear-line-delimited screen:address, left:number, right:number
9999 mem: location 1366 is 1009
9999 mem: location 1377 is 0
9999 mem: location 1378 is 4
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1677
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1679
 103 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1680
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1681
 103 run: column:number <- copy left:number
9999 mem: location 1680 is 0
9999 mem: storing 0 in location 1682
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1682 is 0
9999 mem: location 1681 is 4
9999 mem: storing 0 in location 1683
 103 run: break-if done?:boolean, 
9999 mem: location 1683 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1679 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1684
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1686
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1687
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1688
9999 mem: storing 0 in location 1689
 104 run: break-if color-found?:boolean, 
9999 mem: location 1689 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1688
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1690
9999 mem: storing 0 in location 1691
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1691 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1690
 104 run: break-unless x:address:screen, 
9999 mem: location 1686 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1686 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1686 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1692
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1686 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1686 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1693
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1686 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1686 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1694
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1686 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1686 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1695
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1687 is 32
9999 mem: storing 0 in location 1696
 104 run: break-unless newline?:boolean, 
9999 mem: location 1696 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1692 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1694 is 5
9999 mem: storing 10 in location 1699
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1699 is 10
9999 mem: location 1693 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1699
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1686 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1686 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1700
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1687 is 32
9999 mem: storing 0 in location 1701
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1701 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1700 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1699 is 10
9999 mem: location 1700 is 1014
9999 mem: location 1699 is 10
9999 mem: storing 1035 in location 1703
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1703 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1703 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1704
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1703 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1703 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1705
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1687 is 32
9999 mem: location 1704 is 1035
9999 mem: storing 32 in location 1035
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1688 is 7
9999 mem: location 1705 is 1036
9999 mem: storing 7 in location 1036
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1694 is 5
9999 mem: storing 4 in location 1706
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1693 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1706 is 4
9999 mem: storing 0 in location 1707
 104 run: break-if at-right?:boolean, 
9999 mem: location 1707 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1693 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1693 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1686 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1682 is 0
9999 mem: storing 1 in location 1682
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1682 is 1
9999 mem: location 1681 is 4
9999 mem: storing 0 in location 1683
 103 run: break-if done?:boolean, 
9999 mem: location 1683 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1679 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1708
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1710
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1711
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1712
9999 mem: storing 0 in location 1713
 104 run: break-if color-found?:boolean, 
9999 mem: location 1713 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1712
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1714
9999 mem: storing 0 in location 1715
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1715 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1714
 104 run: break-unless x:address:screen, 
9999 mem: location 1710 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1710 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1710 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1716
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1710 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1710 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1717
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1710 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1710 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1718
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1710 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1710 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1719
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1711 is 32
9999 mem: storing 0 in location 1720
 104 run: break-unless newline?:boolean, 
9999 mem: location 1720 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1716 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1718 is 5
9999 mem: storing 10 in location 1723
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1723 is 10
9999 mem: location 1717 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1723
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1710 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1710 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1724
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1711 is 32
9999 mem: storing 0 in location 1725
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1725 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1724 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1723 is 11
9999 mem: location 1724 is 1014
9999 mem: location 1723 is 11
9999 mem: storing 1037 in location 1727
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1727 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1727 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1728
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1727 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1727 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1729
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1711 is 32
9999 mem: location 1728 is 1037
9999 mem: storing 32 in location 1037
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1712 is 7
9999 mem: location 1729 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1718 is 5
9999 mem: storing 4 in location 1730
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1717 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1730 is 4
9999 mem: storing 0 in location 1731
 104 run: break-if at-right?:boolean, 
9999 mem: location 1731 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1717 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1717 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1710 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1682 is 1
9999 mem: storing 2 in location 1682
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1682 is 2
9999 mem: location 1681 is 4
9999 mem: storing 0 in location 1683
 103 run: break-if done?:boolean, 
9999 mem: location 1683 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1679 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1732
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1734
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1735
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1736
9999 mem: storing 0 in location 1737
 104 run: break-if color-found?:boolean, 
9999 mem: location 1737 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1736
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1738
9999 mem: storing 0 in location 1739
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1739 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1738
 104 run: break-unless x:address:screen, 
9999 mem: location 1734 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1734 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1734 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1740
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1734 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1734 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1741
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1734 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1734 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1742
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1734 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1734 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1743
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1735 is 32
9999 mem: storing 0 in location 1744
 104 run: break-unless newline?:boolean, 
9999 mem: location 1744 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1740 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1742 is 5
9999 mem: storing 10 in location 1747
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1747 is 10
9999 mem: location 1741 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1747
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1734 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1734 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1748
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1735 is 32
9999 mem: storing 0 in location 1749
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1749 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1748 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1747 is 12
9999 mem: location 1748 is 1014
9999 mem: location 1747 is 12
9999 mem: storing 1039 in location 1751
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1751 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1751 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1752
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1751 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1751 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1753
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1735 is 32
9999 mem: location 1752 is 1039
9999 mem: storing 32 in location 1039
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1736 is 7
9999 mem: location 1753 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1742 is 5
9999 mem: storing 4 in location 1754
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1741 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1754 is 4
9999 mem: storing 0 in location 1755
 104 run: break-if at-right?:boolean, 
9999 mem: location 1755 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1741 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1741 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1734 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1682 is 2
9999 mem: storing 3 in location 1682
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1682 is 3
9999 mem: location 1681 is 4
9999 mem: storing 0 in location 1683
 103 run: break-if done?:boolean, 
9999 mem: location 1683 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1679 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1756
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1758
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1759
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1760
9999 mem: storing 0 in location 1761
 104 run: break-if color-found?:boolean, 
9999 mem: location 1761 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1760
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1762
9999 mem: storing 0 in location 1763
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1763 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1762
 104 run: break-unless x:address:screen, 
9999 mem: location 1758 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1758 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1758 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1764
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1758 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1758 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1765
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1758 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1758 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1766
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1758 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1758 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1767
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1759 is 32
9999 mem: storing 0 in location 1768
 104 run: break-unless newline?:boolean, 
9999 mem: location 1768 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1764 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1766 is 5
9999 mem: storing 10 in location 1771
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1771 is 10
9999 mem: location 1765 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1771
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1758 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1758 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1772
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1759 is 32
9999 mem: storing 0 in location 1773
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1773 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1772 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1771 is 13
9999 mem: location 1772 is 1014
9999 mem: location 1771 is 13
9999 mem: storing 1041 in location 1775
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1775 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1775 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1776
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1775 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1775 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1777
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1759 is 32
9999 mem: location 1776 is 1041
9999 mem: storing 32 in location 1041
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1760 is 7
9999 mem: location 1777 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1766 is 5
9999 mem: storing 4 in location 1778
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1765 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1778 is 4
9999 mem: storing 0 in location 1779
 104 run: break-if at-right?:boolean, 
9999 mem: location 1779 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1765 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1765 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1758 is 1009
schedule: clear-line-delimited/editor-event-loop/run1001/editor-wraps-line-on-insert
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1682 is 3
9999 mem: storing 4 in location 1682
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1682 is 4
9999 mem: location 1681 is 4
9999 mem: storing 0 in location 1683
 103 run: break-if done?:boolean, 
9999 mem: location 1683 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1679 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1780
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1782
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1783
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1784
9999 mem: storing 0 in location 1785
 104 run: break-if color-found?:boolean, 
9999 mem: location 1785 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1784
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1786
9999 mem: storing 0 in location 1787
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1787 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1786
 104 run: break-unless x:address:screen, 
9999 mem: location 1782 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1782 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1782 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1788
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1782 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1782 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1789
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1782 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1782 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1790
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1782 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1782 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1791
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1783 is 32
9999 mem: storing 0 in location 1792
 104 run: break-unless newline?:boolean, 
9999 mem: location 1792 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1788 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1790 is 5
9999 mem: storing 10 in location 1795
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1795 is 10
9999 mem: location 1789 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1795
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1782 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1782 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1796
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1783 is 32
9999 mem: storing 0 in location 1797
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1797 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1796 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1795 is 14
9999 mem: location 1796 is 1014
9999 mem: location 1795 is 14
9999 mem: storing 1043 in location 1799
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1799 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1799 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1800
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1799 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1799 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1801
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1783 is 32
9999 mem: location 1800 is 1043
9999 mem: storing 32 in location 1043
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1784 is 7
9999 mem: location 1801 is 1044
9999 mem: storing 7 in location 1044
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1790 is 5
9999 mem: storing 4 in location 1802
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1789 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1802 is 4
9999 mem: storing 1 in location 1803
 104 run: break-if at-right?:boolean, 
9999 mem: location 1803 is 1
9999 run: jumping to instruction 60
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1782 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1682 is 4
9999 mem: storing 5 in location 1682
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1682 is 5
9999 mem: location 1681 is 4
9999 mem: storing 1 in location 1683
 103 run: break-if done?:boolean, 
9999 mem: location 1683 is 1
9999 run: jumping to instruction 11
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 1367 is 1362
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1804
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1362 in location 1806
 103 run: break-unless x:address:console, 
9999 mem: location 1806 is 1362
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 1806 is 1362
9999 mem: location 1362 is 1
9999 mem: location 1363 is 1357
9999 mem: location 1806 is 1362
9999 run: address to copy is 1362
9999 mem: storing 1362 in location 1807
 103 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 1806 is 1362
9999 mem: location 1362 is 1
9999 mem: location 1363 is 1357
9999 mem: location 1806 is 1362
9999 run: address to copy is 1363
9999 run: its type is address
9999 mem: location 1363 is 1357
9999 mem: storing 1357 in location 1808
 103 run: max:number <- length buf:address:array:event/deref
9999 mem: location 1808 is 1357
9999 mem: location 1357 is 1
9999 mem: location 1358 is 0
9999 mem: location 1359 is 101
9999 mem: location 1360 is 0
9999 mem: location 1361 is 0
9999 mem: location 1808 is 1357
9999 mem: storing 1 in location 1809
 103 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 1807 is 1362
9999 mem: location 1362 is 1
9999 mem: location 1809 is 1
9999 mem: storing 1 in location 1810
 103 run: break-unless done?:boolean, 
9999 mem: location 1810 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: new alloc: 1817
9999 mem: storing 1817 in location 1811
 103 run: reply dummy:address:event/deref, x:address:console/same-as-ingredient:0, 1:literal/found, 1:literal/quit
9999 mem: location 1811 is 1817
9999 mem: location 1817 is 0
9999 mem: location 1818 is 0
9999 mem: location 1819 is 0
9999 mem: location 1820 is 0
9999 mem: location 1806 is 1362
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1362
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 1362 in location 1367
9999 mem: storing 1 in location 1373
9999 mem: storing 1 in location 1374
 102 run: loop-unless found?:boolean, 
9999 mem: location 1373 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?:boolean, 
9999 mem: location 1374 is 1
9999 run: jumping to instruction 25
 100 run: screen-should-contain [
    .     .
    .eabc .
    .     .
    .     .
  ]
 100 run: assume-console [
    type [f]
  ]
parse: instruction: type
parse:   ingredient: {name: "f", properties: [_: "literal-string"]}
 100 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1002
after-brace: editor-event-loop ...
 100 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1826
9999 mem: location 2 is 1095
 101 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1828
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1830
 101 run: console:address <- next-ingredient 
9999 mem: storing 1826 in location 1831
 101 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1832
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 1831 is 1826
 102 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1843
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 1826 in location 1845
 102 run: break-unless x:address:console, 
9999 mem: location 1845 is 1826
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 1845 is 1826
9999 mem: location 1826 is 0
9999 mem: location 1827 is 1821
9999 mem: location 1845 is 1826
9999 run: address to copy is 1826
9999 mem: storing 1826 in location 1846
 102 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 1845 is 1826
9999 mem: location 1826 is 0
9999 mem: location 1827 is 1821
9999 mem: location 1845 is 1826
9999 run: address to copy is 1827
9999 run: its type is address
9999 mem: location 1827 is 1821
9999 mem: storing 1821 in location 1847
 102 run: max:number <- length buf:address:array:event/deref
9999 mem: location 1847 is 1821
9999 mem: location 1821 is 1
9999 mem: location 1822 is 0
9999 mem: location 1823 is 102
9999 mem: location 1824 is 0
9999 mem: location 1825 is 0
9999 mem: location 1847 is 1821
9999 mem: storing 1 in location 1848
 102 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 1846 is 1826
9999 mem: location 1826 is 0
9999 mem: location 1848 is 1
9999 mem: storing 0 in location 1849
 102 run: break-unless done?:boolean, 
9999 mem: location 1849 is 0
9999 run: jumping to instruction 12
 102 run: result:event <- index buf:address:array:event/deref, idx:address:number/deref
9999 mem: location 1847 is 1821
9999 mem: location 1821 is 1
9999 mem: location 1822 is 0
9999 mem: location 1823 is 102
9999 mem: location 1824 is 0
9999 mem: location 1825 is 0
9999 mem: location 1846 is 1826
9999 mem: location 1826 is 0
9999 mem: location 1847 is 1821
9999 mem: location 1846 is 1826
9999 mem: location 1826 is 0
9999 run: address to copy is 1822
9999 run: its type is event
9999 mem: location 1822 is 0
9999 mem: location 1823 is 102
9999 mem: location 1824 is 0
9999 mem: location 1825 is 0
9999 mem: storing 0 in location 1851
9999 mem: storing 102 in location 1852
9999 mem: storing 0 in location 1853
9999 mem: storing 0 in location 1854
 102 run: idx:address:number/deref <- add idx:address:number/deref, 1:literal
9999 mem: location 1846 is 1826
9999 mem: location 1826 is 0
9999 mem: location 1846 is 1826
9999 mem: storing 1 in location 1826
 102 run: reply result:event, x:address:console/same-as-ingredient:0, 1:literal/found, 0:literal/quit
9999 mem: location 1851 is 0
9999 mem: location 1852 is 102
9999 mem: location 1853 is 0
9999 mem: location 1854 is 0
9999 mem: location 1845 is 1826
9999 run: result 0 is [0, 102, 0, 0]
9999 run: result 1 is 1826
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1833
9999 mem: storing 102 in location 1834
9999 mem: storing 0 in location 1835
9999 mem: storing 0 in location 1836
9999 mem: storing 1826 in location 1831
9999 mem: storing 1 in location 1837
9999 mem: storing 0 in location 1838
 101 run: loop-unless found?:boolean, 
9999 mem: location 1837 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?:boolean, 
9999 mem: location 1838 is 0
9999 run: jump-if fell through
 101 run: trace [app], [next-event]
   1 app: next-event
 101 run: t:address:touch-event <- maybe-convert e:event, touch:variant
9999 mem: location 1833 is 0
9999 mem: location 1834 is 102
9999 mem: location 1835 is 0
9999 mem: location 1836 is 0
9999 mem: storing 0 in location 1839
 101 run: break-unless t:address:touch-event, 
9999 mem: location 1839 is 0
9999 run: jumping to instruction 15
 101 run: handle-event screen:address, console:address, editor:address:editor-data, e:event
9999 mem: location 1830 is 1009
9999 mem: location 1831 is 1826
9999 mem: location 1832 is 1095
9999 mem: location 1833 is 0
9999 mem: location 1834 is 102
9999 mem: location 1835 is 0
9999 mem: location 1836 is 0
 102 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 38
9999 mem: new alloc: 1856
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1858
 102 run: console:address <- next-ingredient 
9999 mem: storing 1826 in location 1859
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1860
 102 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1861
9999 mem: storing 102 in location 1862
9999 mem: storing 0 in location 1863
9999 mem: storing 0 in location 1864
 102 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 1860 is 1095
9999 run: jumping to instruction 7
 102 run: c:address:character <- maybe-convert e:event, text:variant
9999 mem: location 1861 is 0
9999 mem: location 1862 is 102
9999 mem: location 1863 is 0
9999 mem: location 1864 is 0
9999 mem: storing 1862 in location 1865
 102 run: break-unless c:address:character, 
9999 mem: location 1865 is 1862
9999 run: jump-unless fell through
 102 run: backspace?:boolean <- equal c:address:character/deref, 8:literal/backspace
9999 mem: location 1865 is 1862
9999 mem: location 1862 is 102
9999 mem: storing 0 in location 1866
 102 run: break-unless backspace?:boolean, 
9999 mem: location 1866 is 0
9999 run: jumping to instruction 15
 102 run: insert-at-cursor editor:address:editor-data, c:address:character/deref, screen:address
9999 mem: location 1860 is 1095
9999 mem: location 1865 is 1862
9999 mem: location 1862 is 102
9999 mem: location 1858 is 1009
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 15
9999 mem: new alloc: 1895
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1897
 103 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1898
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1899
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1897 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1455
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1897 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1900
 103 run: d:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 1897 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1455
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1897 is 1095
9999 run: address to copy is 1095
9999 run: its type is address
9999 mem: location 1095 is 1109
9999 mem: storing 1109 in location 1901
 103 run: insert-duplex c:character, before-cursor:address:address:duplex-list/deref
9999 mem: location 1898 is 102
9999 mem: location 1900 is 1096
9999 mem: location 1096 is 1455
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1911
 104 run: x:location <- next-ingredient 
9999 mem: storing 102 in location 1913
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1455 in location 1914
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1919
9999 mem: storing 1919 in location 1915
 104 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1915 is 1919
9999 mem: location 1919 is 0
9999 mem: location 1920 is 0
9999 mem: location 1921 is 0
9999 mem: location 1915 is 1919
9999 run: address to copy is 1919
9999 mem: storing 1919 in location 1916
 104 run: val:address:location/deref <- copy x:location
9999 mem: location 1913 is 102
9999 mem: location 1916 is 1919
9999 mem: storing 102 in location 1919
 104 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1914 is 1455
9999 mem: location 1455 is 101
9999 mem: location 1456 is 1120
9999 mem: location 1457 is 1109
9999 mem: location 1914 is 1455
9999 run: address to copy is 1456
9999 run: its type is address
9999 mem: location 1456 is 1120
9999 mem: storing 1120 in location 1917
 104 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1914 is 1455
9999 mem: location 1455 is 101
9999 mem: location 1456 is 1120
9999 mem: location 1457 is 1109
9999 mem: location 1914 is 1455
9999 run: address to copy is 1456
9999 mem: storing 1456 in location 1918
 104 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1915 is 1919
9999 mem: location 1918 is 1456
9999 mem: storing 1919 in location 1456
 104 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1915 is 1919
9999 mem: location 1919 is 102
9999 mem: location 1920 is 0
9999 mem: location 1921 is 0
9999 mem: location 1915 is 1919
9999 run: address to copy is 1921
9999 mem: storing 1921 in location 1918
 104 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1914 is 1455
9999 mem: location 1918 is 1921
9999 mem: storing 1455 in location 1921
 104 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1915 is 1919
9999 mem: location 1919 is 102
9999 mem: location 1920 is 0
9999 mem: location 1921 is 1455
9999 mem: location 1915 is 1919
9999 run: address to copy is 1920
9999 mem: storing 1920 in location 1918
 104 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1917 is 1120
9999 mem: location 1918 is 1920
9999 mem: storing 1120 in location 1920
 104 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1917 is 1120
9999 run: jumping to instruction 15
 104 run: y:address:address:duplex-list <- get-address next-node:address:duplex-list/deref, prev:offset
9999 mem: location 1917 is 1120
9999 mem: location 1120 is 97
9999 mem: location 1121 is 1135
9999 mem: location 1122 is 1455
9999 mem: location 1917 is 1120
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1918
 104 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1915 is 1919
9999 mem: location 1918 is 1122
9999 mem: storing 1919 in location 1122
 104 run: reply new-node:address:duplex-list
9999 mem: location 1915 is 1919
 103 run: before-cursor:address:address:duplex-list/deref <- next-duplex before-cursor:address:address:duplex-list/deref
9999 mem: location 1900 is 1096
9999 mem: location 1096 is 1455
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1922
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1455 in location 1924
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1924 is 1455
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1924 is 1455
9999 mem: location 1455 is 101
9999 mem: location 1456 is 1919
9999 mem: location 1457 is 1109
9999 mem: location 1924 is 1455
9999 run: address to copy is 1456
9999 run: its type is address
9999 mem: location 1456 is 1919
9999 mem: storing 1919 in location 1925
 104 run: reply result:address:duplex-list
9999 mem: location 1925 is 1919
9999 run: result 0 is 1919
9999 mem: location 1900 is 1096
9999 mem: storing 1919 in location 1096
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1897 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1919
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1897 is 1095
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1902
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1897 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1919
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1897 is 1095
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1903
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1897 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1919
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1897 is 1095
9999 run: address to copy is 1097
9999 run: its type is number
9999 mem: location 1097 is 0
9999 mem: storing 0 in location 1904
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1897 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1919
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1897 is 1095
9999 run: address to copy is 1098
9999 run: its type is number
9999 mem: location 1098 is 4
9999 mem: storing 4 in location 1905
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1898 is 102
9999 mem: storing 0 in location 1906
 103 run: break-unless newline?:boolean, 
9999 mem: location 1906 is 0
9999 run: jumping to instruction 18
 103 run: wrap-column:number <- subtract right:number, 1:literal
9999 mem: location 1905 is 4
9999 mem: storing 3 in location 1907
 103 run: at-wrap?:boolean <- greater-or-equal cursor-column:address:number/deref, wrap-column:number
9999 mem: location 1903 is 1100
9999 mem: location 1100 is 1
9999 mem: location 1907 is 3
9999 mem: storing 0 in location 1908
 103 run: break-unless at-wrap?:boolean, 
9999 mem: location 1908 is 0
9999 run: jumping to instruction 29
 103 run: cursor-column:address:number/deref <- add cursor-column:address:number/deref, 1:literal
9999 mem: location 1903 is 1100
9999 mem: location 1100 is 1
9999 mem: location 1903 is 1100
9999 mem: storing 2 in location 1100
 102 run: reply 
 101 run: row:number, screen:address <- render screen:address, editor:address:editor-data
9999 mem: location 1830 is 1009
9999 mem: location 1832 is 1095
 102 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: new alloc: 1926
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1928
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1929
 102 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 1929 is 1095
9999 run: jumping to instruction 5
 102 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1929 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1919
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 2
9999 mem: location 1929 is 1095
9999 run: address to copy is 1097
9999 run: its type is number
9999 mem: location 1097 is 0
9999 mem: storing 0 in location 1930
 102 run: screen-height:number <- screen-height screen:address
9999 mem: location 1928 is 1009
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1953
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1955
 103 run: break-unless x:address:screen, 
9999 mem: location 1955 is 1009
9999 run: jump-unless fell through
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1955 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1955 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1956
 103 run: reply height:number
9999 mem: location 1956 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1931
 102 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1929 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1919
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 2
9999 mem: location 1929 is 1095
9999 run: address to copy is 1098
9999 run: its type is number
9999 mem: location 1098 is 4
9999 mem: storing 4 in location 1932
 102 run: hide-screen screen:address
9999 mem: location 1928 is 1009
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: new alloc: 1957
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1959
 103 run: break-unless x:address:screen, 
9999 mem: location 1959 is 1009
9999 run: jump-unless fell through
 103 run: reply x:address:screen
9999 mem: location 1959 is 1009
 102 run: curr:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 1929 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1919
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 2
9999 mem: location 1929 is 1095
9999 run: address to copy is 1095
9999 run: its type is address
9999 mem: location 1095 is 1109
9999 mem: storing 1109 in location 1933
 102 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1933 is 1109
9999 mem: storing 1109 in location 1934
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1933 is 1109
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1960
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1109 in location 1962
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1962 is 1109
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1962 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 1455
9999 mem: location 1111 is 0
9999 mem: location 1962 is 1109
9999 run: address to copy is 1110
9999 run: its type is address
9999 mem: location 1110 is 1455
9999 mem: storing 1455 in location 1963
 103 run: reply result:address:duplex-list
9999 mem: location 1963 is 1455
9999 run: result 0 is 1455
9999 mem: storing 1455 in location 1933
 102 run: row:number <- copy 1:literal/top
9999 mem: storing 1 in location 1935
 102 run: column:number <- copy left:number
9999 mem: location 1930 is 0
9999 mem: storing 0 in location 1936
 102 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1929 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1919
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 2
9999 mem: location 1929 is 1095
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1937
 102 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1929 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1919
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 2
9999 mem: location 1929 is 1095
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1938
 102 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1929 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1919
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 2
9999 mem: location 1929 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1939
 102 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1928 is 1009
9999 mem: location 1935 is 1
9999 mem: location 1936 is 0
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1964
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1966
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1967
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1968
 103 run: break-unless x:address:screen, 
9999 mem: location 1966 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1966 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1966 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1969
 103 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1967 is 1
9999 mem: location 1969 is 1011
9999 mem: storing 1 in location 1011
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1966 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1966 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1970
 103 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1968 is 0
9999 mem: location 1970 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1966 is 1009
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 1933 is 1455
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1935 is 1
9999 mem: location 1931 is 5
9999 mem: storing 0 in location 1940
 102 run: break-if off-screen?:boolean, 
9999 mem: location 1940 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1935 is 1
9999 mem: location 1937 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1941
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1941 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1936 is 0
9999 mem: location 1938 is 1100
9999 mem: location 1100 is 2
9999 mem: storing 0 in location 1942
 102 run: break-unless at-cursor?:boolean, 
9999 mem: location 1942 is 0
9999 run: jumping to instruction 29
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1933 is 1455
9999 mem: location 1455 is 101
9999 mem: location 1456 is 1919
9999 mem: location 1457 is 1109
9999 mem: location 1933 is 1455
9999 run: address to copy is 1455
9999 run: its type is number
9999 mem: location 1455 is 101
9999 mem: storing 101 in location 1943
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1943 is 101
9999 mem: storing 0 in location 1944
 102 run: break-unless newline?:boolean, 
9999 mem: location 1944 is 0
9999 run: jumping to instruction 49
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1936 is 0
9999 mem: location 1932 is 4
9999 mem: storing 0 in location 1946
 102 run: break-unless at-right?:boolean, 
9999 mem: location 1946 is 0
9999 run: jumping to instruction 58
 102 run: print-character screen:address, c:character
9999 mem: location 1928 is 1009
9999 mem: location 1943 is 101
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1971
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1973
 103 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1974
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1975
9999 mem: storing 0 in location 1976
 103 run: break-if color-found?:boolean, 
9999 mem: location 1976 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1975
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1977
9999 mem: storing 0 in location 1978
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 1978 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1977
 103 run: break-unless x:address:screen, 
9999 mem: location 1973 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1973 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1973 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1979
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1973 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1973 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1980
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1973 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1973 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1981
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1973 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1973 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1982
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1974 is 101
9999 mem: storing 0 in location 1983
 103 run: break-unless newline?:boolean, 
9999 mem: location 1983 is 0
9999 run: jumping to instruction 30
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1979 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1981 is 5
9999 mem: storing 5 in location 1986
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1986 is 5
9999 mem: location 1980 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 5 in location 1986
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1973 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1973 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1987
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1974 is 101
9999 mem: storing 0 in location 1988
 103 run: break-unless backspace?:boolean, 
9999 mem: location 1988 is 0
9999 run: jumping to instruction 49
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1987 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1986 is 5
9999 mem: location 1987 is 1014
9999 mem: location 1986 is 5
9999 mem: storing 1025 in location 1990
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1990 is 1025
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1990 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1991
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1990 is 1025
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1990 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1992
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1974 is 101
9999 mem: location 1991 is 1025
9999 mem: storing 101 in location 1025
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1975 is 7
9999 mem: location 1992 is 1026
9999 mem: storing 7 in location 1026
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1981 is 5
9999 mem: storing 4 in location 1993
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1980 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1993 is 4
9999 mem: storing 0 in location 1994
 103 run: break-if at-right?:boolean, 
9999 mem: location 1994 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1980 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1980 is 1012
9999 mem: storing 1 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1973 is 1009
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1933 is 1455
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1995
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1455 in location 1997
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1997 is 1455
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1997 is 1455
9999 mem: location 1455 is 101
9999 mem: location 1456 is 1919
9999 mem: location 1457 is 1109
9999 mem: location 1997 is 1455
9999 run: address to copy is 1456
9999 run: its type is address
9999 mem: location 1456 is 1919
9999 mem: storing 1919 in location 1998
 103 run: reply result:address:duplex-list
9999 mem: location 1998 is 1919
9999 run: result 0 is 1919
9999 mem: storing 1919 in location 1933
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1934 is 1109
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1999
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1109 in location 2001
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2001 is 1109
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2001 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 1455
9999 mem: location 1111 is 0
9999 mem: location 2001 is 1109
9999 run: address to copy is 1110
9999 run: its type is address
9999 mem: location 1110 is 1455
9999 mem: storing 1455 in location 2002
 103 run: reply result:address:duplex-list
9999 mem: location 2002 is 1455
9999 run: result 0 is 1455
9999 mem: storing 1455 in location 1934
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 1936 is 0
9999 mem: storing 1 in location 1936
 102 run: loop 
9999 run: jumping to instruction 19
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 1933 is 1919
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1935 is 1
9999 mem: location 1931 is 5
9999 mem: storing 0 in location 1940
 102 run: break-if off-screen?:boolean, 
9999 mem: location 1940 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1935 is 1
9999 mem: location 1937 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1941
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1941 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1936 is 1
9999 mem: location 1938 is 1100
9999 mem: location 1100 is 2
9999 mem: storing 0 in location 1942
 102 run: break-unless at-cursor?:boolean, 
9999 mem: location 1942 is 0
9999 run: jumping to instruction 29
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1933 is 1919
9999 mem: location 1919 is 102
9999 mem: location 1920 is 1120
9999 mem: location 1921 is 1455
9999 mem: location 1933 is 1919
9999 run: address to copy is 1919
9999 run: its type is number
9999 mem: location 1919 is 102
9999 mem: storing 102 in location 1943
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1943 is 102
9999 mem: storing 0 in location 1944
 102 run: break-unless newline?:boolean, 
9999 mem: location 1944 is 0
9999 run: jumping to instruction 49
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1936 is 1
9999 mem: location 1932 is 4
9999 mem: storing 0 in location 1946
 102 run: break-unless at-right?:boolean, 
9999 mem: location 1946 is 0
9999 run: jumping to instruction 58
 102 run: print-character screen:address, c:character
9999 mem: location 1928 is 1009
9999 mem: location 1943 is 102
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2003
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2005
 103 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 2006
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2007
9999 mem: storing 0 in location 2008
 103 run: break-if color-found?:boolean, 
9999 mem: location 2008 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2007
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2009
9999 mem: storing 0 in location 2010
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2009
 103 run: break-unless x:address:screen, 
9999 mem: location 2005 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2005 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2005 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2011
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2005 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2005 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2012
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2005 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2005 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 2013
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2005 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2005 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2014
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2006 is 102
9999 mem: storing 0 in location 2015
 103 run: break-unless newline?:boolean, 
9999 mem: location 2015 is 0
9999 run: jumping to instruction 30
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2011 is 1011
9999 mem: location 1011 is 1
9999 mem: location 2013 is 5
9999 mem: storing 5 in location 2018
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2018 is 5
9999 mem: location 2012 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 6 in location 2018
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2005 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2005 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2019
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2006 is 102
9999 mem: storing 0 in location 2020
 103 run: break-unless backspace?:boolean, 
9999 mem: location 2020 is 0
9999 run: jumping to instruction 49
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2019 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2018 is 6
9999 mem: location 2019 is 1014
9999 mem: location 2018 is 6
9999 mem: storing 1027 in location 2022
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2022 is 1027
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 2022 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 2023
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2022 is 1027
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 2022 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 2024
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2006 is 102
9999 mem: location 2023 is 1027
9999 mem: storing 102 in location 1027
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2007 is 7
9999 mem: location 2024 is 1028
9999 mem: storing 7 in location 1028
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2013 is 5
9999 mem: storing 4 in location 2025
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2012 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2025 is 4
9999 mem: storing 0 in location 2026
 103 run: break-if at-right?:boolean, 
9999 mem: location 2026 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2012 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2012 is 1012
9999 mem: storing 2 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2005 is 1009
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1933 is 1919
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2027
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1919 in location 2029
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2029 is 1919
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2029 is 1919
9999 mem: location 1919 is 102
9999 mem: location 1920 is 1120
9999 mem: location 1921 is 1455
9999 mem: location 2029 is 1919
9999 run: address to copy is 1920
9999 run: its type is address
9999 mem: location 1920 is 1120
9999 mem: storing 1120 in location 2030
 103 run: reply result:address:duplex-list
9999 mem: location 2030 is 1120
9999 run: result 0 is 1120
9999 mem: storing 1120 in location 1933
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1934 is 1455
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2031
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1455 in location 2033
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2033 is 1455
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2033 is 1455
9999 mem: location 1455 is 101
9999 mem: location 1456 is 1919
9999 mem: location 1457 is 1109
9999 mem: location 2033 is 1455
9999 run: address to copy is 1456
9999 run: its type is address
9999 mem: location 1456 is 1919
9999 mem: storing 1919 in location 2034
 103 run: reply result:address:duplex-list
9999 mem: location 2034 is 1919
9999 run: result 0 is 1919
9999 mem: storing 1919 in location 1934
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 1936 is 1
9999 mem: storing 2 in location 1936
 102 run: loop 
9999 run: jumping to instruction 19
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 1933 is 1120
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1935 is 1
9999 mem: location 1931 is 5
9999 mem: storing 0 in location 1940
 102 run: break-if off-screen?:boolean, 
9999 mem: location 1940 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1935 is 1
9999 mem: location 1937 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1941
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1941 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1936 is 2
9999 mem: location 1938 is 1100
9999 mem: location 1100 is 2
9999 mem: storing 1 in location 1942
 102 run: break-unless at-cursor?:boolean, 
9999 mem: location 1942 is 1
9999 run: jump-unless fell through
 102 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1933 is 1120
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2035
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1120 in location 2037
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2037 is 1120
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 2037 is 1120
9999 mem: location 1120 is 97
9999 mem: location 1121 is 1135
9999 mem: location 1122 is 1919
9999 mem: location 2037 is 1120
9999 run: address to copy is 1122
9999 run: its type is address
9999 mem: location 1122 is 1919
9999 mem: storing 1919 in location 2038
 103 run: reply result:address:duplex-list
9999 mem: location 2038 is 1919
9999 run: result 0 is 1919
9999 mem: location 1939 is 1096
9999 mem: storing 1919 in location 1096
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1933 is 1120
9999 mem: location 1120 is 97
9999 mem: location 1121 is 1135
9999 mem: location 1122 is 1919
9999 mem: location 1933 is 1120
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 97
9999 mem: storing 97 in location 1943
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1943 is 97
9999 mem: storing 0 in location 1944
 102 run: break-unless newline?:boolean, 
9999 mem: location 1944 is 0
9999 run: jumping to instruction 49
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1936 is 2
9999 mem: location 1932 is 4
9999 mem: storing 0 in location 1946
 102 run: break-unless at-right?:boolean, 
9999 mem: location 1946 is 0
9999 run: jumping to instruction 58
 102 run: print-character screen:address, c:character
9999 mem: location 1928 is 1009
9999 mem: location 1943 is 97
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2039
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2041
 103 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 2042
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2043
9999 mem: storing 0 in location 2044
 103 run: break-if color-found?:boolean, 
9999 mem: location 2044 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2043
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2045
9999 mem: storing 0 in location 2046
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 2046 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2045
 103 run: break-unless x:address:screen, 
9999 mem: location 2041 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2041 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2047
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2041 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2048
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2041 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 2049
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2041 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2050
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2042 is 97
9999 mem: storing 0 in location 2051
 103 run: break-unless newline?:boolean, 
9999 mem: location 2051 is 0
9999 run: jumping to instruction 30
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2047 is 1011
9999 mem: location 1011 is 1
9999 mem: location 2049 is 5
9999 mem: storing 5 in location 2054
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2054 is 5
9999 mem: location 2048 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 7 in location 2054
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2041 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2055
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2042 is 97
9999 mem: storing 0 in location 2056
 103 run: break-unless backspace?:boolean, 
9999 mem: location 2056 is 0
9999 run: jumping to instruction 49
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2055 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2054 is 7
9999 mem: location 2055 is 1014
9999 mem: location 2054 is 7
9999 mem: storing 1029 in location 2058
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2058 is 1029
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 2058 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 2059
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2058 is 1029
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 2058 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 2060
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2042 is 97
9999 mem: location 2059 is 1029
9999 mem: storing 97 in location 1029
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2043 is 7
9999 mem: location 2060 is 1030
9999 mem: storing 7 in location 1030
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2049 is 5
9999 mem: storing 4 in location 2061
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2048 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2061 is 4
9999 mem: storing 0 in location 2062
 103 run: break-if at-right?:boolean, 
9999 mem: location 2062 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2048 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2048 is 1012
9999 mem: storing 3 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2041 is 1009
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1933 is 1120
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2063
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1120 in location 2065
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2065 is 1120
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2065 is 1120
9999 mem: location 1120 is 97
9999 mem: location 1121 is 1135
9999 mem: location 1122 is 1919
9999 mem: location 2065 is 1120
9999 run: address to copy is 1121
9999 run: its type is address
9999 mem: location 1121 is 1135
9999 mem: storing 1135 in location 2066
 103 run: reply result:address:duplex-list
9999 mem: location 2066 is 1135
9999 run: result 0 is 1135
9999 mem: storing 1135 in location 1933
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1934 is 1919
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2067
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1919 in location 2069
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2069 is 1919
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2069 is 1919
9999 mem: location 1919 is 102
9999 mem: location 1920 is 1120
9999 mem: location 1921 is 1455
9999 mem: location 2069 is 1919
9999 run: address to copy is 1920
9999 run: its type is address
9999 mem: location 1920 is 1120
9999 mem: storing 1120 in location 2070
 103 run: reply result:address:duplex-list
9999 mem: location 2070 is 1120
9999 run: result 0 is 1120
9999 mem: storing 1120 in location 1934
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 1936 is 2
9999 mem: storing 3 in location 1936
 102 run: loop 
9999 run: jumping to instruction 19
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 1933 is 1135
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1935 is 1
9999 mem: location 1931 is 5
9999 mem: storing 0 in location 1940
 102 run: break-if off-screen?:boolean, 
9999 mem: location 1940 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1935 is 1
9999 mem: location 1937 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1941
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1941 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1936 is 3
9999 mem: location 1938 is 1100
9999 mem: location 1100 is 2
9999 mem: storing 0 in location 1942
 102 run: break-unless at-cursor?:boolean, 
9999 mem: location 1942 is 0
9999 run: jumping to instruction 29
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1933 is 1135
9999 mem: location 1135 is 98
9999 mem: location 1136 is 1150
9999 mem: location 1137 is 1120
9999 mem: location 1933 is 1135
9999 run: address to copy is 1135
9999 run: its type is number
9999 mem: location 1135 is 98
9999 mem: storing 98 in location 1943
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1943 is 98
9999 mem: storing 0 in location 1944
 102 run: break-unless newline?:boolean, 
9999 mem: location 1944 is 0
9999 run: jumping to instruction 49
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1936 is 3
9999 mem: location 1932 is 4
9999 mem: storing 0 in location 1946
 102 run: break-unless at-right?:boolean, 
9999 mem: location 1946 is 0
9999 run: jumping to instruction 58
 102 run: print-character screen:address, c:character
9999 mem: location 1928 is 1009
9999 mem: location 1943 is 98
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2071
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2073
 103 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 2074
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2075
9999 mem: storing 0 in location 2076
 103 run: break-if color-found?:boolean, 
9999 mem: location 2076 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2075
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2077
9999 mem: storing 0 in location 2078
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 2078 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2077
 103 run: break-unless x:address:screen, 
9999 mem: location 2073 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2073 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2073 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2079
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2073 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2073 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2080
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2073 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2073 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 2081
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2073 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2073 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2082
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2074 is 98
9999 mem: storing 0 in location 2083
 103 run: break-unless newline?:boolean, 
9999 mem: location 2083 is 0
9999 run: jumping to instruction 30
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2079 is 1011
9999 mem: location 1011 is 1
9999 mem: location 2081 is 5
9999 mem: storing 5 in location 2086
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2086 is 5
9999 mem: location 2080 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 8 in location 2086
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2073 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2073 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2087
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2074 is 98
9999 mem: storing 0 in location 2088
 103 run: break-unless backspace?:boolean, 
9999 mem: location 2088 is 0
9999 run: jumping to instruction 49
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2087 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2086 is 8
9999 mem: location 2087 is 1014
9999 mem: location 2086 is 8
9999 mem: storing 1031 in location 2090
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2090 is 1031
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 2090 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 2091
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2090 is 1031
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 2090 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 2092
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2074 is 98
9999 mem: location 2091 is 1031
9999 mem: storing 98 in location 1031
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2075 is 7
9999 mem: location 2092 is 1032
9999 mem: storing 7 in location 1032
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2081 is 5
9999 mem: storing 4 in location 2093
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2080 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2093 is 4
9999 mem: storing 0 in location 2094
schedule: print-character/render/editor-event-loop/run1002/editor-wraps-line-on-insert
 103 run: break-if at-right?:boolean, 
9999 mem: location 2094 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2080 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2080 is 1012
9999 mem: storing 4 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2073 is 1009
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1933 is 1135
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2095
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1135 in location 2097
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2097 is 1135
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2097 is 1135
9999 mem: location 1135 is 98
9999 mem: location 1136 is 1150
9999 mem: location 1137 is 1120
9999 mem: location 2097 is 1135
9999 run: address to copy is 1136
9999 run: its type is address
9999 mem: location 1136 is 1150
9999 mem: storing 1150 in location 2098
 103 run: reply result:address:duplex-list
9999 mem: location 2098 is 1150
9999 run: result 0 is 1150
9999 mem: storing 1150 in location 1933
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1934 is 1120
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2099
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1120 in location 2101
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2101 is 1120
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2101 is 1120
9999 mem: location 1120 is 97
9999 mem: location 1121 is 1135
9999 mem: location 1122 is 1919
9999 mem: location 2101 is 1120
9999 run: address to copy is 1121
9999 run: its type is address
9999 mem: location 1121 is 1135
9999 mem: storing 1135 in location 2102
 103 run: reply result:address:duplex-list
9999 mem: location 2102 is 1135
9999 run: result 0 is 1135
9999 mem: storing 1135 in location 1934
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 1936 is 3
9999 mem: storing 4 in location 1936
 102 run: loop 
9999 run: jumping to instruction 19
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 1933 is 1150
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1935 is 1
9999 mem: location 1931 is 5
9999 mem: storing 0 in location 1940
 102 run: break-if off-screen?:boolean, 
9999 mem: location 1940 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1935 is 1
9999 mem: location 1937 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1941
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1941 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1936 is 4
9999 mem: location 1938 is 1100
9999 mem: location 1100 is 2
9999 mem: storing 0 in location 1942
 102 run: break-unless at-cursor?:boolean, 
9999 mem: location 1942 is 0
9999 run: jumping to instruction 29
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1933 is 1150
9999 mem: location 1150 is 99
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1135
9999 mem: location 1933 is 1150
9999 run: address to copy is 1150
9999 run: its type is number
9999 mem: location 1150 is 99
9999 mem: storing 99 in location 1943
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1943 is 99
9999 mem: storing 0 in location 1944
 102 run: break-unless newline?:boolean, 
9999 mem: location 1944 is 0
9999 run: jumping to instruction 49
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1936 is 4
9999 mem: location 1932 is 4
9999 mem: storing 1 in location 1946
 102 run: break-unless at-right?:boolean, 
9999 mem: location 1946 is 1
9999 run: jump-unless fell through
 102 run: print-character screen:address, 8617:literal/loop-back-to-left, 245:literal/grey
9999 mem: location 1928 is 1009
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2103
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2105
 103 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 2106
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 2107
9999 mem: storing 1 in location 2108
 103 run: break-if color-found?:boolean, 
9999 mem: location 2108 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2109
9999 mem: storing 0 in location 2110
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 2110 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2109
 103 run: break-unless x:address:screen, 
9999 mem: location 2105 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2105 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2105 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2111
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2105 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2105 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2112
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2105 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2105 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 2113
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2105 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2105 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2114
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2106 is 8617
9999 mem: storing 0 in location 2115
 103 run: break-unless newline?:boolean, 
9999 mem: location 2115 is 0
9999 run: jumping to instruction 30
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2111 is 1011
9999 mem: location 1011 is 1
9999 mem: location 2113 is 5
9999 mem: storing 5 in location 2118
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2118 is 5
9999 mem: location 2112 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 9 in location 2118
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2105 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2105 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2119
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2106 is 8617
9999 mem: storing 0 in location 2120
 103 run: break-unless backspace?:boolean, 
9999 mem: location 2120 is 0
9999 run: jumping to instruction 49
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2119 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2118 is 9
9999 mem: location 2119 is 1014
9999 mem: location 2118 is 9
9999 mem: storing 1033 in location 2122
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2122 is 1033
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 2122 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2123
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2122 is 1033
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 2122 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2124
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2106 is 8617
9999 mem: location 2123 is 1033
9999 mem: storing 8617 in location 1033
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2107 is 245
9999 mem: location 2124 is 1034
9999 mem: storing 245 in location 1034
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2113 is 5
9999 mem: storing 4 in location 2125
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2112 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2125 is 4
9999 mem: storing 1 in location 2126
 103 run: break-if at-right?:boolean, 
9999 mem: location 2126 is 1
9999 run: jumping to instruction 60
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2105 is 1009
 102 run: column:number <- copy left:number
9999 mem: location 1930 is 0
9999 mem: storing 0 in location 1936
 102 run: row:number <- add row:number, 1:literal
9999 mem: location 1935 is 1
9999 mem: storing 2 in location 1935
 102 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1928 is 1009
9999 mem: location 1935 is 2
9999 mem: location 1936 is 0
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 2127
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2129
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 2130
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2131
 103 run: break-unless x:address:screen, 
9999 mem: location 2129 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2129 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2129 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2132
 103 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2130 is 2
9999 mem: location 2132 is 1011
9999 mem: storing 2 in location 1011
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2129 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2129 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2133
 103 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2131 is 0
9999 mem: location 2133 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2129 is 1009
 102 run: loop +next-character:label
9999 run: jumping to instruction 20
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 1933 is 1150
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1935 is 2
9999 mem: location 1931 is 5
9999 mem: storing 0 in location 1940
 102 run: break-if off-screen?:boolean, 
9999 mem: location 1940 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1935 is 2
9999 mem: location 1937 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 0 in location 1941
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1941 is 0
9999 run: jumping to instruction 29
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1933 is 1150
9999 mem: location 1150 is 99
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1135
9999 mem: location 1933 is 1150
9999 run: address to copy is 1150
9999 run: its type is number
9999 mem: location 1150 is 99
9999 mem: storing 99 in location 1943
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1943 is 99
9999 mem: storing 0 in location 1944
 102 run: break-unless newline?:boolean, 
9999 mem: location 1944 is 0
9999 run: jumping to instruction 49
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1936 is 0
9999 mem: location 1932 is 4
9999 mem: storing 0 in location 1946
 102 run: break-unless at-right?:boolean, 
9999 mem: location 1946 is 0
9999 run: jumping to instruction 58
 102 run: print-character screen:address, c:character
9999 mem: location 1928 is 1009
9999 mem: location 1943 is 99
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2134
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2136
 103 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 2137
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2138
9999 mem: storing 0 in location 2139
 103 run: break-if color-found?:boolean, 
9999 mem: location 2139 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2138
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2140
9999 mem: storing 0 in location 2141
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 2141 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2140
 103 run: break-unless x:address:screen, 
9999 mem: location 2136 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2136 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2136 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2142
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2136 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2136 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2143
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2136 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2136 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 2144
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2136 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2136 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2145
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2137 is 99
9999 mem: storing 0 in location 2146
 103 run: break-unless newline?:boolean, 
9999 mem: location 2146 is 0
9999 run: jumping to instruction 30
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2142 is 1011
9999 mem: location 1011 is 2
9999 mem: location 2144 is 5
9999 mem: storing 10 in location 2149
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2149 is 10
9999 mem: location 2143 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 2149
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2136 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2136 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2150
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2137 is 99
9999 mem: storing 0 in location 2151
 103 run: break-unless backspace?:boolean, 
9999 mem: location 2151 is 0
9999 run: jumping to instruction 49
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2150 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2149 is 10
9999 mem: location 2150 is 1014
9999 mem: location 2149 is 10
9999 mem: storing 1035 in location 2153
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2153 is 1035
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 2153 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 2154
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2153 is 1035
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 2153 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 2155
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2137 is 99
9999 mem: location 2154 is 1035
9999 mem: storing 99 in location 1035
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2138 is 7
9999 mem: location 2155 is 1036
9999 mem: storing 7 in location 1036
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2144 is 5
9999 mem: storing 4 in location 2156
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2143 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2156 is 4
9999 mem: storing 0 in location 2157
 103 run: break-if at-right?:boolean, 
9999 mem: location 2157 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2143 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2143 is 1012
9999 mem: storing 1 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2136 is 1009
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1933 is 1150
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2158
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1150 in location 2160
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2160 is 1150
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2160 is 1150
9999 mem: location 1150 is 99
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1135
9999 mem: location 2160 is 1150
9999 run: address to copy is 1151
9999 run: its type is address
9999 mem: location 1151 is 0
9999 mem: storing 0 in location 2161
 103 run: reply result:address:duplex-list
9999 mem: location 2161 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1933
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1934 is 1135
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2162
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1135 in location 2164
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2164 is 1135
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2164 is 1135
9999 mem: location 1135 is 98
9999 mem: location 1136 is 1150
9999 mem: location 1137 is 1120
9999 mem: location 2164 is 1135
9999 run: address to copy is 1136
9999 run: its type is address
9999 mem: location 1136 is 1150
9999 mem: storing 1150 in location 2165
 103 run: reply result:address:duplex-list
9999 mem: location 2165 is 1150
9999 run: result 0 is 1150
9999 mem: storing 1150 in location 1934
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 1936 is 0
9999 mem: storing 1 in location 1936
 102 run: loop 
9999 run: jumping to instruction 19
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 1933 is 0
9999 run: jumping to instruction 64
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1935 is 2
9999 mem: location 1937 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 0 in location 1941
 102 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1936 is 1
9999 mem: location 1938 is 1100
9999 mem: location 1100 is 2
9999 mem: storing 1 in location 1947
 102 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1941 is 0
9999 mem: location 1947 is 1
9999 mem: storing 0 in location 1948
 102 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1935 is 2
9999 mem: location 1937 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 0 in location 1949
 102 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1948 is 0
9999 mem: location 1949 is 0
9999 mem: storing 0 in location 1950
 102 run: break-unless before-cursor?:boolean, 
9999 mem: location 1950 is 0
9999 run: jumping to instruction 83
 102 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1928 is 1009
9999 mem: location 1936 is 1
9999 mem: location 1932 is 4
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 2166
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 2168
 103 run: left:number <- next-ingredient 
9999 mem: storing 1 in location 2169
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 2170
 103 run: column:number <- copy left:number
9999 mem: location 2169 is 1
9999 mem: storing 1 in location 2171
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2171 is 1
9999 mem: location 2170 is 4
9999 mem: storing 0 in location 2172
 103 run: break-if done?:boolean, 
9999 mem: location 2172 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 2168 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2173
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2175
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2176
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2177
9999 mem: storing 0 in location 2178
 104 run: break-if color-found?:boolean, 
9999 mem: location 2178 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2177
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2179
9999 mem: storing 0 in location 2180
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2180 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2179
 104 run: break-unless x:address:screen, 
9999 mem: location 2175 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2175 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2181
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2175 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2182
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2175 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 2183
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2175 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2184
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2176 is 32
9999 mem: storing 0 in location 2185
 104 run: break-unless newline?:boolean, 
9999 mem: location 2185 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2181 is 1011
9999 mem: location 1011 is 2
9999 mem: location 2183 is 5
9999 mem: storing 10 in location 2188
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2188 is 10
9999 mem: location 2182 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 2188
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2175 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2189
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2176 is 32
9999 mem: storing 0 in location 2190
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2190 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2189 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2188 is 11
9999 mem: location 2189 is 1014
9999 mem: location 2188 is 11
9999 mem: storing 1037 in location 2192
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2192 is 1037
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 2192 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 2193
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2192 is 1037
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 2192 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 2194
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2176 is 32
9999 mem: location 2193 is 1037
9999 mem: storing 32 in location 1037
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2177 is 7
9999 mem: location 2194 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2183 is 5
9999 mem: storing 4 in location 2195
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2182 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2195 is 4
9999 mem: storing 0 in location 2196
 104 run: break-if at-right?:boolean, 
9999 mem: location 2196 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2182 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2182 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2175 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2171 is 1
9999 mem: storing 2 in location 2171
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2171 is 2
9999 mem: location 2170 is 4
9999 mem: storing 0 in location 2172
 103 run: break-if done?:boolean, 
9999 mem: location 2172 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 2168 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2197
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2199
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2200
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2201
9999 mem: storing 0 in location 2202
 104 run: break-if color-found?:boolean, 
9999 mem: location 2202 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2201
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2203
9999 mem: storing 0 in location 2204
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2204 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2203
 104 run: break-unless x:address:screen, 
9999 mem: location 2199 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2199 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2199 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2205
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2199 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2199 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2206
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2199 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2199 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 2207
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2199 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2199 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2208
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2200 is 32
9999 mem: storing 0 in location 2209
 104 run: break-unless newline?:boolean, 
9999 mem: location 2209 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2205 is 1011
9999 mem: location 1011 is 2
9999 mem: location 2207 is 5
9999 mem: storing 10 in location 2212
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2212 is 10
9999 mem: location 2206 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 2212
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2199 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2199 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2213
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2200 is 32
9999 mem: storing 0 in location 2214
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2214 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2213 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2212 is 12
9999 mem: location 2213 is 1014
9999 mem: location 2212 is 12
9999 mem: storing 1039 in location 2216
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2216 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 2216 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 2217
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2216 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 2216 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 2218
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2200 is 32
9999 mem: location 2217 is 1039
9999 mem: storing 32 in location 1039
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2201 is 7
9999 mem: location 2218 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2207 is 5
9999 mem: storing 4 in location 2219
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2219 is 4
9999 mem: storing 0 in location 2220
 104 run: break-if at-right?:boolean, 
9999 mem: location 2220 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2206 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2206 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2199 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2171 is 2
9999 mem: storing 3 in location 2171
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2171 is 3
9999 mem: location 2170 is 4
9999 mem: storing 0 in location 2172
 103 run: break-if done?:boolean, 
9999 mem: location 2172 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 2168 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2221
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2223
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2224
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2225
9999 mem: storing 0 in location 2226
 104 run: break-if color-found?:boolean, 
9999 mem: location 2226 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2225
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2227
9999 mem: storing 0 in location 2228
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2228 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2227
 104 run: break-unless x:address:screen, 
9999 mem: location 2223 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2223 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2223 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2229
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2223 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2223 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2230
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2223 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2223 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 2231
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2223 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2223 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2232
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2224 is 32
9999 mem: storing 0 in location 2233
 104 run: break-unless newline?:boolean, 
9999 mem: location 2233 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2229 is 1011
9999 mem: location 1011 is 2
9999 mem: location 2231 is 5
9999 mem: storing 10 in location 2236
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2236 is 10
9999 mem: location 2230 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 2236
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2223 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2223 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2237
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2224 is 32
9999 mem: storing 0 in location 2238
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2238 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2237 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2236 is 13
9999 mem: location 2237 is 1014
9999 mem: location 2236 is 13
9999 mem: storing 1041 in location 2240
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2240 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 2240 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 2241
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2240 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 2240 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 2242
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2224 is 32
9999 mem: location 2241 is 1041
9999 mem: storing 32 in location 1041
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2225 is 7
9999 mem: location 2242 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2231 is 5
9999 mem: storing 4 in location 2243
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2230 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2243 is 4
9999 mem: storing 0 in location 2244
 104 run: break-if at-right?:boolean, 
9999 mem: location 2244 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2230 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2230 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2223 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2171 is 3
9999 mem: storing 4 in location 2171
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2171 is 4
9999 mem: location 2170 is 4
9999 mem: storing 0 in location 2172
 103 run: break-if done?:boolean, 
9999 mem: location 2172 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 2168 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2245
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2247
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2248
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2249
9999 mem: storing 0 in location 2250
 104 run: break-if color-found?:boolean, 
9999 mem: location 2250 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2249
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2251
9999 mem: storing 0 in location 2252
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2252 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2251
 104 run: break-unless x:address:screen, 
9999 mem: location 2247 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2253
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2254
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2247 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 2255
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2247 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2256
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2248 is 32
9999 mem: storing 0 in location 2257
 104 run: break-unless newline?:boolean, 
9999 mem: location 2257 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 2255 is 5
9999 mem: storing 10 in location 2260
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2260 is 10
9999 mem: location 2254 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 2260
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2247 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2261
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2248 is 32
9999 mem: storing 0 in location 2262
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2262 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2261 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2260 is 14
9999 mem: location 2261 is 1014
9999 mem: location 2260 is 14
9999 mem: storing 1043 in location 2264
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2264 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 2264 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 2265
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2264 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 2264 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 2266
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2248 is 32
9999 mem: location 2265 is 1043
9999 mem: storing 32 in location 1043
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2249 is 7
9999 mem: location 2266 is 1044
9999 mem: storing 7 in location 1044
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2255 is 5
9999 mem: storing 4 in location 2267
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2254 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2267 is 4
9999 mem: storing 1 in location 2268
 104 run: break-if at-right?:boolean, 
9999 mem: location 2268 is 1
9999 run: jumping to instruction 60
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2247 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2171 is 4
9999 mem: storing 5 in location 2171
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2171 is 5
9999 mem: location 2170 is 4
9999 mem: storing 1 in location 2172
 103 run: break-if done?:boolean, 
9999 mem: location 2172 is 1
9999 run: jumping to instruction 11
 102 run: reply row:number, screen:address/same-as-ingredient:0
9999 mem: location 1935 is 2
9999 mem: location 1928 is 1009
9999 run: result 0 is 2
9999 run: result 1 is 1009
9999 mem: storing 2 in location 1840
9999 mem: storing 1009 in location 1830
 101 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1832 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1919
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 2
9999 mem: location 1832 is 1095
9999 run: address to copy is 1097
9999 run: its type is number
9999 mem: location 1097 is 0
9999 mem: storing 0 in location 1841
 101 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1832 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1919
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 2
9999 mem: location 1832 is 1095
9999 run: address to copy is 1098
9999 run: its type is number
9999 mem: location 1098 is 4
9999 mem: storing 4 in location 1842
 101 run: row:number <- add row:number, 1:literal
9999 mem: location 1840 is 2
9999 mem: storing 3 in location 1840
 101 run: move-cursor screen:address, row:number, left:number
9999 mem: location 1830 is 1009
9999 mem: location 1840 is 3
9999 mem: location 1841 is 0
 102 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 2269
 102 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2271
 102 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 2272
 102 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2273
 102 run: break-unless x:address:screen, 
9999 mem: location 2271 is 1009
9999 run: jump-unless fell through
 102 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2271 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2271 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2274
 102 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2272 is 3
9999 mem: location 2274 is 1011
9999 mem: storing 3 in location 1011
 102 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2271 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2271 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2275
 102 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2273 is 0
9999 mem: location 2275 is 1012
9999 mem: storing 0 in location 1012
 102 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2271 is 1009
 101 run: clear-line-delimited screen:address, left:number, right:number
9999 mem: location 1830 is 1009
9999 mem: location 1841 is 0
9999 mem: location 1842 is 4
 102 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 2276
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 2278
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 2279
 102 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 2280
 102 run: column:number <- copy left:number
9999 mem: location 2279 is 0
9999 mem: storing 0 in location 2281
 102 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2281 is 0
9999 mem: location 2280 is 4
9999 mem: storing 0 in location 2282
 102 run: break-if done?:boolean, 
9999 mem: location 2282 is 0
9999 run: jump-if fell through
 102 run: print-character screen:address, 32:literal/space
9999 mem: location 2278 is 1009
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2283
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2285
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2286
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2287
9999 mem: storing 0 in location 2288
 103 run: break-if color-found?:boolean, 
9999 mem: location 2288 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2287
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2289
9999 mem: storing 0 in location 2290
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 2290 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2289
 103 run: break-unless x:address:screen, 
9999 mem: location 2285 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2285 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2285 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2291
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2285 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2285 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2292
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2285 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2285 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 2293
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2285 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2285 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2294
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2286 is 32
9999 mem: storing 0 in location 2295
 103 run: break-unless newline?:boolean, 
9999 mem: location 2295 is 0
9999 run: jumping to instruction 30
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2291 is 1011
9999 mem: location 1011 is 3
9999 mem: location 2293 is 5
9999 mem: storing 15 in location 2298
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2298 is 15
9999 mem: location 2292 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 15 in location 2298
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2285 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2285 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2299
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2286 is 32
9999 mem: storing 0 in location 2300
 103 run: break-unless backspace?:boolean, 
9999 mem: location 2300 is 0
9999 run: jumping to instruction 49
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2299 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2298 is 15
9999 mem: location 2299 is 1014
9999 mem: location 2298 is 15
9999 mem: storing 1045 in location 2302
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2302 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 2302 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 2303
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2302 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 2302 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 2304
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2286 is 32
9999 mem: location 2303 is 1045
9999 mem: storing 32 in location 1045
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2287 is 7
9999 mem: location 2304 is 1046
9999 mem: storing 7 in location 1046
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2293 is 5
9999 mem: storing 4 in location 2305
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2292 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2305 is 4
9999 mem: storing 0 in location 2306
 103 run: break-if at-right?:boolean, 
9999 mem: location 2306 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2292 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2292 is 1012
9999 mem: storing 1 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2285 is 1009
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 2281 is 0
9999 mem: storing 1 in location 2281
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2281 is 1
9999 mem: location 2280 is 4
9999 mem: storing 0 in location 2282
 102 run: break-if done?:boolean, 
9999 mem: location 2282 is 0
9999 run: jump-if fell through
 102 run: print-character screen:address, 32:literal/space
9999 mem: location 2278 is 1009
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2307
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2309
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2310
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2311
9999 mem: storing 0 in location 2312
 103 run: break-if color-found?:boolean, 
9999 mem: location 2312 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2311
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2313
9999 mem: storing 0 in location 2314
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 2314 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2313
 103 run: break-unless x:address:screen, 
9999 mem: location 2309 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2309 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2309 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2315
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2309 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2309 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2316
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2309 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2309 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 2317
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2309 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2309 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2318
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2310 is 32
9999 mem: storing 0 in location 2319
 103 run: break-unless newline?:boolean, 
9999 mem: location 2319 is 0
9999 run: jumping to instruction 30
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2315 is 1011
9999 mem: location 1011 is 3
9999 mem: location 2317 is 5
9999 mem: storing 15 in location 2322
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2322 is 15
9999 mem: location 2316 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 16 in location 2322
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2309 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2309 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2323
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2310 is 32
9999 mem: storing 0 in location 2324
 103 run: break-unless backspace?:boolean, 
9999 mem: location 2324 is 0
9999 run: jumping to instruction 49
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2323 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2322 is 16
9999 mem: location 2323 is 1014
9999 mem: location 2322 is 16
9999 mem: storing 1047 in location 2326
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2326 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 2326 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 2327
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2326 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 2326 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 2328
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2310 is 32
9999 mem: location 2327 is 1047
9999 mem: storing 32 in location 1047
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2311 is 7
9999 mem: location 2328 is 1048
9999 mem: storing 7 in location 1048
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2317 is 5
9999 mem: storing 4 in location 2329
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2316 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2329 is 4
9999 mem: storing 0 in location 2330
 103 run: break-if at-right?:boolean, 
9999 mem: location 2330 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2316 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2316 is 1012
9999 mem: storing 2 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2309 is 1009
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 2281 is 1
9999 mem: storing 2 in location 2281
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2281 is 2
9999 mem: location 2280 is 4
9999 mem: storing 0 in location 2282
 102 run: break-if done?:boolean, 
9999 mem: location 2282 is 0
9999 run: jump-if fell through
 102 run: print-character screen:address, 32:literal/space
9999 mem: location 2278 is 1009
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2331
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2333
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2334
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2335
9999 mem: storing 0 in location 2336
 103 run: break-if color-found?:boolean, 
9999 mem: location 2336 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2335
schedule: print-character/clear-line-delimited/editor-event-loop/run1002/editor-wraps-line-on-insert
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2337
9999 mem: storing 0 in location 2338
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 2338 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2337
 103 run: break-unless x:address:screen, 
9999 mem: location 2333 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2333 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2333 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2339
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2333 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2333 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2340
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2333 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2333 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 2341
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2333 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2333 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2342
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2334 is 32
9999 mem: storing 0 in location 2343
 103 run: break-unless newline?:boolean, 
9999 mem: location 2343 is 0
9999 run: jumping to instruction 30
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2339 is 1011
9999 mem: location 1011 is 3
9999 mem: location 2341 is 5
9999 mem: storing 15 in location 2346
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2346 is 15
9999 mem: location 2340 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 17 in location 2346
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2333 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2333 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2347
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2334 is 32
9999 mem: storing 0 in location 2348
 103 run: break-unless backspace?:boolean, 
9999 mem: location 2348 is 0
9999 run: jumping to instruction 49
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2347 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2346 is 17
9999 mem: location 2347 is 1014
9999 mem: location 2346 is 17
9999 mem: storing 1049 in location 2350
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2350 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 2350 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 2351
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2350 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 2350 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 2352
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2334 is 32
9999 mem: location 2351 is 1049
9999 mem: storing 32 in location 1049
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2335 is 7
9999 mem: location 2352 is 1050
9999 mem: storing 7 in location 1050
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2341 is 5
9999 mem: storing 4 in location 2353
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2340 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2353 is 4
9999 mem: storing 0 in location 2354
 103 run: break-if at-right?:boolean, 
9999 mem: location 2354 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2340 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2340 is 1012
9999 mem: storing 3 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2333 is 1009
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 2281 is 2
9999 mem: storing 3 in location 2281
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2281 is 3
9999 mem: location 2280 is 4
9999 mem: storing 0 in location 2282
 102 run: break-if done?:boolean, 
9999 mem: location 2282 is 0
9999 run: jump-if fell through
 102 run: print-character screen:address, 32:literal/space
9999 mem: location 2278 is 1009
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2355
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2357
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2358
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2359
9999 mem: storing 0 in location 2360
 103 run: break-if color-found?:boolean, 
9999 mem: location 2360 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2359
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2361
9999 mem: storing 0 in location 2362
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 2362 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2361
 103 run: break-unless x:address:screen, 
9999 mem: location 2357 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2357 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2357 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2363
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2357 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2357 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2364
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2357 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2357 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 2365
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2357 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2357 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2366
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2358 is 32
9999 mem: storing 0 in location 2367
 103 run: break-unless newline?:boolean, 
9999 mem: location 2367 is 0
9999 run: jumping to instruction 30
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2363 is 1011
9999 mem: location 1011 is 3
9999 mem: location 2365 is 5
9999 mem: storing 15 in location 2370
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2370 is 15
9999 mem: location 2364 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 18 in location 2370
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2357 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2357 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2371
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2358 is 32
9999 mem: storing 0 in location 2372
 103 run: break-unless backspace?:boolean, 
9999 mem: location 2372 is 0
9999 run: jumping to instruction 49
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2371 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2370 is 18
9999 mem: location 2371 is 1014
9999 mem: location 2370 is 18
9999 mem: storing 1051 in location 2374
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2374 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 2374 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 2375
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2374 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 2374 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 2376
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2358 is 32
9999 mem: location 2375 is 1051
9999 mem: storing 32 in location 1051
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2359 is 7
9999 mem: location 2376 is 1052
9999 mem: storing 7 in location 1052
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2365 is 5
9999 mem: storing 4 in location 2377
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2364 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2377 is 4
9999 mem: storing 0 in location 2378
 103 run: break-if at-right?:boolean, 
9999 mem: location 2378 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2364 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2364 is 1012
9999 mem: storing 4 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2357 is 1009
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 2281 is 3
9999 mem: storing 4 in location 2281
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2281 is 4
9999 mem: location 2280 is 4
9999 mem: storing 0 in location 2282
 102 run: break-if done?:boolean, 
9999 mem: location 2282 is 0
9999 run: jump-if fell through
 102 run: print-character screen:address, 32:literal/space
9999 mem: location 2278 is 1009
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2379
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2381
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2382
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2383
9999 mem: storing 0 in location 2384
 103 run: break-if color-found?:boolean, 
9999 mem: location 2384 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2383
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2385
9999 mem: storing 0 in location 2386
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 2386 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2385
 103 run: break-unless x:address:screen, 
9999 mem: location 2381 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2381 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2381 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2387
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2381 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2381 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2388
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2381 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2381 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 2389
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2381 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2381 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2390
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2382 is 32
9999 mem: storing 0 in location 2391
 103 run: break-unless newline?:boolean, 
9999 mem: location 2391 is 0
9999 run: jumping to instruction 30
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2387 is 1011
9999 mem: location 1011 is 3
9999 mem: location 2389 is 5
9999 mem: storing 15 in location 2394
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2394 is 15
9999 mem: location 2388 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 19 in location 2394
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2381 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2381 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2395
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2382 is 32
9999 mem: storing 0 in location 2396
 103 run: break-unless backspace?:boolean, 
9999 mem: location 2396 is 0
9999 run: jumping to instruction 49
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2395 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2394 is 19
9999 mem: location 2395 is 1014
9999 mem: location 2394 is 19
9999 mem: storing 1053 in location 2398
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2398 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 2398 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 2399
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2398 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 2398 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 2400
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2382 is 32
9999 mem: location 2399 is 1053
9999 mem: storing 32 in location 1053
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2383 is 7
9999 mem: location 2400 is 1054
9999 mem: storing 7 in location 1054
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2389 is 5
9999 mem: storing 4 in location 2401
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2388 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2401 is 4
9999 mem: storing 1 in location 2402
 103 run: break-if at-right?:boolean, 
9999 mem: location 2402 is 1
9999 run: jumping to instruction 60
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2381 is 1009
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 2281 is 4
9999 mem: storing 5 in location 2281
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2281 is 5
9999 mem: location 2280 is 4
9999 mem: storing 1 in location 2282
 102 run: break-if done?:boolean, 
9999 mem: location 2282 is 1
9999 run: jumping to instruction 11
 101 run: loop 
9999 run: jumping to instruction 5
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 1831 is 1826
 102 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 2403
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 1826 in location 2405
 102 run: break-unless x:address:console, 
9999 mem: location 2405 is 1826
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 2405 is 1826
9999 mem: location 1826 is 1
9999 mem: location 1827 is 1821
9999 mem: location 2405 is 1826
9999 run: address to copy is 1826
9999 mem: storing 1826 in location 2406
 102 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 2405 is 1826
9999 mem: location 1826 is 1
9999 mem: location 1827 is 1821
9999 mem: location 2405 is 1826
9999 run: address to copy is 1827
9999 run: its type is address
9999 mem: location 1827 is 1821
9999 mem: storing 1821 in location 2407
 102 run: max:number <- length buf:address:array:event/deref
9999 mem: location 2407 is 1821
9999 mem: location 1821 is 1
9999 mem: location 1822 is 0
9999 mem: location 1823 is 102
9999 mem: location 1824 is 0
9999 mem: location 1825 is 0
9999 mem: location 2407 is 1821
9999 mem: storing 1 in location 2408
 102 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 2406 is 1826
9999 mem: location 1826 is 1
9999 mem: location 2408 is 1
9999 mem: storing 1 in location 2409
 102 run: break-unless done?:boolean, 
9999 mem: location 2409 is 1
9999 run: jump-unless fell through
 102 run: dummy:address:event <- new event:type
9999 mem: new alloc: 2416
9999 mem: storing 2416 in location 2410
 102 run: reply dummy:address:event/deref, x:address:console/same-as-ingredient:0, 1:literal/found, 1:literal/quit
9999 mem: location 2410 is 2416
9999 mem: location 2416 is 0
9999 mem: location 2417 is 0
9999 mem: location 2418 is 0
9999 mem: location 2419 is 0
9999 mem: location 2405 is 1826
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1826
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1833
9999 mem: storing 0 in location 1834
9999 mem: storing 0 in location 1835
9999 mem: storing 0 in location 1836
9999 mem: storing 1826 in location 1831
9999 mem: storing 1 in location 1837
9999 mem: storing 1 in location 1838
 101 run: loop-unless found?:boolean, 
9999 mem: location 1837 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?:boolean, 
9999 mem: location 1838 is 1
9999 run: jumping to instruction 25
  99 run: screen-should-contain [
    .     .
    .efabâ†©.
    .c    .
    .     .
  ]
