parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "height": ]}
parse: instruction: new
parse:   ingredient: {name: "abc", properties: [_: "literal-string"]}
parse:   product: {name: "1", properties: ["1": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "1", properties: ["1": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
parse:   product: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    type [e]\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    event-loop screen:address, console:address, 2:address:editor-data\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .     .\n    .eabc .\n    .     .\n    .     .\n  ", properties: [_: "literal-string"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    type [f]\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    event-loop screen:address, console:address, 2:address:editor-data\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .     .\n    .efabâ†©.\n    .c    .\n    .     .\n  ", properties: [_: "literal-string"]}
after-brace: recipe editor-wraps-line-on-insert
after-brace: new-fake-screen ...
after-brace: new ...
after-brace: new-editor ...
after-brace: assume-console ...
after-brace: run ...
after-brace: screen-should-contain ...
after-brace: assume-console ...
after-brace: run ...
after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: editor-wraps-line-on-insert
 101 run: screen:address <- new-fake-screen 5:literal/width, 5:literal/height
 102 run: default-space:address:array:location <- new location:type, 30:literal/capacity
9999 mem: array size is 30
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1031
9999 mem: storing 1031 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1032
9999 mem: storing 5 in location 1032
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1031
9999 mem: storing 5 in location 1031
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1033
9999 mem: storing 0 in location 1033
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1034
9999 mem: storing 0 in location 1034
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1032
9999 mem: location 1032 is 5
9999 mem: location 1004 is 1031
9999 mem: location 1031 is 5
9999 mem: storing 25 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 25
9999 mem: array size is 25
9999 mem: new alloc: 1036
9999 mem: location 1008 is 1035
9999 mem: storing 1036 in location 1035
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1087
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1089
 103 run: break-unless x:address:screen, 
9999 mem: location 1089 is 1031
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1089 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1089 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1090
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1090 is 1036
9999 mem: storing 25 in location 1091
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1092
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 0
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 0
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 0
9999 mem: storing 1037 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1094 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1094 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 0
9999 mem: storing 1 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 1
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 1
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 1
9999 mem: storing 1039 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1094 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1094 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 1
9999 mem: storing 2 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 2
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 2
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 2
9999 mem: storing 1041 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1094 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1094 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 2
9999 mem: storing 3 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 3
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 3
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 3
9999 mem: storing 1043 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1094 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1094 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 3
9999 mem: storing 4 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 4
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 4
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 4
9999 mem: storing 1045 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1094 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1094 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 4
9999 mem: storing 5 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 5
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 5
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 5
9999 mem: storing 1047 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1094 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1094 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 5
9999 mem: storing 6 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 6
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 6
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 6
9999 mem: storing 1049 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1094 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1094 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 6
9999 mem: storing 7 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 7
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 7
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 7
9999 mem: storing 1051 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1094 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1094 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 7
9999 mem: storing 8 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 8
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 8
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 8
9999 mem: storing 1053 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1094 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1094 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 8
9999 mem: storing 9 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 9
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 9
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 9
9999 mem: storing 1055 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1094 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1094 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 9
9999 mem: storing 10 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 10
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 10
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 10
9999 mem: storing 1057 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1094 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1094 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 10
9999 mem: storing 11 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 11
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 11
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 11
9999 mem: storing 1059 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1094 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1094 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 11
9999 mem: storing 12 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 12
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 12
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 12
9999 mem: storing 1061 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1094 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1094 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 12
9999 mem: storing 13 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 13
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 13
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 13
9999 mem: storing 1063 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1094 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1094 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 13
9999 mem: storing 14 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 14
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 14
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 14
9999 mem: storing 1065 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1094 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1094 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1066
9999 mem: storing 7 in location 1066
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 14
9999 mem: storing 15 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 15
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 15
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 15
9999 mem: storing 1067 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1094 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1067
9999 mem: storing 0 in location 1067
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1094 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1068
9999 mem: storing 7 in location 1068
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 15
9999 mem: storing 16 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 16
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 16
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 16
9999 mem: storing 1069 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1094 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1069
9999 mem: storing 0 in location 1069
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1094 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1070
9999 mem: storing 7 in location 1070
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 16
9999 mem: storing 17 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 17
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 17
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 17
9999 mem: storing 1071 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1094 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1071
9999 mem: storing 0 in location 1071
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1094 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1072
9999 mem: storing 7 in location 1072
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 17
9999 mem: storing 18 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 18
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 18
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 18
9999 mem: storing 1073 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1094 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1073
9999 mem: storing 0 in location 1073
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1094 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1074
9999 mem: storing 7 in location 1074
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 18
9999 mem: storing 19 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 19
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 19
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 19
9999 mem: storing 1075 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1094 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1075
9999 mem: storing 0 in location 1075
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1094 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1076
9999 mem: storing 7 in location 1076
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 19
9999 mem: storing 20 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 20
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 20
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 20
9999 mem: storing 1077 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1094 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1077
9999 mem: storing 0 in location 1077
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1094 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1078
9999 mem: storing 7 in location 1078
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 20
9999 mem: storing 21 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 21
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 21
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 21
9999 mem: storing 1079 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1094 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1079
9999 mem: storing 0 in location 1079
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1094 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1080
9999 mem: storing 7 in location 1080
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 21
9999 mem: storing 22 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 22
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 22
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 22
9999 mem: storing 1081 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1094 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1081
9999 mem: storing 0 in location 1081
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1094 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1082
9999 mem: storing 7 in location 1082
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 22
9999 mem: storing 23 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 23
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 23
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 23
9999 mem: storing 1083 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1094 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1083
9999 mem: storing 0 in location 1083
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1094 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1084
9999 mem: storing 7 in location 1084
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 23
9999 mem: storing 24 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 24
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 24
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 24
9999 mem: storing 1085 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1094 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1085
9999 mem: storing 0 in location 1085
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1094 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1086
9999 mem: storing 7 in location 1086
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 24
9999 mem: storing 25 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 25
9999 mem: location 1091 is 25
9999 mem: storing 1 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1089 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1089 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1097
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1097 is 1033
9999 mem: storing 0 in location 1033
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1089 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1089 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1097
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1097 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1089 is 1031
 102 run: reply result:address:screen
9999 mem: location 1002 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 101 run: 1:address:array:character <- new [abc]
9999 mem: storing 1118 in location 1
 101 run: 2:address:editor-data <- new-editor 1:address:array:character, screen:address, 0:literal/left, 5:literal/right
9999 mem: location 1 is 1118
9999 mem: location 900 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1122
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1118 in location 1124
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1125
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1126
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1127
 102 run: right:number <- subtract right:number, 1:literal
9999 mem: location 1127 is 5
9999 mem: storing 4 in location 1127
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: new alloc: 1153
9999 mem: storing 1153 in location 1128
 102 run: x:address:number <- get-address result:address:editor-data/deref, left:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1128 is 1153
9999 run: address to copy is 1157
9999 mem: storing 1157 in location 1129
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1126 is 0
9999 mem: location 1129 is 1157
9999 mem: storing 0 in location 1157
 102 run: x:address:number <- get-address result:address:editor-data/deref, right:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1128 is 1153
9999 run: address to copy is 1158
9999 mem: storing 1158 in location 1129
 102 run: x:address:number/deref <- copy right:number
9999 mem: location 1127 is 4
9999 mem: location 1129 is 1158
9999 mem: storing 4 in location 1158
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-row:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1128 is 1153
9999 run: address to copy is 1159
9999 mem: storing 1159 in location 1129
 102 run: x:address:number/deref <- copy 1:literal/top
9999 mem: location 1129 is 1159
9999 mem: storing 1 in location 1159
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-column:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1128 is 1153
9999 run: address to copy is 1160
9999 mem: storing 1160 in location 1129
 102 run: response:address:address:array:character <- get-address result:address:editor-data/deref, response:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1128 is 1153
9999 run: address to copy is 1155
9999 mem: storing 1155 in location 1130
 102 run: response:address:address:array:character/deref <- copy 0:literal
9999 mem: location 1130 is 1155
9999 mem: storing 0 in location 1155
 102 run: warnings:address:address:array:character <- get-address result:address:editor-data/deref, warnings:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1128 is 1153
9999 run: address to copy is 1156
9999 mem: storing 1156 in location 1131
 102 run: warnings:address:address:array:character/deref <- copy 0:literal
9999 mem: location 1131 is 1156
9999 mem: storing 0 in location 1156
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1126 is 0
9999 mem: location 1129 is 1160
9999 mem: storing 0 in location 1160
 102 run: init:address:address:duplex-list <- get-address result:address:editor-data/deref, data:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1128 is 1153
9999 run: address to copy is 1153
9999 mem: storing 1153 in location 1132
 102 run: init:address:address:duplex-list/deref <- push-duplex 167:literal/Â§, 0:literal/tail
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1163
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1165
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1166
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1194
9999 mem: storing 1194 in location 1167
 103 run: val:address:location <- get-address result:address:duplex-list/deref, value:offset
9999 mem: location 1167 is 1194
9999 mem: location 1194 is 0
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1167 is 1194
9999 run: address to copy is 1194
9999 mem: storing 1194 in location 1168
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1165 is 167
9999 mem: location 1168 is 1194
9999 mem: storing 167 in location 1194
 103 run: next:address:address:duplex-list <- get-address result:address:duplex-list/deref, next:offset
9999 mem: location 1167 is 1194
9999 mem: location 1194 is 167
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1167 is 1194
9999 run: address to copy is 1195
9999 mem: storing 1195 in location 1169
 103 run: next:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1166 is 0
9999 mem: location 1169 is 1195
9999 mem: storing 0 in location 1195
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1166 is 0
9999 run: jump-if fell through
 103 run: reply result:address:duplex-list
9999 mem: location 1167 is 1194
9999 run: result 0 is 1194
9999 mem: location 1132 is 1153
9999 mem: storing 1194 in location 1153
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1128 is 1153
9999 run: address to copy is 1154
9999 mem: storing 1154 in location 1133
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1132 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1133 is 1154
9999 mem: storing 1194 in location 1154
 102 run: b:address:boolean <- get-address result:address:editor-data/deref, in-focus?:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 1194
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1128 is 1153
9999 run: address to copy is 1162
9999 mem: storing 1162 in location 1134
 102 run: b:address:boolean/deref <- copy 1:literal/true
9999 mem: location 1134 is 1162
9999 mem: storing 1 in location 1162
 102 run: jump-if s:address:array:character, 1:offset
9999 mem: location 1124 is 1118
9999 run: jumping to instruction 27
 102 run: len:number <- length s:address:array:character/deref
9999 mem: location 1124 is 1118
9999 mem: location 1118 is 3
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1124 is 1118
9999 mem: storing 3 in location 1135
 102 run: jump-if len:number, 1:offset
9999 mem: location 1135 is 3
9999 run: jumping to instruction 30
 102 run: idx:number <- copy 0:literal
9999 mem: storing 0 in location 1136
 102 run: curr:address:duplex-list <- copy init:address:address:duplex-list/deref
9999 mem: location 1132 is 1153
9999 mem: location 1153 is 1194
9999 mem: storing 1194 in location 1137
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1136 is 0
9999 mem: location 1135 is 3
9999 mem: storing 0 in location 1138
 102 run: break-if done?:boolean, 
9999 mem: location 1138 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1124 is 1118
9999 mem: location 1118 is 3
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1136 is 0
9999 mem: location 1124 is 1118
9999 mem: location 1136 is 0
9999 run: address to copy is 1119
9999 run: its type is character
9999 mem: location 1119 is 97
9999 mem: storing 97 in location 1139
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1139 is 97
9999 mem: location 1137 is 1194
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1197
 103 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1199
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1200
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1228
9999 mem: storing 1228 in location 1201
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1201 is 1228
9999 mem: location 1228 is 0
9999 mem: location 1229 is 0
9999 mem: location 1230 is 0
9999 mem: location 1201 is 1228
9999 run: address to copy is 1228
9999 mem: storing 1228 in location 1202
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1199 is 97
9999 mem: location 1202 is 1228
9999 mem: storing 97 in location 1228
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1200 is 1194
9999 mem: location 1194 is 167
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1200 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 0
9999 mem: storing 0 in location 1203
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1200 is 1194
9999 mem: location 1194 is 167
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1200 is 1194
9999 run: address to copy is 1195
9999 mem: storing 1195 in location 1204
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1201 is 1228
9999 mem: location 1204 is 1195
9999 mem: storing 1228 in location 1195
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1201 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 0
9999 mem: location 1230 is 0
9999 mem: location 1201 is 1228
9999 run: address to copy is 1230
9999 mem: storing 1230 in location 1204
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1200 is 1194
9999 mem: location 1204 is 1230
9999 mem: storing 1194 in location 1230
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1201 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 0
9999 mem: location 1230 is 1194
9999 mem: location 1201 is 1228
9999 run: address to copy is 1229
9999 mem: storing 1229 in location 1204
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1229
9999 mem: storing 0 in location 1229
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1203 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1201 is 1228
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1137 is 1194
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1231
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1233
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1233 is 1194
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1233 is 1194
9999 mem: location 1194 is 167
9999 mem: location 1195 is 1228
9999 mem: location 1196 is 0
9999 mem: location 1233 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1228
9999 mem: storing 1228 in location 1234
 103 run: reply result:address:duplex-list
9999 mem: location 1234 is 1228
9999 run: result 0 is 1228
9999 mem: storing 1228 in location 1137
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1136 is 0
9999 mem: storing 1 in location 1136
 102 run: loop 
9999 run: jumping to instruction 33
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1136 is 1
9999 mem: location 1135 is 3
9999 mem: storing 0 in location 1138
 102 run: break-if done?:boolean, 
9999 mem: location 1138 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1124 is 1118
9999 mem: location 1118 is 3
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1136 is 1
9999 mem: location 1124 is 1118
9999 mem: location 1136 is 1
9999 run: address to copy is 1120
9999 run: its type is character
9999 mem: location 1120 is 98
9999 mem: storing 98 in location 1139
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1139 is 98
9999 mem: location 1137 is 1228
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1262
 103 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1264
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1228 in location 1265
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1293
9999 mem: storing 1293 in location 1266
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1266 is 1293
9999 mem: location 1293 is 0
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: location 1266 is 1293
9999 run: address to copy is 1293
9999 mem: storing 1293 in location 1267
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1264 is 98
9999 mem: location 1267 is 1293
9999 mem: storing 98 in location 1293
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1265 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 0
9999 mem: location 1230 is 1194
9999 mem: location 1265 is 1228
9999 run: address to copy is 1229
9999 run: its type is address
9999 mem: location 1229 is 0
9999 mem: storing 0 in location 1268
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1265 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 0
9999 mem: location 1230 is 1194
9999 mem: location 1265 is 1228
9999 run: address to copy is 1229
9999 mem: storing 1229 in location 1269
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1266 is 1293
9999 mem: location 1269 is 1229
9999 mem: storing 1293 in location 1229
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1266 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: location 1266 is 1293
9999 run: address to copy is 1295
9999 mem: storing 1295 in location 1269
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1265 is 1228
9999 mem: location 1269 is 1295
9999 mem: storing 1228 in location 1295
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1266 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 0
9999 mem: location 1295 is 1228
9999 mem: location 1266 is 1293
9999 run: address to copy is 1294
9999 mem: storing 1294 in location 1269
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1268 is 0
9999 mem: location 1269 is 1294
9999 mem: storing 0 in location 1294
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1266 is 1293
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1137 is 1228
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1296
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1228 in location 1298
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1298 is 1228
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1298 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 1293
9999 mem: location 1230 is 1194
9999 mem: location 1298 is 1228
9999 run: address to copy is 1229
9999 run: its type is address
9999 mem: location 1229 is 1293
9999 mem: storing 1293 in location 1299
 103 run: reply result:address:duplex-list
9999 mem: location 1299 is 1293
9999 run: result 0 is 1293
9999 mem: storing 1293 in location 1137
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1136 is 1
9999 mem: storing 2 in location 1136
 102 run: loop 
9999 run: jumping to instruction 33
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1136 is 2
9999 mem: location 1135 is 3
9999 mem: storing 0 in location 1138
 102 run: break-if done?:boolean, 
9999 mem: location 1138 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1124 is 1118
9999 mem: location 1118 is 3
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1136 is 2
9999 mem: location 1124 is 1118
9999 mem: location 1136 is 2
9999 run: address to copy is 1121
9999 run: its type is character
9999 mem: location 1121 is 99
9999 mem: storing 99 in location 1139
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1139 is 99
9999 mem: location 1137 is 1293
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1327
 103 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1329
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1293 in location 1330
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1358
9999 mem: storing 1358 in location 1331
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1331 is 1358
9999 mem: location 1358 is 0
9999 mem: location 1359 is 0
9999 mem: location 1360 is 0
9999 mem: location 1331 is 1358
9999 run: address to copy is 1358
9999 mem: storing 1358 in location 1332
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1329 is 99
9999 mem: location 1332 is 1358
9999 mem: storing 99 in location 1358
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1330 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 0
9999 mem: location 1295 is 1228
9999 mem: location 1330 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 0
9999 mem: storing 0 in location 1333
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1330 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 0
9999 mem: location 1295 is 1228
9999 mem: location 1330 is 1293
9999 run: address to copy is 1294
9999 mem: storing 1294 in location 1334
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1331 is 1358
9999 mem: location 1334 is 1294
9999 mem: storing 1358 in location 1294
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1331 is 1358
9999 mem: location 1358 is 99
9999 mem: location 1359 is 0
9999 mem: location 1360 is 0
9999 mem: location 1331 is 1358
9999 run: address to copy is 1360
9999 mem: storing 1360 in location 1334
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1330 is 1293
9999 mem: location 1334 is 1360
9999 mem: storing 1293 in location 1360
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1331 is 1358
9999 mem: location 1358 is 99
9999 mem: location 1359 is 0
9999 mem: location 1360 is 1293
9999 mem: location 1331 is 1358
9999 run: address to copy is 1359
9999 mem: storing 1359 in location 1334
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1333 is 0
9999 mem: location 1334 is 1359
9999 mem: storing 0 in location 1359
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1333 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1331 is 1358
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1137 is 1293
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1361
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1293 in location 1363
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1363 is 1293
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1363 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 1358
9999 mem: location 1295 is 1228
9999 mem: location 1363 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 1358
9999 mem: storing 1358 in location 1364
 103 run: reply result:address:duplex-list
9999 mem: location 1364 is 1358
9999 run: result 0 is 1358
9999 mem: storing 1358 in location 1137
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1136 is 2
9999 mem: storing 3 in location 1136
 102 run: loop 
9999 run: jumping to instruction 33
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1136 is 3
9999 mem: location 1135 is 3
9999 mem: storing 1 in location 1138
 102 run: break-if done?:boolean, 
9999 mem: location 1138 is 1
9999 run: jumping to instruction 40
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 1194
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1128 is 1153
9999 run: address to copy is 1154
9999 mem: storing 1154 in location 1133
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1132 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1133 is 1154
9999 mem: storing 1194 in location 1154
 102 run: result:address:editor-data <- render screen:address, result:address:editor-data
9999 mem: location 1125 is 1031
9999 mem: location 1128 is 1153
 103 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 1392
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1394
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1153 in location 1395
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1395 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 1194
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1395 is 1153
9999 run: address to copy is 1157
9999 run: its type is number
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1396
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1394 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1433
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1435
 104 run: break-unless x:address:screen, 
9999 mem: location 1435 is 1031
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1435 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1435 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1436
 104 run: reply height:number
9999 mem: location 1436 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1397
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1395 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 1194
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1395 is 1153
9999 run: address to copy is 1158
9999 run: its type is number
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 1398
 103 run: hide-screen screen:address
9999 mem: location 1394 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1464
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1466
 104 run: break-unless x:address:screen, 
9999 mem: location 1466 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 1466 is 1031
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 1395 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 1194
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1395 is 1153
9999 run: address to copy is 1153
9999 run: its type is address
9999 mem: location 1153 is 1194
9999 mem: storing 1194 in location 1399
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1399 is 1194
9999 mem: storing 1194 in location 1400
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1399 is 1194
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1495
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1497
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1497 is 1194
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1497 is 1194
9999 mem: location 1194 is 167
9999 mem: location 1195 is 1228
9999 mem: location 1196 is 0
9999 mem: location 1497 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1228
9999 mem: storing 1228 in location 1498
 104 run: reply result:address:duplex-list
9999 mem: location 1498 is 1228
9999 run: result 0 is 1228
9999 mem: storing 1228 in location 1399
 103 run: row:number <- copy 1:literal/top
9999 mem: storing 1 in location 1401
 103 run: column:number <- copy left:number
9999 mem: location 1396 is 0
9999 mem: storing 0 in location 1402
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1395 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 1194
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1395 is 1153
9999 run: address to copy is 1159
9999 mem: storing 1159 in location 1403
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1395 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 1194
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1395 is 1153
9999 run: address to copy is 1160
9999 mem: storing 1160 in location 1404
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1395 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 1194
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1395 is 1153
9999 run: address to copy is 1154
9999 mem: storing 1154 in location 1405
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1394 is 1031
9999 mem: location 1401 is 1
9999 mem: location 1402 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1526
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1528
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1529
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1530
 104 run: break-unless x:address:screen, 
9999 mem: location 1528 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1528 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1528 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1531
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1529 is 1
9999 mem: location 1531 is 1033
9999 mem: storing 1 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1528 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1528 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1532
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1530 is 0
9999 mem: location 1532 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1528 is 1031
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1399 is 1228
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1401 is 1
9999 mem: location 1397 is 5
9999 mem: storing 0 in location 1406
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1406 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1401 is 1
9999 mem: location 1403 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1407
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1407 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1402 is 0
9999 mem: location 1404 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 1 in location 1408
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1408 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1399 is 1228
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1557
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1228 in location 1559
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1559 is 1228
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1559 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 1293
9999 mem: location 1230 is 1194
9999 mem: location 1559 is 1228
9999 run: address to copy is 1230
9999 run: its type is address
9999 mem: location 1230 is 1194
9999 mem: storing 1194 in location 1560
 104 run: reply result:address:duplex-list
9999 mem: location 1560 is 1194
9999 run: result 0 is 1194
9999 mem: location 1405 is 1154
9999 mem: storing 1194 in location 1154
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1399 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 1293
9999 mem: location 1230 is 1194
9999 mem: location 1399 is 1228
9999 run: address to copy is 1228
9999 run: its type is number
9999 mem: location 1228 is 97
9999 mem: storing 97 in location 1409
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1409 is 97
9999 mem: storing 0 in location 1410
 103 run: break-unless newline?:boolean, 
9999 mem: location 1410 is 0
9999 run: jumping to instruction 47
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1402 is 0
9999 mem: location 1398 is 4
9999 mem: storing 0 in location 1412
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1412 is 0
9999 run: jumping to instruction 56
 103 run: print-character screen:address, c:character
9999 mem: location 1394 is 1031
9999 mem: location 1409 is 97
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1588
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1590
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1591
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1592
9999 mem: storing 0 in location 1593
 104 run: break-if color-found?:boolean, 
9999 mem: location 1593 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1592
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1594
9999 mem: storing 0 in location 1595
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1595 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1594
 104 run: break-unless x:address:screen, 
9999 mem: location 1590 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1590 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1590 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1596
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1590 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1590 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1597
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1590 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1590 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1598
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1590 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1590 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1599
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1591 is 97
9999 mem: storing 0 in location 1600
 104 run: break-unless newline?:boolean, 
9999 mem: location 1600 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1596 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1598 is 5
9999 mem: storing 5 in location 1603
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1603 is 5
9999 mem: location 1597 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 5 in location 1603
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1590 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1590 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1604
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1591 is 97
9999 mem: storing 0 in location 1605
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1605 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1604 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1603 is 5
9999 mem: location 1604 is 1036
9999 mem: location 1603 is 5
9999 mem: storing 1047 in location 1607
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1607 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1607 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1608
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1607 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1607 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1609
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1591 is 97
9999 mem: location 1608 is 1047
9999 mem: storing 97 in location 1047
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1592 is 7
9999 mem: location 1609 is 1048
9999 mem: storing 7 in location 1048
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1598 is 5
9999 mem: storing 4 in location 1610
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1597 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1610 is 4
9999 mem: storing 0 in location 1611
 104 run: break-if at-right?:boolean, 
9999 mem: location 1611 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1597 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1597 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1590 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1399 is 1228
schedule: next-duplex/render/new-editor/editor-wraps-line-on-insert
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1619
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1228 in location 1621
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1621 is 1228
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1621 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 1293
9999 mem: location 1230 is 1194
9999 mem: location 1621 is 1228
9999 run: address to copy is 1229
9999 run: its type is address
9999 mem: location 1229 is 1293
9999 mem: storing 1293 in location 1622
 104 run: reply result:address:duplex-list
9999 mem: location 1622 is 1293
9999 run: result 0 is 1293
9999 mem: storing 1293 in location 1399
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1400 is 1194
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1650
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1652
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1652 is 1194
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1652 is 1194
9999 mem: location 1194 is 167
9999 mem: location 1195 is 1228
9999 mem: location 1196 is 0
9999 mem: location 1652 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1228
9999 mem: storing 1228 in location 1653
 104 run: reply result:address:duplex-list
9999 mem: location 1653 is 1228
9999 run: result 0 is 1228
9999 mem: storing 1228 in location 1400
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1402 is 0
9999 mem: storing 1 in location 1402
 103 run: loop 
9999 run: jumping to instruction 17
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1399 is 1293
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1401 is 1
9999 mem: location 1397 is 5
9999 mem: storing 0 in location 1406
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1406 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1401 is 1
9999 mem: location 1403 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1407
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1407 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1402 is 1
9999 mem: location 1404 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1408
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1408 is 0
9999 run: jumping to instruction 27
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1399 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 1358
9999 mem: location 1295 is 1228
9999 mem: location 1399 is 1293
9999 run: address to copy is 1293
9999 run: its type is number
9999 mem: location 1293 is 98
9999 mem: storing 98 in location 1409
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1409 is 98
9999 mem: storing 0 in location 1410
 103 run: break-unless newline?:boolean, 
9999 mem: location 1410 is 0
9999 run: jumping to instruction 47
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1402 is 1
9999 mem: location 1398 is 4
9999 mem: storing 0 in location 1412
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1412 is 0
9999 run: jumping to instruction 56
 103 run: print-character screen:address, c:character
9999 mem: location 1394 is 1031
9999 mem: location 1409 is 98
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1681
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1683
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1684
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1685
9999 mem: storing 0 in location 1686
 104 run: break-if color-found?:boolean, 
9999 mem: location 1686 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1685
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1687
9999 mem: storing 0 in location 1688
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1688 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1687
 104 run: break-unless x:address:screen, 
9999 mem: location 1683 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1683 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1683 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1689
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1683 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1683 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1690
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1683 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1683 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1691
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1683 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1683 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1692
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1684 is 98
9999 mem: storing 0 in location 1693
 104 run: break-unless newline?:boolean, 
9999 mem: location 1693 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1689 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1691 is 5
9999 mem: storing 5 in location 1696
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1696 is 5
9999 mem: location 1690 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 6 in location 1696
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1683 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1683 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1697
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1684 is 98
9999 mem: storing 0 in location 1698
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1698 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1697 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1696 is 6
9999 mem: location 1697 is 1036
9999 mem: location 1696 is 6
9999 mem: storing 1049 in location 1700
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1700 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1700 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1701
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1700 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1700 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1702
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1684 is 98
9999 mem: location 1701 is 1049
9999 mem: storing 98 in location 1049
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1685 is 7
9999 mem: location 1702 is 1050
9999 mem: storing 7 in location 1050
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1691 is 5
9999 mem: storing 4 in location 1703
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1690 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1703 is 4
9999 mem: storing 0 in location 1704
 104 run: break-if at-right?:boolean, 
9999 mem: location 1704 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1690 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1690 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1683 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1399 is 1293
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1712
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1293 in location 1714
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1714 is 1293
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1714 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 1358
9999 mem: location 1295 is 1228
9999 mem: location 1714 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 1358
9999 mem: storing 1358 in location 1715
 104 run: reply result:address:duplex-list
9999 mem: location 1715 is 1358
9999 run: result 0 is 1358
9999 mem: storing 1358 in location 1399
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1400 is 1228
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1743
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1228 in location 1745
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1745 is 1228
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1745 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 1293
9999 mem: location 1230 is 1194
9999 mem: location 1745 is 1228
9999 run: address to copy is 1229
9999 run: its type is address
9999 mem: location 1229 is 1293
9999 mem: storing 1293 in location 1746
 104 run: reply result:address:duplex-list
9999 mem: location 1746 is 1293
9999 run: result 0 is 1293
9999 mem: storing 1293 in location 1400
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1402 is 1
9999 mem: storing 2 in location 1402
 103 run: loop 
9999 run: jumping to instruction 17
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1399 is 1358
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1401 is 1
9999 mem: location 1397 is 5
9999 mem: storing 0 in location 1406
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1406 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1401 is 1
9999 mem: location 1403 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1407
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1407 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1402 is 2
9999 mem: location 1404 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1408
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1408 is 0
9999 run: jumping to instruction 27
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1399 is 1358
9999 mem: location 1358 is 99
9999 mem: location 1359 is 0
9999 mem: location 1360 is 1293
9999 mem: location 1399 is 1358
9999 run: address to copy is 1358
9999 run: its type is number
9999 mem: location 1358 is 99
9999 mem: storing 99 in location 1409
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1409 is 99
9999 mem: storing 0 in location 1410
 103 run: break-unless newline?:boolean, 
9999 mem: location 1410 is 0
9999 run: jumping to instruction 47
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1402 is 2
9999 mem: location 1398 is 4
9999 mem: storing 0 in location 1412
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1412 is 0
9999 run: jumping to instruction 56
 103 run: print-character screen:address, c:character
9999 mem: location 1394 is 1031
9999 mem: location 1409 is 99
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1774
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1776
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1777
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1778
9999 mem: storing 0 in location 1779
 104 run: break-if color-found?:boolean, 
9999 mem: location 1779 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1778
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1780
9999 mem: storing 0 in location 1781
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1781 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1780
 104 run: break-unless x:address:screen, 
9999 mem: location 1776 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1776 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1776 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1782
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1776 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1776 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1783
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1776 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1776 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1784
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1776 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1776 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1785
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1777 is 99
9999 mem: storing 0 in location 1786
 104 run: break-unless newline?:boolean, 
9999 mem: location 1786 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1782 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1784 is 5
9999 mem: storing 5 in location 1789
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1789 is 5
9999 mem: location 1783 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 7 in location 1789
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1776 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1776 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1790
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1777 is 99
9999 mem: storing 0 in location 1791
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1791 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1790 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1789 is 7
9999 mem: location 1790 is 1036
9999 mem: location 1789 is 7
9999 mem: storing 1051 in location 1793
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1793 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1793 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1794
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1793 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1793 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1795
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1777 is 99
9999 mem: location 1794 is 1051
9999 mem: storing 99 in location 1051
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1778 is 7
9999 mem: location 1795 is 1052
9999 mem: storing 7 in location 1052
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1784 is 5
9999 mem: storing 4 in location 1796
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1783 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1796 is 4
9999 mem: storing 0 in location 1797
 104 run: break-if at-right?:boolean, 
9999 mem: location 1797 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1783 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1783 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1776 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1399 is 1358
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1805
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1358 in location 1807
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1807 is 1358
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1807 is 1358
9999 mem: location 1358 is 99
9999 mem: location 1359 is 0
9999 mem: location 1360 is 1293
9999 mem: location 1807 is 1358
9999 run: address to copy is 1359
9999 run: its type is address
9999 mem: location 1359 is 0
9999 mem: storing 0 in location 1808
 104 run: reply result:address:duplex-list
9999 mem: location 1808 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1399
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1400 is 1293
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1836
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1293 in location 1838
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1838 is 1293
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1838 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 1358
9999 mem: location 1295 is 1228
9999 mem: location 1838 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 1358
9999 mem: storing 1358 in location 1839
 104 run: reply result:address:duplex-list
9999 mem: location 1839 is 1358
9999 run: result 0 is 1358
9999 mem: storing 1358 in location 1400
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1402 is 2
9999 mem: storing 3 in location 1402
 103 run: loop 
9999 run: jumping to instruction 17
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1399 is 0
9999 run: jumping to instruction 62
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1401 is 1
9999 mem: location 1403 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1407
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1402 is 3
9999 mem: location 1404 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1413
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1407 is 1
9999 mem: location 1413 is 0
9999 mem: storing 0 in location 1414
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1401 is 1
9999 mem: location 1403 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1415
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1414 is 0
9999 mem: location 1415 is 0
9999 mem: storing 0 in location 1416
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 1416 is 0
9999 run: jumping to instruction 81
 103 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1394 is 1031
9999 mem: location 1402 is 3
9999 mem: location 1398 is 4
 104 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 1867
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1869
 104 run: left:number <- next-ingredient 
9999 mem: storing 3 in location 1870
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1871
 104 run: column:number <- copy left:number
9999 mem: location 1870 is 3
9999 mem: storing 3 in location 1872
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1872 is 3
9999 mem: location 1871 is 4
9999 mem: storing 0 in location 1873
 104 run: break-if done?:boolean, 
9999 mem: location 1873 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1869 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1908
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1910
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1911
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1912
9999 mem: storing 0 in location 1913
 105 run: break-if color-found?:boolean, 
9999 mem: location 1913 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1912
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1914
9999 mem: storing 0 in location 1915
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1915 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1914
 105 run: break-unless x:address:screen, 
9999 mem: location 1910 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1910 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1910 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1916
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1910 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1910 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1917
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1910 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1910 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1918
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1910 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1910 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1919
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1911 is 32
9999 mem: storing 0 in location 1920
 105 run: break-unless newline?:boolean, 
9999 mem: location 1920 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1916 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1918 is 5
9999 mem: storing 5 in location 1923
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1923 is 5
9999 mem: location 1917 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 8 in location 1923
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1910 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1910 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1924
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1911 is 32
9999 mem: storing 0 in location 1925
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1925 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1924 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1923 is 8
9999 mem: location 1924 is 1036
9999 mem: location 1923 is 8
9999 mem: storing 1053 in location 1927
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1927 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1927 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1928
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1927 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1927 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1929
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1911 is 32
9999 mem: location 1928 is 1053
9999 mem: storing 32 in location 1053
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1912 is 7
9999 mem: location 1929 is 1054
9999 mem: storing 7 in location 1054
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1918 is 5
9999 mem: storing 4 in location 1930
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1917 is 1034
9999 mem: location 1034 is 3
9999 mem: location 1930 is 4
9999 mem: storing 0 in location 1931
 105 run: break-if at-right?:boolean, 
9999 mem: location 1931 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1917 is 1034
9999 mem: location 1034 is 3
9999 mem: location 1917 is 1034
9999 mem: storing 4 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1910 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1872 is 3
9999 mem: storing 4 in location 1872
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1872 is 4
9999 mem: location 1871 is 4
9999 mem: storing 0 in location 1873
 104 run: break-if done?:boolean, 
9999 mem: location 1873 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1869 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1939
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1941
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1942
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1943
9999 mem: storing 0 in location 1944
 105 run: break-if color-found?:boolean, 
9999 mem: location 1944 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1943
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1945
9999 mem: storing 0 in location 1946
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1946 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1945
 105 run: break-unless x:address:screen, 
9999 mem: location 1941 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1941 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1941 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1947
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1941 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1941 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1948
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1941 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1941 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1949
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1941 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1941 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1950
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1942 is 32
9999 mem: storing 0 in location 1951
 105 run: break-unless newline?:boolean, 
9999 mem: location 1951 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1947 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1949 is 5
9999 mem: storing 5 in location 1954
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1954 is 5
9999 mem: location 1948 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 9 in location 1954
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1941 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1941 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1955
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1942 is 32
9999 mem: storing 0 in location 1956
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1956 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1955 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1954 is 9
9999 mem: location 1955 is 1036
9999 mem: location 1954 is 9
9999 mem: storing 1055 in location 1958
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1958 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1958 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1959
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1958 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1958 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1960
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1942 is 32
9999 mem: location 1959 is 1055
9999 mem: storing 32 in location 1055
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1943 is 7
9999 mem: location 1960 is 1056
9999 mem: storing 7 in location 1056
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1949 is 5
9999 mem: storing 4 in location 1961
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1948 is 1034
9999 mem: location 1034 is 4
9999 mem: location 1961 is 4
9999 mem: storing 1 in location 1962
 105 run: break-if at-right?:boolean, 
9999 mem: location 1962 is 1
9999 run: jumping to instruction 60
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1941 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1872 is 4
9999 mem: storing 5 in location 1872
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1872 is 5
9999 mem: location 1871 is 4
9999 mem: storing 1 in location 1873
 104 run: break-if done?:boolean, 
9999 mem: location 1873 is 1
9999 run: jumping to instruction 11
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 1401 is 1
9999 mem: storing 2 in location 1401
 103 run: warnings:address:array:character <- get editor:address:editor-data/deref, warnings:offset
9999 mem: location 1395 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 1194
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1395 is 1153
9999 run: address to copy is 1156
9999 run: its type is address
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1419
 103 run: break-unless warnings:address:array:character, 
9999 mem: location 1419 is 0
9999 run: jumping to instruction 89
 103 run: break-if warnings:address:array:character, 
9999 mem: location 1419 is 0
9999 run: jump-if fell through
 103 run: response:address:array:character <- get editor:address:editor-data/deref, response:offset
9999 mem: location 1395 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 1194
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1395 is 1153
9999 run: address to copy is 1155
9999 run: its type is address
9999 mem: location 1155 is 0
9999 mem: storing 0 in location 1420
 103 run: break-unless response:address:array:character, 
9999 mem: location 1420 is 0
9999 run: jumping to instruction 95
 103 run: break-if screen:address, 
9999 mem: location 1394 is 1031
9999 run: jumping to instruction 108
 103 run: done?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1401 is 2
9999 mem: location 1397 is 5
9999 mem: storing 0 in location 1421
 103 run: break-if done?:boolean, 
9999 mem: location 1421 is 0
9999 run: jump-if fell through
 103 run: draw-horizontal screen:address, row:number, left:number, right:number, 32:literal/space
9999 mem: location 1394 is 1031
9999 mem: location 1401 is 2
9999 mem: location 1396 is 0
9999 mem: location 1398 is 4
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1970
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1972
 104 run: row:number <- next-ingredient 
9999 mem: storing 2 in location 1973
 104 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 1974
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1975
 104 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1976
9999 mem: storing 1 in location 1977
 104 run: break-if style-found?:boolean, 
9999 mem: location 1977 is 1
9999 run: jumping to instruction 9
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1978
9999 mem: storing 0 in location 1979
 104 run: break-if color-found?:boolean, 
9999 mem: location 1979 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 245:literal/grey
9999 mem: storing 245 in location 1978
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1980
9999 mem: storing 0 in location 1981
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1981 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1980
 104 run: move-cursor screen:address, row:number, x:number
9999 mem: location 1972 is 1031
9999 mem: location 1973 is 2
9999 mem: location 1974 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2001
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2003
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 2004
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2005
 105 run: break-unless x:address:screen, 
9999 mem: location 2003 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2003 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2003 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2006
 105 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2004 is 2
9999 mem: location 2006 is 1033
9999 mem: storing 2 in location 1033
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2003 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2003 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2007
 105 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2005 is 0
9999 mem: location 2007 is 1034
9999 mem: storing 0 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2003 is 1031
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 1974 is 0
9999 mem: location 1975 is 4
9999 mem: storing 1 in location 1982
 104 run: break-unless continue?:boolean, 
9999 mem: location 1982 is 1
9999 run: jump-unless fell through
 104 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 1972 is 1031
9999 mem: location 1976 is 32
9999 mem: location 1978 is 245
9999 mem: location 1980 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2032
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2034
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2035
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 2036
9999 mem: storing 1 in location 2037
 105 run: break-if color-found?:boolean, 
9999 mem: location 2037 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2038
9999 mem: storing 1 in location 2039
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2039 is 1
9999 run: jumping to instruction 12
 105 run: break-unless x:address:screen, 
9999 mem: location 2034 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2034 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2034 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2040
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2034 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2034 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2041
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2034 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2034 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2042
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2034 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2034 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2043
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2035 is 32
9999 mem: storing 0 in location 2044
 105 run: break-unless newline?:boolean, 
9999 mem: location 2044 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2040 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2042 is 5
9999 mem: storing 10 in location 2047
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2047 is 10
9999 mem: location 2041 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 10 in location 2047
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2034 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2034 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2048
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2035 is 32
9999 mem: storing 0 in location 2049
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2049 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2048 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2047 is 10
9999 mem: location 2048 is 1036
9999 mem: location 2047 is 10
9999 mem: storing 1057 in location 2051
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2051 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 2051 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 2052
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2051 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 2051 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 2053
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2035 is 32
9999 mem: location 2052 is 1057
9999 mem: storing 32 in location 1057
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2036 is 245
9999 mem: location 2053 is 1058
9999 mem: storing 245 in location 1058
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2042 is 5
9999 mem: storing 4 in location 2054
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2041 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2054 is 4
9999 mem: storing 0 in location 2055
 105 run: break-if at-right?:boolean, 
9999 mem: location 2055 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2041 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2041 is 1034
9999 mem: storing 1 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2034 is 1031
 104 run: x:number <- add x:number, 1:literal
9999 mem: location 1974 is 0
9999 mem: storing 1 in location 1974
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 1974 is 1
9999 mem: location 1975 is 4
9999 mem: storing 1 in location 1982
 104 run: break-unless continue?:boolean, 
9999 mem: location 1982 is 1
9999 run: jump-unless fell through
 104 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 1972 is 1031
9999 mem: location 1976 is 32
9999 mem: location 1978 is 245
9999 mem: location 1980 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2063
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2065
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2066
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 2067
9999 mem: storing 1 in location 2068
 105 run: break-if color-found?:boolean, 
9999 mem: location 2068 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2069
9999 mem: storing 1 in location 2070
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2070 is 1
9999 run: jumping to instruction 12
 105 run: break-unless x:address:screen, 
9999 mem: location 2065 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2065 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2065 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2071
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2065 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2065 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2072
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2065 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2065 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2073
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2065 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2065 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2074
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2066 is 32
9999 mem: storing 0 in location 2075
 105 run: break-unless newline?:boolean, 
9999 mem: location 2075 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2071 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2073 is 5
9999 mem: storing 10 in location 2078
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2078 is 10
9999 mem: location 2072 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 11 in location 2078
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2065 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2065 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2079
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2066 is 32
9999 mem: storing 0 in location 2080
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2080 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2079 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2078 is 11
9999 mem: location 2079 is 1036
9999 mem: location 2078 is 11
9999 mem: storing 1059 in location 2082
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2082 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 2082 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 2083
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2082 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 2082 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 2084
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2066 is 32
9999 mem: location 2083 is 1059
9999 mem: storing 32 in location 1059
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2067 is 245
9999 mem: location 2084 is 1060
9999 mem: storing 245 in location 1060
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2073 is 5
9999 mem: storing 4 in location 2085
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2072 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2085 is 4
9999 mem: storing 0 in location 2086
 105 run: break-if at-right?:boolean, 
9999 mem: location 2086 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2072 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2072 is 1034
9999 mem: storing 2 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2065 is 1031
 104 run: x:number <- add x:number, 1:literal
9999 mem: location 1974 is 1
9999 mem: storing 2 in location 1974
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 1974 is 2
9999 mem: location 1975 is 4
9999 mem: storing 1 in location 1982
 104 run: break-unless continue?:boolean, 
9999 mem: location 1982 is 1
9999 run: jump-unless fell through
 104 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 1972 is 1031
9999 mem: location 1976 is 32
9999 mem: location 1978 is 245
9999 mem: location 1980 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2094
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2096
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2097
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 2098
9999 mem: storing 1 in location 2099
 105 run: break-if color-found?:boolean, 
9999 mem: location 2099 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2100
9999 mem: storing 1 in location 2101
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2101 is 1
9999 run: jumping to instruction 12
 105 run: break-unless x:address:screen, 
9999 mem: location 2096 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2096 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2096 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2102
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2096 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2096 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2103
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2096 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2096 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2104
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2096 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2096 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2105
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2097 is 32
9999 mem: storing 0 in location 2106
 105 run: break-unless newline?:boolean, 
9999 mem: location 2106 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2102 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2104 is 5
9999 mem: storing 10 in location 2109
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2109 is 10
9999 mem: location 2103 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 12 in location 2109
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2096 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2096 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2110
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2097 is 32
9999 mem: storing 0 in location 2111
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2111 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2110 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2109 is 12
9999 mem: location 2110 is 1036
9999 mem: location 2109 is 12
9999 mem: storing 1061 in location 2113
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2113 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 2113 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 2114
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2113 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 2113 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 2115
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2097 is 32
9999 mem: location 2114 is 1061
9999 mem: storing 32 in location 1061
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2098 is 245
9999 mem: location 2115 is 1062
9999 mem: storing 245 in location 1062
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2104 is 5
9999 mem: storing 4 in location 2116
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2103 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2116 is 4
9999 mem: storing 0 in location 2117
 105 run: break-if at-right?:boolean, 
9999 mem: location 2117 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2103 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2103 is 1034
9999 mem: storing 3 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2096 is 1031
 104 run: x:number <- add x:number, 1:literal
9999 mem: location 1974 is 2
9999 mem: storing 3 in location 1974
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 1974 is 3
9999 mem: location 1975 is 4
9999 mem: storing 1 in location 1982
 104 run: break-unless continue?:boolean, 
9999 mem: location 1982 is 1
9999 run: jump-unless fell through
 104 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 1972 is 1031
9999 mem: location 1976 is 32
9999 mem: location 1978 is 245
9999 mem: location 1980 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2125
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2127
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2128
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 2129
9999 mem: storing 1 in location 2130
 105 run: break-if color-found?:boolean, 
9999 mem: location 2130 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2131
9999 mem: storing 1 in location 2132
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2132 is 1
9999 run: jumping to instruction 12
 105 run: break-unless x:address:screen, 
9999 mem: location 2127 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2127 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2127 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2133
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2127 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2127 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2134
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2127 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2127 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2135
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2127 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2127 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2136
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2128 is 32
9999 mem: storing 0 in location 2137
 105 run: break-unless newline?:boolean, 
9999 mem: location 2137 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2133 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2135 is 5
9999 mem: storing 10 in location 2140
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2140 is 10
9999 mem: location 2134 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 13 in location 2140
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2127 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2127 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2141
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2128 is 32
9999 mem: storing 0 in location 2142
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2142 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2141 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 1061 is 32
9999 mem: location 1062 is 245
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2140 is 13
9999 mem: location 2141 is 1036
9999 mem: location 2140 is 13
9999 mem: storing 1063 in location 2144
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2144 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2144 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 2145
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2144 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2144 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 2146
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2128 is 32
9999 mem: location 2145 is 1063
9999 mem: storing 32 in location 1063
schedule: print-character/draw-horizontal/render/new-editor/editor-wraps-line-on-insert
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2129 is 245
9999 mem: location 2146 is 1064
9999 mem: storing 245 in location 1064
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2135 is 5
9999 mem: storing 4 in location 2147
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2134 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2147 is 4
9999 mem: storing 0 in location 2148
 105 run: break-if at-right?:boolean, 
9999 mem: location 2148 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2134 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2134 is 1034
9999 mem: storing 4 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2127 is 1031
 104 run: x:number <- add x:number, 1:literal
9999 mem: location 1974 is 3
9999 mem: storing 4 in location 1974
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 1974 is 4
9999 mem: location 1975 is 4
9999 mem: storing 0 in location 1982
 104 run: break-unless continue?:boolean, 
9999 mem: location 1982 is 0
9999 run: jumping to instruction 27
 103 run: in-focus?:boolean <- get editor:address:editor-data/deref, in-focus?:offset
9999 mem: location 1395 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 1194
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1395 is 1153
9999 run: address to copy is 1162
9999 run: its type is boolean
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1422
 103 run: break-unless in-focus?:boolean, 
9999 mem: location 1422 is 1
9999 run: jump-unless fell through
 103 run: cursor-inside-right-margin?:boolean <- lesser-or-equal cursor-column:address:number/deref, right:number
9999 mem: location 1404 is 1160
9999 mem: location 1160 is 0
9999 mem: location 1398 is 4
9999 mem: storing 1 in location 1423
 103 run: assert cursor-inside-right-margin?:boolean, [cursor outside right margin]
9999 mem: location 1423 is 1
 103 run: cursor-inside-left-margin?:boolean <- greater-or-equal cursor-column:address:number/deref, left:number
9999 mem: location 1404 is 1160
9999 mem: location 1160 is 0
9999 mem: location 1396 is 0
9999 mem: storing 1 in location 1424
 103 run: assert cursor-inside-left-margin?:boolean, [cursor outside left margin]
9999 mem: location 1424 is 1
 103 run: move-cursor screen:address, cursor-row:address:number/deref, cursor-column:address:number/deref
9999 mem: location 1394 is 1031
9999 mem: location 1403 is 1159
9999 mem: location 1159 is 1
9999 mem: location 1404 is 1160
9999 mem: location 1160 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2156
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2158
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 2159
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2160
 104 run: break-unless x:address:screen, 
9999 mem: location 2158 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2158 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2158 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2161
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2159 is 1
9999 mem: location 2161 is 1033
9999 mem: storing 1 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2158 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2158 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2162
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2160 is 0
9999 mem: location 2162 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2158 is 1031
 103 run: show-screen screen:address
9999 mem: location 1394 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2187
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2189
 104 run: break-unless x:address:screen, 
9999 mem: location 2189 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 2189 is 1031
 103 run: reply editor:address:editor-data/same-as-ingredient:1
9999 mem: location 1395 is 1153
9999 run: result 0 is 1153
9999 mem: storing 1153 in location 1128
 102 run: reply result:address:editor-data
9999 mem: location 1128 is 1153
9999 run: result 0 is 1153
9999 mem: storing 1153 in location 2
 101 run: assume-console [
    type [e]
  ]
parse: instruction: type
parse:   ingredient: {name: "e", properties: [_: "literal-string"]}
 101 run: run [
    event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1001
after-brace: event-loop ...
 101 run: event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1031
9999 mem: location 901 is 2223
9999 mem: location 2 is 1153
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2225
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2227
 102 run: console:address <- next-ingredient 
9999 mem: storing 2223 in location 2228
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1153 in location 2229
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 2228 is 2223
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2256
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 2223 in location 2258
 103 run: break-unless x:address:console, 
9999 mem: location 2258 is 2223
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 2258 is 2223
9999 mem: location 2223 is 0
9999 mem: location 2224 is 2218
9999 mem: location 2258 is 2223
9999 run: address to copy is 2223
9999 mem: storing 2223 in location 2259
 103 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 2258 is 2223
9999 mem: location 2223 is 0
9999 mem: location 2224 is 2218
9999 mem: location 2258 is 2223
9999 run: address to copy is 2224
9999 run: its type is address
9999 mem: location 2224 is 2218
9999 mem: storing 2218 in location 2260
 103 run: max:number <- length buf:address:array:event/deref
9999 mem: location 2260 is 2218
9999 mem: location 2218 is 1
9999 mem: location 2219 is 0
9999 mem: location 2220 is 101
9999 mem: location 2221 is 0
9999 mem: location 2222 is 0
9999 mem: location 2260 is 2218
9999 mem: storing 1 in location 2261
 103 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 2259 is 2223
9999 mem: location 2223 is 0
9999 mem: location 2261 is 1
9999 mem: storing 0 in location 2262
 103 run: break-unless done?:boolean, 
9999 mem: location 2262 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index buf:address:array:event/deref, idx:address:number/deref
9999 mem: location 2260 is 2218
9999 mem: location 2218 is 1
9999 mem: location 2219 is 0
9999 mem: location 2220 is 101
9999 mem: location 2221 is 0
9999 mem: location 2222 is 0
9999 mem: location 2259 is 2223
9999 mem: location 2223 is 0
9999 mem: location 2260 is 2218
9999 mem: location 2259 is 2223
9999 mem: location 2223 is 0
9999 run: address to copy is 2219
9999 run: its type is event
9999 mem: location 2219 is 0
9999 mem: location 2220 is 101
9999 mem: location 2221 is 0
9999 mem: location 2222 is 0
9999 mem: storing 0 in location 2264
9999 mem: storing 101 in location 2265
9999 mem: storing 0 in location 2266
9999 mem: storing 0 in location 2267
 103 run: idx:address:number/deref <- add idx:address:number/deref, 1:literal
9999 mem: location 2259 is 2223
9999 mem: location 2223 is 0
9999 mem: location 2259 is 2223
9999 mem: storing 1 in location 2223
 103 run: reply result:event, x:address:console/same-as-ingredient:0, 1:literal/found, 0:literal/quit
9999 mem: location 2264 is 0
9999 mem: location 2265 is 101
9999 mem: location 2266 is 0
9999 mem: location 2267 is 0
9999 mem: location 2258 is 2223
9999 run: result 0 is [0, 101, 0, 0]
9999 run: result 1 is 2223
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 2230
9999 mem: storing 101 in location 2231
9999 mem: storing 0 in location 2232
9999 mem: storing 0 in location 2233
9999 mem: storing 2223 in location 2228
9999 mem: storing 1 in location 2234
9999 mem: storing 0 in location 2235
 102 run: loop-unless found?:boolean, 
9999 mem: location 2234 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?:boolean, 
9999 mem: location 2235 is 0
9999 run: jump-if fell through
 102 run: trace [app], [next-event]
   1 app: next-event
 102 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 2230 is 0
9999 mem: location 2231 is 101
9999 mem: location 2232 is 0
9999 mem: location 2233 is 0
9999 mem: storing 0 in location 2236
 102 run: break-unless k:address:number, 
9999 mem: location 2236 is 0
9999 run: jumping to instruction 20
 102 run: curr:address:editor-data <- copy editor:address:editor-data
9999 mem: location 2229 is 1153
9999 mem: storing 1153 in location 2238
 102 run: break-unless curr:address:editor-data, 
9999 mem: location 2238 is 1153
9999 run: jump-unless fell through
 102 run: handle-event screen:address, console:address, curr:address:editor-data, e:event
9999 mem: location 2227 is 1031
9999 mem: location 2228 is 2223
9999 mem: location 2238 is 1153
9999 mem: location 2230 is 0
9999 mem: location 2231 is 101
9999 mem: location 2232 is 0
9999 mem: location 2233 is 0
 103 run: default-space:address:array:location <- new location:type, 50:literal
9999 mem: array size is 50
9999 mem: new alloc: 2287
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2289
 103 run: console:address <- next-ingredient 
9999 mem: storing 2223 in location 2290
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1153 in location 2291
 103 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 2292
9999 mem: storing 101 in location 2293
9999 mem: storing 0 in location 2294
9999 mem: storing 0 in location 2295
 103 run: t:address:touch-event <- maybe-convert e:event, touch:variant
9999 mem: location 2292 is 0
9999 mem: location 2293 is 101
9999 mem: location 2294 is 0
9999 mem: location 2295 is 0
9999 mem: storing 0 in location 2296
 103 run: break-unless t:address:touch-event, 
9999 mem: location 2296 is 0
9999 run: jumping to instruction 10
 103 run: in-focus?:address:boolean <- get-address editor:address:editor-data/deref, in-focus?:offset
9999 mem: location 2291 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 1194
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 2291 is 1153
9999 run: address to copy is 1162
9999 mem: storing 1162 in location 2297
 103 run: jump-if in-focus?:address:boolean/deref, 1:offset
9999 mem: location 2297 is 1162
9999 mem: location 1162 is 1
9999 run: jumping to instruction 14
 103 run: c:address:character <- maybe-convert e:event, text:variant
9999 mem: location 2292 is 0
9999 mem: location 2293 is 101
9999 mem: location 2294 is 0
9999 mem: location 2295 is 0
9999 mem: storing 2293 in location 2298
 103 run: break-unless c:address:character, 
9999 mem: location 2298 is 2293
9999 run: jump-unless fell through
 103 run: backspace?:boolean <- equal c:address:character/deref, 8:literal/backspace
9999 mem: location 2298 is 2293
9999 mem: location 2293 is 101
9999 mem: storing 0 in location 2299
 103 run: break-unless backspace?:boolean, 
9999 mem: location 2299 is 0
9999 run: jumping to instruction 22
 103 run: insert-at-cursor editor:address:editor-data, c:address:character/deref, screen:address
9999 mem: location 2291 is 1153
9999 mem: location 2298 is 2293
9999 mem: location 2293 is 101
9999 mem: location 2289 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2338
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1153 in location 2340
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 2341
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2342
 104 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 2340 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 1194
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 2340 is 1153
9999 run: address to copy is 1154
9999 mem: storing 1154 in location 2343
 104 run: d:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 2340 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 1194
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 2340 is 1153
9999 run: address to copy is 1153
9999 run: its type is address
9999 mem: location 1153 is 1194
9999 mem: storing 1194 in location 2344
 104 run: insert-duplex c:character, before-cursor:address:address:duplex-list/deref
9999 mem: location 2341 is 101
9999 mem: location 2343 is 1154
9999 mem: location 1154 is 1194
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2369
 105 run: x:location <- next-ingredient 
9999 mem: storing 101 in location 2371
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 2372
 105 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 2400
9999 mem: storing 2400 in location 2373
 105 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 2373 is 2400
9999 mem: location 2400 is 0
9999 mem: location 2401 is 0
9999 mem: location 2402 is 0
9999 mem: location 2373 is 2400
9999 run: address to copy is 2400
9999 mem: storing 2400 in location 2374
 105 run: val:address:location/deref <- copy x:location
9999 mem: location 2371 is 101
9999 mem: location 2374 is 2400
9999 mem: storing 101 in location 2400
 105 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2372 is 1194
9999 mem: location 1194 is 167
9999 mem: location 1195 is 1228
9999 mem: location 1196 is 0
9999 mem: location 2372 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1228
9999 mem: storing 1228 in location 2375
 105 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 2372 is 1194
9999 mem: location 1194 is 167
9999 mem: location 1195 is 1228
9999 mem: location 1196 is 0
9999 mem: location 2372 is 1194
9999 run: address to copy is 1195
9999 mem: storing 1195 in location 2376
 105 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 2373 is 2400
9999 mem: location 2376 is 1195
9999 mem: storing 2400 in location 1195
 105 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 2373 is 2400
9999 mem: location 2400 is 101
9999 mem: location 2401 is 0
9999 mem: location 2402 is 0
9999 mem: location 2373 is 2400
9999 run: address to copy is 2402
9999 mem: storing 2402 in location 2376
 105 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 2372 is 1194
9999 mem: location 2376 is 2402
9999 mem: storing 1194 in location 2402
 105 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 2373 is 2400
9999 mem: location 2400 is 101
9999 mem: location 2401 is 0
9999 mem: location 2402 is 1194
9999 mem: location 2373 is 2400
9999 run: address to copy is 2401
9999 mem: storing 2401 in location 2376
 105 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 2375 is 1228
9999 mem: location 2376 is 2401
9999 mem: storing 1228 in location 2401
 105 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 2375 is 1228
9999 run: jumping to instruction 15
 105 run: y:address:address:duplex-list <- get-address next-node:address:duplex-list/deref, prev:offset
9999 mem: location 2375 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 1293
9999 mem: location 1230 is 1194
9999 mem: location 2375 is 1228
9999 run: address to copy is 1230
9999 mem: storing 1230 in location 2376
 105 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 2373 is 2400
9999 mem: location 2376 is 1230
9999 mem: storing 2400 in location 1230
 105 run: reply new-node:address:duplex-list
9999 mem: location 2373 is 2400
 104 run: before-cursor:address:address:duplex-list/deref <- next-duplex before-cursor:address:address:duplex-list/deref
9999 mem: location 2343 is 1154
9999 mem: location 1154 is 1194
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2403
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 2405
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2405 is 1194
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2405 is 1194
9999 mem: location 1194 is 167
9999 mem: location 1195 is 2400
9999 mem: location 1196 is 0
9999 mem: location 2405 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 2400
9999 mem: storing 2400 in location 2406
 105 run: reply result:address:duplex-list
9999 mem: location 2406 is 2400
9999 run: result 0 is 2400
9999 mem: location 2343 is 1154
9999 mem: storing 2400 in location 1154
 104 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 2340 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 2400
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 2340 is 1153
9999 run: address to copy is 1159
9999 mem: storing 1159 in location 2345
 104 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 2340 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 2400
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 2340 is 1153
9999 run: address to copy is 1160
9999 mem: storing 1160 in location 2346
 104 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 2340 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 2400
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 2340 is 1153
9999 run: address to copy is 1157
9999 run: its type is number
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 2347
 104 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 2340 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 2400
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 2340 is 1153
9999 run: address to copy is 1158
9999 run: its type is number
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 2348
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2341 is 101
9999 mem: storing 0 in location 2349
 104 run: break-unless newline?:boolean, 
9999 mem: location 2349 is 0
9999 run: jumping to instruction 18
 104 run: wrap-column:number <- subtract right:number, 1:literal
9999 mem: location 2348 is 4
9999 mem: storing 3 in location 2350
 104 run: at-wrap?:boolean <- greater-or-equal cursor-column:address:number/deref, wrap-column:number
9999 mem: location 2346 is 1160
9999 mem: location 1160 is 0
9999 mem: location 2350 is 3
9999 mem: storing 0 in location 2351
 104 run: break-unless at-wrap?:boolean, 
9999 mem: location 2351 is 0
9999 run: jumping to instruction 29
 104 run: cursor-column:address:number/deref <- add cursor-column:address:number/deref, 1:literal
9999 mem: location 2346 is 1160
9999 mem: location 1160 is 0
9999 mem: location 2346 is 1160
9999 mem: storing 1 in location 1160
 103 run: jump +render:label
9999 run: jumping to instruction 108
 103 run: more-events?:boolean <- has-more-events? console:address
9999 mem: location 2290 is 2223
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2434
 104 run: console:address <- next-ingredient 
9999 mem: storing 2223 in location 2436
 104 run: break-unless console:address, 
9999 mem: location 2436 is 2223
9999 run: jump-unless fell through
 104 run: reply 0:literal/false
9999 run: result 0 is 0
9999 mem: storing 0 in location 2328
 103 run: break-if more-events?:boolean, 
9999 mem: location 2328 is 0
9999 run: jump-if fell through
 103 run: render screen:address, editor:address:editor-data
9999 mem: location 2289 is 1031
9999 mem: location 2291 is 1153
 104 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 2465
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2467
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1153 in location 2468
 104 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 2468 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 2400
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 2468 is 1153
9999 run: address to copy is 1157
9999 run: its type is number
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 2469
 104 run: screen-height:number <- screen-height screen:address
9999 mem: location 2467 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2506
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2508
 105 run: break-unless x:address:screen, 
9999 mem: location 2508 is 1031
9999 run: jump-unless fell through
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2508 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2508 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2509
 105 run: reply height:number
9999 mem: location 2509 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 2470
 104 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 2468 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 2400
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 2468 is 1153
9999 run: address to copy is 1158
9999 run: its type is number
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 2471
 104 run: hide-screen screen:address
9999 mem: location 2467 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2537
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2539
 105 run: break-unless x:address:screen, 
9999 mem: location 2539 is 1031
9999 run: jump-unless fell through
 105 run: reply x:address:screen
9999 mem: location 2539 is 1031
 104 run: curr:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 2468 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 2400
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 2468 is 1153
9999 run: address to copy is 1153
9999 run: its type is address
9999 mem: location 1153 is 1194
9999 mem: storing 1194 in location 2472
 104 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 2472 is 1194
9999 mem: storing 1194 in location 2473
 104 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2472 is 1194
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2568
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 2570
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2570 is 1194
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2570 is 1194
9999 mem: location 1194 is 167
9999 mem: location 1195 is 2400
9999 mem: location 1196 is 0
9999 mem: location 2570 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 2400
9999 mem: storing 2400 in location 2571
 105 run: reply result:address:duplex-list
9999 mem: location 2571 is 2400
9999 run: result 0 is 2400
9999 mem: storing 2400 in location 2472
 104 run: row:number <- copy 1:literal/top
9999 mem: storing 1 in location 2474
 104 run: column:number <- copy left:number
9999 mem: location 2469 is 0
9999 mem: storing 0 in location 2475
 104 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 2468 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 2400
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 2468 is 1153
9999 run: address to copy is 1159
9999 mem: storing 1159 in location 2476
 104 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 2468 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 2400
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 2468 is 1153
9999 run: address to copy is 1160
9999 mem: storing 1160 in location 2477
 104 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 2468 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 2400
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 2468 is 1153
9999 run: address to copy is 1154
9999 mem: storing 1154 in location 2478
 104 run: move-cursor screen:address, row:number, column:number
9999 mem: location 2467 is 1031
9999 mem: location 2474 is 1
9999 mem: location 2475 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2599
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2601
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 2602
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2603
 105 run: break-unless x:address:screen, 
9999 mem: location 2601 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2601 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2601 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2604
 105 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2602 is 1
9999 mem: location 2604 is 1033
9999 mem: storing 1 in location 1033
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2601 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2601 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2605
 105 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2603 is 0
9999 mem: location 2605 is 1034
9999 mem: storing 0 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2601 is 1031
 104 run: break-unless curr:address:duplex-list, 
9999 mem: location 2472 is 2400
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2474 is 1
9999 mem: location 2470 is 5
9999 mem: storing 0 in location 2479
 104 run: break-if off-screen?:boolean, 
9999 mem: location 2479 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2474 is 1
9999 mem: location 2476 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 2480
 104 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2480 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 2475 is 0
9999 mem: location 2477 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 2481
 104 run: break-unless at-cursor?:boolean, 
9999 mem: location 2481 is 0
9999 run: jumping to instruction 27
 104 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2472 is 2400
9999 mem: location 2400 is 101
9999 mem: location 2401 is 1228
9999 mem: location 2402 is 1194
9999 mem: location 2472 is 2400
9999 run: address to copy is 2400
9999 run: its type is number
9999 mem: location 2400 is 101
9999 mem: storing 101 in location 2482
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2482 is 101
9999 mem: storing 0 in location 2483
 104 run: break-unless newline?:boolean, 
9999 mem: location 2483 is 0
9999 run: jumping to instruction 47
 104 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2475 is 0
9999 mem: location 2471 is 4
9999 mem: storing 0 in location 2485
 104 run: break-unless at-right?:boolean, 
9999 mem: location 2485 is 0
9999 run: jumping to instruction 56
 104 run: print-character screen:address, c:character
9999 mem: location 2467 is 1031
9999 mem: location 2482 is 101
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2630
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2632
 105 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 2633
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2634
9999 mem: storing 0 in location 2635
 105 run: break-if color-found?:boolean, 
9999 mem: location 2635 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2634
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2636
9999 mem: storing 0 in location 2637
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2637 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2636
 105 run: break-unless x:address:screen, 
9999 mem: location 2632 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2632 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2632 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2638
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2632 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2632 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2639
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2632 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2632 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2640
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2632 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2632 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2641
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2633 is 101
9999 mem: storing 0 in location 2642
 105 run: break-unless newline?:boolean, 
9999 mem: location 2642 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2638 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2640 is 5
9999 mem: storing 5 in location 2645
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2645 is 5
9999 mem: location 2639 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 5 in location 2645
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2632 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2632 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2646
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2633 is 101
9999 mem: storing 0 in location 2647
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2647 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2646 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 1061 is 32
9999 mem: location 1062 is 245
9999 mem: location 1063 is 32
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2645 is 5
9999 mem: location 2646 is 1036
9999 mem: location 2645 is 5
9999 mem: storing 1047 in location 2649
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2649 is 1047
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 2649 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 2650
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2649 is 1047
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 2649 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 2651
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2633 is 101
9999 mem: location 2650 is 1047
9999 mem: storing 101 in location 1047
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2634 is 7
9999 mem: location 2651 is 1048
9999 mem: storing 7 in location 1048
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2640 is 5
9999 mem: storing 4 in location 2652
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2639 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2652 is 4
9999 mem: storing 0 in location 2653
 105 run: break-if at-right?:boolean, 
9999 mem: location 2653 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2639 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2639 is 1034
9999 mem: storing 1 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2632 is 1031
 104 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2472 is 2400
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2661
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2400 in location 2663
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2663 is 2400
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2663 is 2400
9999 mem: location 2400 is 101
9999 mem: location 2401 is 1228
9999 mem: location 2402 is 1194
9999 mem: location 2663 is 2400
9999 run: address to copy is 2401
9999 run: its type is address
9999 mem: location 2401 is 1228
9999 mem: storing 1228 in location 2664
 105 run: reply result:address:duplex-list
9999 mem: location 2664 is 1228
9999 run: result 0 is 1228
9999 mem: storing 1228 in location 2472
 104 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2473 is 1194
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2692
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 2694
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2694 is 1194
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2694 is 1194
9999 mem: location 1194 is 167
9999 mem: location 1195 is 2400
9999 mem: location 1196 is 0
9999 mem: location 2694 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 2400
9999 mem: storing 2400 in location 2695
 105 run: reply result:address:duplex-list
9999 mem: location 2695 is 2400
9999 run: result 0 is 2400
9999 mem: storing 2400 in location 2473
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2475 is 0
9999 mem: storing 1 in location 2475
 104 run: loop 
9999 run: jumping to instruction 17
 104 run: break-unless curr:address:duplex-list, 
9999 mem: location 2472 is 1228
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2474 is 1
9999 mem: location 2470 is 5
9999 mem: storing 0 in location 2479
 104 run: break-if off-screen?:boolean, 
9999 mem: location 2479 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2474 is 1
9999 mem: location 2476 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 2480
 104 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2480 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 2475 is 1
9999 mem: location 2477 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 2481
 104 run: break-unless at-cursor?:boolean, 
9999 mem: location 2481 is 1
9999 run: jump-unless fell through
 104 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 2472 is 1228
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2723
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1228 in location 2725
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2725 is 1228
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 2725 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 1293
9999 mem: location 1230 is 2400
9999 mem: location 2725 is 1228
9999 run: address to copy is 1230
9999 run: its type is address
9999 mem: location 1230 is 2400
9999 mem: storing 2400 in location 2726
 105 run: reply result:address:duplex-list
9999 mem: location 2726 is 2400
9999 run: result 0 is 2400
9999 mem: location 2478 is 1154
9999 mem: storing 2400 in location 1154
 104 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2472 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 1293
9999 mem: location 1230 is 2400
9999 mem: location 2472 is 1228
9999 run: address to copy is 1228
9999 run: its type is number
9999 mem: location 1228 is 97
9999 mem: storing 97 in location 2482
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2482 is 97
9999 mem: storing 0 in location 2483
 104 run: break-unless newline?:boolean, 
9999 mem: location 2483 is 0
9999 run: jumping to instruction 47
 104 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2475 is 1
9999 mem: location 2471 is 4
9999 mem: storing 0 in location 2485
 104 run: break-unless at-right?:boolean, 
9999 mem: location 2485 is 0
9999 run: jumping to instruction 56
 104 run: print-character screen:address, c:character
9999 mem: location 2467 is 1031
9999 mem: location 2482 is 97
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2754
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2756
 105 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 2757
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2758
9999 mem: storing 0 in location 2759
 105 run: break-if color-found?:boolean, 
9999 mem: location 2759 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2758
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2760
9999 mem: storing 0 in location 2761
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2761 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2760
 105 run: break-unless x:address:screen, 
9999 mem: location 2756 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2756 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2756 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2762
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2756 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2756 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2763
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2756 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2756 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2764
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2756 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2756 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2765
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2757 is 97
9999 mem: storing 0 in location 2766
 105 run: break-unless newline?:boolean, 
9999 mem: location 2766 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2762 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2764 is 5
9999 mem: storing 5 in location 2769
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2769 is 5
9999 mem: location 2763 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 6 in location 2769
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2756 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2756 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2770
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2757 is 97
9999 mem: storing 0 in location 2771
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2771 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2770 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 1061 is 32
9999 mem: location 1062 is 245
9999 mem: location 1063 is 32
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2769 is 6
9999 mem: location 2770 is 1036
9999 mem: location 2769 is 6
9999 mem: storing 1049 in location 2773
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2773 is 1049
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 2773 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 2774
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2773 is 1049
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 2773 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 2775
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2757 is 97
9999 mem: location 2774 is 1049
9999 mem: storing 97 in location 1049
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2758 is 7
9999 mem: location 2775 is 1050
9999 mem: storing 7 in location 1050
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2764 is 5
9999 mem: storing 4 in location 2776
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2763 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2776 is 4
9999 mem: storing 0 in location 2777
 105 run: break-if at-right?:boolean, 
9999 mem: location 2777 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2763 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2763 is 1034
9999 mem: storing 2 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2756 is 1031
 104 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2472 is 1228
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2785
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1228 in location 2787
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2787 is 1228
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2787 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 1293
9999 mem: location 1230 is 2400
9999 mem: location 2787 is 1228
9999 run: address to copy is 1229
9999 run: its type is address
9999 mem: location 1229 is 1293
9999 mem: storing 1293 in location 2788
 105 run: reply result:address:duplex-list
9999 mem: location 2788 is 1293
9999 run: result 0 is 1293
9999 mem: storing 1293 in location 2472
 104 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2473 is 2400
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2816
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2400 in location 2818
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2818 is 2400
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2818 is 2400
9999 mem: location 2400 is 101
9999 mem: location 2401 is 1228
9999 mem: location 2402 is 1194
9999 mem: location 2818 is 2400
9999 run: address to copy is 2401
9999 run: its type is address
9999 mem: location 2401 is 1228
9999 mem: storing 1228 in location 2819
 105 run: reply result:address:duplex-list
9999 mem: location 2819 is 1228
9999 run: result 0 is 1228
9999 mem: storing 1228 in location 2473
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2475 is 1
9999 mem: storing 2 in location 2475
 104 run: loop 
9999 run: jumping to instruction 17
 104 run: break-unless curr:address:duplex-list, 
9999 mem: location 2472 is 1293
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2474 is 1
9999 mem: location 2470 is 5
9999 mem: storing 0 in location 2479
 104 run: break-if off-screen?:boolean, 
9999 mem: location 2479 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2474 is 1
9999 mem: location 2476 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 2480
 104 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2480 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 2475 is 2
9999 mem: location 2477 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 2481
 104 run: break-unless at-cursor?:boolean, 
9999 mem: location 2481 is 0
9999 run: jumping to instruction 27
 104 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2472 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 1358
9999 mem: location 1295 is 1228
9999 mem: location 2472 is 1293
9999 run: address to copy is 1293
9999 run: its type is number
9999 mem: location 1293 is 98
9999 mem: storing 98 in location 2482
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2482 is 98
9999 mem: storing 0 in location 2483
 104 run: break-unless newline?:boolean, 
9999 mem: location 2483 is 0
9999 run: jumping to instruction 47
 104 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2475 is 2
9999 mem: location 2471 is 4
9999 mem: storing 0 in location 2485
 104 run: break-unless at-right?:boolean, 
9999 mem: location 2485 is 0
9999 run: jumping to instruction 56
 104 run: print-character screen:address, c:character
9999 mem: location 2467 is 1031
9999 mem: location 2482 is 98
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2847
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2849
 105 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 2850
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2851
9999 mem: storing 0 in location 2852
 105 run: break-if color-found?:boolean, 
9999 mem: location 2852 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2851
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2853
9999 mem: storing 0 in location 2854
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2854 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2853
 105 run: break-unless x:address:screen, 
9999 mem: location 2849 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2849 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2849 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2855
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2849 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2849 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2856
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2849 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2849 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2857
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2849 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2849 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2858
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2850 is 98
9999 mem: storing 0 in location 2859
 105 run: break-unless newline?:boolean, 
9999 mem: location 2859 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2855 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2857 is 5
9999 mem: storing 5 in location 2862
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2862 is 5
9999 mem: location 2856 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 7 in location 2862
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2849 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2849 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2863
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2850 is 98
9999 mem: storing 0 in location 2864
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2864 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2863 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 97
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 1061 is 32
9999 mem: location 1062 is 245
9999 mem: location 1063 is 32
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2862 is 7
9999 mem: location 2863 is 1036
9999 mem: location 2862 is 7
9999 mem: storing 1051 in location 2866
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2866 is 1051
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 2866 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 2867
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2866 is 1051
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 2866 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 2868
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2850 is 98
9999 mem: location 2867 is 1051
9999 mem: storing 98 in location 1051
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2851 is 7
9999 mem: location 2868 is 1052
9999 mem: storing 7 in location 1052
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2857 is 5
9999 mem: storing 4 in location 2869
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2856 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2869 is 4
9999 mem: storing 0 in location 2870
 105 run: break-if at-right?:boolean, 
9999 mem: location 2870 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2856 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2856 is 1034
9999 mem: storing 3 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2849 is 1031
 104 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2472 is 1293
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2878
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1293 in location 2880
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2880 is 1293
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2880 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 1358
9999 mem: location 1295 is 1228
9999 mem: location 2880 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 1358
9999 mem: storing 1358 in location 2881
 105 run: reply result:address:duplex-list
9999 mem: location 2881 is 1358
9999 run: result 0 is 1358
9999 mem: storing 1358 in location 2472
 104 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2473 is 1228
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2909
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1228 in location 2911
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2911 is 1228
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2911 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 1293
9999 mem: location 1230 is 2400
9999 mem: location 2911 is 1228
9999 run: address to copy is 1229
9999 run: its type is address
9999 mem: location 1229 is 1293
9999 mem: storing 1293 in location 2912
 105 run: reply result:address:duplex-list
9999 mem: location 2912 is 1293
9999 run: result 0 is 1293
9999 mem: storing 1293 in location 2473
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2475 is 2
9999 mem: storing 3 in location 2475
 104 run: loop 
9999 run: jumping to instruction 17
 104 run: break-unless curr:address:duplex-list, 
9999 mem: location 2472 is 1358
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2474 is 1
9999 mem: location 2470 is 5
9999 mem: storing 0 in location 2479
 104 run: break-if off-screen?:boolean, 
9999 mem: location 2479 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2474 is 1
9999 mem: location 2476 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 2480
 104 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2480 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 2475 is 3
9999 mem: location 2477 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 2481
 104 run: break-unless at-cursor?:boolean, 
9999 mem: location 2481 is 0
9999 run: jumping to instruction 27
 104 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2472 is 1358
9999 mem: location 1358 is 99
9999 mem: location 1359 is 0
9999 mem: location 1360 is 1293
9999 mem: location 2472 is 1358
9999 run: address to copy is 1358
9999 run: its type is number
9999 mem: location 1358 is 99
9999 mem: storing 99 in location 2482
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2482 is 99
9999 mem: storing 0 in location 2483
 104 run: break-unless newline?:boolean, 
9999 mem: location 2483 is 0
9999 run: jumping to instruction 47
 104 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2475 is 3
9999 mem: location 2471 is 4
9999 mem: storing 0 in location 2485
 104 run: break-unless at-right?:boolean, 
9999 mem: location 2485 is 0
9999 run: jumping to instruction 56
 104 run: print-character screen:address, c:character
9999 mem: location 2467 is 1031
9999 mem: location 2482 is 99
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2940
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2942
 105 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 2943
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2944
9999 mem: storing 0 in location 2945
 105 run: break-if color-found?:boolean, 
9999 mem: location 2945 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2944
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2946
9999 mem: storing 0 in location 2947
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2947 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2946
 105 run: break-unless x:address:screen, 
9999 mem: location 2942 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2942 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2942 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2948
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2942 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2942 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2949
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2942 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2942 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2950
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2942 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2942 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2951
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2943 is 99
9999 mem: storing 0 in location 2952
 105 run: break-unless newline?:boolean, 
9999 mem: location 2952 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2948 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2950 is 5
9999 mem: storing 5 in location 2955
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2955 is 5
9999 mem: location 2949 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 8 in location 2955
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2942 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2942 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2956
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2943 is 99
9999 mem: storing 0 in location 2957
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2957 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2956 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 97
9999 mem: location 1050 is 7
9999 mem: location 1051 is 98
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 1061 is 32
9999 mem: location 1062 is 245
9999 mem: location 1063 is 32
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2955 is 8
9999 mem: location 2956 is 1036
9999 mem: location 2955 is 8
9999 mem: storing 1053 in location 2959
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2959 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 2959 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 2960
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2959 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 2959 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 2961
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2943 is 99
9999 mem: location 2960 is 1053
9999 mem: storing 99 in location 1053
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2944 is 7
9999 mem: location 2961 is 1054
9999 mem: storing 7 in location 1054
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2950 is 5
9999 mem: storing 4 in location 2962
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2949 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2962 is 4
9999 mem: storing 0 in location 2963
 105 run: break-if at-right?:boolean, 
9999 mem: location 2963 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2949 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2949 is 1034
9999 mem: storing 4 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2942 is 1031
 104 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2472 is 1358
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2971
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1358 in location 2973
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2973 is 1358
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2973 is 1358
9999 mem: location 1358 is 99
9999 mem: location 1359 is 0
9999 mem: location 1360 is 1293
9999 mem: location 2973 is 1358
9999 run: address to copy is 1359
9999 run: its type is address
9999 mem: location 1359 is 0
9999 mem: storing 0 in location 2974
 105 run: reply result:address:duplex-list
9999 mem: location 2974 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 2472
 104 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2473 is 1293
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3002
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1293 in location 3004
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3004 is 1293
9999 run: jumping to instruction 4
schedule: next-duplex/render/handle-event/event-loop/run1001/editor-wraps-line-on-insert
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3004 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 1358
9999 mem: location 1295 is 1228
9999 mem: location 3004 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 1358
9999 mem: storing 1358 in location 3005
 105 run: reply result:address:duplex-list
9999 mem: location 3005 is 1358
9999 run: result 0 is 1358
9999 mem: storing 1358 in location 2473
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2475 is 3
9999 mem: storing 4 in location 2475
 104 run: loop 
9999 run: jumping to instruction 17
 104 run: break-unless curr:address:duplex-list, 
9999 mem: location 2472 is 0
9999 run: jumping to instruction 62
 104 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2474 is 1
9999 mem: location 2476 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 2480
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 2475 is 4
9999 mem: location 2477 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 2486
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 2480 is 1
9999 mem: location 2486 is 0
9999 mem: storing 0 in location 2487
 104 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 2474 is 1
9999 mem: location 2476 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 2488
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 2487 is 0
9999 mem: location 2488 is 0
9999 mem: storing 0 in location 2489
 104 run: break-unless before-cursor?:boolean, 
9999 mem: location 2489 is 0
9999 run: jumping to instruction 81
 104 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 2467 is 1031
9999 mem: location 2475 is 4
9999 mem: location 2471 is 4
 105 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 3033
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 3035
 105 run: left:number <- next-ingredient 
9999 mem: storing 4 in location 3036
 105 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 3037
 105 run: column:number <- copy left:number
9999 mem: location 3036 is 4
9999 mem: storing 4 in location 3038
 105 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 3038 is 4
9999 mem: location 3037 is 4
9999 mem: storing 0 in location 3039
 105 run: break-if done?:boolean, 
9999 mem: location 3039 is 0
9999 run: jump-if fell through
 105 run: print-character screen:address, 32:literal/space
9999 mem: location 3035 is 1031
 106 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3074
 106 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3076
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 3077
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3078
9999 mem: storing 0 in location 3079
 106 run: break-if color-found?:boolean, 
9999 mem: location 3079 is 0
9999 run: jump-if fell through
 106 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3078
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3080
9999 mem: storing 0 in location 3081
 106 run: break-if bg-color-found?:boolean, 
9999 mem: location 3081 is 0
9999 run: jump-if fell through
 106 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 3080
 106 run: break-unless x:address:screen, 
9999 mem: location 3076 is 1031
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3076 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3076 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3082
 106 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3076 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3076 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3083
 106 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3076 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3076 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3084
 106 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3076 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3076 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 3085
 106 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3077 is 32
9999 mem: storing 0 in location 3086
 106 run: break-unless newline?:boolean, 
9999 mem: location 3086 is 0
9999 run: jumping to instruction 30
 106 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3082 is 1033
9999 mem: location 1033 is 1
9999 mem: location 3084 is 5
9999 mem: storing 5 in location 3089
 106 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3089 is 5
9999 mem: location 3083 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 9 in location 3089
 106 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3076 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3076 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3090
 106 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3077 is 32
9999 mem: storing 0 in location 3091
 106 run: break-unless backspace?:boolean, 
9999 mem: location 3091 is 0
9999 run: jumping to instruction 49
 106 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 97
9999 mem: location 1050 is 7
9999 mem: location 1051 is 98
9999 mem: location 1052 is 7
9999 mem: location 1053 is 99
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 1061 is 32
9999 mem: location 1062 is 245
9999 mem: location 1063 is 32
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 3089 is 9
9999 mem: location 3090 is 1036
9999 mem: location 3089 is 9
9999 mem: storing 1055 in location 3093
 106 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3093 is 1055
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 3093 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 3094
 106 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3093 is 1055
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 3093 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 3095
 106 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3077 is 32
9999 mem: location 3094 is 1055
9999 mem: storing 32 in location 1055
 106 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3078 is 7
9999 mem: location 3095 is 1056
9999 mem: storing 7 in location 1056
 106 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3084 is 5
9999 mem: storing 4 in location 3096
 106 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3083 is 1034
9999 mem: location 1034 is 4
9999 mem: location 3096 is 4
9999 mem: storing 1 in location 3097
 106 run: break-if at-right?:boolean, 
9999 mem: location 3097 is 1
9999 run: jumping to instruction 60
 106 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3076 is 1031
 105 run: column:number <- add column:number, 1:literal
9999 mem: location 3038 is 4
9999 mem: storing 5 in location 3038
 105 run: loop 
9999 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 3038 is 5
9999 mem: location 3037 is 4
9999 mem: storing 1 in location 3039
 105 run: break-if done?:boolean, 
9999 mem: location 3039 is 1
9999 run: jumping to instruction 11
 104 run: row:number <- add row:number, 1:literal
9999 mem: location 2474 is 1
9999 mem: storing 2 in location 2474
 104 run: warnings:address:array:character <- get editor:address:editor-data/deref, warnings:offset
9999 mem: location 2468 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 2400
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 2468 is 1153
9999 run: address to copy is 1156
9999 run: its type is address
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 2492
 104 run: break-unless warnings:address:array:character, 
9999 mem: location 2492 is 0
9999 run: jumping to instruction 89
 104 run: break-if warnings:address:array:character, 
9999 mem: location 2492 is 0
9999 run: jump-if fell through
 104 run: response:address:array:character <- get editor:address:editor-data/deref, response:offset
9999 mem: location 2468 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 2400
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 2468 is 1153
9999 run: address to copy is 1155
9999 run: its type is address
9999 mem: location 1155 is 0
9999 mem: storing 0 in location 2493
 104 run: break-unless response:address:array:character, 
9999 mem: location 2493 is 0
9999 run: jumping to instruction 95
 104 run: break-if screen:address, 
9999 mem: location 2467 is 1031
9999 run: jumping to instruction 108
 104 run: done?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2474 is 2
9999 mem: location 2470 is 5
9999 mem: storing 0 in location 2494
 104 run: break-if done?:boolean, 
9999 mem: location 2494 is 0
9999 run: jump-if fell through
 104 run: draw-horizontal screen:address, row:number, left:number, right:number, 32:literal/space
9999 mem: location 2467 is 1031
9999 mem: location 2474 is 2
9999 mem: location 2469 is 0
9999 mem: location 2471 is 4
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3105
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 3107
 105 run: row:number <- next-ingredient 
9999 mem: storing 2 in location 3108
 105 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 3109
 105 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 3110
 105 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 32 in location 3111
9999 mem: storing 1 in location 3112
 105 run: break-if style-found?:boolean, 
9999 mem: location 3112 is 1
9999 run: jumping to instruction 9
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3113
9999 mem: storing 0 in location 3114
 105 run: break-if color-found?:boolean, 
9999 mem: location 3114 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 245:literal/grey
9999 mem: storing 245 in location 3113
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3115
9999 mem: storing 0 in location 3116
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 3116 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 3115
 105 run: move-cursor screen:address, row:number, x:number
9999 mem: location 3107 is 1031
9999 mem: location 3108 is 2
9999 mem: location 3109 is 0
 106 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3136
 106 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3138
 106 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 3139
 106 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 3140
 106 run: break-unless x:address:screen, 
9999 mem: location 3138 is 1031
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3138 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3138 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3141
 106 run: row:address:number/deref <- copy new-row:number
9999 mem: location 3139 is 2
9999 mem: location 3141 is 1033
9999 mem: storing 2 in location 1033
 106 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3138 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3138 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3142
 106 run: column:address:number/deref <- copy new-column:number
9999 mem: location 3140 is 0
9999 mem: location 3142 is 1034
9999 mem: storing 0 in location 1034
 106 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3138 is 1031
 105 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 3109 is 0
9999 mem: location 3110 is 4
9999 mem: storing 1 in location 3117
 105 run: break-unless continue?:boolean, 
9999 mem: location 3117 is 1
9999 run: jump-unless fell through
 105 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 3107 is 1031
9999 mem: location 3111 is 32
9999 mem: location 3113 is 245
9999 mem: location 3115 is 0
 106 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3167
 106 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3169
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 3170
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 3171
9999 mem: storing 1 in location 3172
 106 run: break-if color-found?:boolean, 
9999 mem: location 3172 is 1
9999 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3173
9999 mem: storing 1 in location 3174
 106 run: break-if bg-color-found?:boolean, 
9999 mem: location 3174 is 1
9999 run: jumping to instruction 12
 106 run: break-unless x:address:screen, 
9999 mem: location 3169 is 1031
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3169 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3169 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3175
 106 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3169 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3169 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3176
 106 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3169 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3169 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3177
 106 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3169 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3169 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 3178
 106 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3170 is 32
9999 mem: storing 0 in location 3179
 106 run: break-unless newline?:boolean, 
9999 mem: location 3179 is 0
9999 run: jumping to instruction 30
 106 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3175 is 1033
9999 mem: location 1033 is 2
9999 mem: location 3177 is 5
9999 mem: storing 10 in location 3182
 106 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3182 is 10
9999 mem: location 3176 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 10 in location 3182
 106 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3169 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3169 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3183
 106 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3170 is 32
9999 mem: storing 0 in location 3184
 106 run: break-unless backspace?:boolean, 
9999 mem: location 3184 is 0
9999 run: jumping to instruction 49
 106 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3183 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 97
9999 mem: location 1050 is 7
9999 mem: location 1051 is 98
9999 mem: location 1052 is 7
9999 mem: location 1053 is 99
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 1061 is 32
9999 mem: location 1062 is 245
9999 mem: location 1063 is 32
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 3182 is 10
9999 mem: location 3183 is 1036
9999 mem: location 3182 is 10
9999 mem: storing 1057 in location 3186
 106 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3186 is 1057
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 3186 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 3187
 106 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3186 is 1057
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 3186 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 3188
 106 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3170 is 32
9999 mem: location 3187 is 1057
9999 mem: storing 32 in location 1057
 106 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3171 is 245
9999 mem: location 3188 is 1058
9999 mem: storing 245 in location 1058
 106 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3177 is 5
9999 mem: storing 4 in location 3189
 106 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3176 is 1034
9999 mem: location 1034 is 0
9999 mem: location 3189 is 4
9999 mem: storing 0 in location 3190
 106 run: break-if at-right?:boolean, 
9999 mem: location 3190 is 0
9999 run: jump-if fell through
 106 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3176 is 1034
9999 mem: location 1034 is 0
9999 mem: location 3176 is 1034
9999 mem: storing 1 in location 1034
 106 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3169 is 1031
 105 run: x:number <- add x:number, 1:literal
9999 mem: location 3109 is 0
9999 mem: storing 1 in location 3109
 105 run: loop 
9999 run: jumping to instruction 22
 105 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 3109 is 1
9999 mem: location 3110 is 4
9999 mem: storing 1 in location 3117
 105 run: break-unless continue?:boolean, 
9999 mem: location 3117 is 1
9999 run: jump-unless fell through
 105 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 3107 is 1031
9999 mem: location 3111 is 32
9999 mem: location 3113 is 245
9999 mem: location 3115 is 0
 106 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3198
 106 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3200
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 3201
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 3202
9999 mem: storing 1 in location 3203
 106 run: break-if color-found?:boolean, 
9999 mem: location 3203 is 1
9999 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3204
9999 mem: storing 1 in location 3205
 106 run: break-if bg-color-found?:boolean, 
9999 mem: location 3205 is 1
9999 run: jumping to instruction 12
 106 run: break-unless x:address:screen, 
9999 mem: location 3200 is 1031
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3200 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3200 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3206
 106 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3200 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3200 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3207
 106 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3200 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3200 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3208
 106 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3200 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3200 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 3209
 106 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3201 is 32
9999 mem: storing 0 in location 3210
 106 run: break-unless newline?:boolean, 
9999 mem: location 3210 is 0
9999 run: jumping to instruction 30
 106 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3206 is 1033
9999 mem: location 1033 is 2
9999 mem: location 3208 is 5
9999 mem: storing 10 in location 3213
 106 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3213 is 10
9999 mem: location 3207 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 11 in location 3213
 106 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3200 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3200 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3214
 106 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3201 is 32
9999 mem: storing 0 in location 3215
 106 run: break-unless backspace?:boolean, 
9999 mem: location 3215 is 0
9999 run: jumping to instruction 49
 106 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3214 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 97
9999 mem: location 1050 is 7
9999 mem: location 1051 is 98
9999 mem: location 1052 is 7
9999 mem: location 1053 is 99
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 1061 is 32
9999 mem: location 1062 is 245
9999 mem: location 1063 is 32
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 3213 is 11
9999 mem: location 3214 is 1036
9999 mem: location 3213 is 11
9999 mem: storing 1059 in location 3217
 106 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3217 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 3217 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 3218
 106 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3217 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 3217 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 3219
 106 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3201 is 32
9999 mem: location 3218 is 1059
9999 mem: storing 32 in location 1059
 106 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3202 is 245
9999 mem: location 3219 is 1060
9999 mem: storing 245 in location 1060
 106 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3208 is 5
9999 mem: storing 4 in location 3220
 106 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3207 is 1034
9999 mem: location 1034 is 1
9999 mem: location 3220 is 4
9999 mem: storing 0 in location 3221
 106 run: break-if at-right?:boolean, 
9999 mem: location 3221 is 0
9999 run: jump-if fell through
 106 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3207 is 1034
9999 mem: location 1034 is 1
9999 mem: location 3207 is 1034
9999 mem: storing 2 in location 1034
 106 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3200 is 1031
 105 run: x:number <- add x:number, 1:literal
9999 mem: location 3109 is 1
9999 mem: storing 2 in location 3109
 105 run: loop 
9999 run: jumping to instruction 22
 105 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 3109 is 2
9999 mem: location 3110 is 4
9999 mem: storing 1 in location 3117
 105 run: break-unless continue?:boolean, 
9999 mem: location 3117 is 1
9999 run: jump-unless fell through
 105 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 3107 is 1031
9999 mem: location 3111 is 32
9999 mem: location 3113 is 245
9999 mem: location 3115 is 0
 106 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3229
 106 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3231
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 3232
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 3233
9999 mem: storing 1 in location 3234
 106 run: break-if color-found?:boolean, 
9999 mem: location 3234 is 1
9999 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3235
9999 mem: storing 1 in location 3236
 106 run: break-if bg-color-found?:boolean, 
9999 mem: location 3236 is 1
9999 run: jumping to instruction 12
 106 run: break-unless x:address:screen, 
9999 mem: location 3231 is 1031
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3231 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3231 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3237
 106 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3231 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3231 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3238
 106 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3231 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3231 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3239
 106 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3231 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3231 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 3240
 106 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3232 is 32
9999 mem: storing 0 in location 3241
 106 run: break-unless newline?:boolean, 
9999 mem: location 3241 is 0
9999 run: jumping to instruction 30
 106 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3237 is 1033
9999 mem: location 1033 is 2
9999 mem: location 3239 is 5
9999 mem: storing 10 in location 3244
 106 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3244 is 10
9999 mem: location 3238 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 12 in location 3244
 106 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3231 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3231 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3245
 106 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3232 is 32
9999 mem: storing 0 in location 3246
 106 run: break-unless backspace?:boolean, 
9999 mem: location 3246 is 0
9999 run: jumping to instruction 49
 106 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3245 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 97
9999 mem: location 1050 is 7
9999 mem: location 1051 is 98
9999 mem: location 1052 is 7
9999 mem: location 1053 is 99
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 1061 is 32
9999 mem: location 1062 is 245
9999 mem: location 1063 is 32
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 3244 is 12
9999 mem: location 3245 is 1036
9999 mem: location 3244 is 12
9999 mem: storing 1061 in location 3248
 106 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3248 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 245
9999 mem: location 3248 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 3249
 106 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3248 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 245
9999 mem: location 3248 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 3250
 106 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3232 is 32
9999 mem: location 3249 is 1061
9999 mem: storing 32 in location 1061
 106 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3233 is 245
9999 mem: location 3250 is 1062
9999 mem: storing 245 in location 1062
 106 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3239 is 5
9999 mem: storing 4 in location 3251
 106 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3238 is 1034
9999 mem: location 1034 is 2
9999 mem: location 3251 is 4
9999 mem: storing 0 in location 3252
 106 run: break-if at-right?:boolean, 
9999 mem: location 3252 is 0
9999 run: jump-if fell through
 106 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3238 is 1034
9999 mem: location 1034 is 2
9999 mem: location 3238 is 1034
9999 mem: storing 3 in location 1034
 106 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3231 is 1031
 105 run: x:number <- add x:number, 1:literal
9999 mem: location 3109 is 2
9999 mem: storing 3 in location 3109
 105 run: loop 
9999 run: jumping to instruction 22
 105 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 3109 is 3
9999 mem: location 3110 is 4
9999 mem: storing 1 in location 3117
 105 run: break-unless continue?:boolean, 
9999 mem: location 3117 is 1
9999 run: jump-unless fell through
 105 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 3107 is 1031
9999 mem: location 3111 is 32
9999 mem: location 3113 is 245
9999 mem: location 3115 is 0
 106 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3260
 106 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3262
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 3263
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 3264
9999 mem: storing 1 in location 3265
 106 run: break-if color-found?:boolean, 
9999 mem: location 3265 is 1
9999 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3266
9999 mem: storing 1 in location 3267
 106 run: break-if bg-color-found?:boolean, 
9999 mem: location 3267 is 1
9999 run: jumping to instruction 12
 106 run: break-unless x:address:screen, 
9999 mem: location 3262 is 1031
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3262 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3262 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3268
 106 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3262 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3262 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3269
 106 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3262 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3262 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3270
 106 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3262 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3262 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 3271
 106 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3263 is 32
9999 mem: storing 0 in location 3272
 106 run: break-unless newline?:boolean, 
9999 mem: location 3272 is 0
9999 run: jumping to instruction 30
 106 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3268 is 1033
9999 mem: location 1033 is 2
9999 mem: location 3270 is 5
9999 mem: storing 10 in location 3275
 106 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3275 is 10
9999 mem: location 3269 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 13 in location 3275
 106 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3262 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3262 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3276
 106 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3263 is 32
9999 mem: storing 0 in location 3277
 106 run: break-unless backspace?:boolean, 
9999 mem: location 3277 is 0
9999 run: jumping to instruction 49
 106 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3276 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 97
9999 mem: location 1050 is 7
9999 mem: location 1051 is 98
9999 mem: location 1052 is 7
9999 mem: location 1053 is 99
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 1061 is 32
9999 mem: location 1062 is 245
9999 mem: location 1063 is 32
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 3275 is 13
9999 mem: location 3276 is 1036
9999 mem: location 3275 is 13
9999 mem: storing 1063 in location 3279
 106 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3279 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 245
9999 mem: location 3279 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 3280
 106 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3279 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 245
9999 mem: location 3279 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 3281
 106 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3263 is 32
9999 mem: location 3280 is 1063
9999 mem: storing 32 in location 1063
 106 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3264 is 245
9999 mem: location 3281 is 1064
9999 mem: storing 245 in location 1064
 106 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3270 is 5
9999 mem: storing 4 in location 3282
 106 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3269 is 1034
9999 mem: location 1034 is 3
9999 mem: location 3282 is 4
9999 mem: storing 0 in location 3283
 106 run: break-if at-right?:boolean, 
9999 mem: location 3283 is 0
9999 run: jump-if fell through
 106 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3269 is 1034
9999 mem: location 1034 is 3
9999 mem: location 3269 is 1034
9999 mem: storing 4 in location 1034
 106 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3262 is 1031
 105 run: x:number <- add x:number, 1:literal
9999 mem: location 3109 is 3
9999 mem: storing 4 in location 3109
 105 run: loop 
9999 run: jumping to instruction 22
 105 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 3109 is 4
9999 mem: location 3110 is 4
9999 mem: storing 0 in location 3117
 105 run: break-unless continue?:boolean, 
9999 mem: location 3117 is 0
9999 run: jumping to instruction 27
 104 run: in-focus?:boolean <- get editor:address:editor-data/deref, in-focus?:offset
9999 mem: location 2468 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 2400
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 2468 is 1153
9999 run: address to copy is 1162
9999 run: its type is boolean
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 2495
 104 run: break-unless in-focus?:boolean, 
9999 mem: location 2495 is 1
9999 run: jump-unless fell through
 104 run: cursor-inside-right-margin?:boolean <- lesser-or-equal cursor-column:address:number/deref, right:number
9999 mem: location 2477 is 1160
9999 mem: location 1160 is 1
9999 mem: location 2471 is 4
9999 mem: storing 1 in location 2496
 104 run: assert cursor-inside-right-margin?:boolean, [cursor outside right margin]
9999 mem: location 2496 is 1
 104 run: cursor-inside-left-margin?:boolean <- greater-or-equal cursor-column:address:number/deref, left:number
9999 mem: location 2477 is 1160
9999 mem: location 1160 is 1
9999 mem: location 2469 is 0
9999 mem: storing 1 in location 2497
 104 run: assert cursor-inside-left-margin?:boolean, [cursor outside left margin]
9999 mem: location 2497 is 1
 104 run: move-cursor screen:address, cursor-row:address:number/deref, cursor-column:address:number/deref
9999 mem: location 2467 is 1031
9999 mem: location 2476 is 1159
9999 mem: location 1159 is 1
9999 mem: location 2477 is 1160
9999 mem: location 1160 is 1
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3291
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3293
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 3294
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 3295
 105 run: break-unless x:address:screen, 
9999 mem: location 3293 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3293 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3293 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3296
 105 run: row:address:number/deref <- copy new-row:number
9999 mem: location 3294 is 1
9999 mem: location 3296 is 1033
9999 mem: storing 1 in location 1033
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3293 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3293 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3297
 105 run: column:address:number/deref <- copy new-column:number
9999 mem: location 3295 is 1
9999 mem: location 3297 is 1034
9999 mem: storing 1 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3293 is 1031
 104 run: show-screen screen:address
9999 mem: location 2467 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3322
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3324
 105 run: break-unless x:address:screen, 
9999 mem: location 3324 is 1031
9999 run: jump-unless fell through
 105 run: reply x:address:screen
9999 mem: location 3324 is 1031
 104 run: reply editor:address:editor-data/same-as-ingredient:1
9999 mem: location 2468 is 1153
 102 run: curr:address:editor-data <- get curr:address:editor-data/deref, next-editor:offset
9999 mem: location 2238 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 2400
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 2238 is 1153
9999 run: address to copy is 1161
9999 run: its type is address
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 2238
 102 run: loop 
9999 run: jumping to instruction 23
 102 run: break-unless curr:address:editor-data, 
9999 mem: location 2238 is 0
9999 run: jumping to instruction 27
 102 run: curr:address:editor-data <- copy editor:address:editor-data
9999 mem: location 2229 is 1153
9999 mem: storing 1153 in location 2238
 102 run: break-unless curr:address:editor-data, 
9999 mem: location 2238 is 1153
9999 run: jump-unless fell through
 102 run: in-focus?:boolean <- get curr:address:editor-data/deref, in-focus?:offset
9999 mem: location 2238 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 2400
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 2238 is 1153
9999 run: address to copy is 1162
9999 run: its type is boolean
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 2239
 102 run: break-unless in-focus?:boolean, 
9999 mem: location 2239 is 1
9999 run: jump-unless fell through
 102 run: cursor-row:number <- get curr:address:editor-data/deref, cursor-row:offset
9999 mem: location 2238 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 2400
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 2238 is 1153
9999 run: address to copy is 1159
9999 run: its type is number
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 2240
 102 run: cursor-column:number <- get curr:address:editor-data/deref, cursor-column:offset
9999 mem: location 2238 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 2400
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 2238 is 1153
9999 run: address to copy is 1160
9999 run: its type is number
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 2241
 102 run: move-cursor screen:address, cursor-row:number, cursor-column:number
9999 mem: location 2227 is 1031
9999 mem: location 2240 is 1
9999 mem: location 2241 is 1
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3353
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3355
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 3356
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 3357
 103 run: break-unless x:address:screen, 
9999 mem: location 3355 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3355 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3355 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3358
 103 run: row:address:number/deref <- copy new-row:number
9999 mem: location 3356 is 1
9999 mem: location 3358 is 1033
9999 mem: storing 1 in location 1033
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3355 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3355 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3359
 103 run: column:address:number/deref <- copy new-column:number
9999 mem: location 3357 is 1
9999 mem: location 3359 is 1034
9999 mem: storing 1 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3355 is 1031
 102 run: curr:address:editor-data <- get curr:address:editor-data/deref, next-editor:offset
9999 mem: location 2238 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 2400
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 2238 is 1153
9999 run: address to copy is 1161
9999 run: its type is address
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 2238
 102 run: loop 
9999 run: jumping to instruction 30
 102 run: break-unless curr:address:editor-data, 
9999 mem: location 2238 is 0
9999 run: jumping to instruction 40
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 2228 is 2223
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3384
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 2223 in location 3386
 103 run: break-unless x:address:console, 
9999 mem: location 3386 is 2223
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 3386 is 2223
9999 mem: location 2223 is 1
9999 mem: location 2224 is 2218
9999 mem: location 3386 is 2223
9999 run: address to copy is 2223
9999 mem: storing 2223 in location 3387
 103 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 3386 is 2223
9999 mem: location 2223 is 1
9999 mem: location 2224 is 2218
9999 mem: location 3386 is 2223
9999 run: address to copy is 2224
9999 run: its type is address
9999 mem: location 2224 is 2218
9999 mem: storing 2218 in location 3388
 103 run: max:number <- length buf:address:array:event/deref
9999 mem: location 3388 is 2218
9999 mem: location 2218 is 1
9999 mem: location 2219 is 0
9999 mem: location 2220 is 101
9999 mem: location 2221 is 0
9999 mem: location 2222 is 0
9999 mem: location 3388 is 2218
9999 mem: storing 1 in location 3389
 103 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 3387 is 2223
9999 mem: location 2223 is 1
9999 mem: location 3389 is 1
9999 mem: storing 1 in location 3390
 103 run: break-unless done?:boolean, 
9999 mem: location 3390 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: new alloc: 3415
9999 mem: storing 3415 in location 3391
 103 run: reply dummy:address:event/deref, x:address:console/same-as-ingredient:0, 1:literal/found, 1:literal/quit
9999 mem: location 3391 is 3415
9999 mem: location 3415 is 0
9999 mem: location 3416 is 0
9999 mem: location 3417 is 0
9999 mem: location 3418 is 0
9999 mem: location 3386 is 2223
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 2223
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 2230
9999 mem: storing 0 in location 2231
9999 mem: storing 0 in location 2232
9999 mem: storing 0 in location 2233
9999 mem: storing 2223 in location 2228
9999 mem: storing 1 in location 2234
9999 mem: storing 1 in location 2235
 102 run: loop-unless found?:boolean, 
9999 mem: location 2234 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?:boolean, 
9999 mem: location 2235 is 1
9999 run: jumping to instruction 42
 100 run: screen-should-contain [
    .     .
    .eabc .
    .     .
    .     .
  ]
 100 run: assume-console [
    type [f]
  ]
parse: instruction: type
parse:   ingredient: {name: "f", properties: [_: "literal-string"]}
 100 run: run [
    event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1002
after-brace: event-loop ...
 100 run: event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1031
9999 mem: location 901 is 3424
9999 mem: location 2 is 1153
 101 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3426
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 3428
 101 run: console:address <- next-ingredient 
9999 mem: storing 3424 in location 3429
 101 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1153 in location 3430
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 3429 is 3424
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3457
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 3424 in location 3459
 102 run: break-unless x:address:console, 
9999 mem: location 3459 is 3424
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 3459 is 3424
9999 mem: location 3424 is 0
9999 mem: location 3425 is 3419
9999 mem: location 3459 is 3424
9999 run: address to copy is 3424
9999 mem: storing 3424 in location 3460
 102 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 3459 is 3424
9999 mem: location 3424 is 0
9999 mem: location 3425 is 3419
9999 mem: location 3459 is 3424
9999 run: address to copy is 3425
9999 run: its type is address
9999 mem: location 3425 is 3419
9999 mem: storing 3419 in location 3461
 102 run: max:number <- length buf:address:array:event/deref
9999 mem: location 3461 is 3419
9999 mem: location 3419 is 1
9999 mem: location 3420 is 0
9999 mem: location 3421 is 102
9999 mem: location 3422 is 0
9999 mem: location 3423 is 0
9999 mem: location 3461 is 3419
9999 mem: storing 1 in location 3462
 102 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 3460 is 3424
9999 mem: location 3424 is 0
9999 mem: location 3462 is 1
9999 mem: storing 0 in location 3463
 102 run: break-unless done?:boolean, 
9999 mem: location 3463 is 0
9999 run: jumping to instruction 12
 102 run: result:event <- index buf:address:array:event/deref, idx:address:number/deref
9999 mem: location 3461 is 3419
9999 mem: location 3419 is 1
9999 mem: location 3420 is 0
9999 mem: location 3421 is 102
9999 mem: location 3422 is 0
9999 mem: location 3423 is 0
9999 mem: location 3460 is 3424
9999 mem: location 3424 is 0
9999 mem: location 3461 is 3419
9999 mem: location 3460 is 3424
9999 mem: location 3424 is 0
9999 run: address to copy is 3420
9999 run: its type is event
9999 mem: location 3420 is 0
9999 mem: location 3421 is 102
9999 mem: location 3422 is 0
9999 mem: location 3423 is 0
9999 mem: storing 0 in location 3465
9999 mem: storing 102 in location 3466
9999 mem: storing 0 in location 3467
9999 mem: storing 0 in location 3468
 102 run: idx:address:number/deref <- add idx:address:number/deref, 1:literal
9999 mem: location 3460 is 3424
9999 mem: location 3424 is 0
9999 mem: location 3460 is 3424
9999 mem: storing 1 in location 3424
 102 run: reply result:event, x:address:console/same-as-ingredient:0, 1:literal/found, 0:literal/quit
9999 mem: location 3465 is 0
9999 mem: location 3466 is 102
9999 mem: location 3467 is 0
9999 mem: location 3468 is 0
9999 mem: location 3459 is 3424
9999 run: result 0 is [0, 102, 0, 0]
9999 run: result 1 is 3424
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 3431
9999 mem: storing 102 in location 3432
9999 mem: storing 0 in location 3433
9999 mem: storing 0 in location 3434
9999 mem: storing 3424 in location 3429
9999 mem: storing 1 in location 3435
9999 mem: storing 0 in location 3436
 101 run: loop-unless found?:boolean, 
9999 mem: location 3435 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?:boolean, 
9999 mem: location 3436 is 0
9999 run: jump-if fell through
 101 run: trace [app], [next-event]
   1 app: next-event
 101 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 3431 is 0
9999 mem: location 3432 is 102
9999 mem: location 3433 is 0
9999 mem: location 3434 is 0
9999 mem: storing 0 in location 3437
 101 run: break-unless k:address:number, 
9999 mem: location 3437 is 0
9999 run: jumping to instruction 20
 101 run: curr:address:editor-data <- copy editor:address:editor-data
9999 mem: location 3430 is 1153
9999 mem: storing 1153 in location 3439
 101 run: break-unless curr:address:editor-data, 
9999 mem: location 3439 is 1153
9999 run: jump-unless fell through
 101 run: handle-event screen:address, console:address, curr:address:editor-data, e:event
9999 mem: location 3428 is 1031
9999 mem: location 3429 is 3424
9999 mem: location 3439 is 1153
9999 mem: location 3431 is 0
9999 mem: location 3432 is 102
9999 mem: location 3433 is 0
9999 mem: location 3434 is 0
 102 run: default-space:address:array:location <- new location:type, 50:literal
9999 mem: array size is 50
9999 mem: new alloc: 3488
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 3490
 102 run: console:address <- next-ingredient 
9999 mem: storing 3424 in location 3491
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1153 in location 3492
 102 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 3493
9999 mem: storing 102 in location 3494
9999 mem: storing 0 in location 3495
9999 mem: storing 0 in location 3496
 102 run: t:address:touch-event <- maybe-convert e:event, touch:variant
9999 mem: location 3493 is 0
9999 mem: location 3494 is 102
9999 mem: location 3495 is 0
9999 mem: location 3496 is 0
9999 mem: storing 0 in location 3497
 102 run: break-unless t:address:touch-event, 
9999 mem: location 3497 is 0
9999 run: jumping to instruction 10
 102 run: in-focus?:address:boolean <- get-address editor:address:editor-data/deref, in-focus?:offset
9999 mem: location 3492 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 2400
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 3492 is 1153
9999 run: address to copy is 1162
9999 mem: storing 1162 in location 3498
 102 run: jump-if in-focus?:address:boolean/deref, 1:offset
9999 mem: location 3498 is 1162
9999 mem: location 1162 is 1
9999 run: jumping to instruction 14
 102 run: c:address:character <- maybe-convert e:event, text:variant
9999 mem: location 3493 is 0
9999 mem: location 3494 is 102
9999 mem: location 3495 is 0
9999 mem: location 3496 is 0
9999 mem: storing 3494 in location 3499
 102 run: break-unless c:address:character, 
9999 mem: location 3499 is 3494
9999 run: jump-unless fell through
 102 run: backspace?:boolean <- equal c:address:character/deref, 8:literal/backspace
9999 mem: location 3499 is 3494
9999 mem: location 3494 is 102
9999 mem: storing 0 in location 3500
 102 run: break-unless backspace?:boolean, 
9999 mem: location 3500 is 0
9999 run: jumping to instruction 22
 102 run: insert-at-cursor editor:address:editor-data, c:address:character/deref, screen:address
9999 mem: location 3492 is 1153
9999 mem: location 3499 is 3494
9999 mem: location 3494 is 102
9999 mem: location 3490 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3539
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1153 in location 3541
 103 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 3542
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 3543
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 3541 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 2400
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 3541 is 1153
9999 run: address to copy is 1154
9999 mem: storing 1154 in location 3544
 103 run: d:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 3541 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 2400
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 3541 is 1153
9999 run: address to copy is 1153
9999 run: its type is address
9999 mem: location 1153 is 1194
9999 mem: storing 1194 in location 3545
 103 run: insert-duplex c:character, before-cursor:address:address:duplex-list/deref
9999 mem: location 3542 is 102
9999 mem: location 3544 is 1154
9999 mem: location 1154 is 2400
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3570
 104 run: x:location <- next-ingredient 
9999 mem: storing 102 in location 3572
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2400 in location 3573
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 3601
9999 mem: storing 3601 in location 3574
 104 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 3574 is 3601
9999 mem: location 3601 is 0
9999 mem: location 3602 is 0
9999 mem: location 3603 is 0
9999 mem: location 3574 is 3601
9999 run: address to copy is 3601
9999 mem: storing 3601 in location 3575
 104 run: val:address:location/deref <- copy x:location
9999 mem: location 3572 is 102
9999 mem: location 3575 is 3601
9999 mem: storing 102 in location 3601
 104 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3573 is 2400
9999 mem: location 2400 is 101
9999 mem: location 2401 is 1228
9999 mem: location 2402 is 1194
9999 mem: location 3573 is 2400
9999 run: address to copy is 2401
9999 run: its type is address
9999 mem: location 2401 is 1228
9999 mem: storing 1228 in location 3576
 104 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 3573 is 2400
9999 mem: location 2400 is 101
9999 mem: location 2401 is 1228
9999 mem: location 2402 is 1194
9999 mem: location 3573 is 2400
9999 run: address to copy is 2401
9999 mem: storing 2401 in location 3577
 104 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 3574 is 3601
9999 mem: location 3577 is 2401
9999 mem: storing 3601 in location 2401
 104 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 3574 is 3601
9999 mem: location 3601 is 102
9999 mem: location 3602 is 0
9999 mem: location 3603 is 0
9999 mem: location 3574 is 3601
9999 run: address to copy is 3603
9999 mem: storing 3603 in location 3577
 104 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 3573 is 2400
9999 mem: location 3577 is 3603
9999 mem: storing 2400 in location 3603
 104 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 3574 is 3601
9999 mem: location 3601 is 102
9999 mem: location 3602 is 0
9999 mem: location 3603 is 2400
9999 mem: location 3574 is 3601
9999 run: address to copy is 3602
9999 mem: storing 3602 in location 3577
 104 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 3576 is 1228
9999 mem: location 3577 is 3602
9999 mem: storing 1228 in location 3602
 104 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 3576 is 1228
9999 run: jumping to instruction 15
 104 run: y:address:address:duplex-list <- get-address next-node:address:duplex-list/deref, prev:offset
9999 mem: location 3576 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 1293
9999 mem: location 1230 is 2400
9999 mem: location 3576 is 1228
9999 run: address to copy is 1230
9999 mem: storing 1230 in location 3577
 104 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 3574 is 3601
9999 mem: location 3577 is 1230
9999 mem: storing 3601 in location 1230
 104 run: reply new-node:address:duplex-list
9999 mem: location 3574 is 3601
 103 run: before-cursor:address:address:duplex-list/deref <- next-duplex before-cursor:address:address:duplex-list/deref
9999 mem: location 3544 is 1154
9999 mem: location 1154 is 2400
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3604
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2400 in location 3606
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3606 is 2400
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3606 is 2400
9999 mem: location 2400 is 101
9999 mem: location 2401 is 3601
9999 mem: location 2402 is 1194
9999 mem: location 3606 is 2400
9999 run: address to copy is 2401
9999 run: its type is address
9999 mem: location 2401 is 3601
9999 mem: storing 3601 in location 3607
 104 run: reply result:address:duplex-list
9999 mem: location 3607 is 3601
9999 run: result 0 is 3601
9999 mem: location 3544 is 1154
9999 mem: storing 3601 in location 1154
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 3541 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 3601
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 3541 is 1153
9999 run: address to copy is 1159
9999 mem: storing 1159 in location 3546
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 3541 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 3601
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 3541 is 1153
9999 run: address to copy is 1160
9999 mem: storing 1160 in location 3547
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 3541 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 3601
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 3541 is 1153
9999 run: address to copy is 1157
9999 run: its type is number
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 3548
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 3541 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 3601
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 3541 is 1153
9999 run: address to copy is 1158
9999 run: its type is number
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 3549
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3542 is 102
9999 mem: storing 0 in location 3550
 103 run: break-unless newline?:boolean, 
9999 mem: location 3550 is 0
9999 run: jumping to instruction 18
 103 run: wrap-column:number <- subtract right:number, 1:literal
9999 mem: location 3549 is 4
9999 mem: storing 3 in location 3551
 103 run: at-wrap?:boolean <- greater-or-equal cursor-column:address:number/deref, wrap-column:number
9999 mem: location 3547 is 1160
9999 mem: location 1160 is 1
9999 mem: location 3551 is 3
9999 mem: storing 0 in location 3552
 103 run: break-unless at-wrap?:boolean, 
9999 mem: location 3552 is 0
9999 run: jumping to instruction 29
 103 run: cursor-column:address:number/deref <- add cursor-column:address:number/deref, 1:literal
9999 mem: location 3547 is 1160
9999 mem: location 1160 is 1
9999 mem: location 3547 is 1160
9999 mem: storing 2 in location 1160
 102 run: jump +render:label
9999 run: jumping to instruction 108
 102 run: more-events?:boolean <- has-more-events? console:address
9999 mem: location 3491 is 3424
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3635
 103 run: console:address <- next-ingredient 
9999 mem: storing 3424 in location 3637
 103 run: break-unless console:address, 
9999 mem: location 3637 is 3424
9999 run: jump-unless fell through
 103 run: reply 0:literal/false
9999 run: result 0 is 0
9999 mem: storing 0 in location 3529
 102 run: break-if more-events?:boolean, 
9999 mem: location 3529 is 0
9999 run: jump-if fell through
 102 run: render screen:address, editor:address:editor-data
9999 mem: location 3490 is 1031
9999 mem: location 3492 is 1153
 103 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 3666
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 3668
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1153 in location 3669
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 3669 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 3601
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 3669 is 1153
9999 run: address to copy is 1157
9999 run: its type is number
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 3670
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 3668 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3707
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3709
 104 run: break-unless x:address:screen, 
9999 mem: location 3709 is 1031
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3709 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3709 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 3710
schedule: screen-height/render/handle-event/event-loop/run1002/editor-wraps-line-on-insert
 104 run: reply height:number
9999 mem: location 3710 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 3671
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 3669 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 3601
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 3669 is 1153
9999 run: address to copy is 1158
9999 run: its type is number
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 3672
 103 run: hide-screen screen:address
9999 mem: location 3668 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3738
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3740
 104 run: break-unless x:address:screen, 
9999 mem: location 3740 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 3740 is 1031
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 3669 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 3601
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 3669 is 1153
9999 run: address to copy is 1153
9999 run: its type is address
9999 mem: location 1153 is 1194
9999 mem: storing 1194 in location 3673
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 3673 is 1194
9999 mem: storing 1194 in location 3674
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3673 is 1194
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3769
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 3771
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3771 is 1194
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3771 is 1194
9999 mem: location 1194 is 167
9999 mem: location 1195 is 2400
9999 mem: location 1196 is 0
9999 mem: location 3771 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 2400
9999 mem: storing 2400 in location 3772
 104 run: reply result:address:duplex-list
9999 mem: location 3772 is 2400
9999 run: result 0 is 2400
9999 mem: storing 2400 in location 3673
 103 run: row:number <- copy 1:literal/top
9999 mem: storing 1 in location 3675
 103 run: column:number <- copy left:number
9999 mem: location 3670 is 0
9999 mem: storing 0 in location 3676
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 3669 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 3601
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 3669 is 1153
9999 run: address to copy is 1159
9999 mem: storing 1159 in location 3677
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 3669 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 3601
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 3669 is 1153
9999 run: address to copy is 1160
9999 mem: storing 1160 in location 3678
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 3669 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 3601
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 3669 is 1153
9999 run: address to copy is 1154
9999 mem: storing 1154 in location 3679
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 3668 is 1031
9999 mem: location 3675 is 1
9999 mem: location 3676 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3800
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3802
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 3803
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 3804
 104 run: break-unless x:address:screen, 
9999 mem: location 3802 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3802 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3802 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3805
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 3803 is 1
9999 mem: location 3805 is 1033
9999 mem: storing 1 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3802 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3802 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3806
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 3804 is 0
9999 mem: location 3806 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3802 is 1031
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 3673 is 2400
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3675 is 1
9999 mem: location 3671 is 5
9999 mem: storing 0 in location 3680
 103 run: break-if off-screen?:boolean, 
9999 mem: location 3680 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3675 is 1
9999 mem: location 3677 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 3681
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3681 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 3676 is 0
9999 mem: location 3678 is 1160
9999 mem: location 1160 is 2
9999 mem: storing 0 in location 3682
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 3682 is 0
9999 run: jumping to instruction 27
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3673 is 2400
9999 mem: location 2400 is 101
9999 mem: location 2401 is 3601
9999 mem: location 2402 is 1194
9999 mem: location 3673 is 2400
9999 run: address to copy is 2400
9999 run: its type is number
9999 mem: location 2400 is 101
9999 mem: storing 101 in location 3683
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3683 is 101
9999 mem: storing 0 in location 3684
 103 run: break-unless newline?:boolean, 
9999 mem: location 3684 is 0
9999 run: jumping to instruction 47
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3676 is 0
9999 mem: location 3672 is 4
9999 mem: storing 0 in location 3686
 103 run: break-unless at-right?:boolean, 
9999 mem: location 3686 is 0
9999 run: jumping to instruction 56
 103 run: print-character screen:address, c:character
9999 mem: location 3668 is 1031
9999 mem: location 3683 is 101
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3831
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3833
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 3834
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3835
9999 mem: storing 0 in location 3836
 104 run: break-if color-found?:boolean, 
9999 mem: location 3836 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3835
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3837
9999 mem: storing 0 in location 3838
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 3838 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 3837
 104 run: break-unless x:address:screen, 
9999 mem: location 3833 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3833 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3833 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3839
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3833 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3833 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3840
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3833 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3833 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3841
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3833 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3833 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 3842
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3834 is 101
9999 mem: storing 0 in location 3843
 104 run: break-unless newline?:boolean, 
9999 mem: location 3843 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3839 is 1033
9999 mem: location 1033 is 1
9999 mem: location 3841 is 5
9999 mem: storing 5 in location 3846
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3846 is 5
9999 mem: location 3840 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 5 in location 3846
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3833 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3833 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3847
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3834 is 101
9999 mem: storing 0 in location 3848
 104 run: break-unless backspace?:boolean, 
9999 mem: location 3848 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3847 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 97
9999 mem: location 1050 is 7
9999 mem: location 1051 is 98
9999 mem: location 1052 is 7
9999 mem: location 1053 is 99
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 1061 is 32
9999 mem: location 1062 is 245
9999 mem: location 1063 is 32
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 3846 is 5
9999 mem: location 3847 is 1036
9999 mem: location 3846 is 5
9999 mem: storing 1047 in location 3850
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3850 is 1047
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 3850 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 3851
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3850 is 1047
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 3850 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 3852
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3834 is 101
9999 mem: location 3851 is 1047
9999 mem: storing 101 in location 1047
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3835 is 7
9999 mem: location 3852 is 1048
9999 mem: storing 7 in location 1048
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3841 is 5
9999 mem: storing 4 in location 3853
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3840 is 1034
9999 mem: location 1034 is 0
9999 mem: location 3853 is 4
9999 mem: storing 0 in location 3854
 104 run: break-if at-right?:boolean, 
9999 mem: location 3854 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3840 is 1034
9999 mem: location 1034 is 0
9999 mem: location 3840 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3833 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3673 is 2400
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3862
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2400 in location 3864
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3864 is 2400
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3864 is 2400
9999 mem: location 2400 is 101
9999 mem: location 2401 is 3601
9999 mem: location 2402 is 1194
9999 mem: location 3864 is 2400
9999 run: address to copy is 2401
9999 run: its type is address
9999 mem: location 2401 is 3601
9999 mem: storing 3601 in location 3865
 104 run: reply result:address:duplex-list
9999 mem: location 3865 is 3601
9999 run: result 0 is 3601
9999 mem: storing 3601 in location 3673
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3674 is 1194
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3893
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 3895
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3895 is 1194
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3895 is 1194
9999 mem: location 1194 is 167
9999 mem: location 1195 is 2400
9999 mem: location 1196 is 0
9999 mem: location 3895 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 2400
9999 mem: storing 2400 in location 3896
 104 run: reply result:address:duplex-list
9999 mem: location 3896 is 2400
9999 run: result 0 is 2400
9999 mem: storing 2400 in location 3674
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 3676 is 0
9999 mem: storing 1 in location 3676
 103 run: loop 
9999 run: jumping to instruction 17
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 3673 is 3601
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3675 is 1
9999 mem: location 3671 is 5
9999 mem: storing 0 in location 3680
 103 run: break-if off-screen?:boolean, 
9999 mem: location 3680 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3675 is 1
9999 mem: location 3677 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 3681
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3681 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 3676 is 1
9999 mem: location 3678 is 1160
9999 mem: location 1160 is 2
9999 mem: storing 0 in location 3682
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 3682 is 0
9999 run: jumping to instruction 27
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3673 is 3601
9999 mem: location 3601 is 102
9999 mem: location 3602 is 1228
9999 mem: location 3603 is 2400
9999 mem: location 3673 is 3601
9999 run: address to copy is 3601
9999 run: its type is number
9999 mem: location 3601 is 102
9999 mem: storing 102 in location 3683
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3683 is 102
9999 mem: storing 0 in location 3684
 103 run: break-unless newline?:boolean, 
9999 mem: location 3684 is 0
9999 run: jumping to instruction 47
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3676 is 1
9999 mem: location 3672 is 4
9999 mem: storing 0 in location 3686
 103 run: break-unless at-right?:boolean, 
9999 mem: location 3686 is 0
9999 run: jumping to instruction 56
 103 run: print-character screen:address, c:character
9999 mem: location 3668 is 1031
9999 mem: location 3683 is 102
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3924
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3926
 104 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 3927
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3928
9999 mem: storing 0 in location 3929
 104 run: break-if color-found?:boolean, 
9999 mem: location 3929 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3928
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3930
9999 mem: storing 0 in location 3931
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 3931 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 3930
 104 run: break-unless x:address:screen, 
9999 mem: location 3926 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3926 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3926 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3932
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3926 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3926 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3933
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3926 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3926 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3934
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3926 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3926 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 3935
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3927 is 102
9999 mem: storing 0 in location 3936
 104 run: break-unless newline?:boolean, 
9999 mem: location 3936 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3932 is 1033
9999 mem: location 1033 is 1
9999 mem: location 3934 is 5
9999 mem: storing 5 in location 3939
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3939 is 5
9999 mem: location 3933 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 6 in location 3939
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3926 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3926 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3940
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3927 is 102
9999 mem: storing 0 in location 3941
 104 run: break-unless backspace?:boolean, 
9999 mem: location 3941 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3940 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 97
9999 mem: location 1050 is 7
9999 mem: location 1051 is 98
9999 mem: location 1052 is 7
9999 mem: location 1053 is 99
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 1061 is 32
9999 mem: location 1062 is 245
9999 mem: location 1063 is 32
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 3939 is 6
9999 mem: location 3940 is 1036
9999 mem: location 3939 is 6
9999 mem: storing 1049 in location 3943
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3943 is 1049
9999 mem: location 1049 is 97
9999 mem: location 1050 is 7
9999 mem: location 3943 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 3944
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3943 is 1049
9999 mem: location 1049 is 97
9999 mem: location 1050 is 7
9999 mem: location 3943 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 3945
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3927 is 102
9999 mem: location 3944 is 1049
9999 mem: storing 102 in location 1049
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3928 is 7
9999 mem: location 3945 is 1050
9999 mem: storing 7 in location 1050
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3934 is 5
9999 mem: storing 4 in location 3946
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3933 is 1034
9999 mem: location 1034 is 1
9999 mem: location 3946 is 4
9999 mem: storing 0 in location 3947
 104 run: break-if at-right?:boolean, 
9999 mem: location 3947 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3933 is 1034
9999 mem: location 1034 is 1
9999 mem: location 3933 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3926 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3673 is 3601
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3955
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 3601 in location 3957
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3957 is 3601
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3957 is 3601
9999 mem: location 3601 is 102
9999 mem: location 3602 is 1228
9999 mem: location 3603 is 2400
9999 mem: location 3957 is 3601
9999 run: address to copy is 3602
9999 run: its type is address
9999 mem: location 3602 is 1228
9999 mem: storing 1228 in location 3958
 104 run: reply result:address:duplex-list
9999 mem: location 3958 is 1228
9999 run: result 0 is 1228
9999 mem: storing 1228 in location 3673
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3674 is 2400
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3986
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2400 in location 3988
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3988 is 2400
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3988 is 2400
9999 mem: location 2400 is 101
9999 mem: location 2401 is 3601
9999 mem: location 2402 is 1194
9999 mem: location 3988 is 2400
9999 run: address to copy is 2401
9999 run: its type is address
9999 mem: location 2401 is 3601
9999 mem: storing 3601 in location 3989
 104 run: reply result:address:duplex-list
9999 mem: location 3989 is 3601
9999 run: result 0 is 3601
9999 mem: storing 3601 in location 3674
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 3676 is 1
9999 mem: storing 2 in location 3676
 103 run: loop 
9999 run: jumping to instruction 17
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 3673 is 1228
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3675 is 1
9999 mem: location 3671 is 5
9999 mem: storing 0 in location 3680
 103 run: break-if off-screen?:boolean, 
9999 mem: location 3680 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3675 is 1
9999 mem: location 3677 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 3681
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3681 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 3676 is 2
9999 mem: location 3678 is 1160
9999 mem: location 1160 is 2
9999 mem: storing 1 in location 3682
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 3682 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 3673 is 1228
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4017
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1228 in location 4019
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 4019 is 1228
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 4019 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 1293
9999 mem: location 1230 is 3601
9999 mem: location 4019 is 1228
9999 run: address to copy is 1230
9999 run: its type is address
9999 mem: location 1230 is 3601
9999 mem: storing 3601 in location 4020
 104 run: reply result:address:duplex-list
9999 mem: location 4020 is 3601
9999 run: result 0 is 3601
9999 mem: location 3679 is 1154
9999 mem: storing 3601 in location 1154
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3673 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 1293
9999 mem: location 1230 is 3601
9999 mem: location 3673 is 1228
9999 run: address to copy is 1228
9999 run: its type is number
9999 mem: location 1228 is 97
9999 mem: storing 97 in location 3683
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3683 is 97
9999 mem: storing 0 in location 3684
 103 run: break-unless newline?:boolean, 
9999 mem: location 3684 is 0
9999 run: jumping to instruction 47
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3676 is 2
9999 mem: location 3672 is 4
9999 mem: storing 0 in location 3686
 103 run: break-unless at-right?:boolean, 
9999 mem: location 3686 is 0
9999 run: jumping to instruction 56
 103 run: print-character screen:address, c:character
9999 mem: location 3668 is 1031
9999 mem: location 3683 is 97
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4048
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4050
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 4051
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 4052
9999 mem: storing 0 in location 4053
 104 run: break-if color-found?:boolean, 
9999 mem: location 4053 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 4052
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 4054
9999 mem: storing 0 in location 4055
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 4055 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 4054
 104 run: break-unless x:address:screen, 
9999 mem: location 4050 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 4050 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4050 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 4056
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 4050 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4050 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 4057
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 4050 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4050 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 4058
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 4050 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4050 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 4059
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 4051 is 97
9999 mem: storing 0 in location 4060
 104 run: break-unless newline?:boolean, 
9999 mem: location 4060 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 4056 is 1033
9999 mem: location 1033 is 1
9999 mem: location 4058 is 5
9999 mem: storing 5 in location 4063
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 4063 is 5
9999 mem: location 4057 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 7 in location 4063
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 4050 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4050 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 4064
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 4051 is 97
9999 mem: storing 0 in location 4065
 104 run: break-unless backspace?:boolean, 
9999 mem: location 4065 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 4064 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 102
9999 mem: location 1050 is 7
9999 mem: location 1051 is 98
9999 mem: location 1052 is 7
9999 mem: location 1053 is 99
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 1061 is 32
9999 mem: location 1062 is 245
9999 mem: location 1063 is 32
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 4063 is 7
9999 mem: location 4064 is 1036
9999 mem: location 4063 is 7
9999 mem: storing 1051 in location 4067
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 4067 is 1051
9999 mem: location 1051 is 98
9999 mem: location 1052 is 7
9999 mem: location 4067 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 4068
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 4067 is 1051
9999 mem: location 1051 is 98
9999 mem: location 1052 is 7
9999 mem: location 4067 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 4069
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 4051 is 97
9999 mem: location 4068 is 1051
9999 mem: storing 97 in location 1051
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 4052 is 7
9999 mem: location 4069 is 1052
9999 mem: storing 7 in location 1052
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 4058 is 5
9999 mem: storing 4 in location 4070
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 4057 is 1034
9999 mem: location 1034 is 2
9999 mem: location 4070 is 4
9999 mem: storing 0 in location 4071
 104 run: break-if at-right?:boolean, 
9999 mem: location 4071 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 4057 is 1034
9999 mem: location 1034 is 2
9999 mem: location 4057 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 4050 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3673 is 1228
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4079
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1228 in location 4081
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 4081 is 1228
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 4081 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 1293
9999 mem: location 1230 is 3601
9999 mem: location 4081 is 1228
9999 run: address to copy is 1229
9999 run: its type is address
9999 mem: location 1229 is 1293
9999 mem: storing 1293 in location 4082
 104 run: reply result:address:duplex-list
9999 mem: location 4082 is 1293
9999 run: result 0 is 1293
9999 mem: storing 1293 in location 3673
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3674 is 3601
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4110
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 3601 in location 4112
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 4112 is 3601
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 4112 is 3601
9999 mem: location 3601 is 102
9999 mem: location 3602 is 1228
9999 mem: location 3603 is 2400
9999 mem: location 4112 is 3601
9999 run: address to copy is 3602
9999 run: its type is address
9999 mem: location 3602 is 1228
9999 mem: storing 1228 in location 4113
 104 run: reply result:address:duplex-list
9999 mem: location 4113 is 1228
9999 run: result 0 is 1228
9999 mem: storing 1228 in location 3674
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 3676 is 2
9999 mem: storing 3 in location 3676
 103 run: loop 
9999 run: jumping to instruction 17
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 3673 is 1293
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3675 is 1
9999 mem: location 3671 is 5
9999 mem: storing 0 in location 3680
 103 run: break-if off-screen?:boolean, 
9999 mem: location 3680 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3675 is 1
9999 mem: location 3677 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 3681
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3681 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 3676 is 3
9999 mem: location 3678 is 1160
9999 mem: location 1160 is 2
9999 mem: storing 0 in location 3682
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 3682 is 0
9999 run: jumping to instruction 27
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3673 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 1358
9999 mem: location 1295 is 1228
9999 mem: location 3673 is 1293
9999 run: address to copy is 1293
9999 run: its type is number
9999 mem: location 1293 is 98
9999 mem: storing 98 in location 3683
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3683 is 98
9999 mem: storing 0 in location 3684
 103 run: break-unless newline?:boolean, 
9999 mem: location 3684 is 0
9999 run: jumping to instruction 47
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3676 is 3
9999 mem: location 3672 is 4
9999 mem: storing 0 in location 3686
 103 run: break-unless at-right?:boolean, 
9999 mem: location 3686 is 0
9999 run: jumping to instruction 56
 103 run: print-character screen:address, c:character
9999 mem: location 3668 is 1031
9999 mem: location 3683 is 98
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4141
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4143
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 4144
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 4145
9999 mem: storing 0 in location 4146
 104 run: break-if color-found?:boolean, 
9999 mem: location 4146 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 4145
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 4147
9999 mem: storing 0 in location 4148
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 4148 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 4147
 104 run: break-unless x:address:screen, 
9999 mem: location 4143 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 4143 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 4143 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 4149
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 4143 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 4143 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 4150
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 4143 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 4143 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 4151
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 4143 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 4143 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 4152
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 4144 is 98
9999 mem: storing 0 in location 4153
 104 run: break-unless newline?:boolean, 
9999 mem: location 4153 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 4149 is 1033
9999 mem: location 1033 is 1
9999 mem: location 4151 is 5
9999 mem: storing 5 in location 4156
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 4156 is 5
9999 mem: location 4150 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 8 in location 4156
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 4143 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 4143 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 4157
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 4144 is 98
9999 mem: storing 0 in location 4158
 104 run: break-unless backspace?:boolean, 
9999 mem: location 4158 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 4157 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 102
9999 mem: location 1050 is 7
9999 mem: location 1051 is 97
9999 mem: location 1052 is 7
9999 mem: location 1053 is 99
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 1061 is 32
9999 mem: location 1062 is 245
9999 mem: location 1063 is 32
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 4156 is 8
9999 mem: location 4157 is 1036
9999 mem: location 4156 is 8
9999 mem: storing 1053 in location 4160
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 4160 is 1053
9999 mem: location 1053 is 99
9999 mem: location 1054 is 7
9999 mem: location 4160 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 4161
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 4160 is 1053
9999 mem: location 1053 is 99
9999 mem: location 1054 is 7
9999 mem: location 4160 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 4162
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 4144 is 98
9999 mem: location 4161 is 1053
9999 mem: storing 98 in location 1053
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 4145 is 7
9999 mem: location 4162 is 1054
9999 mem: storing 7 in location 1054
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 4151 is 5
9999 mem: storing 4 in location 4163
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 4150 is 1034
9999 mem: location 1034 is 3
9999 mem: location 4163 is 4
9999 mem: storing 0 in location 4164
 104 run: break-if at-right?:boolean, 
9999 mem: location 4164 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 4150 is 1034
9999 mem: location 1034 is 3
9999 mem: location 4150 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 4143 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3673 is 1293
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4172
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1293 in location 4174
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 4174 is 1293
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 4174 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 1358
9999 mem: location 1295 is 1228
9999 mem: location 4174 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 1358
9999 mem: storing 1358 in location 4175
 104 run: reply result:address:duplex-list
9999 mem: location 4175 is 1358
9999 run: result 0 is 1358
9999 mem: storing 1358 in location 3673
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3674 is 1228
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4203
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1228 in location 4205
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 4205 is 1228
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 4205 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 1293
9999 mem: location 1230 is 3601
9999 mem: location 4205 is 1228
9999 run: address to copy is 1229
9999 run: its type is address
9999 mem: location 1229 is 1293
9999 mem: storing 1293 in location 4206
 104 run: reply result:address:duplex-list
9999 mem: location 4206 is 1293
9999 run: result 0 is 1293
9999 mem: storing 1293 in location 3674
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 3676 is 3
9999 mem: storing 4 in location 3676
 103 run: loop 
9999 run: jumping to instruction 17
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 3673 is 1358
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3675 is 1
9999 mem: location 3671 is 5
9999 mem: storing 0 in location 3680
 103 run: break-if off-screen?:boolean, 
9999 mem: location 3680 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3675 is 1
9999 mem: location 3677 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 3681
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3681 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 3676 is 4
9999 mem: location 3678 is 1160
9999 mem: location 1160 is 2
9999 mem: storing 0 in location 3682
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 3682 is 0
9999 run: jumping to instruction 27
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3673 is 1358
9999 mem: location 1358 is 99
9999 mem: location 1359 is 0
9999 mem: location 1360 is 1293
9999 mem: location 3673 is 1358
9999 run: address to copy is 1358
9999 run: its type is number
9999 mem: location 1358 is 99
9999 mem: storing 99 in location 3683
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3683 is 99
9999 mem: storing 0 in location 3684
 103 run: break-unless newline?:boolean, 
9999 mem: location 3684 is 0
9999 run: jumping to instruction 47
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3676 is 4
9999 mem: location 3672 is 4
9999 mem: storing 1 in location 3686
 103 run: break-unless at-right?:boolean, 
9999 mem: location 3686 is 1
9999 run: jump-unless fell through
 103 run: print-character screen:address, 8617:literal/loop-back-to-left, 245:literal/grey
9999 mem: location 3668 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4234
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4236
 104 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 4237
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 4238
9999 mem: storing 1 in location 4239
 104 run: break-if color-found?:boolean, 
9999 mem: location 4239 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 4240
9999 mem: storing 0 in location 4241
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 4241 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 4240
 104 run: break-unless x:address:screen, 
9999 mem: location 4236 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 4236 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 4236 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 4242
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 4236 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 4236 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 4243
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 4236 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 4236 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 4244
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 4236 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 4236 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 4245
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 4237 is 8617
9999 mem: storing 0 in location 4246
 104 run: break-unless newline?:boolean, 
9999 mem: location 4246 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 4242 is 1033
9999 mem: location 1033 is 1
9999 mem: location 4244 is 5
9999 mem: storing 5 in location 4249
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 4249 is 5
9999 mem: location 4243 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 9 in location 4249
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 4236 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 4236 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 4250
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 4237 is 8617
9999 mem: storing 0 in location 4251
 104 run: break-unless backspace?:boolean, 
9999 mem: location 4251 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 4250 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 102
9999 mem: location 1050 is 7
9999 mem: location 1051 is 97
9999 mem: location 1052 is 7
9999 mem: location 1053 is 98
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 1061 is 32
9999 mem: location 1062 is 245
9999 mem: location 1063 is 32
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 4249 is 9
9999 mem: location 4250 is 1036
9999 mem: location 4249 is 9
9999 mem: storing 1055 in location 4253
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 4253 is 1055
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 4253 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 4254
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 4253 is 1055
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 4253 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 4255
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 4237 is 8617
9999 mem: location 4254 is 1055
9999 mem: storing 8617 in location 1055
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 4238 is 245
9999 mem: location 4255 is 1056
9999 mem: storing 245 in location 1056
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 4244 is 5
9999 mem: storing 4 in location 4256
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 4243 is 1034
9999 mem: location 1034 is 4
9999 mem: location 4256 is 4
9999 mem: storing 1 in location 4257
 104 run: break-if at-right?:boolean, 
9999 mem: location 4257 is 1
9999 run: jumping to instruction 60
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 4236 is 1031
 103 run: column:number <- copy left:number
9999 mem: location 3670 is 0
9999 mem: storing 0 in location 3676
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 3675 is 1
9999 mem: storing 2 in location 3675
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 3668 is 1031
9999 mem: location 3675 is 2
9999 mem: location 3676 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4265
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4267
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 4268
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 4269
 104 run: break-unless x:address:screen, 
9999 mem: location 4267 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 4267 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 4267 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 4270
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 4268 is 2
9999 mem: location 4270 is 1033
9999 mem: storing 2 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 4267 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 4267 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 4271
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 4269 is 0
9999 mem: location 4271 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 4267 is 1031
 103 run: loop +next-character:label
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 3673 is 1358
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3675 is 2
9999 mem: location 3671 is 5
9999 mem: storing 0 in location 3680
 103 run: break-if off-screen?:boolean, 
9999 mem: location 3680 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3675 is 2
9999 mem: location 3677 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 3681
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3681 is 0
9999 run: jumping to instruction 27
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3673 is 1358
9999 mem: location 1358 is 99
9999 mem: location 1359 is 0
9999 mem: location 1360 is 1293
9999 mem: location 3673 is 1358
9999 run: address to copy is 1358
9999 run: its type is number
9999 mem: location 1358 is 99
9999 mem: storing 99 in location 3683
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3683 is 99
9999 mem: storing 0 in location 3684
 103 run: break-unless newline?:boolean, 
9999 mem: location 3684 is 0
9999 run: jumping to instruction 47
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3676 is 0
9999 mem: location 3672 is 4
9999 mem: storing 0 in location 3686
 103 run: break-unless at-right?:boolean, 
9999 mem: location 3686 is 0
9999 run: jumping to instruction 56
 103 run: print-character screen:address, c:character
9999 mem: location 3668 is 1031
9999 mem: location 3683 is 99
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4296
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4298
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 4299
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 4300
9999 mem: storing 0 in location 4301
 104 run: break-if color-found?:boolean, 
9999 mem: location 4301 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 4300
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 4302
9999 mem: storing 0 in location 4303
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 4303 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 4302
 104 run: break-unless x:address:screen, 
9999 mem: location 4298 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 4298 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 4298 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 4304
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 4298 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 4298 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 4305
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 4298 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 4298 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 4306
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 4298 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 4298 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 4307
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 4299 is 99
9999 mem: storing 0 in location 4308
 104 run: break-unless newline?:boolean, 
9999 mem: location 4308 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 4304 is 1033
9999 mem: location 1033 is 2
9999 mem: location 4306 is 5
9999 mem: storing 10 in location 4311
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 4311 is 10
9999 mem: location 4305 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 10 in location 4311
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 4298 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 4298 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 4312
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 4299 is 99
9999 mem: storing 0 in location 4313
 104 run: break-unless backspace?:boolean, 
9999 mem: location 4313 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 4312 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 102
9999 mem: location 1050 is 7
9999 mem: location 1051 is 97
9999 mem: location 1052 is 7
9999 mem: location 1053 is 98
9999 mem: location 1054 is 7
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 245
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 1061 is 32
9999 mem: location 1062 is 245
9999 mem: location 1063 is 32
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 4311 is 10
9999 mem: location 4312 is 1036
9999 mem: location 4311 is 10
9999 mem: storing 1057 in location 4315
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 4315 is 1057
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 4315 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 4316
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 4315 is 1057
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 4315 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 4317
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 4299 is 99
9999 mem: location 4316 is 1057
9999 mem: storing 99 in location 1057
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 4300 is 7
9999 mem: location 4317 is 1058
9999 mem: storing 7 in location 1058
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 4306 is 5
9999 mem: storing 4 in location 4318
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 4305 is 1034
9999 mem: location 1034 is 0
9999 mem: location 4318 is 4
9999 mem: storing 0 in location 4319
 104 run: break-if at-right?:boolean, 
9999 mem: location 4319 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 4305 is 1034
9999 mem: location 1034 is 0
9999 mem: location 4305 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 4298 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3673 is 1358
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4327
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1358 in location 4329
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 4329 is 1358
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 4329 is 1358
9999 mem: location 1358 is 99
9999 mem: location 1359 is 0
9999 mem: location 1360 is 1293
9999 mem: location 4329 is 1358
9999 run: address to copy is 1359
9999 run: its type is address
9999 mem: location 1359 is 0
9999 mem: storing 0 in location 4330
 104 run: reply result:address:duplex-list
9999 mem: location 4330 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 3673
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3674 is 1293
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4358
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1293 in location 4360
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 4360 is 1293
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 4360 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 1358
9999 mem: location 1295 is 1228
9999 mem: location 4360 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 1358
9999 mem: storing 1358 in location 4361
 104 run: reply result:address:duplex-list
9999 mem: location 4361 is 1358
9999 run: result 0 is 1358
9999 mem: storing 1358 in location 3674
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 3676 is 0
9999 mem: storing 1 in location 3676
 103 run: loop 
9999 run: jumping to instruction 17
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 3673 is 0
9999 run: jumping to instruction 62
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3675 is 2
9999 mem: location 3677 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 3681
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 3676 is 1
9999 mem: location 3678 is 1160
9999 mem: location 1160 is 2
9999 mem: storing 1 in location 3687
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 3681 is 0
9999 mem: location 3687 is 1
9999 mem: storing 0 in location 3688
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 3675 is 2
9999 mem: location 3677 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 3689
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 3688 is 0
9999 mem: location 3689 is 0
9999 mem: storing 0 in location 3690
schedule: render/handle-event/event-loop/run1002/editor-wraps-line-on-insert
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 3690 is 0
9999 run: jumping to instruction 81
 103 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 3668 is 1031
9999 mem: location 3676 is 1
9999 mem: location 3672 is 4
 104 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 4389
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 4391
 104 run: left:number <- next-ingredient 
9999 mem: storing 1 in location 4392
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 4393
 104 run: column:number <- copy left:number
9999 mem: location 4392 is 1
9999 mem: storing 1 in location 4394
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 4394 is 1
9999 mem: location 4393 is 4
9999 mem: storing 0 in location 4395
 104 run: break-if done?:boolean, 
9999 mem: location 4395 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 4391 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4430
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4432
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 4433
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 4434
9999 mem: storing 0 in location 4435
 105 run: break-if color-found?:boolean, 
9999 mem: location 4435 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 4434
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 4436
9999 mem: storing 0 in location 4437
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 4437 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 4436
 105 run: break-unless x:address:screen, 
9999 mem: location 4432 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 4432 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 4432 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 4438
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 4432 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 4432 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 4439
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 4432 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 4432 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 4440
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 4432 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 4432 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 4441
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 4433 is 32
9999 mem: storing 0 in location 4442
 105 run: break-unless newline?:boolean, 
9999 mem: location 4442 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 4438 is 1033
9999 mem: location 1033 is 2
9999 mem: location 4440 is 5
9999 mem: storing 10 in location 4445
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 4445 is 10
9999 mem: location 4439 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 11 in location 4445
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 4432 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 4432 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 4446
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 4433 is 32
9999 mem: storing 0 in location 4447
 105 run: break-unless backspace?:boolean, 
9999 mem: location 4447 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 4446 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 102
9999 mem: location 1050 is 7
9999 mem: location 1051 is 97
9999 mem: location 1052 is 7
9999 mem: location 1053 is 98
9999 mem: location 1054 is 7
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 245
9999 mem: location 1057 is 99
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 1061 is 32
9999 mem: location 1062 is 245
9999 mem: location 1063 is 32
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 4445 is 11
9999 mem: location 4446 is 1036
9999 mem: location 4445 is 11
9999 mem: storing 1059 in location 4449
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 4449 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 4449 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 4450
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 4449 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 4449 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 4451
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 4433 is 32
9999 mem: location 4450 is 1059
9999 mem: storing 32 in location 1059
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 4434 is 7
9999 mem: location 4451 is 1060
9999 mem: storing 7 in location 1060
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 4440 is 5
9999 mem: storing 4 in location 4452
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 4439 is 1034
9999 mem: location 1034 is 1
9999 mem: location 4452 is 4
9999 mem: storing 0 in location 4453
 105 run: break-if at-right?:boolean, 
9999 mem: location 4453 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 4439 is 1034
9999 mem: location 1034 is 1
9999 mem: location 4439 is 1034
9999 mem: storing 2 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 4432 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 4394 is 1
9999 mem: storing 2 in location 4394
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 4394 is 2
9999 mem: location 4393 is 4
9999 mem: storing 0 in location 4395
 104 run: break-if done?:boolean, 
9999 mem: location 4395 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 4391 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4461
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4463
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 4464
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 4465
9999 mem: storing 0 in location 4466
 105 run: break-if color-found?:boolean, 
9999 mem: location 4466 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 4465
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 4467
9999 mem: storing 0 in location 4468
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 4468 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 4467
 105 run: break-unless x:address:screen, 
9999 mem: location 4463 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 4463 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4463 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 4469
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 4463 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4463 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 4470
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 4463 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4463 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 4471
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 4463 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4463 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 4472
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 4464 is 32
9999 mem: storing 0 in location 4473
 105 run: break-unless newline?:boolean, 
9999 mem: location 4473 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 4469 is 1033
9999 mem: location 1033 is 2
9999 mem: location 4471 is 5
9999 mem: storing 10 in location 4476
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 4476 is 10
9999 mem: location 4470 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 12 in location 4476
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 4463 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4463 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 4477
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 4464 is 32
9999 mem: storing 0 in location 4478
 105 run: break-unless backspace?:boolean, 
9999 mem: location 4478 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 4477 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 102
9999 mem: location 1050 is 7
9999 mem: location 1051 is 97
9999 mem: location 1052 is 7
9999 mem: location 1053 is 98
9999 mem: location 1054 is 7
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 245
9999 mem: location 1057 is 99
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 245
9999 mem: location 1063 is 32
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 4476 is 12
9999 mem: location 4477 is 1036
9999 mem: location 4476 is 12
9999 mem: storing 1061 in location 4480
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 4480 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 245
9999 mem: location 4480 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 4481
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 4480 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 245
9999 mem: location 4480 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 4482
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 4464 is 32
9999 mem: location 4481 is 1061
9999 mem: storing 32 in location 1061
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 4465 is 7
9999 mem: location 4482 is 1062
9999 mem: storing 7 in location 1062
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 4471 is 5
9999 mem: storing 4 in location 4483
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 4470 is 1034
9999 mem: location 1034 is 2
9999 mem: location 4483 is 4
9999 mem: storing 0 in location 4484
 105 run: break-if at-right?:boolean, 
9999 mem: location 4484 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 4470 is 1034
9999 mem: location 1034 is 2
9999 mem: location 4470 is 1034
9999 mem: storing 3 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 4463 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 4394 is 2
9999 mem: storing 3 in location 4394
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 4394 is 3
9999 mem: location 4393 is 4
9999 mem: storing 0 in location 4395
 104 run: break-if done?:boolean, 
9999 mem: location 4395 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 4391 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4492
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4494
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 4495
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 4496
9999 mem: storing 0 in location 4497
 105 run: break-if color-found?:boolean, 
9999 mem: location 4497 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 4496
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 4498
9999 mem: storing 0 in location 4499
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 4499 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 4498
 105 run: break-unless x:address:screen, 
9999 mem: location 4494 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 4494 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 4494 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 4500
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 4494 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 4494 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 4501
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 4494 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 4494 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 4502
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 4494 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 4494 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 4503
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 4495 is 32
9999 mem: storing 0 in location 4504
 105 run: break-unless newline?:boolean, 
9999 mem: location 4504 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 4500 is 1033
9999 mem: location 1033 is 2
9999 mem: location 4502 is 5
9999 mem: storing 10 in location 4507
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 4507 is 10
9999 mem: location 4501 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 13 in location 4507
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 4494 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 4494 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 4508
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 4495 is 32
9999 mem: storing 0 in location 4509
 105 run: break-unless backspace?:boolean, 
9999 mem: location 4509 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 4508 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 102
9999 mem: location 1050 is 7
9999 mem: location 1051 is 97
9999 mem: location 1052 is 7
9999 mem: location 1053 is 98
9999 mem: location 1054 is 7
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 245
9999 mem: location 1057 is 99
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 4507 is 13
9999 mem: location 4508 is 1036
9999 mem: location 4507 is 13
9999 mem: storing 1063 in location 4511
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 4511 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 245
9999 mem: location 4511 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 4512
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 4511 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 245
9999 mem: location 4511 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 4513
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 4495 is 32
9999 mem: location 4512 is 1063
9999 mem: storing 32 in location 1063
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 4496 is 7
9999 mem: location 4513 is 1064
9999 mem: storing 7 in location 1064
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 4502 is 5
9999 mem: storing 4 in location 4514
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 4501 is 1034
9999 mem: location 1034 is 3
9999 mem: location 4514 is 4
9999 mem: storing 0 in location 4515
 105 run: break-if at-right?:boolean, 
9999 mem: location 4515 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 4501 is 1034
9999 mem: location 1034 is 3
9999 mem: location 4501 is 1034
9999 mem: storing 4 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 4494 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 4394 is 3
9999 mem: storing 4 in location 4394
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 4394 is 4
9999 mem: location 4393 is 4
9999 mem: storing 0 in location 4395
 104 run: break-if done?:boolean, 
9999 mem: location 4395 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 4391 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4523
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4525
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 4526
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 4527
9999 mem: storing 0 in location 4528
 105 run: break-if color-found?:boolean, 
9999 mem: location 4528 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 4527
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 4529
9999 mem: storing 0 in location 4530
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 4530 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 4529
 105 run: break-unless x:address:screen, 
9999 mem: location 4525 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 4525 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 4525 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 4531
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 4525 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 4525 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 4532
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 4525 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 4525 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 4533
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 4525 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 4525 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 4534
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 4526 is 32
9999 mem: storing 0 in location 4535
 105 run: break-unless newline?:boolean, 
9999 mem: location 4535 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 4531 is 1033
9999 mem: location 1033 is 2
9999 mem: location 4533 is 5
9999 mem: storing 10 in location 4538
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 4538 is 10
9999 mem: location 4532 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 14 in location 4538
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 4525 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 4525 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 4539
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 4526 is 32
9999 mem: storing 0 in location 4540
 105 run: break-unless backspace?:boolean, 
9999 mem: location 4540 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 4539 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 102
9999 mem: location 1050 is 7
9999 mem: location 1051 is 97
9999 mem: location 1052 is 7
9999 mem: location 1053 is 98
9999 mem: location 1054 is 7
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 245
9999 mem: location 1057 is 99
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 4538 is 14
9999 mem: location 4539 is 1036
9999 mem: location 4538 is 14
9999 mem: storing 1065 in location 4542
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 4542 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 4542 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 4543
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 4542 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 4542 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 4544
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 4526 is 32
9999 mem: location 4543 is 1065
9999 mem: storing 32 in location 1065
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 4527 is 7
9999 mem: location 4544 is 1066
9999 mem: storing 7 in location 1066
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 4533 is 5
9999 mem: storing 4 in location 4545
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 4532 is 1034
9999 mem: location 1034 is 4
9999 mem: location 4545 is 4
9999 mem: storing 1 in location 4546
 105 run: break-if at-right?:boolean, 
9999 mem: location 4546 is 1
9999 run: jumping to instruction 60
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 4525 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 4394 is 4
9999 mem: storing 5 in location 4394
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 4394 is 5
9999 mem: location 4393 is 4
9999 mem: storing 1 in location 4395
 104 run: break-if done?:boolean, 
9999 mem: location 4395 is 1
9999 run: jumping to instruction 11
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 3675 is 2
9999 mem: storing 3 in location 3675
 103 run: warnings:address:array:character <- get editor:address:editor-data/deref, warnings:offset
9999 mem: location 3669 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 3601
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 3669 is 1153
9999 run: address to copy is 1156
9999 run: its type is address
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 3693
 103 run: break-unless warnings:address:array:character, 
9999 mem: location 3693 is 0
9999 run: jumping to instruction 89
 103 run: break-if warnings:address:array:character, 
9999 mem: location 3693 is 0
9999 run: jump-if fell through
 103 run: response:address:array:character <- get editor:address:editor-data/deref, response:offset
9999 mem: location 3669 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 3601
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 3669 is 1153
9999 run: address to copy is 1155
9999 run: its type is address
9999 mem: location 1155 is 0
9999 mem: storing 0 in location 3694
 103 run: break-unless response:address:array:character, 
9999 mem: location 3694 is 0
9999 run: jumping to instruction 95
 103 run: break-if screen:address, 
9999 mem: location 3668 is 1031
9999 run: jumping to instruction 108
 103 run: done?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3675 is 3
9999 mem: location 3671 is 5
9999 mem: storing 0 in location 3695
 103 run: break-if done?:boolean, 
9999 mem: location 3695 is 0
9999 run: jump-if fell through
 103 run: draw-horizontal screen:address, row:number, left:number, right:number, 32:literal/space
9999 mem: location 3668 is 1031
9999 mem: location 3675 is 3
9999 mem: location 3670 is 0
9999 mem: location 3672 is 4
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4554
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 4556
 104 run: row:number <- next-ingredient 
9999 mem: storing 3 in location 4557
 104 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 4558
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 4559
 104 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 32 in location 4560
9999 mem: storing 1 in location 4561
 104 run: break-if style-found?:boolean, 
9999 mem: location 4561 is 1
9999 run: jumping to instruction 9
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 4562
9999 mem: storing 0 in location 4563
 104 run: break-if color-found?:boolean, 
9999 mem: location 4563 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 245:literal/grey
9999 mem: storing 245 in location 4562
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 4564
9999 mem: storing 0 in location 4565
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 4565 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 4564
 104 run: move-cursor screen:address, row:number, x:number
9999 mem: location 4556 is 1031
9999 mem: location 4557 is 3
9999 mem: location 4558 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4585
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4587
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 4588
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 4589
 105 run: break-unless x:address:screen, 
9999 mem: location 4587 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 4587 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 4587 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 4590
 105 run: row:address:number/deref <- copy new-row:number
9999 mem: location 4588 is 3
9999 mem: location 4590 is 1033
9999 mem: storing 3 in location 1033
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 4587 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 4587 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 4591
 105 run: column:address:number/deref <- copy new-column:number
9999 mem: location 4589 is 0
9999 mem: location 4591 is 1034
9999 mem: storing 0 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 4587 is 1031
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 4558 is 0
9999 mem: location 4559 is 4
9999 mem: storing 1 in location 4566
 104 run: break-unless continue?:boolean, 
9999 mem: location 4566 is 1
9999 run: jump-unless fell through
 104 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 4556 is 1031
9999 mem: location 4560 is 32
9999 mem: location 4562 is 245
9999 mem: location 4564 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4616
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4618
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 4619
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 4620
9999 mem: storing 1 in location 4621
 105 run: break-if color-found?:boolean, 
9999 mem: location 4621 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 4622
9999 mem: storing 1 in location 4623
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 4623 is 1
9999 run: jumping to instruction 12
 105 run: break-unless x:address:screen, 
9999 mem: location 4618 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 4618 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 4618 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 4624
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 4618 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 4618 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 4625
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 4618 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 4618 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 4626
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 4618 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 4618 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 4627
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 4619 is 32
9999 mem: storing 0 in location 4628
 105 run: break-unless newline?:boolean, 
9999 mem: location 4628 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 4624 is 1033
9999 mem: location 1033 is 3
9999 mem: location 4626 is 5
9999 mem: storing 15 in location 4631
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 4631 is 15
9999 mem: location 4625 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 15 in location 4631
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 4618 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 4618 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 4632
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 4619 is 32
9999 mem: storing 0 in location 4633
 105 run: break-unless backspace?:boolean, 
9999 mem: location 4633 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 4632 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 102
9999 mem: location 1050 is 7
9999 mem: location 1051 is 97
9999 mem: location 1052 is 7
9999 mem: location 1053 is 98
9999 mem: location 1054 is 7
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 245
9999 mem: location 1057 is 99
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 32
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 4631 is 15
9999 mem: location 4632 is 1036
9999 mem: location 4631 is 15
9999 mem: storing 1067 in location 4635
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 4635 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 4635 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 4636
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 4635 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 4635 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 4637
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 4619 is 32
9999 mem: location 4636 is 1067
9999 mem: storing 32 in location 1067
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 4620 is 245
9999 mem: location 4637 is 1068
9999 mem: storing 245 in location 1068
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 4626 is 5
9999 mem: storing 4 in location 4638
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 4625 is 1034
9999 mem: location 1034 is 0
9999 mem: location 4638 is 4
9999 mem: storing 0 in location 4639
 105 run: break-if at-right?:boolean, 
9999 mem: location 4639 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 4625 is 1034
9999 mem: location 1034 is 0
9999 mem: location 4625 is 1034
9999 mem: storing 1 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 4618 is 1031
 104 run: x:number <- add x:number, 1:literal
9999 mem: location 4558 is 0
9999 mem: storing 1 in location 4558
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 4558 is 1
9999 mem: location 4559 is 4
9999 mem: storing 1 in location 4566
 104 run: break-unless continue?:boolean, 
9999 mem: location 4566 is 1
9999 run: jump-unless fell through
 104 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 4556 is 1031
9999 mem: location 4560 is 32
9999 mem: location 4562 is 245
9999 mem: location 4564 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4647
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4649
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 4650
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 4651
9999 mem: storing 1 in location 4652
 105 run: break-if color-found?:boolean, 
9999 mem: location 4652 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 4653
9999 mem: storing 1 in location 4654
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 4654 is 1
9999 run: jumping to instruction 12
 105 run: break-unless x:address:screen, 
9999 mem: location 4649 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 4649 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 4649 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 4655
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 4649 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 4649 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 4656
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 4649 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 4649 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 4657
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 4649 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 4649 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 4658
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 4650 is 32
9999 mem: storing 0 in location 4659
 105 run: break-unless newline?:boolean, 
9999 mem: location 4659 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 4655 is 1033
9999 mem: location 1033 is 3
9999 mem: location 4657 is 5
9999 mem: storing 15 in location 4662
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 4662 is 15
9999 mem: location 4656 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 16 in location 4662
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 4649 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 4649 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 4663
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 4650 is 32
9999 mem: storing 0 in location 4664
 105 run: break-unless backspace?:boolean, 
9999 mem: location 4664 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 4663 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 102
9999 mem: location 1050 is 7
9999 mem: location 1051 is 97
9999 mem: location 1052 is 7
9999 mem: location 1053 is 98
9999 mem: location 1054 is 7
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 245
9999 mem: location 1057 is 99
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 32
9999 mem: location 1066 is 7
9999 mem: location 1067 is 32
9999 mem: location 1068 is 245
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 4662 is 16
9999 mem: location 4663 is 1036
9999 mem: location 4662 is 16
9999 mem: storing 1069 in location 4666
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 4666 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 4666 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 4667
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 4666 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 4666 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 4668
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 4650 is 32
9999 mem: location 4667 is 1069
9999 mem: storing 32 in location 1069
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 4651 is 245
9999 mem: location 4668 is 1070
9999 mem: storing 245 in location 1070
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 4657 is 5
9999 mem: storing 4 in location 4669
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 4656 is 1034
9999 mem: location 1034 is 1
9999 mem: location 4669 is 4
9999 mem: storing 0 in location 4670
 105 run: break-if at-right?:boolean, 
9999 mem: location 4670 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 4656 is 1034
9999 mem: location 1034 is 1
9999 mem: location 4656 is 1034
9999 mem: storing 2 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 4649 is 1031
 104 run: x:number <- add x:number, 1:literal
9999 mem: location 4558 is 1
9999 mem: storing 2 in location 4558
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 4558 is 2
9999 mem: location 4559 is 4
9999 mem: storing 1 in location 4566
 104 run: break-unless continue?:boolean, 
9999 mem: location 4566 is 1
9999 run: jump-unless fell through
 104 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 4556 is 1031
9999 mem: location 4560 is 32
9999 mem: location 4562 is 245
9999 mem: location 4564 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4678
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4680
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 4681
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 4682
9999 mem: storing 1 in location 4683
 105 run: break-if color-found?:boolean, 
9999 mem: location 4683 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 4684
9999 mem: storing 1 in location 4685
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 4685 is 1
9999 run: jumping to instruction 12
 105 run: break-unless x:address:screen, 
9999 mem: location 4680 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 4680 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4680 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 4686
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 4680 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4680 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 4687
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 4680 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4680 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 4688
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 4680 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4680 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 4689
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 4681 is 32
9999 mem: storing 0 in location 4690
 105 run: break-unless newline?:boolean, 
9999 mem: location 4690 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 4686 is 1033
9999 mem: location 1033 is 3
9999 mem: location 4688 is 5
9999 mem: storing 15 in location 4693
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 4693 is 15
9999 mem: location 4687 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 17 in location 4693
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 4680 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4680 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 4694
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 4681 is 32
9999 mem: storing 0 in location 4695
 105 run: break-unless backspace?:boolean, 
9999 mem: location 4695 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 4694 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 102
9999 mem: location 1050 is 7
9999 mem: location 1051 is 97
9999 mem: location 1052 is 7
9999 mem: location 1053 is 98
9999 mem: location 1054 is 7
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 245
9999 mem: location 1057 is 99
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 32
9999 mem: location 1066 is 7
9999 mem: location 1067 is 32
9999 mem: location 1068 is 245
9999 mem: location 1069 is 32
9999 mem: location 1070 is 245
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 4693 is 17
9999 mem: location 4694 is 1036
9999 mem: location 4693 is 17
9999 mem: storing 1071 in location 4697
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 4697 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 4697 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 4698
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 4697 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 4697 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 4699
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 4681 is 32
9999 mem: location 4698 is 1071
9999 mem: storing 32 in location 1071
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 4682 is 245
9999 mem: location 4699 is 1072
9999 mem: storing 245 in location 1072
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 4688 is 5
9999 mem: storing 4 in location 4700
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 4687 is 1034
9999 mem: location 1034 is 2
9999 mem: location 4700 is 4
9999 mem: storing 0 in location 4701
 105 run: break-if at-right?:boolean, 
9999 mem: location 4701 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 4687 is 1034
9999 mem: location 1034 is 2
9999 mem: location 4687 is 1034
9999 mem: storing 3 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 4680 is 1031
 104 run: x:number <- add x:number, 1:literal
9999 mem: location 4558 is 2
9999 mem: storing 3 in location 4558
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 4558 is 3
9999 mem: location 4559 is 4
9999 mem: storing 1 in location 4566
 104 run: break-unless continue?:boolean, 
9999 mem: location 4566 is 1
9999 run: jump-unless fell through
 104 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 4556 is 1031
9999 mem: location 4560 is 32
9999 mem: location 4562 is 245
9999 mem: location 4564 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4709
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4711
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 4712
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 4713
9999 mem: storing 1 in location 4714
 105 run: break-if color-found?:boolean, 
9999 mem: location 4714 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 4715
9999 mem: storing 1 in location 4716
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 4716 is 1
9999 run: jumping to instruction 12
 105 run: break-unless x:address:screen, 
9999 mem: location 4711 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 4711 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 4711 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 4717
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 4711 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 4711 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 4718
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 4711 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 4711 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 4719
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 4711 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 4711 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 4720
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 4712 is 32
9999 mem: storing 0 in location 4721
 105 run: break-unless newline?:boolean, 
9999 mem: location 4721 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 4717 is 1033
9999 mem: location 1033 is 3
9999 mem: location 4719 is 5
9999 mem: storing 15 in location 4724
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 4724 is 15
9999 mem: location 4718 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 18 in location 4724
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 4711 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 4711 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 4725
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 4712 is 32
9999 mem: storing 0 in location 4726
 105 run: break-unless backspace?:boolean, 
9999 mem: location 4726 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 4725 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 102
9999 mem: location 1050 is 7
9999 mem: location 1051 is 97
9999 mem: location 1052 is 7
9999 mem: location 1053 is 98
9999 mem: location 1054 is 7
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 245
9999 mem: location 1057 is 99
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 32
9999 mem: location 1066 is 7
9999 mem: location 1067 is 32
9999 mem: location 1068 is 245
9999 mem: location 1069 is 32
9999 mem: location 1070 is 245
9999 mem: location 1071 is 32
9999 mem: location 1072 is 245
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 4724 is 18
9999 mem: location 4725 is 1036
9999 mem: location 4724 is 18
9999 mem: storing 1073 in location 4728
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 4728 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 4728 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 4729
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 4728 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 4728 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 4730
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 4712 is 32
9999 mem: location 4729 is 1073
9999 mem: storing 32 in location 1073
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 4713 is 245
9999 mem: location 4730 is 1074
9999 mem: storing 245 in location 1074
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 4719 is 5
9999 mem: storing 4 in location 4731
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 4718 is 1034
9999 mem: location 1034 is 3
9999 mem: location 4731 is 4
9999 mem: storing 0 in location 4732
 105 run: break-if at-right?:boolean, 
9999 mem: location 4732 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 4718 is 1034
9999 mem: location 1034 is 3
9999 mem: location 4718 is 1034
9999 mem: storing 4 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 4711 is 1031
 104 run: x:number <- add x:number, 1:literal
9999 mem: location 4558 is 3
9999 mem: storing 4 in location 4558
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 4558 is 4
9999 mem: location 4559 is 4
9999 mem: storing 0 in location 4566
 104 run: break-unless continue?:boolean, 
9999 mem: location 4566 is 0
9999 run: jumping to instruction 27
 103 run: in-focus?:boolean <- get editor:address:editor-data/deref, in-focus?:offset
9999 mem: location 3669 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 3601
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 3669 is 1153
9999 run: address to copy is 1162
9999 run: its type is boolean
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 3696
 103 run: break-unless in-focus?:boolean, 
9999 mem: location 3696 is 1
9999 run: jump-unless fell through
 103 run: cursor-inside-right-margin?:boolean <- lesser-or-equal cursor-column:address:number/deref, right:number
9999 mem: location 3678 is 1160
9999 mem: location 1160 is 2
9999 mem: location 3672 is 4
9999 mem: storing 1 in location 3697
 103 run: assert cursor-inside-right-margin?:boolean, [cursor outside right margin]
9999 mem: location 3697 is 1
 103 run: cursor-inside-left-margin?:boolean <- greater-or-equal cursor-column:address:number/deref, left:number
9999 mem: location 3678 is 1160
9999 mem: location 1160 is 2
9999 mem: location 3670 is 0
9999 mem: storing 1 in location 3698
 103 run: assert cursor-inside-left-margin?:boolean, [cursor outside left margin]
9999 mem: location 3698 is 1
 103 run: move-cursor screen:address, cursor-row:address:number/deref, cursor-column:address:number/deref
9999 mem: location 3668 is 1031
9999 mem: location 3677 is 1159
9999 mem: location 1159 is 1
9999 mem: location 3678 is 1160
9999 mem: location 1160 is 2
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4740
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4742
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 4743
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 2 in location 4744
 104 run: break-unless x:address:screen, 
9999 mem: location 4742 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 4742 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 4742 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 4745
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 4743 is 1
9999 mem: location 4745 is 1033
9999 mem: storing 1 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 4742 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 4742 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 4746
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 4744 is 2
9999 mem: location 4746 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 4742 is 1031
 103 run: show-screen screen:address
9999 mem: location 3668 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4771
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4773
 104 run: break-unless x:address:screen, 
9999 mem: location 4773 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 4773 is 1031
 103 run: reply editor:address:editor-data/same-as-ingredient:1
9999 mem: location 3669 is 1153
 101 run: curr:address:editor-data <- get curr:address:editor-data/deref, next-editor:offset
9999 mem: location 3439 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 3601
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 3439 is 1153
9999 run: address to copy is 1161
9999 run: its type is address
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 3439
 101 run: loop 
9999 run: jumping to instruction 23
 101 run: break-unless curr:address:editor-data, 
9999 mem: location 3439 is 0
9999 run: jumping to instruction 27
 101 run: curr:address:editor-data <- copy editor:address:editor-data
9999 mem: location 3430 is 1153
9999 mem: storing 1153 in location 3439
 101 run: break-unless curr:address:editor-data, 
9999 mem: location 3439 is 1153
9999 run: jump-unless fell through
 101 run: in-focus?:boolean <- get curr:address:editor-data/deref, in-focus?:offset
9999 mem: location 3439 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 3601
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 3439 is 1153
9999 run: address to copy is 1162
9999 run: its type is boolean
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 3440
 101 run: break-unless in-focus?:boolean, 
9999 mem: location 3440 is 1
9999 run: jump-unless fell through
 101 run: cursor-row:number <- get curr:address:editor-data/deref, cursor-row:offset
9999 mem: location 3439 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 3601
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 3439 is 1153
9999 run: address to copy is 1159
9999 run: its type is number
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 3441
 101 run: cursor-column:number <- get curr:address:editor-data/deref, cursor-column:offset
9999 mem: location 3439 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 3601
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 3439 is 1153
9999 run: address to copy is 1160
9999 run: its type is number
9999 mem: location 1160 is 2
9999 mem: storing 2 in location 3442
 101 run: move-cursor screen:address, cursor-row:number, cursor-column:number
9999 mem: location 3428 is 1031
9999 mem: location 3441 is 1
9999 mem: location 3442 is 2
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4802
 102 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 4804
 102 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 4805
 102 run: new-column:number <- next-ingredient 
9999 mem: storing 2 in location 4806
 102 run: break-unless x:address:screen, 
9999 mem: location 4804 is 1031
9999 run: jump-unless fell through
 102 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 4804 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4804 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 4807
 102 run: row:address:number/deref <- copy new-row:number
9999 mem: location 4805 is 1
9999 mem: location 4807 is 1033
9999 mem: storing 1 in location 1033
 102 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 4804 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 4804 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 4808
 102 run: column:address:number/deref <- copy new-column:number
9999 mem: location 4806 is 2
9999 mem: location 4808 is 1034
9999 mem: storing 2 in location 1034
 102 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 4804 is 1031
 101 run: curr:address:editor-data <- get curr:address:editor-data/deref, next-editor:offset
9999 mem: location 3439 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 3601
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 3439 is 1153
9999 run: address to copy is 1161
9999 run: its type is address
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 3439
 101 run: loop 
9999 run: jumping to instruction 30
 101 run: break-unless curr:address:editor-data, 
9999 mem: location 3439 is 0
9999 run: jumping to instruction 40
 101 run: loop 
9999 run: jumping to instruction 5
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 3429 is 3424
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 4833
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 3424 in location 4835
 102 run: break-unless x:address:console, 
9999 mem: location 4835 is 3424
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 4835 is 3424
9999 mem: location 3424 is 1
9999 mem: location 3425 is 3419
9999 mem: location 4835 is 3424
9999 run: address to copy is 3424
9999 mem: storing 3424 in location 4836
 102 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 4835 is 3424
9999 mem: location 3424 is 1
9999 mem: location 3425 is 3419
9999 mem: location 4835 is 3424
9999 run: address to copy is 3425
9999 run: its type is address
9999 mem: location 3425 is 3419
9999 mem: storing 3419 in location 4837
schedule: read-event/event-loop/run1002/editor-wraps-line-on-insert
 102 run: max:number <- length buf:address:array:event/deref
9999 mem: location 4837 is 3419
9999 mem: location 3419 is 1
9999 mem: location 3420 is 0
9999 mem: location 3421 is 102
9999 mem: location 3422 is 0
9999 mem: location 3423 is 0
9999 mem: location 4837 is 3419
9999 mem: storing 1 in location 4838
 102 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 4836 is 3424
9999 mem: location 3424 is 1
9999 mem: location 4838 is 1
9999 mem: storing 1 in location 4839
 102 run: break-unless done?:boolean, 
9999 mem: location 4839 is 1
9999 run: jump-unless fell through
 102 run: dummy:address:event <- new event:type
9999 mem: new alloc: 4864
9999 mem: storing 4864 in location 4840
 102 run: reply dummy:address:event/deref, x:address:console/same-as-ingredient:0, 1:literal/found, 1:literal/quit
9999 mem: location 4840 is 4864
9999 mem: location 4864 is 0
9999 mem: location 4865 is 0
9999 mem: location 4866 is 0
9999 mem: location 4867 is 0
9999 mem: location 4835 is 3424
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 3424
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 3431
9999 mem: storing 0 in location 3432
9999 mem: storing 0 in location 3433
9999 mem: storing 0 in location 3434
9999 mem: storing 3424 in location 3429
9999 mem: storing 1 in location 3435
9999 mem: storing 1 in location 3436
 101 run: loop-unless found?:boolean, 
9999 mem: location 3435 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?:boolean, 
9999 mem: location 3436 is 1
9999 run: jumping to instruction 42
  99 run: screen-should-contain [
    .     .
    .efabâ†©.
    .c    .
    .     .
  ]
