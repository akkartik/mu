parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "height": ]}
parse: instruction: new
parse:   ingredient: {name: "abc", properties: [_: "literal-string"]}
parse:   product: {name: "1", properties: ["1": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "1", properties: ["1": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
parse:   product: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    type [e]\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .     .\n    .eabc .\n    .     .\n    .     .\n  ", properties: [_: "literal-string"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    type [f]\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .     .\n    .efabâ†©.\n    .c    .\n    .     .\n  ", properties: [_: "literal-string"]}
after-brace: recipe scenario-editor-wraps-line-on-insert
after-brace: new-fake-screen ...
after-brace: new ...
after-brace: new-editor ...
after-brace: assume-console ...
after-brace: run ...
after-brace: screen-should-contain ...
after-brace: assume-console ...
after-brace: run ...
after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: scenario-editor-wraps-line-on-insert
 101 run: screen:address <- new-fake-screen 5:literal/width, 5:literal/height
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1009
9999 mem: storing 1009 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1010
9999 mem: storing 1010 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1010
9999 mem: storing 5 in location 1010
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1009
9999 mem: storing 1009 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1009
9999 mem: storing 5 in location 1009
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1011
9999 mem: storing 0 in location 1011
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1012
9999 mem: storing 0 in location 1012
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1010
9999 mem: location 1010 is 5
9999 mem: location 1004 is 1009
9999 mem: location 1009 is 5
9999 mem: storing 25 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1013
9999 mem: storing 1013 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 25
9999 mem: array size is 25
9999 mem: new alloc: 1014
9999 mem: location 1008 is 1013
9999 mem: storing 1014 in location 1013
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1065
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1067
 103 run: break-unless x:address:screen, 
9999 mem: location 1067 is 1009
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1067 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1067 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1068
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1068 is 1014
9999 mem: storing 25 in location 1069
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1070
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 0
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 0
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 0
9999 mem: storing 1015 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1072 is 1015
9999 run: address to copy is 1015
9999 mem: storing 1015 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1015
9999 mem: storing 0 in location 1015
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1072 is 1015
9999 run: address to copy is 1016
9999 mem: storing 1016 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1016
9999 mem: storing 7 in location 1016
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 0
9999 mem: storing 1 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 1
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 1
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 1
9999 mem: storing 1017 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1072 is 1017
9999 run: address to copy is 1017
9999 mem: storing 1017 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1017
9999 mem: storing 0 in location 1017
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1072 is 1017
9999 run: address to copy is 1018
9999 mem: storing 1018 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1018
9999 mem: storing 7 in location 1018
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 1
9999 mem: storing 2 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 2
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 2
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 2
9999 mem: storing 1019 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1072 is 1019
9999 run: address to copy is 1019
9999 mem: storing 1019 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1019
9999 mem: storing 0 in location 1019
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1072 is 1019
9999 run: address to copy is 1020
9999 mem: storing 1020 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1020
9999 mem: storing 7 in location 1020
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 2
9999 mem: storing 3 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 3
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 3
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 3
9999 mem: storing 1021 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1072 is 1021
9999 run: address to copy is 1021
9999 mem: storing 1021 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1021
9999 mem: storing 0 in location 1021
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1072 is 1021
9999 run: address to copy is 1022
9999 mem: storing 1022 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1022
9999 mem: storing 7 in location 1022
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 3
9999 mem: storing 4 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 4
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 4
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 4
9999 mem: storing 1023 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1072 is 1023
9999 run: address to copy is 1023
9999 mem: storing 1023 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1023
9999 mem: storing 0 in location 1023
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1072 is 1023
9999 run: address to copy is 1024
9999 mem: storing 1024 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1024
9999 mem: storing 7 in location 1024
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 4
9999 mem: storing 5 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 5
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 5
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 5
9999 mem: storing 1025 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1072 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1025
9999 mem: storing 0 in location 1025
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1072 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1026
9999 mem: storing 7 in location 1026
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 5
9999 mem: storing 6 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 6
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 6
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 6
9999 mem: storing 1027 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1072 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1027
9999 mem: storing 0 in location 1027
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1072 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1028
9999 mem: storing 7 in location 1028
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 6
9999 mem: storing 7 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 7
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 7
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 7
9999 mem: storing 1029 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1072 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1029
9999 mem: storing 0 in location 1029
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1072 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1030
9999 mem: storing 7 in location 1030
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 7
9999 mem: storing 8 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 8
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 8
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 8
9999 mem: storing 1031 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1072 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1031
9999 mem: storing 0 in location 1031
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1072 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1032
9999 mem: storing 7 in location 1032
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 8
9999 mem: storing 9 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 9
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 9
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 9
9999 mem: storing 1033 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1072 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1033
9999 mem: storing 0 in location 1033
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1072 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1034
9999 mem: storing 7 in location 1034
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 9
9999 mem: storing 10 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 10
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 10
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 10
9999 mem: storing 1035 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1072 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1035
9999 mem: storing 0 in location 1035
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1072 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1036
9999 mem: storing 7 in location 1036
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 10
9999 mem: storing 11 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 11
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 11
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 11
9999 mem: storing 1037 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1072 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1072 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 11
9999 mem: storing 12 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 12
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 12
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 12
9999 mem: storing 1039 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1072 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1072 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 12
9999 mem: storing 13 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 13
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 13
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 13
9999 mem: storing 1041 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1072 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1072 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 13
9999 mem: storing 14 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 14
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 14
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 14
9999 mem: storing 1043 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1072 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1072 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 14
9999 mem: storing 15 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 15
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 15
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 15
9999 mem: storing 1045 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1072 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1072 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 15
9999 mem: storing 16 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 16
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 16
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 16
9999 mem: storing 1047 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1072 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1072 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 16
9999 mem: storing 17 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 17
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 17
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 17
9999 mem: storing 1049 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1072 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1072 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 17
9999 mem: storing 18 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 18
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 18
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 18
9999 mem: storing 1051 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1072 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1072 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 18
9999 mem: storing 19 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 19
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 19
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 19
9999 mem: storing 1053 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1072 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1072 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 19
9999 mem: storing 20 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 20
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 20
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 20
9999 mem: storing 1055 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1072 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1072 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 20
9999 mem: storing 21 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 21
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 21
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 21
9999 mem: storing 1057 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1072 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1072 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 21
9999 mem: storing 22 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 22
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 22
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 22
9999 mem: storing 1059 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1072 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1072 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 22
9999 mem: storing 23 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 23
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 23
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 23
9999 mem: storing 1061 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1072 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1072 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 23
9999 mem: storing 24 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 24
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 24
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 24
9999 mem: storing 1063 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1072 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1072 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 24
9999 mem: storing 25 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 25
9999 mem: location 1069 is 25
9999 mem: storing 1 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1067 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1067 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1075
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1075 is 1011
9999 mem: storing 0 in location 1011
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1067 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1067 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1075
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1075 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1067 is 1009
 102 run: reply result:address:screen
9999 mem: location 1002 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 900
 101 run: 1:address:array:character <- new [abc]
9999 mem: storing 1076 in location 1
 101 run: 2:address:editor-data <- new-editor 1:address:array:character, screen:address, 0:literal/left, 5:literal/right
9999 mem: location 1 is 1076
9999 mem: location 900 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1080
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1076 in location 1082
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1083
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1084
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1085
 102 run: right:number <- subtract right:number, 1:literal
9999 mem: location 1085 is 5
9999 mem: storing 4 in location 1085
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: new alloc: 1095
9999 mem: storing 1095 in location 1086
 102 run: x:address:number <- get-address result:address:editor-data/deref, left:offset
9999 mem: location 1086 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1086 is 1095
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1087
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1084 is 0
9999 mem: location 1087 is 1097
9999 mem: storing 0 in location 1097
 102 run: x:address:number <- get-address result:address:editor-data/deref, right:offset
9999 mem: location 1086 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1086 is 1095
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1087
 102 run: x:address:number/deref <- copy right:number
9999 mem: location 1085 is 4
9999 mem: location 1087 is 1098
9999 mem: storing 4 in location 1098
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-row:offset
9999 mem: location 1086 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1086 is 1095
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1087
 102 run: x:address:number/deref <- copy 1:literal/top
9999 mem: location 1087 is 1099
9999 mem: storing 1 in location 1099
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-column:offset
9999 mem: location 1086 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1086 is 1095
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1087
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1084 is 0
9999 mem: location 1087 is 1100
9999 mem: storing 0 in location 1100
 102 run: init:address:address:duplex-list <- get-address result:address:editor-data/deref, data:offset
9999 mem: location 1086 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1086 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1088
 102 run: init:address:address:duplex-list/deref <- push-duplex 167:literal/Â§, 0:literal/tail
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1101
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1103
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1104
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1109
9999 mem: storing 1109 in location 1105
 103 run: val:address:location <- get-address result:address:duplex-list/deref, value:offset
9999 mem: location 1105 is 1109
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1105 is 1109
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1106
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1103 is 167
9999 mem: location 1106 is 1109
9999 mem: storing 167 in location 1109
 103 run: next:address:address:duplex-list <- get-address result:address:duplex-list/deref, next:offset
9999 mem: location 1105 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1105 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1107
 103 run: next:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1104 is 0
9999 mem: location 1107 is 1110
9999 mem: storing 0 in location 1110
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1104 is 0
9999 run: jump-if fell through
 103 run: reply result:address:duplex-list
9999 mem: location 1105 is 1109
9999 run: result 0 is 1109
9999 mem: location 1088 is 1095
9999 mem: storing 1109 in location 1095
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1086 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1086 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1089
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1088 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1089 is 1096
9999 mem: storing 1109 in location 1096
 102 run: jump-if s:address:array:character, 1:offset
9999 mem: location 1082 is 1076
9999 run: jumping to instruction 21
 102 run: len:number <- length s:address:array:character/deref
9999 mem: location 1082 is 1076
9999 mem: location 1076 is 3
9999 mem: location 1077 is 97
9999 mem: location 1078 is 98
9999 mem: location 1079 is 99
9999 mem: location 1082 is 1076
9999 mem: storing 3 in location 1090
 102 run: jump-if len:number, 1:offset
9999 mem: location 1090 is 3
9999 run: jumping to instruction 24
 102 run: idx:number <- copy 0:literal
9999 mem: storing 0 in location 1091
 102 run: curr:address:duplex-list <- copy init:address:address:duplex-list/deref
9999 mem: location 1088 is 1095
9999 mem: location 1095 is 1109
9999 mem: storing 1109 in location 1092
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1091 is 0
9999 mem: location 1090 is 3
9999 mem: storing 0 in location 1093
 102 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1082 is 1076
9999 mem: location 1076 is 3
9999 mem: location 1077 is 97
9999 mem: location 1078 is 98
9999 mem: location 1079 is 99
9999 mem: location 1091 is 0
9999 mem: location 1082 is 1076
9999 mem: location 1091 is 0
9999 run: address to copy is 1077
9999 run: its type is character
9999 mem: location 1077 is 97
9999 mem: storing 97 in location 1094
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1094 is 97
9999 mem: location 1092 is 1109
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 103 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1103
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1109 in location 1104
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1112
9999 mem: storing 1112 in location 1105
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1105 is 1112
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1105 is 1112
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 1106
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1103 is 97
9999 mem: location 1106 is 1112
9999 mem: storing 97 in location 1112
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1104 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1104 is 1109
9999 run: address to copy is 1110
9999 run: its type is address
9999 mem: location 1110 is 0
9999 mem: storing 0 in location 1107
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1104 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1104 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1108
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1105 is 1112
9999 mem: location 1108 is 1110
9999 mem: storing 1112 in location 1110
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1105 is 1112
9999 mem: location 1112 is 97
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1105 is 1112
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1108
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1104 is 1109
9999 mem: location 1108 is 1114
9999 mem: storing 1109 in location 1114
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1105 is 1112
9999 mem: location 1112 is 97
9999 mem: location 1113 is 0
9999 mem: location 1114 is 1109
9999 mem: location 1105 is 1112
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 1108
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1107 is 0
9999 mem: location 1108 is 1113
9999 mem: storing 0 in location 1113
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1107 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1105 is 1112
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1092 is 1109
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1115
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1109 in location 1117
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1117 is 1109
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1117 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 1112
9999 mem: location 1111 is 0
9999 mem: location 1117 is 1109
9999 run: address to copy is 1110
9999 run: its type is address
9999 mem: location 1110 is 1112
9999 mem: storing 1112 in location 1118
 103 run: reply result:address:duplex-list
9999 mem: location 1118 is 1112
9999 run: result 0 is 1112
9999 mem: storing 1112 in location 1092
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1091 is 0
9999 mem: storing 1 in location 1091
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1091 is 1
9999 mem: location 1090 is 3
9999 mem: storing 0 in location 1093
 102 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1082 is 1076
9999 mem: location 1076 is 3
9999 mem: location 1077 is 97
9999 mem: location 1078 is 98
9999 mem: location 1079 is 99
9999 mem: location 1091 is 1
9999 mem: location 1082 is 1076
9999 mem: location 1091 is 1
9999 run: address to copy is 1078
9999 run: its type is character
9999 mem: location 1078 is 98
9999 mem: storing 98 in location 1094
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1094 is 98
9999 mem: location 1092 is 1112
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 103 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1103
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1112 in location 1104
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1119
9999 mem: storing 1119 in location 1105
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1105 is 1119
9999 mem: location 1119 is 0
9999 mem: location 1120 is 0
9999 mem: location 1121 is 0
9999 mem: location 1105 is 1119
9999 run: address to copy is 1119
9999 mem: storing 1119 in location 1106
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1103 is 98
9999 mem: location 1106 is 1119
9999 mem: storing 98 in location 1119
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1104 is 1112
9999 mem: location 1112 is 97
9999 mem: location 1113 is 0
9999 mem: location 1114 is 1109
9999 mem: location 1104 is 1112
9999 run: address to copy is 1113
9999 run: its type is address
9999 mem: location 1113 is 0
9999 mem: storing 0 in location 1107
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1104 is 1112
9999 mem: location 1112 is 97
9999 mem: location 1113 is 0
9999 mem: location 1114 is 1109
9999 mem: location 1104 is 1112
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 1108
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1105 is 1119
9999 mem: location 1108 is 1113
9999 mem: storing 1119 in location 1113
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1105 is 1119
9999 mem: location 1119 is 98
9999 mem: location 1120 is 0
9999 mem: location 1121 is 0
9999 mem: location 1105 is 1119
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1108
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1104 is 1112
9999 mem: location 1108 is 1121
9999 mem: storing 1112 in location 1121
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1105 is 1119
9999 mem: location 1119 is 98
9999 mem: location 1120 is 0
9999 mem: location 1121 is 1112
9999 mem: location 1105 is 1119
9999 run: address to copy is 1120
9999 mem: storing 1120 in location 1108
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1107 is 0
9999 mem: location 1108 is 1120
9999 mem: storing 0 in location 1120
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1107 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1105 is 1119
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1092 is 1112
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1112 in location 1117
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1117 is 1112
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1117 is 1112
9999 mem: location 1112 is 97
9999 mem: location 1113 is 1119
9999 mem: location 1114 is 1109
9999 mem: location 1117 is 1112
9999 run: address to copy is 1113
9999 run: its type is address
9999 mem: location 1113 is 1119
9999 mem: storing 1119 in location 1118
 103 run: reply result:address:duplex-list
9999 mem: location 1118 is 1119
9999 run: result 0 is 1119
9999 mem: storing 1119 in location 1092
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1091 is 1
9999 mem: storing 2 in location 1091
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1091 is 2
9999 mem: location 1090 is 3
9999 mem: storing 0 in location 1093
 102 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1082 is 1076
9999 mem: location 1076 is 3
9999 mem: location 1077 is 97
9999 mem: location 1078 is 98
9999 mem: location 1079 is 99
9999 mem: location 1091 is 2
9999 mem: location 1082 is 1076
9999 mem: location 1091 is 2
9999 run: address to copy is 1079
9999 run: its type is character
9999 mem: location 1079 is 99
9999 mem: storing 99 in location 1094
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1094 is 99
9999 mem: location 1092 is 1119
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 103 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1103
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1119 in location 1104
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1122
9999 mem: storing 1122 in location 1105
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1105 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1105 is 1122
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1106
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1103 is 99
9999 mem: location 1106 is 1122
9999 mem: storing 99 in location 1122
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1104 is 1119
9999 mem: location 1119 is 98
9999 mem: location 1120 is 0
9999 mem: location 1121 is 1112
9999 mem: location 1104 is 1119
9999 run: address to copy is 1120
9999 run: its type is address
9999 mem: location 1120 is 0
9999 mem: storing 0 in location 1107
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1104 is 1119
9999 mem: location 1119 is 98
9999 mem: location 1120 is 0
9999 mem: location 1121 is 1112
9999 mem: location 1104 is 1119
9999 run: address to copy is 1120
9999 mem: storing 1120 in location 1108
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1105 is 1122
9999 mem: location 1108 is 1120
9999 mem: storing 1122 in location 1120
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1105 is 1122
9999 mem: location 1122 is 99
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1105 is 1122
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1108
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1104 is 1119
9999 mem: location 1108 is 1124
9999 mem: storing 1119 in location 1124
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1105 is 1122
9999 mem: location 1122 is 99
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1119
9999 mem: location 1105 is 1122
9999 run: address to copy is 1123
9999 mem: storing 1123 in location 1108
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1107 is 0
9999 mem: location 1108 is 1123
9999 mem: storing 0 in location 1123
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1107 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1105 is 1122
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1092 is 1119
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1119 in location 1117
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1117 is 1119
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1117 is 1119
9999 mem: location 1119 is 98
9999 mem: location 1120 is 1122
9999 mem: location 1121 is 1112
9999 mem: location 1117 is 1119
9999 run: address to copy is 1120
9999 run: its type is address
9999 mem: location 1120 is 1122
9999 mem: storing 1122 in location 1118
 103 run: reply result:address:duplex-list
9999 mem: location 1118 is 1122
9999 run: result 0 is 1122
9999 mem: storing 1122 in location 1092
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1091 is 2
9999 mem: storing 3 in location 1091
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1091 is 3
9999 mem: location 1090 is 3
9999 mem: storing 1 in location 1093
 102 run: break-if done?:boolean, 
9999 mem: location 1093 is 1
9999 run: jumping to instruction 34
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1086 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1109
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1086 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1089
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1088 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1089 is 1096
9999 mem: storing 1109 in location 1096
 102 run: _, screen:address <- render screen:address, result:address:editor-data
9999 mem: location 1083 is 1009
9999 mem: location 1086 is 1095
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: new alloc: 1125
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1127
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1128
 103 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 1128 is 1095
9999 run: jumping to instruction 5
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1128 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1109
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1128 is 1095
9999 run: address to copy is 1097
9999 run: its type is number
9999 mem: location 1097 is 0
9999 mem: storing 0 in location 1129
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1127 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1117
 104 run: break-unless x:address:screen, 
9999 mem: location 1117 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1117 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1117 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1118
 104 run: reply height:number
9999 mem: location 1118 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1130
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1128 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1109
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1128 is 1095
9999 run: address to copy is 1098
9999 run: its type is number
9999 mem: location 1098 is 4
9999 mem: storing 4 in location 1131
 103 run: hide-screen screen:address
9999 mem: location 1127 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: new alloc: 1154
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1156
 104 run: break-unless x:address:screen, 
9999 mem: location 1156 is 1009
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 1156 is 1009
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1132
 103 run: highlighting-state:number <- copy 0:literal/normal
9999 mem: storing 0 in location 1133
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 1128 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1109
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1128 is 1095
9999 run: address to copy is 1095
9999 run: its type is address
9999 mem: location 1095 is 1109
9999 mem: storing 1109 in location 1134
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1134 is 1109
9999 mem: storing 1109 in location 1135
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1134 is 1109
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1109 in location 1117
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1117 is 1109
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1117 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 1112
9999 mem: location 1111 is 0
9999 mem: location 1117 is 1109
9999 run: address to copy is 1110
9999 run: its type is address
9999 mem: location 1110 is 1112
9999 mem: storing 1112 in location 1118
 104 run: reply result:address:duplex-list
9999 mem: location 1118 is 1112
9999 run: result 0 is 1112
9999 mem: storing 1112 in location 1134
 103 run: row:number <- copy 1:literal/top
9999 mem: storing 1 in location 1136
 103 run: column:number <- copy left:number
9999 mem: location 1129 is 0
9999 mem: storing 0 in location 1137
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1128 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1109
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1128 is 1095
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1138
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1128 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1109
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1128 is 1095
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1139
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1128 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1109
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1128 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1140
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1127 is 1009
9999 mem: location 1136 is 1
9999 mem: location 1137 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1157
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1159
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1160
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1161
 104 run: break-unless x:address:screen, 
9999 mem: location 1159 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1159 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1162
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1159 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1163
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1161 is 0
9999 mem: location 1163 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1159 is 1009
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1134 is 1112
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1136 is 1
9999 mem: location 1130 is 5
9999 mem: storing 0 in location 1141
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1136 is 1
9999 mem: location 1138 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1142
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1142 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1137 is 0
9999 mem: location 1139 is 1100
9999 mem: location 1100 is 0
9999 mem: storing 1 in location 1143
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1143 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1134 is 1112
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1112 in location 1117
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1117 is 1112
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1117 is 1112
9999 mem: location 1112 is 97
9999 mem: location 1113 is 1119
9999 mem: location 1114 is 1109
9999 mem: location 1117 is 1112
9999 run: address to copy is 1114
9999 run: its type is address
9999 mem: location 1114 is 1109
9999 mem: storing 1109 in location 1118
 104 run: reply result:address:duplex-list
9999 mem: location 1118 is 1109
9999 run: result 0 is 1109
9999 mem: location 1140 is 1096
9999 mem: storing 1109 in location 1096
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1134 is 1112
9999 mem: location 1112 is 97
9999 mem: location 1113 is 1119
9999 mem: location 1114 is 1109
9999 mem: location 1134 is 1112
9999 run: address to copy is 1112
9999 run: its type is number
9999 mem: location 1112 is 97
9999 mem: storing 97 in location 1144
 103 run: color:number, highlighting-state:number <- get-color color:number, highlighting-state:number, c:character
9999 mem: location 1132 is 7
9999 mem: location 1133 is 0
9999 mem: location 1144 is 97
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: new alloc: 1164
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1166
 104 run: highlighting-state:number <- next-ingredient 
9999 mem: storing 0 in location 1167
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1168
 104 run: color-is-white?:boolean <- equal color:number, 7:literal/white
9999 mem: location 1166 is 7
9999 mem: storing 1 in location 1169
 104 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c:character, 35:literal/#
9999 mem: location 1168 is 97
9999 mem: storing 0 in location 1170
 104 run: break-unless starting-comment?:boolean, 
9999 mem: location 1170 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color:number, 12:literal/lightblue
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1171
 104 run: break-unless color-is-blue?:boolean, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 19
 104 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c:character, 60:literal/<
9999 mem: location 1168 is 97
9999 mem: storing 0 in location 1173
 104 run: break-unless starting-assignment?:boolean, 
9999 mem: location 1173 is 0
9999 run: jumping to instruction 26
 104 run: color-is-red?:boolean <- equal color:number, 1:literal/red
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1174
 104 run: break-unless color-is-red?:boolean, 
9999 mem: location 1174 is 0
9999 run: jumping to instruction 34
 104 run: reply color:number, highlighting-state:number
9999 mem: location 1166 is 7
9999 mem: location 1167 is 0
9999 run: result 0 is 7
9999 run: result 1 is 0
9999 mem: storing 7 in location 1132
9999 mem: storing 0 in location 1133
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1144 is 97
9999 mem: storing 0 in location 1145
 103 run: break-unless newline?:boolean, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1137 is 0
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1147
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1147 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen:address, c:character, color:number
9999 mem: location 1127 is 1009
9999 mem: location 1144 is 97
9999 mem: location 1132 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: new alloc: 1176
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1179
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1180
9999 mem: storing 1 in location 1181
 104 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 104 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
schedule: print-character/render/new-editor/scenario-editor-wraps-line-on-insert
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 97
9999 mem: storing 0 in location 1189
 104 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1184 is 5
9999 mem: storing 5 in location 1192
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 5
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 5 in location 1192
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 97
9999 mem: storing 0 in location 1195
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 5
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 5
9999 mem: storing 1025 in location 1197
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1197 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1198
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1197 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1199
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 97
9999 mem: location 1198 is 1025
9999 mem: storing 97 in location 1025
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1026
9999 mem: storing 7 in location 1026
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1200 is 4
9999 mem: storing 0 in location 1201
 104 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1188 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1134 is 1112
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1112 in location 1117
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1117 is 1112
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1117 is 1112
9999 mem: location 1112 is 97
9999 mem: location 1113 is 1119
9999 mem: location 1114 is 1109
9999 mem: location 1117 is 1112
9999 run: address to copy is 1113
9999 run: its type is address
9999 mem: location 1113 is 1119
9999 mem: storing 1119 in location 1118
 104 run: reply result:address:duplex-list
9999 mem: location 1118 is 1119
9999 run: result 0 is 1119
9999 mem: storing 1119 in location 1134
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1135 is 1109
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1109 in location 1117
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1117 is 1109
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1117 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 1112
9999 mem: location 1111 is 0
9999 mem: location 1117 is 1109
9999 run: address to copy is 1110
9999 run: its type is address
9999 mem: location 1110 is 1112
9999 mem: storing 1112 in location 1118
 104 run: reply result:address:duplex-list
9999 mem: location 1118 is 1112
9999 run: result 0 is 1112
9999 mem: storing 1112 in location 1135
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1137 is 0
9999 mem: storing 1 in location 1137
 103 run: loop 
9999 run: jumping to instruction 21
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1134 is 1119
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1136 is 1
9999 mem: location 1130 is 5
9999 mem: storing 0 in location 1141
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1136 is 1
9999 mem: location 1138 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1142
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1142 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1137 is 1
9999 mem: location 1139 is 1100
9999 mem: location 1100 is 0
9999 mem: storing 0 in location 1143
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1143 is 0
9999 run: jumping to instruction 31
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1134 is 1119
9999 mem: location 1119 is 98
9999 mem: location 1120 is 1122
9999 mem: location 1121 is 1112
9999 mem: location 1134 is 1119
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 98
9999 mem: storing 98 in location 1144
 103 run: color:number, highlighting-state:number <- get-color color:number, highlighting-state:number, c:character
9999 mem: location 1132 is 7
9999 mem: location 1133 is 0
9999 mem: location 1144 is 98
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1166
 104 run: highlighting-state:number <- next-ingredient 
9999 mem: storing 0 in location 1167
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1168
 104 run: color-is-white?:boolean <- equal color:number, 7:literal/white
9999 mem: location 1166 is 7
9999 mem: storing 1 in location 1169
 104 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c:character, 35:literal/#
9999 mem: location 1168 is 98
9999 mem: storing 0 in location 1170
 104 run: break-unless starting-comment?:boolean, 
9999 mem: location 1170 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color:number, 12:literal/lightblue
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1171
 104 run: break-unless color-is-blue?:boolean, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 19
 104 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c:character, 60:literal/<
9999 mem: location 1168 is 98
9999 mem: storing 0 in location 1173
 104 run: break-unless starting-assignment?:boolean, 
9999 mem: location 1173 is 0
9999 run: jumping to instruction 26
 104 run: color-is-red?:boolean <- equal color:number, 1:literal/red
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1174
 104 run: break-unless color-is-red?:boolean, 
9999 mem: location 1174 is 0
9999 run: jumping to instruction 34
 104 run: reply color:number, highlighting-state:number
9999 mem: location 1166 is 7
9999 mem: location 1167 is 0
9999 run: result 0 is 7
9999 run: result 1 is 0
9999 mem: storing 7 in location 1132
9999 mem: storing 0 in location 1133
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1144 is 98
9999 mem: storing 0 in location 1145
 103 run: break-unless newline?:boolean, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1137 is 1
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1147
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1147 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen:address, c:character, color:number
9999 mem: location 1127 is 1009
9999 mem: location 1144 is 98
9999 mem: location 1132 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1179
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1180
9999 mem: storing 1 in location 1181
 104 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 104 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 98
9999 mem: storing 0 in location 1189
 104 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1184 is 5
9999 mem: storing 5 in location 1192
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 5
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 6 in location 1192
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 98
9999 mem: storing 0 in location 1195
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 6
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 6
9999 mem: storing 1027 in location 1197
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1197 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 1198
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1197 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 1199
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 98
9999 mem: location 1198 is 1027
9999 mem: storing 98 in location 1027
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1028
9999 mem: storing 7 in location 1028
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1200 is 4
9999 mem: storing 0 in location 1201
 104 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1188 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1134 is 1119
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1119 in location 1117
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1117 is 1119
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1117 is 1119
9999 mem: location 1119 is 98
9999 mem: location 1120 is 1122
9999 mem: location 1121 is 1112
9999 mem: location 1117 is 1119
9999 run: address to copy is 1120
9999 run: its type is address
9999 mem: location 1120 is 1122
9999 mem: storing 1122 in location 1118
 104 run: reply result:address:duplex-list
9999 mem: location 1118 is 1122
9999 run: result 0 is 1122
9999 mem: storing 1122 in location 1134
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1135 is 1112
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1112 in location 1117
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1117 is 1112
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1117 is 1112
9999 mem: location 1112 is 97
9999 mem: location 1113 is 1119
9999 mem: location 1114 is 1109
9999 mem: location 1117 is 1112
9999 run: address to copy is 1113
9999 run: its type is address
9999 mem: location 1113 is 1119
9999 mem: storing 1119 in location 1118
 104 run: reply result:address:duplex-list
9999 mem: location 1118 is 1119
9999 run: result 0 is 1119
9999 mem: storing 1119 in location 1135
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1137 is 1
9999 mem: storing 2 in location 1137
 103 run: loop 
9999 run: jumping to instruction 21
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1134 is 1122
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1136 is 1
9999 mem: location 1130 is 5
9999 mem: storing 0 in location 1141
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1136 is 1
9999 mem: location 1138 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1142
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1142 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1137 is 2
9999 mem: location 1139 is 1100
9999 mem: location 1100 is 0
9999 mem: storing 0 in location 1143
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1143 is 0
9999 run: jumping to instruction 31
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1134 is 1122
9999 mem: location 1122 is 99
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1119
9999 mem: location 1134 is 1122
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 99
9999 mem: storing 99 in location 1144
 103 run: color:number, highlighting-state:number <- get-color color:number, highlighting-state:number, c:character
9999 mem: location 1132 is 7
9999 mem: location 1133 is 0
9999 mem: location 1144 is 99
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1166
 104 run: highlighting-state:number <- next-ingredient 
9999 mem: storing 0 in location 1167
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1168
 104 run: color-is-white?:boolean <- equal color:number, 7:literal/white
9999 mem: location 1166 is 7
9999 mem: storing 1 in location 1169
 104 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c:character, 35:literal/#
9999 mem: location 1168 is 99
9999 mem: storing 0 in location 1170
 104 run: break-unless starting-comment?:boolean, 
9999 mem: location 1170 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color:number, 12:literal/lightblue
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1171
 104 run: break-unless color-is-blue?:boolean, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 19
 104 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c:character, 60:literal/<
9999 mem: location 1168 is 99
9999 mem: storing 0 in location 1173
 104 run: break-unless starting-assignment?:boolean, 
9999 mem: location 1173 is 0
9999 run: jumping to instruction 26
 104 run: color-is-red?:boolean <- equal color:number, 1:literal/red
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1174
 104 run: break-unless color-is-red?:boolean, 
9999 mem: location 1174 is 0
9999 run: jumping to instruction 34
 104 run: reply color:number, highlighting-state:number
9999 mem: location 1166 is 7
9999 mem: location 1167 is 0
9999 run: result 0 is 7
9999 run: result 1 is 0
9999 mem: storing 7 in location 1132
9999 mem: storing 0 in location 1133
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1144 is 99
9999 mem: storing 0 in location 1145
 103 run: break-unless newline?:boolean, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1137 is 2
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1147
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1147 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen:address, c:character, color:number
9999 mem: location 1127 is 1009
9999 mem: location 1144 is 99
9999 mem: location 1132 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1179
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1180
9999 mem: storing 1 in location 1181
 104 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 104 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 99
9999 mem: storing 0 in location 1189
 104 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1184 is 5
9999 mem: storing 5 in location 1192
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 5
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 7 in location 1192
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 99
9999 mem: storing 0 in location 1195
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 7
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 7
9999 mem: storing 1029 in location 1197
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1197 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 1198
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1197 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 1199
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 99
9999 mem: location 1198 is 1029
9999 mem: storing 99 in location 1029
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1030
9999 mem: storing 7 in location 1030
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1200 is 4
9999 mem: storing 0 in location 1201
 104 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1188 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1134 is 1122
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1122 in location 1117
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1117 is 1122
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1117 is 1122
9999 mem: location 1122 is 99
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1119
9999 mem: location 1117 is 1122
9999 run: address to copy is 1123
9999 run: its type is address
9999 mem: location 1123 is 0
9999 mem: storing 0 in location 1118
 104 run: reply result:address:duplex-list
9999 mem: location 1118 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1134
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1135 is 1119
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1119 in location 1117
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1117 is 1119
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1117 is 1119
9999 mem: location 1119 is 98
9999 mem: location 1120 is 1122
9999 mem: location 1121 is 1112
9999 mem: location 1117 is 1119
9999 run: address to copy is 1120
9999 run: its type is address
9999 mem: location 1120 is 1122
9999 mem: storing 1122 in location 1118
 104 run: reply result:address:duplex-list
9999 mem: location 1118 is 1122
9999 run: result 0 is 1122
9999 mem: storing 1122 in location 1135
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1137 is 2
9999 mem: storing 3 in location 1137
 103 run: loop 
9999 run: jumping to instruction 21
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1134 is 0
9999 run: jumping to instruction 67
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1136 is 1
9999 mem: location 1138 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1142
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1137 is 3
9999 mem: location 1139 is 1100
9999 mem: location 1100 is 0
9999 mem: storing 0 in location 1148
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1142 is 1
9999 mem: location 1148 is 0
9999 mem: storing 0 in location 1149
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1136 is 1
9999 mem: location 1138 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 0 in location 1150
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1151
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 1151 is 0
9999 run: jumping to instruction 86
 103 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1127 is 1009
9999 mem: location 1137 is 3
9999 mem: location 1131 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1159
 104 run: left:number <- next-ingredient 
9999 mem: storing 3 in location 1160
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1161
 104 run: column:number <- copy left:number
9999 mem: location 1160 is 3
9999 mem: storing 3 in location 1162
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1162 is 3
9999 mem: location 1161 is 4
9999 mem: storing 0 in location 1163
 104 run: break-if done?:boolean, 
9999 mem: location 1163 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1159 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1179
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1180
9999 mem: storing 0 in location 1181
 105 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1180
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 105 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 105 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1187
 105 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 105 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 105 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 105 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1187
 105 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 105 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 105 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1189
 105 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1184 is 5
9999 mem: storing 5 in location 1192
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 5
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 8 in location 1192
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 105 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1195
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 8
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 8
9999 mem: storing 1031 in location 1197
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1197 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1198
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1197 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1199
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 32
9999 mem: location 1198 is 1031
9999 mem: storing 32 in location 1031
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1032
9999 mem: storing 7 in location 1032
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1200 is 4
9999 mem: storing 0 in location 1201
 105 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1188 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1162 is 3
9999 mem: storing 4 in location 1162
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1162 is 4
9999 mem: location 1161 is 4
9999 mem: storing 0 in location 1163
 104 run: break-if done?:boolean, 
9999 mem: location 1163 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1159 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1179
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1180
9999 mem: storing 0 in location 1181
 105 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1180
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 105 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 105 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1187
 105 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 105 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 105 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 105 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1187
 105 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 105 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 105 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1189
 105 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1184 is 5
9999 mem: storing 5 in location 1192
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 5
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 9 in location 1192
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 105 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1195
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 9
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 9
9999 mem: storing 1033 in location 1197
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1197 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1198
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1197 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1199
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 32
9999 mem: location 1198 is 1033
9999 mem: storing 32 in location 1033
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1034
9999 mem: storing 7 in location 1034
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1200 is 4
9999 mem: storing 1 in location 1201
 105 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 73
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1162 is 4
9999 mem: storing 5 in location 1162
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1162 is 5
9999 mem: location 1161 is 4
9999 mem: storing 1 in location 1163
 104 run: break-if done?:boolean, 
9999 mem: location 1163 is 1
9999 run: jumping to instruction 11
 103 run: reply row:number, screen:address/same-as-ingredient:0
9999 mem: location 1136 is 1
9999 mem: location 1127 is 1009
9999 run: result 0 is 1
9999 run: result 1 is 1009
9999 mem: storing 1009 in location 1083
 102 run: reply result:address:editor-data
9999 mem: location 1086 is 1095
9999 run: result 0 is 1095
9999 mem: storing 1095 in location 2
 101 run: assume-console [
    type [e]
  ]
parse: instruction: type
parse:   ingredient: {name: "e", properties: [_: "literal-string"]}
 101 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1001
after-brace: editor-event-loop ...
 101 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1207
9999 mem: location 2 is 1095
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 14
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1082
 102 run: console:address <- next-ingredient 
9999 mem: storing 1207 in location 1083
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1084
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 1083 is 1207
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1209
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1207 in location 1211
 103 run: break-unless x:address:console, 
9999 mem: location 1211 is 1207
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 1211 is 1207
9999 mem: location 1207 is 0
9999 mem: location 1208 is 1202
9999 mem: location 1211 is 1207
9999 run: address to copy is 1207
9999 mem: storing 1207 in location 1212
 103 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 1211 is 1207
9999 mem: location 1207 is 0
9999 mem: location 1208 is 1202
9999 mem: location 1211 is 1207
9999 run: address to copy is 1208
9999 run: its type is address
9999 mem: location 1208 is 1202
9999 mem: storing 1202 in location 1213
 103 run: max:number <- length buf:address:array:event/deref
9999 mem: location 1213 is 1202
9999 mem: location 1202 is 1
9999 mem: location 1203 is 0
9999 mem: location 1204 is 101
9999 mem: location 1205 is 0
9999 mem: location 1206 is 0
9999 mem: location 1213 is 1202
9999 mem: storing 1 in location 1214
 103 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 1212 is 1207
9999 mem: location 1207 is 0
9999 mem: location 1214 is 1
9999 mem: storing 0 in location 1215
 103 run: break-unless done?:boolean, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index buf:address:array:event/deref, idx:address:number/deref
9999 mem: location 1213 is 1202
9999 mem: location 1202 is 1
9999 mem: location 1203 is 0
9999 mem: location 1204 is 101
9999 mem: location 1205 is 0
9999 mem: location 1206 is 0
9999 mem: location 1212 is 1207
9999 mem: location 1207 is 0
9999 mem: location 1213 is 1202
9999 mem: location 1212 is 1207
9999 mem: location 1207 is 0
9999 run: address to copy is 1203
9999 run: its type is event
9999 mem: location 1203 is 0
9999 mem: location 1204 is 101
9999 mem: location 1205 is 0
9999 mem: location 1206 is 0
9999 mem: storing 0 in location 1217
9999 mem: storing 101 in location 1218
9999 mem: storing 0 in location 1219
9999 mem: storing 0 in location 1220
 103 run: idx:address:number/deref <- add idx:address:number/deref, 1:literal
9999 mem: location 1212 is 1207
9999 mem: location 1207 is 0
9999 mem: location 1212 is 1207
9999 mem: storing 1 in location 1207
 103 run: reply result:event, x:address:console/same-as-ingredient:0, 1:literal/found, 0:literal/quit
9999 mem: location 1217 is 0
9999 mem: location 1218 is 101
9999 mem: location 1219 is 0
9999 mem: location 1220 is 0
9999 mem: location 1211 is 1207
9999 run: result 0 is [0, 101, 0, 0]
9999 run: result 1 is 1207
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1085
9999 mem: storing 101 in location 1086
9999 mem: storing 0 in location 1087
9999 mem: storing 0 in location 1088
9999 mem: storing 1207 in location 1083
9999 mem: storing 1 in location 1089
9999 mem: storing 0 in location 1090
 102 run: loop-unless found?:boolean, 
9999 mem: location 1089 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?:boolean, 
9999 mem: location 1090 is 0
9999 run: jump-if fell through
 102 run: trace [app], [next-event]
   1 app: next-event
 102 run: t:address:touch-event <- maybe-convert e:event, touch:variant
9999 mem: location 1085 is 0
9999 mem: location 1086 is 101
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: storing 0 in location 1091
 102 run: break-unless t:address:touch-event, 
9999 mem: location 1091 is 0
9999 run: jumping to instruction 15
 102 run: handle-event screen:address, console:address, editor:address:editor-data, e:event
9999 mem: location 1082 is 1009
9999 mem: location 1083 is 1207
9999 mem: location 1084 is 1095
9999 mem: location 1085 is 0
9999 mem: location 1086 is 101
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 45
9999 mem: new alloc: 1222
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1224
 103 run: console:address <- next-ingredient 
9999 mem: storing 1207 in location 1225
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1226
 103 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1227
9999 mem: storing 101 in location 1228
9999 mem: storing 0 in location 1229
9999 mem: storing 0 in location 1230
 103 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 1226 is 1095
9999 run: jumping to instruction 7
 103 run: c:address:character <- maybe-convert e:event, text:variant
9999 mem: location 1227 is 0
9999 mem: location 1228 is 101
9999 mem: location 1229 is 0
9999 mem: location 1230 is 0
9999 mem: storing 1228 in location 1231
 103 run: break-unless c:address:character, 
9999 mem: location 1231 is 1228
9999 run: jump-unless fell through
 103 run: backspace?:boolean <- equal c:address:character/deref, 8:literal/backspace
9999 mem: location 1231 is 1228
9999 mem: location 1228 is 101
9999 mem: storing 0 in location 1232
 103 run: break-unless backspace?:boolean, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 15
 103 run: ctrl-a?:boolean <- equal c:address:character/deref, 1:literal/ctrl-a
9999 mem: location 1231 is 1228
9999 mem: location 1228 is 101
9999 mem: storing 0 in location 1233
 103 run: break-unless ctrl-a?:boolean, 
9999 mem: location 1233 is 0
9999 run: jumping to instruction 21
 103 run: ctrl-e?:boolean <- equal c:address:character/deref, 5:literal/ctrl-e
9999 mem: location 1231 is 1228
9999 mem: location 1228 is 101
9999 mem: storing 0 in location 1234
 103 run: break-unless ctrl-e?:boolean, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 27
 103 run: ctrl-u?:boolean <- equal c:address:character/deref, 21:literal/ctrl-u
9999 mem: location 1231 is 1228
9999 mem: location 1228 is 101
9999 mem: storing 0 in location 1235
 103 run: break-unless ctrl-u?:boolean, 
9999 mem: location 1235 is 0
9999 run: jumping to instruction 33
 103 run: ctrl-k?:boolean <- equal c:address:character/deref, 11:literal/ctrl-k
9999 mem: location 1231 is 1228
9999 mem: location 1228 is 101
9999 mem: storing 0 in location 1236
 103 run: break-unless ctrl-k?:boolean, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 39
 103 run: tab?:boolean <- equal c:address:character/deref, 9:literal/tab
9999 mem: location 1231 is 1228
9999 mem: location 1228 is 101
9999 mem: storing 0 in location 1237
 103 run: break-unless tab?:boolean, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 46
 103 run: insert-at-cursor editor:address:editor-data, c:address:character/deref, screen:address
9999 mem: location 1226 is 1095
9999 mem: location 1231 is 1228
9999 mem: location 1228 is 101
9999 mem: location 1224 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 19
9999 mem: new alloc: 1268
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1270
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1271
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1272
 104 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1270 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1109
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1270 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1273
 104 run: insert-duplex c:character, before-cursor:address:address:duplex-list/deref
9999 mem: location 1271 is 101
9999 mem: location 1273 is 1096
9999 mem: location 1096 is 1109
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:location <- next-ingredient 
9999 mem: storing 101 in location 1103
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1109 in location 1104
 105 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: storing 1154 in location 1105
 105 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1105 is 1154
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1105 is 1154
9999 run: address to copy is 1154
9999 mem: storing 1154 in location 1106
 105 run: val:address:location/deref <- copy x:location
9999 mem: location 1103 is 101
9999 mem: location 1106 is 1154
9999 mem: storing 101 in location 1154
 105 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1104 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 1112
9999 mem: location 1111 is 0
9999 mem: location 1104 is 1109
9999 run: address to copy is 1110
9999 run: its type is address
9999 mem: location 1110 is 1112
9999 mem: storing 1112 in location 1107
 105 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1104 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 1112
9999 mem: location 1111 is 0
9999 mem: location 1104 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1108
 105 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1105 is 1154
9999 mem: location 1108 is 1110
9999 mem: storing 1154 in location 1110
 105 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1105 is 1154
9999 mem: location 1154 is 101
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1105 is 1154
9999 run: address to copy is 1156
9999 mem: storing 1156 in location 1108
 105 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1104 is 1109
9999 mem: location 1108 is 1156
9999 mem: storing 1109 in location 1156
 105 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1105 is 1154
9999 mem: location 1154 is 101
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1109
9999 mem: location 1105 is 1154
9999 run: address to copy is 1155
9999 mem: storing 1155 in location 1108
 105 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1107 is 1112
9999 mem: location 1108 is 1155
9999 mem: storing 1112 in location 1155
 105 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1107 is 1112
9999 run: jumping to instruction 15
 105 run: y:address:address:duplex-list <- get-address next-node:address:duplex-list/deref, prev:offset
9999 mem: location 1107 is 1112
9999 mem: location 1112 is 97
9999 mem: location 1113 is 1119
9999 mem: location 1114 is 1109
9999 mem: location 1107 is 1112
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1108
 105 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1105 is 1154
9999 mem: location 1108 is 1114
9999 mem: storing 1154 in location 1114
 105 run: reply new-node:address:duplex-list
9999 mem: location 1105 is 1154
 104 run: before-cursor:address:address:duplex-list/deref <- next-duplex before-cursor:address:address:duplex-list/deref
9999 mem: location 1273 is 1096
9999 mem: location 1096 is 1109
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1109 in location 1117
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1117 is 1109
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1117 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 1154
9999 mem: location 1111 is 0
9999 mem: location 1117 is 1109
9999 run: address to copy is 1110
9999 run: its type is address
9999 mem: location 1110 is 1154
9999 mem: storing 1154 in location 1118
 105 run: reply result:address:duplex-list
9999 mem: location 1118 is 1154
9999 run: result 0 is 1154
9999 mem: location 1273 is 1096
9999 mem: storing 1154 in location 1096
 104 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1270 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1154
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1270 is 1095
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1274
 104 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1270 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1154
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1270 is 1095
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1275
 104 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1270 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1154
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1270 is 1095
9999 run: address to copy is 1097
9999 run: its type is number
9999 mem: location 1097 is 0
9999 mem: storing 0 in location 1276
 104 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1270 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1154
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 0
9999 mem: location 1270 is 1095
9999 run: address to copy is 1098
9999 run: its type is number
9999 mem: location 1098 is 4
9999 mem: storing 4 in location 1277
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1271 is 101
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?:boolean, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 28
schedule: insert-at-cursor/handle-event/editor-event-loop/run1001/scenario-editor-wraps-line-on-insert
 104 run: wrap-column:number <- subtract right:number, 1:literal
9999 mem: location 1277 is 4
9999 mem: storing 3 in location 1284
 104 run: at-wrap?:boolean <- greater-or-equal cursor-column:address:number/deref, wrap-column:number
9999 mem: location 1275 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1284 is 3
9999 mem: storing 0 in location 1285
 104 run: break-unless at-wrap?:boolean, 
9999 mem: location 1285 is 0
9999 run: jumping to instruction 39
 104 run: cursor-column:address:number/deref <- add cursor-column:address:number/deref, 1:literal
9999 mem: location 1275 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1275 is 1100
9999 mem: storing 1 in location 1100
 103 run: reply 
 102 run: row:number, screen:address <- render screen:address, editor:address:editor-data
9999 mem: location 1082 is 1009
9999 mem: location 1084 is 1095
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 28
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1127
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1128
 103 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 1128 is 1095
9999 run: jumping to instruction 5
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1128 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1154
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1128 is 1095
9999 run: address to copy is 1097
9999 run: its type is number
9999 mem: location 1097 is 0
9999 mem: storing 0 in location 1129
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1127 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1117
 104 run: break-unless x:address:screen, 
9999 mem: location 1117 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1117 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1117 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1118
 104 run: reply height:number
9999 mem: location 1118 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1130
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1128 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1154
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1128 is 1095
9999 run: address to copy is 1098
9999 run: its type is number
9999 mem: location 1098 is 4
9999 mem: storing 4 in location 1131
 103 run: hide-screen screen:address
9999 mem: location 1127 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: new alloc: 1288
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1290
 104 run: break-unless x:address:screen, 
9999 mem: location 1290 is 1009
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 1290 is 1009
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1132
 103 run: highlighting-state:number <- copy 0:literal/normal
9999 mem: storing 0 in location 1133
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 1128 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1154
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1128 is 1095
9999 run: address to copy is 1095
9999 run: its type is address
9999 mem: location 1095 is 1109
9999 mem: storing 1109 in location 1134
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1134 is 1109
9999 mem: storing 1109 in location 1135
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1134 is 1109
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1109 in location 1117
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1117 is 1109
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1117 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 1154
9999 mem: location 1111 is 0
9999 mem: location 1117 is 1109
9999 run: address to copy is 1110
9999 run: its type is address
9999 mem: location 1110 is 1154
9999 mem: storing 1154 in location 1118
 104 run: reply result:address:duplex-list
9999 mem: location 1118 is 1154
9999 run: result 0 is 1154
9999 mem: storing 1154 in location 1134
 103 run: row:number <- copy 1:literal/top
9999 mem: storing 1 in location 1136
 103 run: column:number <- copy left:number
9999 mem: location 1129 is 0
9999 mem: storing 0 in location 1137
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1128 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1154
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1128 is 1095
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1138
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1128 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1154
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1128 is 1095
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1139
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1128 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1154
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1128 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1140
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1127 is 1009
9999 mem: location 1136 is 1
9999 mem: location 1137 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1159
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1160
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1161
 104 run: break-unless x:address:screen, 
9999 mem: location 1159 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1159 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1162
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1159 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1163
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1161 is 0
9999 mem: location 1163 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1159 is 1009
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1134 is 1154
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1136 is 1
9999 mem: location 1130 is 5
9999 mem: storing 0 in location 1141
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1136 is 1
9999 mem: location 1138 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1142
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1142 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1137 is 0
9999 mem: location 1139 is 1100
9999 mem: location 1100 is 1
9999 mem: storing 0 in location 1143
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1143 is 0
9999 run: jumping to instruction 31
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1134 is 1154
9999 mem: location 1154 is 101
9999 mem: location 1155 is 1112
9999 mem: location 1156 is 1109
9999 mem: location 1134 is 1154
9999 run: address to copy is 1154
9999 run: its type is number
9999 mem: location 1154 is 101
9999 mem: storing 101 in location 1144
 103 run: color:number, highlighting-state:number <- get-color color:number, highlighting-state:number, c:character
9999 mem: location 1132 is 7
9999 mem: location 1133 is 0
9999 mem: location 1144 is 101
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1166
 104 run: highlighting-state:number <- next-ingredient 
9999 mem: storing 0 in location 1167
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1168
 104 run: color-is-white?:boolean <- equal color:number, 7:literal/white
9999 mem: location 1166 is 7
9999 mem: storing 1 in location 1169
 104 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c:character, 35:literal/#
9999 mem: location 1168 is 101
9999 mem: storing 0 in location 1170
 104 run: break-unless starting-comment?:boolean, 
9999 mem: location 1170 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color:number, 12:literal/lightblue
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1171
 104 run: break-unless color-is-blue?:boolean, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 19
 104 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c:character, 60:literal/<
9999 mem: location 1168 is 101
9999 mem: storing 0 in location 1173
 104 run: break-unless starting-assignment?:boolean, 
9999 mem: location 1173 is 0
9999 run: jumping to instruction 26
 104 run: color-is-red?:boolean <- equal color:number, 1:literal/red
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1174
 104 run: break-unless color-is-red?:boolean, 
9999 mem: location 1174 is 0
9999 run: jumping to instruction 34
 104 run: reply color:number, highlighting-state:number
9999 mem: location 1166 is 7
9999 mem: location 1167 is 0
9999 run: result 0 is 7
9999 run: result 1 is 0
9999 mem: storing 7 in location 1132
9999 mem: storing 0 in location 1133
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1144 is 101
9999 mem: storing 0 in location 1145
 103 run: break-unless newline?:boolean, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1137 is 0
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1147
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1147 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen:address, c:character, color:number
9999 mem: location 1127 is 1009
9999 mem: location 1144 is 101
9999 mem: location 1132 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1179
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1180
9999 mem: storing 1 in location 1181
 104 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 104 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 101
9999 mem: storing 0 in location 1189
 104 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1184 is 5
9999 mem: storing 5 in location 1192
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 5
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 5 in location 1192
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 101
9999 mem: storing 0 in location 1195
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 5
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 5
9999 mem: storing 1025 in location 1197
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1025
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1197 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1198
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1025
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1197 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1199
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 101
9999 mem: location 1198 is 1025
9999 mem: storing 101 in location 1025
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1026
9999 mem: storing 7 in location 1026
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1200 is 4
9999 mem: storing 0 in location 1201
 104 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1188 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1134 is 1154
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1154 in location 1117
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1117 is 1154
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1117 is 1154
9999 mem: location 1154 is 101
9999 mem: location 1155 is 1112
9999 mem: location 1156 is 1109
9999 mem: location 1117 is 1154
9999 run: address to copy is 1155
9999 run: its type is address
9999 mem: location 1155 is 1112
9999 mem: storing 1112 in location 1118
 104 run: reply result:address:duplex-list
9999 mem: location 1118 is 1112
9999 run: result 0 is 1112
9999 mem: storing 1112 in location 1134
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1135 is 1109
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1109 in location 1117
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1117 is 1109
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1117 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 1154
9999 mem: location 1111 is 0
9999 mem: location 1117 is 1109
9999 run: address to copy is 1110
9999 run: its type is address
9999 mem: location 1110 is 1154
9999 mem: storing 1154 in location 1118
 104 run: reply result:address:duplex-list
9999 mem: location 1118 is 1154
9999 run: result 0 is 1154
9999 mem: storing 1154 in location 1135
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1137 is 0
9999 mem: storing 1 in location 1137
 103 run: loop 
9999 run: jumping to instruction 21
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1134 is 1112
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1136 is 1
9999 mem: location 1130 is 5
9999 mem: storing 0 in location 1141
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1136 is 1
9999 mem: location 1138 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1142
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1142 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1137 is 1
9999 mem: location 1139 is 1100
9999 mem: location 1100 is 1
9999 mem: storing 1 in location 1143
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1143 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1134 is 1112
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1112 in location 1117
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1117 is 1112
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1117 is 1112
9999 mem: location 1112 is 97
9999 mem: location 1113 is 1119
9999 mem: location 1114 is 1154
9999 mem: location 1117 is 1112
9999 run: address to copy is 1114
9999 run: its type is address
9999 mem: location 1114 is 1154
9999 mem: storing 1154 in location 1118
 104 run: reply result:address:duplex-list
9999 mem: location 1118 is 1154
9999 run: result 0 is 1154
9999 mem: location 1140 is 1096
9999 mem: storing 1154 in location 1096
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1134 is 1112
9999 mem: location 1112 is 97
9999 mem: location 1113 is 1119
9999 mem: location 1114 is 1154
9999 mem: location 1134 is 1112
9999 run: address to copy is 1112
9999 run: its type is number
9999 mem: location 1112 is 97
9999 mem: storing 97 in location 1144
 103 run: color:number, highlighting-state:number <- get-color color:number, highlighting-state:number, c:character
9999 mem: location 1132 is 7
9999 mem: location 1133 is 0
9999 mem: location 1144 is 97
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1166
 104 run: highlighting-state:number <- next-ingredient 
9999 mem: storing 0 in location 1167
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1168
 104 run: color-is-white?:boolean <- equal color:number, 7:literal/white
9999 mem: location 1166 is 7
9999 mem: storing 1 in location 1169
 104 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c:character, 35:literal/#
9999 mem: location 1168 is 97
9999 mem: storing 0 in location 1170
 104 run: break-unless starting-comment?:boolean, 
9999 mem: location 1170 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color:number, 12:literal/lightblue
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1171
 104 run: break-unless color-is-blue?:boolean, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 19
 104 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c:character, 60:literal/<
9999 mem: location 1168 is 97
9999 mem: storing 0 in location 1173
 104 run: break-unless starting-assignment?:boolean, 
9999 mem: location 1173 is 0
9999 run: jumping to instruction 26
 104 run: color-is-red?:boolean <- equal color:number, 1:literal/red
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1174
 104 run: break-unless color-is-red?:boolean, 
9999 mem: location 1174 is 0
9999 run: jumping to instruction 34
 104 run: reply color:number, highlighting-state:number
9999 mem: location 1166 is 7
9999 mem: location 1167 is 0
9999 run: result 0 is 7
9999 run: result 1 is 0
9999 mem: storing 7 in location 1132
9999 mem: storing 0 in location 1133
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1144 is 97
9999 mem: storing 0 in location 1145
 103 run: break-unless newline?:boolean, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1137 is 1
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1147
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1147 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen:address, c:character, color:number
9999 mem: location 1127 is 1009
9999 mem: location 1144 is 97
9999 mem: location 1132 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1179
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1180
9999 mem: storing 1 in location 1181
 104 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 104 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 97
9999 mem: storing 0 in location 1189
 104 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1184 is 5
9999 mem: storing 5 in location 1192
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 5
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 6 in location 1192
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 97
9999 mem: storing 0 in location 1195
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 6
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 6
9999 mem: storing 1027 in location 1197
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1027
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1197 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 1198
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1027
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1197 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 1199
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 97
9999 mem: location 1198 is 1027
9999 mem: storing 97 in location 1027
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1028
9999 mem: storing 7 in location 1028
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1200 is 4
9999 mem: storing 0 in location 1201
 104 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1188 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1134 is 1112
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1112 in location 1117
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1117 is 1112
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1117 is 1112
9999 mem: location 1112 is 97
9999 mem: location 1113 is 1119
9999 mem: location 1114 is 1154
9999 mem: location 1117 is 1112
9999 run: address to copy is 1113
9999 run: its type is address
9999 mem: location 1113 is 1119
9999 mem: storing 1119 in location 1118
 104 run: reply result:address:duplex-list
9999 mem: location 1118 is 1119
9999 run: result 0 is 1119
9999 mem: storing 1119 in location 1134
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1135 is 1154
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1154 in location 1117
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1117 is 1154
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1117 is 1154
9999 mem: location 1154 is 101
9999 mem: location 1155 is 1112
9999 mem: location 1156 is 1109
9999 mem: location 1117 is 1154
9999 run: address to copy is 1155
9999 run: its type is address
9999 mem: location 1155 is 1112
9999 mem: storing 1112 in location 1118
 104 run: reply result:address:duplex-list
9999 mem: location 1118 is 1112
9999 run: result 0 is 1112
9999 mem: storing 1112 in location 1135
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1137 is 1
9999 mem: storing 2 in location 1137
 103 run: loop 
9999 run: jumping to instruction 21
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1134 is 1119
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1136 is 1
9999 mem: location 1130 is 5
9999 mem: storing 0 in location 1141
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1136 is 1
9999 mem: location 1138 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1142
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1142 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1137 is 2
9999 mem: location 1139 is 1100
9999 mem: location 1100 is 1
9999 mem: storing 0 in location 1143
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1143 is 0
9999 run: jumping to instruction 31
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1134 is 1119
9999 mem: location 1119 is 98
9999 mem: location 1120 is 1122
9999 mem: location 1121 is 1112
9999 mem: location 1134 is 1119
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 98
9999 mem: storing 98 in location 1144
 103 run: color:number, highlighting-state:number <- get-color color:number, highlighting-state:number, c:character
9999 mem: location 1132 is 7
9999 mem: location 1133 is 0
9999 mem: location 1144 is 98
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1166
 104 run: highlighting-state:number <- next-ingredient 
9999 mem: storing 0 in location 1167
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1168
 104 run: color-is-white?:boolean <- equal color:number, 7:literal/white
9999 mem: location 1166 is 7
9999 mem: storing 1 in location 1169
 104 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c:character, 35:literal/#
9999 mem: location 1168 is 98
9999 mem: storing 0 in location 1170
 104 run: break-unless starting-comment?:boolean, 
9999 mem: location 1170 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color:number, 12:literal/lightblue
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1171
 104 run: break-unless color-is-blue?:boolean, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 19
 104 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c:character, 60:literal/<
9999 mem: location 1168 is 98
9999 mem: storing 0 in location 1173
 104 run: break-unless starting-assignment?:boolean, 
9999 mem: location 1173 is 0
9999 run: jumping to instruction 26
 104 run: color-is-red?:boolean <- equal color:number, 1:literal/red
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1174
 104 run: break-unless color-is-red?:boolean, 
9999 mem: location 1174 is 0
9999 run: jumping to instruction 34
 104 run: reply color:number, highlighting-state:number
9999 mem: location 1166 is 7
9999 mem: location 1167 is 0
9999 run: result 0 is 7
9999 run: result 1 is 0
9999 mem: storing 7 in location 1132
9999 mem: storing 0 in location 1133
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1144 is 98
9999 mem: storing 0 in location 1145
 103 run: break-unless newline?:boolean, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1137 is 2
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1147
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1147 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen:address, c:character, color:number
9999 mem: location 1127 is 1009
9999 mem: location 1144 is 98
9999 mem: location 1132 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1179
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1180
9999 mem: storing 1 in location 1181
 104 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 104 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 98
9999 mem: storing 0 in location 1189
 104 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1184 is 5
9999 mem: storing 5 in location 1192
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 5
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 7 in location 1192
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 98
9999 mem: storing 0 in location 1195
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 7
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 7
9999 mem: storing 1029 in location 1197
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1029
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1197 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 1198
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1029
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1197 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 1199
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 98
9999 mem: location 1198 is 1029
9999 mem: storing 98 in location 1029
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1030
9999 mem: storing 7 in location 1030
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1200 is 4
9999 mem: storing 0 in location 1201
 104 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1188 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1134 is 1119
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1119 in location 1117
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1117 is 1119
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1117 is 1119
9999 mem: location 1119 is 98
9999 mem: location 1120 is 1122
9999 mem: location 1121 is 1112
9999 mem: location 1117 is 1119
9999 run: address to copy is 1120
9999 run: its type is address
9999 mem: location 1120 is 1122
9999 mem: storing 1122 in location 1118
 104 run: reply result:address:duplex-list
9999 mem: location 1118 is 1122
9999 run: result 0 is 1122
9999 mem: storing 1122 in location 1134
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1135 is 1112
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1112 in location 1117
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1117 is 1112
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1117 is 1112
9999 mem: location 1112 is 97
9999 mem: location 1113 is 1119
9999 mem: location 1114 is 1154
9999 mem: location 1117 is 1112
9999 run: address to copy is 1113
9999 run: its type is address
9999 mem: location 1113 is 1119
9999 mem: storing 1119 in location 1118
 104 run: reply result:address:duplex-list
9999 mem: location 1118 is 1119
9999 run: result 0 is 1119
9999 mem: storing 1119 in location 1135
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1137 is 2
9999 mem: storing 3 in location 1137
 103 run: loop 
9999 run: jumping to instruction 21
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1134 is 1122
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1136 is 1
9999 mem: location 1130 is 5
9999 mem: storing 0 in location 1141
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1136 is 1
9999 mem: location 1138 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1142
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1142 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1137 is 3
9999 mem: location 1139 is 1100
9999 mem: location 1100 is 1
9999 mem: storing 0 in location 1143
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1143 is 0
9999 run: jumping to instruction 31
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1134 is 1122
9999 mem: location 1122 is 99
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1119
9999 mem: location 1134 is 1122
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 99
9999 mem: storing 99 in location 1144
 103 run: color:number, highlighting-state:number <- get-color color:number, highlighting-state:number, c:character
9999 mem: location 1132 is 7
9999 mem: location 1133 is 0
9999 mem: location 1144 is 99
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1166
 104 run: highlighting-state:number <- next-ingredient 
9999 mem: storing 0 in location 1167
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1168
 104 run: color-is-white?:boolean <- equal color:number, 7:literal/white
9999 mem: location 1166 is 7
9999 mem: storing 1 in location 1169
 104 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c:character, 35:literal/#
9999 mem: location 1168 is 99
9999 mem: storing 0 in location 1170
 104 run: break-unless starting-comment?:boolean, 
9999 mem: location 1170 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color:number, 12:literal/lightblue
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1171
 104 run: break-unless color-is-blue?:boolean, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 19
 104 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c:character, 60:literal/<
9999 mem: location 1168 is 99
9999 mem: storing 0 in location 1173
 104 run: break-unless starting-assignment?:boolean, 
9999 mem: location 1173 is 0
9999 run: jumping to instruction 26
 104 run: color-is-red?:boolean <- equal color:number, 1:literal/red
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1174
 104 run: break-unless color-is-red?:boolean, 
9999 mem: location 1174 is 0
9999 run: jumping to instruction 34
 104 run: reply color:number, highlighting-state:number
9999 mem: location 1166 is 7
9999 mem: location 1167 is 0
9999 run: result 0 is 7
9999 run: result 1 is 0
9999 mem: storing 7 in location 1132
9999 mem: storing 0 in location 1133
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1144 is 99
9999 mem: storing 0 in location 1145
 103 run: break-unless newline?:boolean, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1137 is 3
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1147
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1147 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen:address, c:character, color:number
9999 mem: location 1127 is 1009
9999 mem: location 1144 is 99
9999 mem: location 1132 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1179
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1180
9999 mem: storing 1 in location 1181
 104 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 104 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 99
9999 mem: storing 0 in location 1189
 104 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1184 is 5
9999 mem: storing 5 in location 1192
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 5
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 8 in location 1192
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 99
9999 mem: storing 0 in location 1195
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 8
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 8
9999 mem: storing 1031 in location 1197
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1031
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1197 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1198
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1031
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1197 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1199
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 99
9999 mem: location 1198 is 1031
9999 mem: storing 99 in location 1031
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1032
9999 mem: storing 7 in location 1032
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1200 is 4
9999 mem: storing 0 in location 1201
 104 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1188 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1134 is 1122
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1122 in location 1117
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1117 is 1122
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1117 is 1122
9999 mem: location 1122 is 99
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1119
9999 mem: location 1117 is 1122
9999 run: address to copy is 1123
9999 run: its type is address
9999 mem: location 1123 is 0
9999 mem: storing 0 in location 1118
 104 run: reply result:address:duplex-list
9999 mem: location 1118 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1134
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1135 is 1119
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1119 in location 1117
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1117 is 1119
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1117 is 1119
9999 mem: location 1119 is 98
9999 mem: location 1120 is 1122
9999 mem: location 1121 is 1112
9999 mem: location 1117 is 1119
9999 run: address to copy is 1120
9999 run: its type is address
9999 mem: location 1120 is 1122
9999 mem: storing 1122 in location 1118
schedule: next-duplex/render/editor-event-loop/run1001/scenario-editor-wraps-line-on-insert
 104 run: reply result:address:duplex-list
9999 mem: location 1118 is 1122
9999 run: result 0 is 1122
9999 mem: storing 1122 in location 1135
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1137 is 3
9999 mem: storing 4 in location 1137
 103 run: loop 
9999 run: jumping to instruction 21
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1134 is 0
9999 run: jumping to instruction 67
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1136 is 1
9999 mem: location 1138 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1142
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1137 is 4
9999 mem: location 1139 is 1100
9999 mem: location 1100 is 1
9999 mem: storing 0 in location 1148
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1142 is 1
9999 mem: location 1148 is 0
9999 mem: storing 0 in location 1149
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1136 is 1
9999 mem: location 1138 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 0 in location 1150
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1151
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 1151 is 0
9999 run: jumping to instruction 86
 103 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1127 is 1009
9999 mem: location 1137 is 4
9999 mem: location 1131 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1159
 104 run: left:number <- next-ingredient 
9999 mem: storing 4 in location 1160
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1161
 104 run: column:number <- copy left:number
9999 mem: location 1160 is 4
9999 mem: storing 4 in location 1162
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1162 is 4
9999 mem: location 1161 is 4
9999 mem: storing 0 in location 1163
 104 run: break-if done?:boolean, 
9999 mem: location 1163 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1159 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1179
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1180
9999 mem: storing 0 in location 1181
 105 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1180
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 105 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 105 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1187
 105 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 105 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 105 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 105 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1187
 105 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 105 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 105 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1189
 105 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1184 is 5
9999 mem: storing 5 in location 1192
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 5
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 9 in location 1192
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 105 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1195
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 9
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 9
9999 mem: storing 1033 in location 1197
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1033
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1197 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1198
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1033
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1197 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1199
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 32
9999 mem: location 1198 is 1033
9999 mem: storing 32 in location 1033
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1034
9999 mem: storing 7 in location 1034
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1200 is 4
9999 mem: storing 1 in location 1201
 105 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 73
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1162 is 4
9999 mem: storing 5 in location 1162
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1162 is 5
9999 mem: location 1161 is 4
9999 mem: storing 1 in location 1163
 104 run: break-if done?:boolean, 
9999 mem: location 1163 is 1
9999 run: jumping to instruction 11
 103 run: reply row:number, screen:address/same-as-ingredient:0
9999 mem: location 1136 is 1
9999 mem: location 1127 is 1009
9999 run: result 0 is 1
9999 run: result 1 is 1009
9999 mem: storing 1 in location 1092
9999 mem: storing 1009 in location 1082
 102 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1084 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1154
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1084 is 1095
9999 run: address to copy is 1097
9999 run: its type is number
9999 mem: location 1097 is 0
9999 mem: storing 0 in location 1093
 102 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1084 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1154
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1084 is 1095
9999 run: address to copy is 1098
9999 run: its type is number
9999 mem: location 1098 is 4
9999 mem: storing 4 in location 1094
 102 run: row:number <- add row:number, 1:literal
9999 mem: location 1092 is 1
9999 mem: storing 2 in location 1092
 102 run: move-cursor screen:address, row:number, left:number
9999 mem: location 1082 is 1009
9999 mem: location 1092 is 2
9999 mem: location 1093 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1159
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1160
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1161
 103 run: break-unless x:address:screen, 
9999 mem: location 1159 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1159 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1162
 103 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1160 is 2
9999 mem: location 1162 is 1011
9999 mem: storing 2 in location 1011
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1159 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1163
 103 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1161 is 0
9999 mem: location 1163 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1159 is 1009
 102 run: clear-line-delimited screen:address, left:number, right:number
9999 mem: location 1082 is 1009
9999 mem: location 1093 is 0
9999 mem: location 1094 is 4
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1159
 103 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1160
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1161
 103 run: column:number <- copy left:number
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1162
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1162 is 0
9999 mem: location 1161 is 4
9999 mem: storing 0 in location 1163
 103 run: break-if done?:boolean, 
9999 mem: location 1163 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1159 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1179
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1180
9999 mem: storing 0 in location 1181
 104 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1180
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 104 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1189
 104 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1184 is 5
9999 mem: storing 10 in location 1192
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 10
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1192
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1195
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 10
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 10
9999 mem: storing 1035 in location 1197
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1197 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1198
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1197 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1199
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 32
9999 mem: location 1198 is 1035
9999 mem: storing 32 in location 1035
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1036
9999 mem: storing 7 in location 1036
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1200 is 4
9999 mem: storing 0 in location 1201
 104 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1188 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1162 is 0
9999 mem: storing 1 in location 1162
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1162 is 1
9999 mem: location 1161 is 4
9999 mem: storing 0 in location 1163
 103 run: break-if done?:boolean, 
9999 mem: location 1163 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1159 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1179
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1180
9999 mem: storing 0 in location 1181
 104 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1180
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 104 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1189
 104 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1184 is 5
9999 mem: storing 10 in location 1192
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 10
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1192
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1195
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 11
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 11
9999 mem: storing 1037 in location 1197
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1197 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1198
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1197 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1199
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 32
9999 mem: location 1198 is 1037
9999 mem: storing 32 in location 1037
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1200 is 4
9999 mem: storing 0 in location 1201
 104 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1188 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1162 is 1
9999 mem: storing 2 in location 1162
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1162 is 2
9999 mem: location 1161 is 4
9999 mem: storing 0 in location 1163
 103 run: break-if done?:boolean, 
9999 mem: location 1163 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1159 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1179
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1180
9999 mem: storing 0 in location 1181
 104 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1180
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 104 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1189
 104 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1184 is 5
9999 mem: storing 10 in location 1192
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 10
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1192
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1195
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 12
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 12
9999 mem: storing 1039 in location 1197
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1197 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1198
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1197 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1199
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 32
9999 mem: location 1198 is 1039
9999 mem: storing 32 in location 1039
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1200 is 4
9999 mem: storing 0 in location 1201
 104 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1188 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1162 is 2
9999 mem: storing 3 in location 1162
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1162 is 3
9999 mem: location 1161 is 4
9999 mem: storing 0 in location 1163
 103 run: break-if done?:boolean, 
9999 mem: location 1163 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1159 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1179
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1180
9999 mem: storing 0 in location 1181
 104 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1180
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 104 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1189
 104 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1184 is 5
9999 mem: storing 10 in location 1192
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 10
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1192
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1195
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 13
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 13
9999 mem: storing 1041 in location 1197
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1197 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1198
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1197 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1199
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 32
9999 mem: location 1198 is 1041
9999 mem: storing 32 in location 1041
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1200 is 4
9999 mem: storing 0 in location 1201
 104 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1188 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1162 is 3
9999 mem: storing 4 in location 1162
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1162 is 4
9999 mem: location 1161 is 4
9999 mem: storing 0 in location 1163
 103 run: break-if done?:boolean, 
9999 mem: location 1163 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1159 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1179
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1180
9999 mem: storing 0 in location 1181
 104 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1180
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 104 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1189
 104 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1184 is 5
9999 mem: storing 10 in location 1192
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 10
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1192
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1195
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 14
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 14
9999 mem: storing 1043 in location 1197
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1197 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1198
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1197 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1199
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 32
9999 mem: location 1198 is 1043
9999 mem: storing 32 in location 1043
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1044
9999 mem: storing 7 in location 1044
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1200 is 4
9999 mem: storing 1 in location 1201
 104 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 73
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1162 is 4
9999 mem: storing 5 in location 1162
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1162 is 5
9999 mem: location 1161 is 4
9999 mem: storing 1 in location 1163
 103 run: break-if done?:boolean, 
9999 mem: location 1163 is 1
9999 run: jumping to instruction 11
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 1083 is 1207
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1207 in location 1211
 103 run: break-unless x:address:console, 
9999 mem: location 1211 is 1207
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 1211 is 1207
9999 mem: location 1207 is 1
9999 mem: location 1208 is 1202
9999 mem: location 1211 is 1207
9999 run: address to copy is 1207
9999 mem: storing 1207 in location 1212
 103 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 1211 is 1207
9999 mem: location 1207 is 1
9999 mem: location 1208 is 1202
9999 mem: location 1211 is 1207
9999 run: address to copy is 1208
9999 run: its type is address
9999 mem: location 1208 is 1202
9999 mem: storing 1202 in location 1213
 103 run: max:number <- length buf:address:array:event/deref
9999 mem: location 1213 is 1202
9999 mem: location 1202 is 1
9999 mem: location 1203 is 0
9999 mem: location 1204 is 101
9999 mem: location 1205 is 0
9999 mem: location 1206 is 0
9999 mem: location 1213 is 1202
9999 mem: storing 1 in location 1214
 103 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 1212 is 1207
9999 mem: location 1207 is 1
9999 mem: location 1214 is 1
9999 mem: storing 1 in location 1215
 103 run: break-unless done?:boolean, 
9999 mem: location 1215 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: storing 1115 in location 1216
 103 run: reply dummy:address:event/deref, x:address:console/same-as-ingredient:0, 1:literal/found, 1:literal/quit
9999 mem: location 1216 is 1115
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1211 is 1207
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1207
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1085
9999 mem: storing 0 in location 1086
9999 mem: storing 0 in location 1087
9999 mem: storing 0 in location 1088
9999 mem: storing 1207 in location 1083
9999 mem: storing 1 in location 1089
9999 mem: storing 1 in location 1090
 102 run: loop-unless found?:boolean, 
9999 mem: location 1089 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?:boolean, 
9999 mem: location 1090 is 1
9999 run: jumping to instruction 25
 100 run: screen-should-contain [
    .     .
    .eabc .
    .     .
    .     .
  ]
 100 run: assume-console [
    type [f]
  ]
parse: instruction: type
parse:   ingredient: {name: "f", properties: [_: "literal-string"]}
 100 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1002
after-brace: editor-event-loop ...
 100 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1296
9999 mem: location 2 is 1095
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 14
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1082
 101 run: console:address <- next-ingredient 
9999 mem: storing 1296 in location 1083
 101 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1084
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 1083 is 1296
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 1296 in location 1211
 102 run: break-unless x:address:console, 
9999 mem: location 1211 is 1296
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 1211 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1297 is 1291
9999 mem: location 1211 is 1296
9999 run: address to copy is 1296
9999 mem: storing 1296 in location 1212
 102 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 1211 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1297 is 1291
9999 mem: location 1211 is 1296
9999 run: address to copy is 1297
9999 run: its type is address
9999 mem: location 1297 is 1291
9999 mem: storing 1291 in location 1213
 102 run: max:number <- length buf:address:array:event/deref
9999 mem: location 1213 is 1291
9999 mem: location 1291 is 1
9999 mem: location 1292 is 0
9999 mem: location 1293 is 102
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: location 1213 is 1291
9999 mem: storing 1 in location 1214
 102 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 1212 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1214 is 1
9999 mem: storing 0 in location 1215
 102 run: break-unless done?:boolean, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 12
 102 run: result:event <- index buf:address:array:event/deref, idx:address:number/deref
9999 mem: location 1213 is 1291
9999 mem: location 1291 is 1
9999 mem: location 1292 is 0
9999 mem: location 1293 is 102
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: location 1212 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1213 is 1291
9999 mem: location 1212 is 1296
9999 mem: location 1296 is 0
9999 run: address to copy is 1292
9999 run: its type is event
9999 mem: location 1292 is 0
9999 mem: location 1293 is 102
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: storing 0 in location 1217
9999 mem: storing 102 in location 1218
9999 mem: storing 0 in location 1219
9999 mem: storing 0 in location 1220
 102 run: idx:address:number/deref <- add idx:address:number/deref, 1:literal
9999 mem: location 1212 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1212 is 1296
9999 mem: storing 1 in location 1296
 102 run: reply result:event, x:address:console/same-as-ingredient:0, 1:literal/found, 0:literal/quit
9999 mem: location 1217 is 0
9999 mem: location 1218 is 102
9999 mem: location 1219 is 0
9999 mem: location 1220 is 0
9999 mem: location 1211 is 1296
9999 run: result 0 is [0, 102, 0, 0]
9999 run: result 1 is 1296
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1085
9999 mem: storing 102 in location 1086
9999 mem: storing 0 in location 1087
9999 mem: storing 0 in location 1088
9999 mem: storing 1296 in location 1083
9999 mem: storing 1 in location 1089
9999 mem: storing 0 in location 1090
 101 run: loop-unless found?:boolean, 
9999 mem: location 1089 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?:boolean, 
9999 mem: location 1090 is 0
9999 run: jump-if fell through
 101 run: trace [app], [next-event]
   1 app: next-event
 101 run: t:address:touch-event <- maybe-convert e:event, touch:variant
9999 mem: location 1085 is 0
9999 mem: location 1086 is 102
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: storing 0 in location 1091
 101 run: break-unless t:address:touch-event, 
9999 mem: location 1091 is 0
9999 run: jumping to instruction 15
 101 run: handle-event screen:address, console:address, editor:address:editor-data, e:event
9999 mem: location 1082 is 1009
9999 mem: location 1083 is 1296
9999 mem: location 1084 is 1095
9999 mem: location 1085 is 0
9999 mem: location 1086 is 102
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 45
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1224
 102 run: console:address <- next-ingredient 
9999 mem: storing 1296 in location 1225
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1226
 102 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1227
9999 mem: storing 102 in location 1228
9999 mem: storing 0 in location 1229
9999 mem: storing 0 in location 1230
 102 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 1226 is 1095
9999 run: jumping to instruction 7
 102 run: c:address:character <- maybe-convert e:event, text:variant
9999 mem: location 1227 is 0
9999 mem: location 1228 is 102
9999 mem: location 1229 is 0
9999 mem: location 1230 is 0
9999 mem: storing 1228 in location 1231
 102 run: break-unless c:address:character, 
9999 mem: location 1231 is 1228
9999 run: jump-unless fell through
 102 run: backspace?:boolean <- equal c:address:character/deref, 8:literal/backspace
9999 mem: location 1231 is 1228
9999 mem: location 1228 is 102
9999 mem: storing 0 in location 1232
 102 run: break-unless backspace?:boolean, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 15
 102 run: ctrl-a?:boolean <- equal c:address:character/deref, 1:literal/ctrl-a
9999 mem: location 1231 is 1228
9999 mem: location 1228 is 102
9999 mem: storing 0 in location 1233
 102 run: break-unless ctrl-a?:boolean, 
9999 mem: location 1233 is 0
9999 run: jumping to instruction 21
 102 run: ctrl-e?:boolean <- equal c:address:character/deref, 5:literal/ctrl-e
9999 mem: location 1231 is 1228
9999 mem: location 1228 is 102
9999 mem: storing 0 in location 1234
 102 run: break-unless ctrl-e?:boolean, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 27
 102 run: ctrl-u?:boolean <- equal c:address:character/deref, 21:literal/ctrl-u
9999 mem: location 1231 is 1228
9999 mem: location 1228 is 102
9999 mem: storing 0 in location 1235
 102 run: break-unless ctrl-u?:boolean, 
9999 mem: location 1235 is 0
9999 run: jumping to instruction 33
 102 run: ctrl-k?:boolean <- equal c:address:character/deref, 11:literal/ctrl-k
9999 mem: location 1231 is 1228
9999 mem: location 1228 is 102
9999 mem: storing 0 in location 1236
 102 run: break-unless ctrl-k?:boolean, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 39
 102 run: tab?:boolean <- equal c:address:character/deref, 9:literal/tab
9999 mem: location 1231 is 1228
9999 mem: location 1228 is 102
9999 mem: storing 0 in location 1237
 102 run: break-unless tab?:boolean, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 46
 102 run: insert-at-cursor editor:address:editor-data, c:address:character/deref, screen:address
9999 mem: location 1226 is 1095
9999 mem: location 1231 is 1228
9999 mem: location 1228 is 102
9999 mem: location 1224 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 19
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1270
 103 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1271
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1272
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1270 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1154
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1270 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1273
 103 run: insert-duplex c:character, before-cursor:address:address:duplex-list/deref
9999 mem: location 1271 is 102
9999 mem: location 1273 is 1096
9999 mem: location 1096 is 1154
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 102 in location 1103
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1154 in location 1104
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: storing 1288 in location 1105
 104 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1105 is 1288
9999 mem: location 1288 is 0
9999 mem: location 1289 is 0
9999 mem: location 1290 is 0
9999 mem: location 1105 is 1288
9999 run: address to copy is 1288
9999 mem: storing 1288 in location 1106
 104 run: val:address:location/deref <- copy x:location
9999 mem: location 1103 is 102
9999 mem: location 1106 is 1288
9999 mem: storing 102 in location 1288
 104 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1104 is 1154
9999 mem: location 1154 is 101
9999 mem: location 1155 is 1112
9999 mem: location 1156 is 1109
9999 mem: location 1104 is 1154
9999 run: address to copy is 1155
9999 run: its type is address
9999 mem: location 1155 is 1112
9999 mem: storing 1112 in location 1107
 104 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1104 is 1154
9999 mem: location 1154 is 101
9999 mem: location 1155 is 1112
9999 mem: location 1156 is 1109
9999 mem: location 1104 is 1154
9999 run: address to copy is 1155
9999 mem: storing 1155 in location 1108
 104 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1105 is 1288
9999 mem: location 1108 is 1155
9999 mem: storing 1288 in location 1155
 104 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1105 is 1288
9999 mem: location 1288 is 102
9999 mem: location 1289 is 0
9999 mem: location 1290 is 0
9999 mem: location 1105 is 1288
9999 run: address to copy is 1290
9999 mem: storing 1290 in location 1108
 104 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1104 is 1154
9999 mem: location 1108 is 1290
9999 mem: storing 1154 in location 1290
 104 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1105 is 1288
9999 mem: location 1288 is 102
9999 mem: location 1289 is 0
9999 mem: location 1290 is 1154
9999 mem: location 1105 is 1288
9999 run: address to copy is 1289
9999 mem: storing 1289 in location 1108
 104 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1107 is 1112
9999 mem: location 1108 is 1289
9999 mem: storing 1112 in location 1289
 104 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1107 is 1112
9999 run: jumping to instruction 15
 104 run: y:address:address:duplex-list <- get-address next-node:address:duplex-list/deref, prev:offset
9999 mem: location 1107 is 1112
9999 mem: location 1112 is 97
9999 mem: location 1113 is 1119
9999 mem: location 1114 is 1154
9999 mem: location 1107 is 1112
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1108
 104 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1105 is 1288
9999 mem: location 1108 is 1114
9999 mem: storing 1288 in location 1114
 104 run: reply new-node:address:duplex-list
9999 mem: location 1105 is 1288
 103 run: before-cursor:address:address:duplex-list/deref <- next-duplex before-cursor:address:address:duplex-list/deref
9999 mem: location 1273 is 1096
9999 mem: location 1096 is 1154
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1298
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1154 in location 1300
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1300 is 1154
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1300 is 1154
9999 mem: location 1154 is 101
9999 mem: location 1155 is 1288
9999 mem: location 1156 is 1109
9999 mem: location 1300 is 1154
9999 run: address to copy is 1155
9999 run: its type is address
9999 mem: location 1155 is 1288
9999 mem: storing 1288 in location 1301
 104 run: reply result:address:duplex-list
9999 mem: location 1301 is 1288
9999 run: result 0 is 1288
9999 mem: location 1273 is 1096
9999 mem: storing 1288 in location 1096
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1270 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1288
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1270 is 1095
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1274
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1270 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1288
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1270 is 1095
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1275
schedule: insert-at-cursor/handle-event/editor-event-loop/run1002/scenario-editor-wraps-line-on-insert
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1270 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1288
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1270 is 1095
9999 run: address to copy is 1097
9999 run: its type is number
9999 mem: location 1097 is 0
9999 mem: storing 0 in location 1276
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1270 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1288
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 1
9999 mem: location 1270 is 1095
9999 run: address to copy is 1098
9999 run: its type is number
9999 mem: location 1098 is 4
9999 mem: storing 4 in location 1277
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1271 is 102
9999 mem: storing 0 in location 1278
 103 run: break-unless newline?:boolean, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 28
 103 run: wrap-column:number <- subtract right:number, 1:literal
9999 mem: location 1277 is 4
9999 mem: storing 3 in location 1284
 103 run: at-wrap?:boolean <- greater-or-equal cursor-column:address:number/deref, wrap-column:number
9999 mem: location 1275 is 1100
9999 mem: location 1100 is 1
9999 mem: location 1284 is 3
9999 mem: storing 0 in location 1285
 103 run: break-unless at-wrap?:boolean, 
9999 mem: location 1285 is 0
9999 run: jumping to instruction 39
 103 run: cursor-column:address:number/deref <- add cursor-column:address:number/deref, 1:literal
9999 mem: location 1275 is 1100
9999 mem: location 1100 is 1
9999 mem: location 1275 is 1100
9999 mem: storing 2 in location 1100
 102 run: reply 
 101 run: row:number, screen:address <- render screen:address, editor:address:editor-data
9999 mem: location 1082 is 1009
9999 mem: location 1084 is 1095
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 28
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1127
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1128
 102 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 1128 is 1095
9999 run: jumping to instruction 5
 102 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1128 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1288
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 2
9999 mem: location 1128 is 1095
9999 run: address to copy is 1097
9999 run: its type is number
9999 mem: location 1097 is 0
9999 mem: storing 0 in location 1129
 102 run: screen-height:number <- screen-height screen:address
9999 mem: location 1127 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1300
 103 run: break-unless x:address:screen, 
9999 mem: location 1300 is 1009
9999 run: jump-unless fell through
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1300 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1301
 103 run: reply height:number
9999 mem: location 1301 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1130
 102 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1128 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1288
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 2
9999 mem: location 1128 is 1095
9999 run: address to copy is 1098
9999 run: its type is number
9999 mem: location 1098 is 4
9999 mem: storing 4 in location 1131
 102 run: hide-screen screen:address
9999 mem: location 1127 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: new alloc: 1302
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1304
 103 run: break-unless x:address:screen, 
9999 mem: location 1304 is 1009
9999 run: jump-unless fell through
 103 run: reply x:address:screen
9999 mem: location 1304 is 1009
 102 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1132
 102 run: highlighting-state:number <- copy 0:literal/normal
9999 mem: storing 0 in location 1133
 102 run: curr:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 1128 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1288
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 2
9999 mem: location 1128 is 1095
9999 run: address to copy is 1095
9999 run: its type is address
9999 mem: location 1095 is 1109
9999 mem: storing 1109 in location 1134
 102 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1134 is 1109
9999 mem: storing 1109 in location 1135
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1134 is 1109
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1109 in location 1300
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1300 is 1109
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1300 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 1154
9999 mem: location 1111 is 0
9999 mem: location 1300 is 1109
9999 run: address to copy is 1110
9999 run: its type is address
9999 mem: location 1110 is 1154
9999 mem: storing 1154 in location 1301
 103 run: reply result:address:duplex-list
9999 mem: location 1301 is 1154
9999 run: result 0 is 1154
9999 mem: storing 1154 in location 1134
 102 run: row:number <- copy 1:literal/top
9999 mem: storing 1 in location 1136
 102 run: column:number <- copy left:number
9999 mem: location 1129 is 0
9999 mem: storing 0 in location 1137
 102 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1128 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1288
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 2
9999 mem: location 1128 is 1095
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1138
 102 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1128 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1288
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 2
9999 mem: location 1128 is 1095
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1139
 102 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1128 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1288
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 2
9999 mem: location 1128 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1140
 102 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1127 is 1009
9999 mem: location 1136 is 1
9999 mem: location 1137 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1159
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1160
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1161
 103 run: break-unless x:address:screen, 
9999 mem: location 1159 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1159 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1162
 103 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1160 is 1
9999 mem: location 1162 is 1011
9999 mem: storing 1 in location 1011
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1159 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1163
 103 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1161 is 0
9999 mem: location 1163 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1159 is 1009
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 1134 is 1154
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1136 is 1
9999 mem: location 1130 is 5
9999 mem: storing 0 in location 1141
 102 run: break-if off-screen?:boolean, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1136 is 1
9999 mem: location 1138 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1142
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1142 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1137 is 0
9999 mem: location 1139 is 1100
9999 mem: location 1100 is 2
9999 mem: storing 0 in location 1143
 102 run: break-unless at-cursor?:boolean, 
9999 mem: location 1143 is 0
9999 run: jumping to instruction 31
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1134 is 1154
9999 mem: location 1154 is 101
9999 mem: location 1155 is 1288
9999 mem: location 1156 is 1109
9999 mem: location 1134 is 1154
9999 run: address to copy is 1154
9999 run: its type is number
9999 mem: location 1154 is 101
9999 mem: storing 101 in location 1144
 102 run: color:number, highlighting-state:number <- get-color color:number, highlighting-state:number, c:character
9999 mem: location 1132 is 7
9999 mem: location 1133 is 0
9999 mem: location 1144 is 101
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1166
 103 run: highlighting-state:number <- next-ingredient 
9999 mem: storing 0 in location 1167
 103 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1168
 103 run: color-is-white?:boolean <- equal color:number, 7:literal/white
9999 mem: location 1166 is 7
9999 mem: storing 1 in location 1169
 103 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c:character, 35:literal/#
9999 mem: location 1168 is 101
9999 mem: storing 0 in location 1170
 103 run: break-unless starting-comment?:boolean, 
9999 mem: location 1170 is 0
9999 run: jumping to instruction 11
 103 run: color-is-blue?:boolean <- equal color:number, 12:literal/lightblue
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1171
 103 run: break-unless color-is-blue?:boolean, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 19
 103 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c:character, 60:literal/<
9999 mem: location 1168 is 101
9999 mem: storing 0 in location 1173
 103 run: break-unless starting-assignment?:boolean, 
9999 mem: location 1173 is 0
9999 run: jumping to instruction 26
 103 run: color-is-red?:boolean <- equal color:number, 1:literal/red
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1174
 103 run: break-unless color-is-red?:boolean, 
9999 mem: location 1174 is 0
9999 run: jumping to instruction 34
 103 run: reply color:number, highlighting-state:number
9999 mem: location 1166 is 7
9999 mem: location 1167 is 0
9999 run: result 0 is 7
9999 run: result 1 is 0
9999 mem: storing 7 in location 1132
9999 mem: storing 0 in location 1133
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1144 is 101
9999 mem: storing 0 in location 1145
 102 run: break-unless newline?:boolean, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1137 is 0
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1147
 102 run: break-unless at-right?:boolean, 
9999 mem: location 1147 is 0
9999 run: jumping to instruction 61
 102 run: print-character screen:address, c:character, color:number
9999 mem: location 1127 is 1009
9999 mem: location 1144 is 101
9999 mem: location 1132 is 7
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 103 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1179
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1180
9999 mem: storing 1 in location 1181
 103 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 103 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 103 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 103 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 103 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 103 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 101
9999 mem: storing 0 in location 1189
 103 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1184 is 5
9999 mem: storing 5 in location 1192
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 5
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 5 in location 1192
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 103 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 101
9999 mem: storing 0 in location 1195
 103 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 5
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 5
9999 mem: storing 1025 in location 1197
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1025
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1197 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1198
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1025
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1197 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1199
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 101
9999 mem: location 1198 is 1025
9999 mem: storing 101 in location 1025
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1026
9999 mem: storing 7 in location 1026
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1200 is 4
9999 mem: storing 0 in location 1201
 103 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1188 is 1012
9999 mem: storing 1 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1134 is 1154
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1154 in location 1300
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1300 is 1154
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1300 is 1154
9999 mem: location 1154 is 101
9999 mem: location 1155 is 1288
9999 mem: location 1156 is 1109
9999 mem: location 1300 is 1154
9999 run: address to copy is 1155
9999 run: its type is address
9999 mem: location 1155 is 1288
9999 mem: storing 1288 in location 1301
 103 run: reply result:address:duplex-list
9999 mem: location 1301 is 1288
9999 run: result 0 is 1288
9999 mem: storing 1288 in location 1134
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1135 is 1109
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1109 in location 1300
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1300 is 1109
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1300 is 1109
9999 mem: location 1109 is 167
9999 mem: location 1110 is 1154
9999 mem: location 1111 is 0
9999 mem: location 1300 is 1109
9999 run: address to copy is 1110
9999 run: its type is address
9999 mem: location 1110 is 1154
9999 mem: storing 1154 in location 1301
 103 run: reply result:address:duplex-list
9999 mem: location 1301 is 1154
9999 run: result 0 is 1154
9999 mem: storing 1154 in location 1135
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 1137 is 0
9999 mem: storing 1 in location 1137
 102 run: loop 
9999 run: jumping to instruction 21
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 1134 is 1288
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1136 is 1
9999 mem: location 1130 is 5
9999 mem: storing 0 in location 1141
 102 run: break-if off-screen?:boolean, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1136 is 1
9999 mem: location 1138 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1142
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1142 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1137 is 1
9999 mem: location 1139 is 1100
9999 mem: location 1100 is 2
9999 mem: storing 0 in location 1143
 102 run: break-unless at-cursor?:boolean, 
9999 mem: location 1143 is 0
9999 run: jumping to instruction 31
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1134 is 1288
9999 mem: location 1288 is 102
9999 mem: location 1289 is 1112
9999 mem: location 1290 is 1154
9999 mem: location 1134 is 1288
9999 run: address to copy is 1288
9999 run: its type is number
9999 mem: location 1288 is 102
9999 mem: storing 102 in location 1144
 102 run: color:number, highlighting-state:number <- get-color color:number, highlighting-state:number, c:character
9999 mem: location 1132 is 7
9999 mem: location 1133 is 0
9999 mem: location 1144 is 102
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1166
 103 run: highlighting-state:number <- next-ingredient 
9999 mem: storing 0 in location 1167
 103 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1168
 103 run: color-is-white?:boolean <- equal color:number, 7:literal/white
9999 mem: location 1166 is 7
9999 mem: storing 1 in location 1169
 103 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c:character, 35:literal/#
9999 mem: location 1168 is 102
9999 mem: storing 0 in location 1170
 103 run: break-unless starting-comment?:boolean, 
9999 mem: location 1170 is 0
9999 run: jumping to instruction 11
 103 run: color-is-blue?:boolean <- equal color:number, 12:literal/lightblue
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1171
 103 run: break-unless color-is-blue?:boolean, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 19
 103 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c:character, 60:literal/<
9999 mem: location 1168 is 102
9999 mem: storing 0 in location 1173
 103 run: break-unless starting-assignment?:boolean, 
9999 mem: location 1173 is 0
9999 run: jumping to instruction 26
 103 run: color-is-red?:boolean <- equal color:number, 1:literal/red
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1174
 103 run: break-unless color-is-red?:boolean, 
9999 mem: location 1174 is 0
9999 run: jumping to instruction 34
 103 run: reply color:number, highlighting-state:number
9999 mem: location 1166 is 7
9999 mem: location 1167 is 0
9999 run: result 0 is 7
9999 run: result 1 is 0
9999 mem: storing 7 in location 1132
9999 mem: storing 0 in location 1133
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1144 is 102
9999 mem: storing 0 in location 1145
 102 run: break-unless newline?:boolean, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1137 is 1
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1147
 102 run: break-unless at-right?:boolean, 
9999 mem: location 1147 is 0
9999 run: jumping to instruction 61
 102 run: print-character screen:address, c:character, color:number
9999 mem: location 1127 is 1009
9999 mem: location 1144 is 102
9999 mem: location 1132 is 7
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 103 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1179
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1180
9999 mem: storing 1 in location 1181
 103 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 103 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 103 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 103 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 103 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 103 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 102
9999 mem: storing 0 in location 1189
 103 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1184 is 5
9999 mem: storing 5 in location 1192
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 5
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 6 in location 1192
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 103 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 102
9999 mem: storing 0 in location 1195
 103 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 6
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 6
9999 mem: storing 1027 in location 1197
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1027
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1197 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 1198
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1027
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1197 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 1199
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 102
9999 mem: location 1198 is 1027
9999 mem: storing 102 in location 1027
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1028
9999 mem: storing 7 in location 1028
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1200 is 4
9999 mem: storing 0 in location 1201
 103 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1188 is 1012
9999 mem: storing 2 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1134 is 1288
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1288 in location 1300
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1300 is 1288
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1300 is 1288
9999 mem: location 1288 is 102
9999 mem: location 1289 is 1112
9999 mem: location 1290 is 1154
9999 mem: location 1300 is 1288
9999 run: address to copy is 1289
9999 run: its type is address
9999 mem: location 1289 is 1112
9999 mem: storing 1112 in location 1301
 103 run: reply result:address:duplex-list
9999 mem: location 1301 is 1112
9999 run: result 0 is 1112
9999 mem: storing 1112 in location 1134
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1135 is 1154
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1154 in location 1300
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1300 is 1154
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1300 is 1154
9999 mem: location 1154 is 101
9999 mem: location 1155 is 1288
9999 mem: location 1156 is 1109
9999 mem: location 1300 is 1154
9999 run: address to copy is 1155
9999 run: its type is address
9999 mem: location 1155 is 1288
9999 mem: storing 1288 in location 1301
 103 run: reply result:address:duplex-list
9999 mem: location 1301 is 1288
9999 run: result 0 is 1288
9999 mem: storing 1288 in location 1135
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 1137 is 1
9999 mem: storing 2 in location 1137
 102 run: loop 
9999 run: jumping to instruction 21
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 1134 is 1112
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1136 is 1
9999 mem: location 1130 is 5
9999 mem: storing 0 in location 1141
 102 run: break-if off-screen?:boolean, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1136 is 1
9999 mem: location 1138 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1142
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1142 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1137 is 2
9999 mem: location 1139 is 1100
9999 mem: location 1100 is 2
9999 mem: storing 1 in location 1143
 102 run: break-unless at-cursor?:boolean, 
9999 mem: location 1143 is 1
9999 run: jump-unless fell through
 102 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1134 is 1112
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1112 in location 1300
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1300 is 1112
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1300 is 1112
9999 mem: location 1112 is 97
9999 mem: location 1113 is 1119
9999 mem: location 1114 is 1288
9999 mem: location 1300 is 1112
9999 run: address to copy is 1114
9999 run: its type is address
9999 mem: location 1114 is 1288
9999 mem: storing 1288 in location 1301
 103 run: reply result:address:duplex-list
9999 mem: location 1301 is 1288
9999 run: result 0 is 1288
9999 mem: location 1140 is 1096
9999 mem: storing 1288 in location 1096
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1134 is 1112
9999 mem: location 1112 is 97
9999 mem: location 1113 is 1119
9999 mem: location 1114 is 1288
9999 mem: location 1134 is 1112
9999 run: address to copy is 1112
9999 run: its type is number
9999 mem: location 1112 is 97
9999 mem: storing 97 in location 1144
 102 run: color:number, highlighting-state:number <- get-color color:number, highlighting-state:number, c:character
9999 mem: location 1132 is 7
9999 mem: location 1133 is 0
9999 mem: location 1144 is 97
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1166
 103 run: highlighting-state:number <- next-ingredient 
9999 mem: storing 0 in location 1167
 103 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1168
 103 run: color-is-white?:boolean <- equal color:number, 7:literal/white
9999 mem: location 1166 is 7
9999 mem: storing 1 in location 1169
 103 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c:character, 35:literal/#
9999 mem: location 1168 is 97
9999 mem: storing 0 in location 1170
 103 run: break-unless starting-comment?:boolean, 
9999 mem: location 1170 is 0
9999 run: jumping to instruction 11
 103 run: color-is-blue?:boolean <- equal color:number, 12:literal/lightblue
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1171
 103 run: break-unless color-is-blue?:boolean, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 19
 103 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c:character, 60:literal/<
9999 mem: location 1168 is 97
9999 mem: storing 0 in location 1173
 103 run: break-unless starting-assignment?:boolean, 
9999 mem: location 1173 is 0
9999 run: jumping to instruction 26
 103 run: color-is-red?:boolean <- equal color:number, 1:literal/red
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1174
 103 run: break-unless color-is-red?:boolean, 
9999 mem: location 1174 is 0
9999 run: jumping to instruction 34
 103 run: reply color:number, highlighting-state:number
9999 mem: location 1166 is 7
9999 mem: location 1167 is 0
9999 run: result 0 is 7
9999 run: result 1 is 0
9999 mem: storing 7 in location 1132
9999 mem: storing 0 in location 1133
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1144 is 97
9999 mem: storing 0 in location 1145
 102 run: break-unless newline?:boolean, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1137 is 2
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1147
 102 run: break-unless at-right?:boolean, 
9999 mem: location 1147 is 0
9999 run: jumping to instruction 61
 102 run: print-character screen:address, c:character, color:number
9999 mem: location 1127 is 1009
9999 mem: location 1144 is 97
9999 mem: location 1132 is 7
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 103 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1179
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1180
9999 mem: storing 1 in location 1181
 103 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 103 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 103 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 103 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 103 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 103 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 97
9999 mem: storing 0 in location 1189
 103 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1184 is 5
9999 mem: storing 5 in location 1192
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 5
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 7 in location 1192
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 103 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 97
9999 mem: storing 0 in location 1195
 103 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 7
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 7
9999 mem: storing 1029 in location 1197
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1029
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1197 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 1198
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1029
9999 mem: location 1029 is 98
9999 mem: location 1030 is 7
9999 mem: location 1197 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 1199
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 97
9999 mem: location 1198 is 1029
9999 mem: storing 97 in location 1029
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1030
9999 mem: storing 7 in location 1030
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1200 is 4
9999 mem: storing 0 in location 1201
 103 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1188 is 1012
9999 mem: storing 3 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1134 is 1112
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1112 in location 1300
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1300 is 1112
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1300 is 1112
9999 mem: location 1112 is 97
9999 mem: location 1113 is 1119
9999 mem: location 1114 is 1288
9999 mem: location 1300 is 1112
9999 run: address to copy is 1113
9999 run: its type is address
9999 mem: location 1113 is 1119
9999 mem: storing 1119 in location 1301
 103 run: reply result:address:duplex-list
9999 mem: location 1301 is 1119
9999 run: result 0 is 1119
9999 mem: storing 1119 in location 1134
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1135 is 1288
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1288 in location 1300
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1300 is 1288
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1300 is 1288
9999 mem: location 1288 is 102
9999 mem: location 1289 is 1112
9999 mem: location 1290 is 1154
9999 mem: location 1300 is 1288
9999 run: address to copy is 1289
9999 run: its type is address
9999 mem: location 1289 is 1112
9999 mem: storing 1112 in location 1301
 103 run: reply result:address:duplex-list
9999 mem: location 1301 is 1112
9999 run: result 0 is 1112
9999 mem: storing 1112 in location 1135
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 1137 is 2
9999 mem: storing 3 in location 1137
 102 run: loop 
9999 run: jumping to instruction 21
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 1134 is 1119
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1136 is 1
9999 mem: location 1130 is 5
9999 mem: storing 0 in location 1141
 102 run: break-if off-screen?:boolean, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1136 is 1
9999 mem: location 1138 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1142
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1142 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1137 is 3
9999 mem: location 1139 is 1100
9999 mem: location 1100 is 2
9999 mem: storing 0 in location 1143
 102 run: break-unless at-cursor?:boolean, 
9999 mem: location 1143 is 0
9999 run: jumping to instruction 31
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1134 is 1119
9999 mem: location 1119 is 98
9999 mem: location 1120 is 1122
9999 mem: location 1121 is 1112
9999 mem: location 1134 is 1119
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 98
9999 mem: storing 98 in location 1144
 102 run: color:number, highlighting-state:number <- get-color color:number, highlighting-state:number, c:character
9999 mem: location 1132 is 7
9999 mem: location 1133 is 0
9999 mem: location 1144 is 98
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1166
 103 run: highlighting-state:number <- next-ingredient 
9999 mem: storing 0 in location 1167
 103 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1168
 103 run: color-is-white?:boolean <- equal color:number, 7:literal/white
9999 mem: location 1166 is 7
9999 mem: storing 1 in location 1169
 103 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c:character, 35:literal/#
9999 mem: location 1168 is 98
9999 mem: storing 0 in location 1170
 103 run: break-unless starting-comment?:boolean, 
9999 mem: location 1170 is 0
9999 run: jumping to instruction 11
 103 run: color-is-blue?:boolean <- equal color:number, 12:literal/lightblue
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1171
 103 run: break-unless color-is-blue?:boolean, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 19
 103 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c:character, 60:literal/<
9999 mem: location 1168 is 98
9999 mem: storing 0 in location 1173
 103 run: break-unless starting-assignment?:boolean, 
9999 mem: location 1173 is 0
9999 run: jumping to instruction 26
 103 run: color-is-red?:boolean <- equal color:number, 1:literal/red
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1174
 103 run: break-unless color-is-red?:boolean, 
9999 mem: location 1174 is 0
9999 run: jumping to instruction 34
 103 run: reply color:number, highlighting-state:number
9999 mem: location 1166 is 7
9999 mem: location 1167 is 0
9999 run: result 0 is 7
9999 run: result 1 is 0
9999 mem: storing 7 in location 1132
9999 mem: storing 0 in location 1133
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1144 is 98
9999 mem: storing 0 in location 1145
 102 run: break-unless newline?:boolean, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1137 is 3
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1147
 102 run: break-unless at-right?:boolean, 
9999 mem: location 1147 is 0
9999 run: jumping to instruction 61
 102 run: print-character screen:address, c:character, color:number
9999 mem: location 1127 is 1009
9999 mem: location 1144 is 98
9999 mem: location 1132 is 7
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 103 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1179
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1180
9999 mem: storing 1 in location 1181
 103 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 103 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 103 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 103 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 103 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 103 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 98
9999 mem: storing 0 in location 1189
 103 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1184 is 5
9999 mem: storing 5 in location 1192
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 5
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 8 in location 1192
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 103 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 98
9999 mem: storing 0 in location 1195
 103 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 8
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 8
9999 mem: storing 1031 in location 1197
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1031
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1197 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1198
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1031
9999 mem: location 1031 is 99
9999 mem: location 1032 is 7
9999 mem: location 1197 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1199
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 98
9999 mem: location 1198 is 1031
9999 mem: storing 98 in location 1031
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1032
9999 mem: storing 7 in location 1032
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1200 is 4
9999 mem: storing 0 in location 1201
 103 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1188 is 1012
9999 mem: storing 4 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1134 is 1119
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1119 in location 1300
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1300 is 1119
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1300 is 1119
9999 mem: location 1119 is 98
9999 mem: location 1120 is 1122
9999 mem: location 1121 is 1112
9999 mem: location 1300 is 1119
9999 run: address to copy is 1120
9999 run: its type is address
9999 mem: location 1120 is 1122
9999 mem: storing 1122 in location 1301
 103 run: reply result:address:duplex-list
9999 mem: location 1301 is 1122
9999 run: result 0 is 1122
9999 mem: storing 1122 in location 1134
schedule: render/editor-event-loop/run1002/scenario-editor-wraps-line-on-insert
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1135 is 1112
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1112 in location 1300
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1300 is 1112
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1300 is 1112
9999 mem: location 1112 is 97
9999 mem: location 1113 is 1119
9999 mem: location 1114 is 1288
9999 mem: location 1300 is 1112
9999 run: address to copy is 1113
9999 run: its type is address
9999 mem: location 1113 is 1119
9999 mem: storing 1119 in location 1301
 103 run: reply result:address:duplex-list
9999 mem: location 1301 is 1119
9999 run: result 0 is 1119
9999 mem: storing 1119 in location 1135
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 1137 is 3
9999 mem: storing 4 in location 1137
 102 run: loop 
9999 run: jumping to instruction 21
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 1134 is 1122
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1136 is 1
9999 mem: location 1130 is 5
9999 mem: storing 0 in location 1141
 102 run: break-if off-screen?:boolean, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1136 is 1
9999 mem: location 1138 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 1 in location 1142
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1142 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1137 is 4
9999 mem: location 1139 is 1100
9999 mem: location 1100 is 2
9999 mem: storing 0 in location 1143
 102 run: break-unless at-cursor?:boolean, 
9999 mem: location 1143 is 0
9999 run: jumping to instruction 31
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1134 is 1122
9999 mem: location 1122 is 99
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1119
9999 mem: location 1134 is 1122
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 99
9999 mem: storing 99 in location 1144
 102 run: color:number, highlighting-state:number <- get-color color:number, highlighting-state:number, c:character
9999 mem: location 1132 is 7
9999 mem: location 1133 is 0
9999 mem: location 1144 is 99
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1166
 103 run: highlighting-state:number <- next-ingredient 
9999 mem: storing 0 in location 1167
 103 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1168
 103 run: color-is-white?:boolean <- equal color:number, 7:literal/white
9999 mem: location 1166 is 7
9999 mem: storing 1 in location 1169
 103 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c:character, 35:literal/#
9999 mem: location 1168 is 99
9999 mem: storing 0 in location 1170
 103 run: break-unless starting-comment?:boolean, 
9999 mem: location 1170 is 0
9999 run: jumping to instruction 11
 103 run: color-is-blue?:boolean <- equal color:number, 12:literal/lightblue
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1171
 103 run: break-unless color-is-blue?:boolean, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 19
 103 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c:character, 60:literal/<
9999 mem: location 1168 is 99
9999 mem: storing 0 in location 1173
 103 run: break-unless starting-assignment?:boolean, 
9999 mem: location 1173 is 0
9999 run: jumping to instruction 26
 103 run: color-is-red?:boolean <- equal color:number, 1:literal/red
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1174
 103 run: break-unless color-is-red?:boolean, 
9999 mem: location 1174 is 0
9999 run: jumping to instruction 34
 103 run: reply color:number, highlighting-state:number
9999 mem: location 1166 is 7
9999 mem: location 1167 is 0
9999 run: result 0 is 7
9999 run: result 1 is 0
9999 mem: storing 7 in location 1132
9999 mem: storing 0 in location 1133
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1144 is 99
9999 mem: storing 0 in location 1145
 102 run: break-unless newline?:boolean, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1137 is 4
9999 mem: location 1131 is 4
9999 mem: storing 1 in location 1147
 102 run: break-unless at-right?:boolean, 
9999 mem: location 1147 is 1
9999 run: jump-unless fell through
 102 run: print-character screen:address, 8617:literal/loop-back-to-left, 245:literal/grey
9999 mem: location 1127 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 103 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 1179
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1180
9999 mem: storing 1 in location 1181
 103 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 103 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 103 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 103 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 103 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 103 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 8617
9999 mem: storing 0 in location 1189
 103 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1184 is 5
9999 mem: storing 5 in location 1192
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 5
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 9 in location 1192
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 103 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 8617
9999 mem: storing 0 in location 1195
 103 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 9
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 9
9999 mem: storing 1033 in location 1197
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1033
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1197 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1198
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1033
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1197 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1199
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 8617
9999 mem: location 1198 is 1033
9999 mem: storing 8617 in location 1033
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 245
9999 mem: location 1199 is 1034
9999 mem: storing 245 in location 1034
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1200 is 4
9999 mem: storing 1 in location 1201
 103 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 73
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 102 run: column:number <- copy left:number
9999 mem: location 1129 is 0
9999 mem: storing 0 in location 1137
 102 run: row:number <- add row:number, 1:literal
9999 mem: location 1136 is 1
9999 mem: storing 2 in location 1136
 102 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1127 is 1009
9999 mem: location 1136 is 2
9999 mem: location 1137 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1159
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1160
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1161
 103 run: break-unless x:address:screen, 
9999 mem: location 1159 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1159 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1162
 103 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1160 is 2
9999 mem: location 1162 is 1011
9999 mem: storing 2 in location 1011
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1159 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1163
 103 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1161 is 0
9999 mem: location 1163 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1159 is 1009
 102 run: loop +next-character:label
9999 run: jumping to instruction 22
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 1134 is 1122
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1136 is 2
9999 mem: location 1130 is 5
9999 mem: storing 0 in location 1141
 102 run: break-if off-screen?:boolean, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1136 is 2
9999 mem: location 1138 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 0 in location 1142
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1142 is 0
9999 run: jumping to instruction 31
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1134 is 1122
9999 mem: location 1122 is 99
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1119
9999 mem: location 1134 is 1122
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 99
9999 mem: storing 99 in location 1144
 102 run: color:number, highlighting-state:number <- get-color color:number, highlighting-state:number, c:character
9999 mem: location 1132 is 7
9999 mem: location 1133 is 0
9999 mem: location 1144 is 99
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1166
 103 run: highlighting-state:number <- next-ingredient 
9999 mem: storing 0 in location 1167
 103 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1168
 103 run: color-is-white?:boolean <- equal color:number, 7:literal/white
9999 mem: location 1166 is 7
9999 mem: storing 1 in location 1169
 103 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c:character, 35:literal/#
9999 mem: location 1168 is 99
9999 mem: storing 0 in location 1170
 103 run: break-unless starting-comment?:boolean, 
9999 mem: location 1170 is 0
9999 run: jumping to instruction 11
 103 run: color-is-blue?:boolean <- equal color:number, 12:literal/lightblue
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1171
 103 run: break-unless color-is-blue?:boolean, 
9999 mem: location 1171 is 0
9999 run: jumping to instruction 19
 103 run: break-unless color-is-white?:boolean, 
9999 mem: location 1169 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c:character, 60:literal/<
9999 mem: location 1168 is 99
9999 mem: storing 0 in location 1173
 103 run: break-unless starting-assignment?:boolean, 
9999 mem: location 1173 is 0
9999 run: jumping to instruction 26
 103 run: color-is-red?:boolean <- equal color:number, 1:literal/red
9999 mem: location 1166 is 7
9999 mem: storing 0 in location 1174
 103 run: break-unless color-is-red?:boolean, 
9999 mem: location 1174 is 0
9999 run: jumping to instruction 34
 103 run: reply color:number, highlighting-state:number
9999 mem: location 1166 is 7
9999 mem: location 1167 is 0
9999 run: result 0 is 7
9999 run: result 1 is 0
9999 mem: storing 7 in location 1132
9999 mem: storing 0 in location 1133
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1144 is 99
9999 mem: storing 0 in location 1145
 102 run: break-unless newline?:boolean, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1137 is 0
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1147
 102 run: break-unless at-right?:boolean, 
9999 mem: location 1147 is 0
9999 run: jumping to instruction 61
 102 run: print-character screen:address, c:character, color:number
9999 mem: location 1127 is 1009
9999 mem: location 1144 is 99
9999 mem: location 1132 is 7
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 103 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1179
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1180
9999 mem: storing 1 in location 1181
 103 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 103 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 103 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 103 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 103 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 103 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 99
9999 mem: storing 0 in location 1189
 103 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1184 is 5
9999 mem: storing 10 in location 1192
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 10
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1192
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 103 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 99
9999 mem: storing 0 in location 1195
 103 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 10
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 10
9999 mem: storing 1035 in location 1197
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1035
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1197 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1198
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1035
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1197 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1199
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 99
9999 mem: location 1198 is 1035
9999 mem: storing 99 in location 1035
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1036
9999 mem: storing 7 in location 1036
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1200 is 4
9999 mem: storing 0 in location 1201
 103 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1188 is 1012
9999 mem: storing 1 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1134 is 1122
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1122 in location 1300
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1300 is 1122
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1300 is 1122
9999 mem: location 1122 is 99
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1119
9999 mem: location 1300 is 1122
9999 run: address to copy is 1123
9999 run: its type is address
9999 mem: location 1123 is 0
9999 mem: storing 0 in location 1301
 103 run: reply result:address:duplex-list
9999 mem: location 1301 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1134
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1135 is 1119
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1119 in location 1300
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1300 is 1119
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1300 is 1119
9999 mem: location 1119 is 98
9999 mem: location 1120 is 1122
9999 mem: location 1121 is 1112
9999 mem: location 1300 is 1119
9999 run: address to copy is 1120
9999 run: its type is address
9999 mem: location 1120 is 1122
9999 mem: storing 1122 in location 1301
 103 run: reply result:address:duplex-list
9999 mem: location 1301 is 1122
9999 run: result 0 is 1122
9999 mem: storing 1122 in location 1135
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 1137 is 0
9999 mem: storing 1 in location 1137
 102 run: loop 
9999 run: jumping to instruction 21
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 1134 is 0
9999 run: jumping to instruction 67
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1136 is 2
9999 mem: location 1138 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 0 in location 1142
 102 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1137 is 1
9999 mem: location 1139 is 1100
9999 mem: location 1100 is 2
9999 mem: storing 1 in location 1148
 102 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1142 is 0
9999 mem: location 1148 is 1
9999 mem: storing 0 in location 1149
 102 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1136 is 2
9999 mem: location 1138 is 1099
9999 mem: location 1099 is 1
9999 mem: storing 0 in location 1150
 102 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1151
 102 run: break-unless before-cursor?:boolean, 
9999 mem: location 1151 is 0
9999 run: jumping to instruction 86
 102 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1127 is 1009
9999 mem: location 1137 is 1
9999 mem: location 1131 is 4
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1159
 103 run: left:number <- next-ingredient 
9999 mem: storing 1 in location 1160
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1161
 103 run: column:number <- copy left:number
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1162
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1162 is 1
9999 mem: location 1161 is 4
9999 mem: storing 0 in location 1163
 103 run: break-if done?:boolean, 
9999 mem: location 1163 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1159 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1179
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1180
9999 mem: storing 0 in location 1181
 104 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1180
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 104 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1189
 104 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1184 is 5
9999 mem: storing 10 in location 1192
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 10
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1192
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1195
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 11
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 11
9999 mem: storing 1037 in location 1197
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1037
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1197 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1198
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1037
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1197 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1199
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 32
9999 mem: location 1198 is 1037
9999 mem: storing 32 in location 1037
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1200 is 4
9999 mem: storing 0 in location 1201
 104 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1188 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1162 is 1
9999 mem: storing 2 in location 1162
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1162 is 2
9999 mem: location 1161 is 4
9999 mem: storing 0 in location 1163
 103 run: break-if done?:boolean, 
9999 mem: location 1163 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1159 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1179
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1180
9999 mem: storing 0 in location 1181
 104 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1180
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 104 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1189
 104 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1184 is 5
9999 mem: storing 10 in location 1192
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 10
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1192
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1195
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 12
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 12
9999 mem: storing 1039 in location 1197
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1197 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1198
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1197 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1199
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 32
9999 mem: location 1198 is 1039
9999 mem: storing 32 in location 1039
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1200 is 4
9999 mem: storing 0 in location 1201
 104 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1188 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1162 is 2
9999 mem: storing 3 in location 1162
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1162 is 3
9999 mem: location 1161 is 4
9999 mem: storing 0 in location 1163
 103 run: break-if done?:boolean, 
9999 mem: location 1163 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1159 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1179
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1180
9999 mem: storing 0 in location 1181
 104 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1180
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 104 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1189
 104 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1184 is 5
9999 mem: storing 10 in location 1192
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 10
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1192
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1195
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 13
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 13
9999 mem: storing 1041 in location 1197
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1197 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1198
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1197 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1199
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 32
9999 mem: location 1198 is 1041
9999 mem: storing 32 in location 1041
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1200 is 4
9999 mem: storing 0 in location 1201
 104 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1188 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1162 is 3
9999 mem: storing 4 in location 1162
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1162 is 4
9999 mem: location 1161 is 4
9999 mem: storing 0 in location 1163
 103 run: break-if done?:boolean, 
9999 mem: location 1163 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1159 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1179
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1180
9999 mem: storing 0 in location 1181
 104 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1180
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 104 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1189
 104 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1184 is 5
9999 mem: storing 10 in location 1192
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 10
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1192
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1195
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 14
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 14
9999 mem: storing 1043 in location 1197
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1197 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1198
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1197 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1199
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 32
9999 mem: location 1198 is 1043
9999 mem: storing 32 in location 1043
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1044
9999 mem: storing 7 in location 1044
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1200 is 4
9999 mem: storing 1 in location 1201
 104 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 73
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1162 is 4
9999 mem: storing 5 in location 1162
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1162 is 5
9999 mem: location 1161 is 4
9999 mem: storing 1 in location 1163
 103 run: break-if done?:boolean, 
9999 mem: location 1163 is 1
9999 run: jumping to instruction 11
 102 run: reply row:number, screen:address/same-as-ingredient:0
9999 mem: location 1136 is 2
9999 mem: location 1127 is 1009
9999 run: result 0 is 2
9999 run: result 1 is 1009
9999 mem: storing 2 in location 1092
9999 mem: storing 1009 in location 1082
 101 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1084 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1288
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 2
9999 mem: location 1084 is 1095
9999 run: address to copy is 1097
9999 run: its type is number
9999 mem: location 1097 is 0
9999 mem: storing 0 in location 1093
 101 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1084 is 1095
9999 mem: location 1095 is 1109
9999 mem: location 1096 is 1288
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 1
9999 mem: location 1100 is 2
9999 mem: location 1084 is 1095
9999 run: address to copy is 1098
9999 run: its type is number
9999 mem: location 1098 is 4
9999 mem: storing 4 in location 1094
 101 run: row:number <- add row:number, 1:literal
9999 mem: location 1092 is 2
9999 mem: storing 3 in location 1092
 101 run: move-cursor screen:address, row:number, left:number
9999 mem: location 1082 is 1009
9999 mem: location 1092 is 3
9999 mem: location 1093 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1159
 102 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1160
 102 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1161
 102 run: break-unless x:address:screen, 
9999 mem: location 1159 is 1009
9999 run: jump-unless fell through
 102 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1159 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1162
 102 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1160 is 3
9999 mem: location 1162 is 1011
9999 mem: storing 3 in location 1011
 102 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1159 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1163
 102 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1161 is 0
9999 mem: location 1163 is 1012
9999 mem: storing 0 in location 1012
 102 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1159 is 1009
 101 run: clear-line-delimited screen:address, left:number, right:number
9999 mem: location 1082 is 1009
9999 mem: location 1093 is 0
9999 mem: location 1094 is 4
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1159
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1160
 102 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1161
 102 run: column:number <- copy left:number
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1162
 102 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1162 is 0
9999 mem: location 1161 is 4
9999 mem: storing 0 in location 1163
 102 run: break-if done?:boolean, 
9999 mem: location 1163 is 0
9999 run: jump-if fell through
 102 run: print-character screen:address, 32:literal/space
9999 mem: location 1159 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1179
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1180
9999 mem: storing 0 in location 1181
 103 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 0
9999 run: jump-if fell through
schedule: print-character/clear-line-delimited/editor-event-loop/run1002/scenario-editor-wraps-line-on-insert
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1180
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 103 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 103 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 103 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 103 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 103 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1189
 103 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1184 is 5
9999 mem: storing 15 in location 1192
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 15
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 15 in location 1192
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 103 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1195
 103 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 15
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 15
9999 mem: storing 1045 in location 1197
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1197 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1198
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1197 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1199
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 32
9999 mem: location 1198 is 1045
9999 mem: storing 32 in location 1045
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1046
9999 mem: storing 7 in location 1046
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1200 is 4
9999 mem: storing 0 in location 1201
 103 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1188 is 1012
9999 mem: storing 1 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 1162 is 0
9999 mem: storing 1 in location 1162
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1162 is 1
9999 mem: location 1161 is 4
9999 mem: storing 0 in location 1163
 102 run: break-if done?:boolean, 
9999 mem: location 1163 is 0
9999 run: jump-if fell through
 102 run: print-character screen:address, 32:literal/space
9999 mem: location 1159 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1179
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1180
9999 mem: storing 0 in location 1181
 103 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1180
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 103 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 103 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 103 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 103 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 103 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1189
 103 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1184 is 5
9999 mem: storing 15 in location 1192
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 15
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 16 in location 1192
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 103 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1195
 103 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 16
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 16
9999 mem: storing 1047 in location 1197
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1197 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1198
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1197 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1199
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 32
9999 mem: location 1198 is 1047
9999 mem: storing 32 in location 1047
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1048
9999 mem: storing 7 in location 1048
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1200 is 4
9999 mem: storing 0 in location 1201
 103 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1188 is 1012
9999 mem: storing 2 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 1162 is 1
9999 mem: storing 2 in location 1162
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1162 is 2
9999 mem: location 1161 is 4
9999 mem: storing 0 in location 1163
 102 run: break-if done?:boolean, 
9999 mem: location 1163 is 0
9999 run: jump-if fell through
 102 run: print-character screen:address, 32:literal/space
9999 mem: location 1159 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1179
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1180
9999 mem: storing 0 in location 1181
 103 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1180
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 103 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 103 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 103 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 103 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 103 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1189
 103 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1184 is 5
9999 mem: storing 15 in location 1192
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 15
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 17 in location 1192
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 103 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1195
 103 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 17
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 17
9999 mem: storing 1049 in location 1197
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1197 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1198
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1197 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1199
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 32
9999 mem: location 1198 is 1049
9999 mem: storing 32 in location 1049
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1050
9999 mem: storing 7 in location 1050
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1200 is 4
9999 mem: storing 0 in location 1201
 103 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1188 is 1012
9999 mem: storing 3 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 1162 is 2
9999 mem: storing 3 in location 1162
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1162 is 3
9999 mem: location 1161 is 4
9999 mem: storing 0 in location 1163
 102 run: break-if done?:boolean, 
9999 mem: location 1163 is 0
9999 run: jump-if fell through
 102 run: print-character screen:address, 32:literal/space
9999 mem: location 1159 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1179
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1180
9999 mem: storing 0 in location 1181
 103 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1180
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 103 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 103 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 103 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 103 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 103 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1189
 103 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1184 is 5
9999 mem: storing 15 in location 1192
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 15
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 18 in location 1192
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 103 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1195
 103 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 18
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 18
9999 mem: storing 1051 in location 1197
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1197 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1198
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1197 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1199
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 32
9999 mem: location 1198 is 1051
9999 mem: storing 32 in location 1051
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1052
9999 mem: storing 7 in location 1052
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1200 is 4
9999 mem: storing 0 in location 1201
 103 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1188 is 1012
9999 mem: storing 4 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 1162 is 3
9999 mem: storing 4 in location 1162
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1162 is 4
9999 mem: location 1161 is 4
9999 mem: storing 0 in location 1163
 102 run: break-if done?:boolean, 
9999 mem: location 1163 is 0
9999 run: jump-if fell through
 102 run: print-character screen:address, 32:literal/space
9999 mem: location 1159 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1178
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1179
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1180
9999 mem: storing 0 in location 1181
 103 run: break-if color-found?:boolean, 
9999 mem: location 1181 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1180
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1182
 103 run: break-unless x:address:screen, 
9999 mem: location 1178 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1184
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1185
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1186
 103 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 21
 103 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1185 is 5
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1188
 103 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 28
 103 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1184 is 5
9999 mem: storing 1 in location 1187
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 1187 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1189
 103 run: break-unless newline?:boolean, 
9999 mem: location 1189 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1186 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1184 is 5
9999 mem: storing 15 in location 1192
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1192 is 15
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 19 in location 1192
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1178 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1178 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1193
 103 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1193 is 1014
9999 mem: storing 25 in location 1194
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1179 is 32
9999 mem: storing 0 in location 1195
 103 run: break-unless backspace?:boolean, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1193 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 101
9999 mem: location 1026 is 7
9999 mem: location 1027 is 102
9999 mem: location 1028 is 7
9999 mem: location 1029 is 97
9999 mem: location 1030 is 7
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1192 is 19
9999 mem: location 1193 is 1014
9999 mem: location 1192 is 19
9999 mem: storing 1053 in location 1197
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1197 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1197 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1198
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1197 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1197 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1199
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1179 is 32
9999 mem: location 1198 is 1053
9999 mem: storing 32 in location 1053
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1180 is 7
9999 mem: location 1199 is 1054
9999 mem: storing 7 in location 1054
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1184 is 5
9999 mem: storing 4 in location 1200
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1188 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1200 is 4
9999 mem: storing 1 in location 1201
 103 run: break-if at-right?:boolean, 
9999 mem: location 1201 is 1
9999 run: jumping to instruction 73
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1178 is 1009
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 1162 is 4
9999 mem: storing 5 in location 1162
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1162 is 5
9999 mem: location 1161 is 4
9999 mem: storing 1 in location 1163
 102 run: break-if done?:boolean, 
9999 mem: location 1163 is 1
9999 run: jumping to instruction 11
 101 run: loop 
9999 run: jumping to instruction 5
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 1083 is 1296
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 1296 in location 1211
 102 run: break-unless x:address:console, 
9999 mem: location 1211 is 1296
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 1211 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1297 is 1291
9999 mem: location 1211 is 1296
9999 run: address to copy is 1296
9999 mem: storing 1296 in location 1212
 102 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 1211 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1297 is 1291
9999 mem: location 1211 is 1296
9999 run: address to copy is 1297
9999 run: its type is address
9999 mem: location 1297 is 1291
9999 mem: storing 1291 in location 1213
 102 run: max:number <- length buf:address:array:event/deref
9999 mem: location 1213 is 1291
9999 mem: location 1291 is 1
9999 mem: location 1292 is 0
9999 mem: location 1293 is 102
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: location 1213 is 1291
9999 mem: storing 1 in location 1214
 102 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 1212 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1214 is 1
9999 mem: storing 1 in location 1215
 102 run: break-unless done?:boolean, 
9999 mem: location 1215 is 1
9999 run: jump-unless fell through
 102 run: dummy:address:event <- new event:type
9999 mem: storing 1298 in location 1216
 102 run: reply dummy:address:event/deref, x:address:console/same-as-ingredient:0, 1:literal/found, 1:literal/quit
9999 mem: location 1216 is 1298
9999 mem: location 1298 is 0
9999 mem: location 1299 is 0
9999 mem: location 1300 is 0
9999 mem: location 1301 is 0
9999 mem: location 1211 is 1296
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1296
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1085
9999 mem: storing 0 in location 1086
9999 mem: storing 0 in location 1087
9999 mem: storing 0 in location 1088
9999 mem: storing 1296 in location 1083
9999 mem: storing 1 in location 1089
9999 mem: storing 1 in location 1090
 101 run: loop-unless found?:boolean, 
9999 mem: location 1089 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?:boolean, 
9999 mem: location 1090 is 1
9999 run: jumping to instruction 25
  99 run: screen-should-contain [
    .     .
    .efabâ†©.
    .c    .
    .     .
  ]
