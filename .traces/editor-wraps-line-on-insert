parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "height": ]}
parse: instruction: new
parse:   ingredient: {name: "abc", properties: [_: "literal-string"]}
parse:   product: {name: "1", properties: ["1": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "1", properties: ["1": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
parse:   product: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    type [e]\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .     .\n    .eabc .\n    .     .\n    .     .\n  ", properties: [_: "literal-string"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    type [f]\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .     .\n    .efabâ†©.\n    .c    .\n    .     .\n  ", properties: [_: "literal-string"]}
after-brace: recipe editor-wraps-line-on-insert
after-brace: new-fake-screen ...
after-brace: new ...
after-brace: new-editor ...
after-brace: assume-console ...
after-brace: run ...
after-brace: screen-should-contain ...
after-brace: assume-console ...
after-brace: run ...
after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: editor-wraps-line-on-insert
 101 run: screen:address <- new-fake-screen 5:literal/width, 5:literal/height
 102 run: default-space:address:array:location <- new location:type, 30:literal/capacity
9999 mem: array size is 30
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1031
9999 mem: storing 1031 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1032
9999 mem: storing 5 in location 1032
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1031
9999 mem: storing 5 in location 1031
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1033
9999 mem: storing 0 in location 1033
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1034
9999 mem: storing 0 in location 1034
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1032
9999 mem: location 1032 is 5
9999 mem: location 1004 is 1031
9999 mem: location 1031 is 5
9999 mem: storing 25 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 25
9999 mem: array size is 25
9999 mem: new alloc: 1036
9999 mem: location 1008 is 1035
9999 mem: storing 1036 in location 1035
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1087
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1089
 103 run: break-unless x:address:screen, 
9999 mem: location 1089 is 1031
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1089 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1089 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1090
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1090 is 1036
9999 mem: storing 25 in location 1091
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1092
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 0
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 0
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 0
9999 mem: storing 1037 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1094 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1094 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 0
9999 mem: storing 1 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 1
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 1
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 1
9999 mem: storing 1039 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1094 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1094 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 1
9999 mem: storing 2 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 2
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 2
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 2
9999 mem: storing 1041 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1094 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1094 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 2
9999 mem: storing 3 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 3
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 3
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 3
9999 mem: storing 1043 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1094 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1094 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 3
9999 mem: storing 4 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 4
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 4
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 4
9999 mem: storing 1045 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1094 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1094 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 4
9999 mem: storing 5 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 5
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 5
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 5
9999 mem: storing 1047 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1094 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1094 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 5
9999 mem: storing 6 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 6
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 6
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 6
9999 mem: storing 1049 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1094 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1094 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 6
9999 mem: storing 7 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 7
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 7
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 7
9999 mem: storing 1051 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1094 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1094 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 7
9999 mem: storing 8 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 8
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 8
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 8
9999 mem: storing 1053 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1094 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1094 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 8
9999 mem: storing 9 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 9
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 9
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 9
9999 mem: storing 1055 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1094 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1094 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 9
9999 mem: storing 10 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 10
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 10
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 10
9999 mem: storing 1057 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1094 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1094 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 10
9999 mem: storing 11 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 11
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 11
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 11
9999 mem: storing 1059 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1094 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1094 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 11
9999 mem: storing 12 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 12
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 12
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 12
9999 mem: storing 1061 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1094 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1094 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 12
9999 mem: storing 13 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 13
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 13
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 13
9999 mem: storing 1063 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1094 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1094 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 13
9999 mem: storing 14 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 14
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 14
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 14
9999 mem: storing 1065 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1094 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1094 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1066
9999 mem: storing 7 in location 1066
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 14
9999 mem: storing 15 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 15
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 15
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 15
9999 mem: storing 1067 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1094 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1067
9999 mem: storing 0 in location 1067
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1094 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1068
9999 mem: storing 7 in location 1068
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 15
9999 mem: storing 16 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 16
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 16
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 16
9999 mem: storing 1069 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1094 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1069
9999 mem: storing 0 in location 1069
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1094 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1070
9999 mem: storing 7 in location 1070
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 16
9999 mem: storing 17 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 17
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 17
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 17
9999 mem: storing 1071 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1094 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1071
9999 mem: storing 0 in location 1071
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1094 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1072
9999 mem: storing 7 in location 1072
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 17
9999 mem: storing 18 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 18
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 18
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 18
9999 mem: storing 1073 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1094 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1073
9999 mem: storing 0 in location 1073
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1094 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1074
9999 mem: storing 7 in location 1074
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 18
9999 mem: storing 19 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 19
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 19
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 19
9999 mem: storing 1075 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1094 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1075
9999 mem: storing 0 in location 1075
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1094 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1076
9999 mem: storing 7 in location 1076
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 19
9999 mem: storing 20 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 20
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 20
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 20
9999 mem: storing 1077 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1094 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1077
9999 mem: storing 0 in location 1077
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1094 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1078
9999 mem: storing 7 in location 1078
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 20
9999 mem: storing 21 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 21
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 21
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 21
9999 mem: storing 1079 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1094 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1079
9999 mem: storing 0 in location 1079
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1094 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1080
9999 mem: storing 7 in location 1080
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 21
9999 mem: storing 22 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 22
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 22
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 22
9999 mem: storing 1081 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1094 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1081
9999 mem: storing 0 in location 1081
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1094 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1082
9999 mem: storing 7 in location 1082
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 22
9999 mem: storing 23 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 23
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 23
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 23
9999 mem: storing 1083 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1094 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1083
9999 mem: storing 0 in location 1083
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1094 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1084
9999 mem: storing 7 in location 1084
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 23
9999 mem: storing 24 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 24
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 24
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 24
9999 mem: storing 1085 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1094 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1085
9999 mem: storing 0 in location 1085
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1094 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1086
9999 mem: storing 7 in location 1086
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 24
9999 mem: storing 25 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 25
9999 mem: location 1091 is 25
9999 mem: storing 1 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1089 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1089 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1097
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1097 is 1033
9999 mem: storing 0 in location 1033
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1089 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1089 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1097
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1097 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1089 is 1031
 102 run: reply result:address:screen
9999 mem: location 1002 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 101 run: 1:address:array:character <- new [abc]
9999 mem: storing 1118 in location 1
 101 run: 2:address:editor-data <- new-editor 1:address:array:character, screen:address, 0:literal/left, 5:literal/right
9999 mem: location 1 is 1118
9999 mem: location 900 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1122
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1118 in location 1124
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1125
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1126
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1127
 102 run: right:number <- subtract right:number, 1:literal
9999 mem: location 1127 is 5
9999 mem: storing 4 in location 1127
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: new alloc: 1153
9999 mem: storing 1153 in location 1128
 102 run: x:address:number <- get-address result:address:editor-data/deref, left:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1128 is 1153
9999 run: address to copy is 1155
9999 mem: storing 1155 in location 1129
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1126 is 0
9999 mem: location 1129 is 1155
9999 mem: storing 0 in location 1155
 102 run: x:address:number <- get-address result:address:editor-data/deref, right:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1128 is 1153
9999 run: address to copy is 1156
9999 mem: storing 1156 in location 1129
 102 run: x:address:number/deref <- copy right:number
9999 mem: location 1127 is 4
9999 mem: location 1129 is 1156
9999 mem: storing 4 in location 1156
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-row:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1128 is 1153
9999 run: address to copy is 1157
9999 mem: storing 1157 in location 1129
 102 run: x:address:number/deref <- copy 1:literal/top
9999 mem: location 1129 is 1157
9999 mem: storing 1 in location 1157
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-column:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1128 is 1153
9999 run: address to copy is 1158
9999 mem: storing 1158 in location 1129
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1126 is 0
9999 mem: location 1129 is 1158
9999 mem: storing 0 in location 1158
 102 run: init:address:address:duplex-list <- get-address result:address:editor-data/deref, data:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1128 is 1153
9999 run: address to copy is 1153
9999 mem: storing 1153 in location 1130
 102 run: init:address:address:duplex-list/deref <- push-duplex 167:literal/Â§, 0:literal/tail
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1159
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1161
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1162
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1190
9999 mem: storing 1190 in location 1163
 103 run: val:address:location <- get-address result:address:duplex-list/deref, value:offset
9999 mem: location 1163 is 1190
9999 mem: location 1190 is 0
9999 mem: location 1191 is 0
9999 mem: location 1192 is 0
9999 mem: location 1163 is 1190
9999 run: address to copy is 1190
9999 mem: storing 1190 in location 1164
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1161 is 167
9999 mem: location 1164 is 1190
9999 mem: storing 167 in location 1190
 103 run: next:address:address:duplex-list <- get-address result:address:duplex-list/deref, next:offset
9999 mem: location 1163 is 1190
9999 mem: location 1190 is 167
9999 mem: location 1191 is 0
9999 mem: location 1192 is 0
9999 mem: location 1163 is 1190
9999 run: address to copy is 1191
9999 mem: storing 1191 in location 1165
 103 run: next:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1162 is 0
9999 mem: location 1165 is 1191
9999 mem: storing 0 in location 1191
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1162 is 0
9999 run: jump-if fell through
 103 run: reply result:address:duplex-list
9999 mem: location 1163 is 1190
9999 run: result 0 is 1190
9999 mem: location 1130 is 1153
9999 mem: storing 1190 in location 1153
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1128 is 1153
9999 run: address to copy is 1154
9999 mem: storing 1154 in location 1131
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1130 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1131 is 1154
9999 mem: storing 1190 in location 1154
 102 run: jump-if s:address:array:character, 1:offset
9999 mem: location 1124 is 1118
9999 run: jumping to instruction 21
 102 run: len:number <- length s:address:array:character/deref
9999 mem: location 1124 is 1118
9999 mem: location 1118 is 3
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1124 is 1118
9999 mem: storing 3 in location 1132
 102 run: jump-if len:number, 1:offset
9999 mem: location 1132 is 3
9999 run: jumping to instruction 24
 102 run: idx:number <- copy 0:literal
9999 mem: storing 0 in location 1133
 102 run: curr:address:duplex-list <- copy init:address:address:duplex-list/deref
9999 mem: location 1130 is 1153
9999 mem: location 1153 is 1190
9999 mem: storing 1190 in location 1134
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1133 is 0
9999 mem: location 1132 is 3
9999 mem: storing 0 in location 1135
 102 run: break-if done?:boolean, 
9999 mem: location 1135 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1124 is 1118
9999 mem: location 1118 is 3
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1133 is 0
9999 mem: location 1124 is 1118
9999 mem: location 1133 is 0
9999 run: address to copy is 1119
9999 run: its type is character
9999 mem: location 1119 is 97
9999 mem: storing 97 in location 1136
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1136 is 97
9999 mem: location 1134 is 1190
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1193
 103 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1195
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1190 in location 1196
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1224
9999 mem: storing 1224 in location 1197
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1197 is 1224
9999 mem: location 1224 is 0
9999 mem: location 1225 is 0
9999 mem: location 1226 is 0
9999 mem: location 1197 is 1224
9999 run: address to copy is 1224
9999 mem: storing 1224 in location 1198
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1195 is 97
9999 mem: location 1198 is 1224
9999 mem: storing 97 in location 1224
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1196 is 1190
9999 mem: location 1190 is 167
9999 mem: location 1191 is 0
9999 mem: location 1192 is 0
9999 mem: location 1196 is 1190
9999 run: address to copy is 1191
9999 run: its type is address
9999 mem: location 1191 is 0
9999 mem: storing 0 in location 1199
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1196 is 1190
9999 mem: location 1190 is 167
9999 mem: location 1191 is 0
9999 mem: location 1192 is 0
9999 mem: location 1196 is 1190
9999 run: address to copy is 1191
9999 mem: storing 1191 in location 1200
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1197 is 1224
9999 mem: location 1200 is 1191
9999 mem: storing 1224 in location 1191
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1197 is 1224
9999 mem: location 1224 is 97
9999 mem: location 1225 is 0
9999 mem: location 1226 is 0
9999 mem: location 1197 is 1224
9999 run: address to copy is 1226
9999 mem: storing 1226 in location 1200
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1196 is 1190
9999 mem: location 1200 is 1226
9999 mem: storing 1190 in location 1226
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1197 is 1224
9999 mem: location 1224 is 97
9999 mem: location 1225 is 0
9999 mem: location 1226 is 1190
9999 mem: location 1197 is 1224
9999 run: address to copy is 1225
9999 mem: storing 1225 in location 1200
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1199 is 0
9999 mem: location 1200 is 1225
9999 mem: storing 0 in location 1225
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1197 is 1224
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1134 is 1190
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1227
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1190 in location 1229
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1229 is 1190
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1229 is 1190
9999 mem: location 1190 is 167
9999 mem: location 1191 is 1224
9999 mem: location 1192 is 0
9999 mem: location 1229 is 1190
9999 run: address to copy is 1191
9999 run: its type is address
9999 mem: location 1191 is 1224
9999 mem: storing 1224 in location 1230
 103 run: reply result:address:duplex-list
9999 mem: location 1230 is 1224
9999 run: result 0 is 1224
9999 mem: storing 1224 in location 1134
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1133 is 0
9999 mem: storing 1 in location 1133
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1133 is 1
9999 mem: location 1132 is 3
9999 mem: storing 0 in location 1135
 102 run: break-if done?:boolean, 
9999 mem: location 1135 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1124 is 1118
9999 mem: location 1118 is 3
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1133 is 1
9999 mem: location 1124 is 1118
9999 mem: location 1133 is 1
9999 run: address to copy is 1120
9999 run: its type is character
9999 mem: location 1120 is 98
9999 mem: storing 98 in location 1136
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1136 is 98
9999 mem: location 1134 is 1224
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1258
 103 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1260
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1224 in location 1261
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1289
9999 mem: storing 1289 in location 1262
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1262 is 1289
9999 mem: location 1289 is 0
9999 mem: location 1290 is 0
9999 mem: location 1291 is 0
9999 mem: location 1262 is 1289
9999 run: address to copy is 1289
9999 mem: storing 1289 in location 1263
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1260 is 98
9999 mem: location 1263 is 1289
9999 mem: storing 98 in location 1289
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1261 is 1224
9999 mem: location 1224 is 97
9999 mem: location 1225 is 0
9999 mem: location 1226 is 1190
9999 mem: location 1261 is 1224
9999 run: address to copy is 1225
9999 run: its type is address
9999 mem: location 1225 is 0
9999 mem: storing 0 in location 1264
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1261 is 1224
9999 mem: location 1224 is 97
9999 mem: location 1225 is 0
9999 mem: location 1226 is 1190
9999 mem: location 1261 is 1224
9999 run: address to copy is 1225
9999 mem: storing 1225 in location 1265
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1262 is 1289
9999 mem: location 1265 is 1225
9999 mem: storing 1289 in location 1225
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1262 is 1289
9999 mem: location 1289 is 98
9999 mem: location 1290 is 0
9999 mem: location 1291 is 0
9999 mem: location 1262 is 1289
9999 run: address to copy is 1291
9999 mem: storing 1291 in location 1265
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1261 is 1224
9999 mem: location 1265 is 1291
9999 mem: storing 1224 in location 1291
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1262 is 1289
9999 mem: location 1289 is 98
9999 mem: location 1290 is 0
9999 mem: location 1291 is 1224
9999 mem: location 1262 is 1289
9999 run: address to copy is 1290
9999 mem: storing 1290 in location 1265
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1264 is 0
9999 mem: location 1265 is 1290
9999 mem: storing 0 in location 1290
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1264 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1262 is 1289
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1134 is 1224
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1292
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1224 in location 1294
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1294 is 1224
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1294 is 1224
9999 mem: location 1224 is 97
9999 mem: location 1225 is 1289
9999 mem: location 1226 is 1190
9999 mem: location 1294 is 1224
9999 run: address to copy is 1225
9999 run: its type is address
9999 mem: location 1225 is 1289
9999 mem: storing 1289 in location 1295
 103 run: reply result:address:duplex-list
9999 mem: location 1295 is 1289
9999 run: result 0 is 1289
9999 mem: storing 1289 in location 1134
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1133 is 1
9999 mem: storing 2 in location 1133
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1133 is 2
9999 mem: location 1132 is 3
9999 mem: storing 0 in location 1135
 102 run: break-if done?:boolean, 
9999 mem: location 1135 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1124 is 1118
9999 mem: location 1118 is 3
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1133 is 2
9999 mem: location 1124 is 1118
9999 mem: location 1133 is 2
9999 run: address to copy is 1121
9999 run: its type is character
9999 mem: location 1121 is 99
9999 mem: storing 99 in location 1136
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1136 is 99
9999 mem: location 1134 is 1289
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1323
 103 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1325
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1289 in location 1326
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1354
9999 mem: storing 1354 in location 1327
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1327 is 1354
9999 mem: location 1354 is 0
9999 mem: location 1355 is 0
9999 mem: location 1356 is 0
9999 mem: location 1327 is 1354
9999 run: address to copy is 1354
9999 mem: storing 1354 in location 1328
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1325 is 99
9999 mem: location 1328 is 1354
9999 mem: storing 99 in location 1354
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1326 is 1289
9999 mem: location 1289 is 98
9999 mem: location 1290 is 0
9999 mem: location 1291 is 1224
9999 mem: location 1326 is 1289
9999 run: address to copy is 1290
9999 run: its type is address
9999 mem: location 1290 is 0
9999 mem: storing 0 in location 1329
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1326 is 1289
9999 mem: location 1289 is 98
9999 mem: location 1290 is 0
9999 mem: location 1291 is 1224
9999 mem: location 1326 is 1289
9999 run: address to copy is 1290
9999 mem: storing 1290 in location 1330
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1327 is 1354
9999 mem: location 1330 is 1290
9999 mem: storing 1354 in location 1290
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1327 is 1354
9999 mem: location 1354 is 99
9999 mem: location 1355 is 0
9999 mem: location 1356 is 0
9999 mem: location 1327 is 1354
9999 run: address to copy is 1356
9999 mem: storing 1356 in location 1330
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1326 is 1289
9999 mem: location 1330 is 1356
9999 mem: storing 1289 in location 1356
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1327 is 1354
9999 mem: location 1354 is 99
9999 mem: location 1355 is 0
9999 mem: location 1356 is 1289
9999 mem: location 1327 is 1354
9999 run: address to copy is 1355
9999 mem: storing 1355 in location 1330
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1329 is 0
9999 mem: location 1330 is 1355
9999 mem: storing 0 in location 1355
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1329 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1327 is 1354
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1134 is 1289
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1357
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1289 in location 1359
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1359 is 1289
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1359 is 1289
9999 mem: location 1289 is 98
9999 mem: location 1290 is 1354
9999 mem: location 1291 is 1224
9999 mem: location 1359 is 1289
9999 run: address to copy is 1290
9999 run: its type is address
9999 mem: location 1290 is 1354
9999 mem: storing 1354 in location 1360
 103 run: reply result:address:duplex-list
9999 mem: location 1360 is 1354
9999 run: result 0 is 1354
9999 mem: storing 1354 in location 1134
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1133 is 2
9999 mem: storing 3 in location 1133
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1133 is 3
9999 mem: location 1132 is 3
9999 mem: storing 1 in location 1135
 102 run: break-if done?:boolean, 
9999 mem: location 1135 is 1
9999 run: jumping to instruction 34
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 1190
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1128 is 1153
9999 run: address to copy is 1154
9999 mem: storing 1154 in location 1131
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1130 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1131 is 1154
9999 mem: storing 1190 in location 1154
 102 run: result:address:editor-data, _, screen:address <- render screen:address, result:address:editor-data
9999 mem: location 1125 is 1031
9999 mem: location 1128 is 1153
 103 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 1388
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1390
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1153 in location 1391
 103 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 1391 is 1153
9999 run: jumping to instruction 5
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1391 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 1190
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1391 is 1153
9999 run: address to copy is 1155
9999 run: its type is number
9999 mem: location 1155 is 0
9999 mem: storing 0 in location 1392
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1390 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1429
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1431
 104 run: break-unless x:address:screen, 
9999 mem: location 1431 is 1031
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1431 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1431 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1432
 104 run: reply height:number
9999 mem: location 1432 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1393
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1391 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 1190
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1391 is 1153
9999 run: address to copy is 1156
9999 run: its type is number
9999 mem: location 1156 is 4
9999 mem: storing 4 in location 1394
 103 run: hide-screen screen:address
9999 mem: location 1390 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1460
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1462
 104 run: break-unless x:address:screen, 
9999 mem: location 1462 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 1462 is 1031
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 1391 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 1190
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1391 is 1153
9999 run: address to copy is 1153
9999 run: its type is address
9999 mem: location 1153 is 1190
9999 mem: storing 1190 in location 1395
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1395 is 1190
9999 mem: storing 1190 in location 1396
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1395 is 1190
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1491
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1190 in location 1493
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1493 is 1190
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1493 is 1190
9999 mem: location 1190 is 167
9999 mem: location 1191 is 1224
9999 mem: location 1192 is 0
9999 mem: location 1493 is 1190
9999 run: address to copy is 1191
9999 run: its type is address
9999 mem: location 1191 is 1224
9999 mem: storing 1224 in location 1494
 104 run: reply result:address:duplex-list
9999 mem: location 1494 is 1224
9999 run: result 0 is 1224
9999 mem: storing 1224 in location 1395
 103 run: row:number <- copy 1:literal/top
9999 mem: storing 1 in location 1397
 103 run: column:number <- copy left:number
9999 mem: location 1392 is 0
9999 mem: storing 0 in location 1398
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1391 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 1190
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1391 is 1153
9999 run: address to copy is 1157
9999 mem: storing 1157 in location 1399
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1391 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 1190
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1391 is 1153
9999 run: address to copy is 1158
9999 mem: storing 1158 in location 1400
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1391 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 1190
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1391 is 1153
9999 run: address to copy is 1154
9999 mem: storing 1154 in location 1401
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1390 is 1031
9999 mem: location 1397 is 1
9999 mem: location 1398 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1522
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1524
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1525
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1526
 104 run: break-unless x:address:screen, 
9999 mem: location 1524 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1524 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1524 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1527
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1525 is 1
9999 mem: location 1527 is 1033
9999 mem: storing 1 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1524 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1524 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1528
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1526 is 0
9999 mem: location 1528 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1524 is 1031
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1395 is 1224
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1397 is 1
9999 mem: location 1393 is 5
9999 mem: storing 0 in location 1402
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1402 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1397 is 1
9999 mem: location 1399 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1403
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1403 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1398 is 0
9999 mem: location 1400 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 1 in location 1404
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1404 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1395 is 1224
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1553
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1224 in location 1555
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1555 is 1224
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1555 is 1224
9999 mem: location 1224 is 97
9999 mem: location 1225 is 1289
9999 mem: location 1226 is 1190
9999 mem: location 1555 is 1224
9999 run: address to copy is 1226
9999 run: its type is address
9999 mem: location 1226 is 1190
9999 mem: storing 1190 in location 1556
 104 run: reply result:address:duplex-list
9999 mem: location 1556 is 1190
9999 run: result 0 is 1190
9999 mem: location 1401 is 1154
9999 mem: storing 1190 in location 1154
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1395 is 1224
9999 mem: location 1224 is 97
9999 mem: location 1225 is 1289
9999 mem: location 1226 is 1190
9999 mem: location 1395 is 1224
9999 run: address to copy is 1224
9999 run: its type is number
9999 mem: location 1224 is 97
9999 mem: storing 97 in location 1405
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1405 is 97
9999 mem: storing 0 in location 1406
 103 run: break-unless newline?:boolean, 
9999 mem: location 1406 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1398 is 0
9999 mem: location 1394 is 4
9999 mem: storing 0 in location 1408
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1408 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1390 is 1031
9999 mem: location 1405 is 97
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1584
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1586
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1587
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1588
9999 mem: storing 0 in location 1589
 104 run: break-if color-found?:boolean, 
9999 mem: location 1589 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1588
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1590
9999 mem: storing 0 in location 1591
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1591 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1590
 104 run: break-unless x:address:screen, 
9999 mem: location 1586 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1586 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1586 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1592
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1586 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1586 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1593
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1586 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1586 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1594
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1586 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1586 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1595
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1587 is 97
9999 mem: storing 0 in location 1596
 104 run: break-unless newline?:boolean, 
9999 mem: location 1596 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1592 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1594 is 5
9999 mem: storing 5 in location 1599
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1599 is 5
9999 mem: location 1593 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 5 in location 1599
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1586 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1586 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1600
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1587 is 97
9999 mem: storing 0 in location 1601
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1601 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1600 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1599 is 5
9999 mem: location 1600 is 1036
9999 mem: location 1599 is 5
9999 mem: storing 1047 in location 1603
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1603 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1603 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1604
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1603 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1603 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1605
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1587 is 97
9999 mem: location 1604 is 1047
9999 mem: storing 97 in location 1047
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1588 is 7
9999 mem: location 1605 is 1048
9999 mem: storing 7 in location 1048
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1594 is 5
9999 mem: storing 4 in location 1606
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1593 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1606 is 4
9999 mem: storing 0 in location 1607
 104 run: break-if at-right?:boolean, 
9999 mem: location 1607 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1593 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1593 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1586 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1395 is 1224
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1615
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1224 in location 1617
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1617 is 1224
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1617 is 1224
9999 mem: location 1224 is 97
9999 mem: location 1225 is 1289
9999 mem: location 1226 is 1190
9999 mem: location 1617 is 1224
9999 run: address to copy is 1225
9999 run: its type is address
9999 mem: location 1225 is 1289
9999 mem: storing 1289 in location 1618
 104 run: reply result:address:duplex-list
9999 mem: location 1618 is 1289
9999 run: result 0 is 1289
9999 mem: storing 1289 in location 1395
schedule: render/new-editor/editor-wraps-line-on-insert
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1396 is 1190
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1646
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1190 in location 1648
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1648 is 1190
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1648 is 1190
9999 mem: location 1190 is 167
9999 mem: location 1191 is 1224
9999 mem: location 1192 is 0
9999 mem: location 1648 is 1190
9999 run: address to copy is 1191
9999 run: its type is address
9999 mem: location 1191 is 1224
9999 mem: storing 1224 in location 1649
 104 run: reply result:address:duplex-list
9999 mem: location 1649 is 1224
9999 run: result 0 is 1224
9999 mem: storing 1224 in location 1396
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1398 is 0
9999 mem: storing 1 in location 1398
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1395 is 1289
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1397 is 1
9999 mem: location 1393 is 5
9999 mem: storing 0 in location 1402
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1402 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1397 is 1
9999 mem: location 1399 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1403
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1403 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1398 is 1
9999 mem: location 1400 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1404
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1404 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1395 is 1289
9999 mem: location 1289 is 98
9999 mem: location 1290 is 1354
9999 mem: location 1291 is 1224
9999 mem: location 1395 is 1289
9999 run: address to copy is 1289
9999 run: its type is number
9999 mem: location 1289 is 98
9999 mem: storing 98 in location 1405
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1405 is 98
9999 mem: storing 0 in location 1406
 103 run: break-unless newline?:boolean, 
9999 mem: location 1406 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1398 is 1
9999 mem: location 1394 is 4
9999 mem: storing 0 in location 1408
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1408 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1390 is 1031
9999 mem: location 1405 is 98
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1677
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1679
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1680
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1681
9999 mem: storing 0 in location 1682
 104 run: break-if color-found?:boolean, 
9999 mem: location 1682 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1681
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1683
9999 mem: storing 0 in location 1684
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1684 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1683
 104 run: break-unless x:address:screen, 
9999 mem: location 1679 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1679 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1679 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1685
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1679 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1679 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1686
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1679 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1679 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1687
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1679 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1679 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1688
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1680 is 98
9999 mem: storing 0 in location 1689
 104 run: break-unless newline?:boolean, 
9999 mem: location 1689 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1685 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1687 is 5
9999 mem: storing 5 in location 1692
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1692 is 5
9999 mem: location 1686 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 6 in location 1692
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1679 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1679 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1693
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1680 is 98
9999 mem: storing 0 in location 1694
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1694 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1693 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1692 is 6
9999 mem: location 1693 is 1036
9999 mem: location 1692 is 6
9999 mem: storing 1049 in location 1696
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1696 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1696 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1697
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1696 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1696 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1698
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1680 is 98
9999 mem: location 1697 is 1049
9999 mem: storing 98 in location 1049
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1681 is 7
9999 mem: location 1698 is 1050
9999 mem: storing 7 in location 1050
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1687 is 5
9999 mem: storing 4 in location 1699
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1686 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1699 is 4
9999 mem: storing 0 in location 1700
 104 run: break-if at-right?:boolean, 
9999 mem: location 1700 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1686 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1686 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1679 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1395 is 1289
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1708
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1289 in location 1710
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1710 is 1289
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1710 is 1289
9999 mem: location 1289 is 98
9999 mem: location 1290 is 1354
9999 mem: location 1291 is 1224
9999 mem: location 1710 is 1289
9999 run: address to copy is 1290
9999 run: its type is address
9999 mem: location 1290 is 1354
9999 mem: storing 1354 in location 1711
 104 run: reply result:address:duplex-list
9999 mem: location 1711 is 1354
9999 run: result 0 is 1354
9999 mem: storing 1354 in location 1395
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1396 is 1224
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1739
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1224 in location 1741
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1741 is 1224
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1741 is 1224
9999 mem: location 1224 is 97
9999 mem: location 1225 is 1289
9999 mem: location 1226 is 1190
9999 mem: location 1741 is 1224
9999 run: address to copy is 1225
9999 run: its type is address
9999 mem: location 1225 is 1289
9999 mem: storing 1289 in location 1742
 104 run: reply result:address:duplex-list
9999 mem: location 1742 is 1289
9999 run: result 0 is 1289
9999 mem: storing 1289 in location 1396
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1398 is 1
9999 mem: storing 2 in location 1398
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1395 is 1354
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1397 is 1
9999 mem: location 1393 is 5
9999 mem: storing 0 in location 1402
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1402 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1397 is 1
9999 mem: location 1399 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1403
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1403 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1398 is 2
9999 mem: location 1400 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1404
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1404 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1395 is 1354
9999 mem: location 1354 is 99
9999 mem: location 1355 is 0
9999 mem: location 1356 is 1289
9999 mem: location 1395 is 1354
9999 run: address to copy is 1354
9999 run: its type is number
9999 mem: location 1354 is 99
9999 mem: storing 99 in location 1405
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1405 is 99
9999 mem: storing 0 in location 1406
 103 run: break-unless newline?:boolean, 
9999 mem: location 1406 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1398 is 2
9999 mem: location 1394 is 4
9999 mem: storing 0 in location 1408
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1408 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1390 is 1031
9999 mem: location 1405 is 99
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1770
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1772
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1773
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1774
9999 mem: storing 0 in location 1775
 104 run: break-if color-found?:boolean, 
9999 mem: location 1775 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1774
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1776
9999 mem: storing 0 in location 1777
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1777 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1776
 104 run: break-unless x:address:screen, 
9999 mem: location 1772 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1772 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1772 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1778
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1772 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1772 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1779
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1772 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1772 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1780
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1772 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1772 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1781
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1773 is 99
9999 mem: storing 0 in location 1782
 104 run: break-unless newline?:boolean, 
9999 mem: location 1782 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1778 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1780 is 5
9999 mem: storing 5 in location 1785
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1785 is 5
9999 mem: location 1779 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 7 in location 1785
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1772 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1772 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1786
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1773 is 99
9999 mem: storing 0 in location 1787
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1787 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1786 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1785 is 7
9999 mem: location 1786 is 1036
9999 mem: location 1785 is 7
9999 mem: storing 1051 in location 1789
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1789 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1789 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1790
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1789 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1789 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1791
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1773 is 99
9999 mem: location 1790 is 1051
9999 mem: storing 99 in location 1051
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1774 is 7
9999 mem: location 1791 is 1052
9999 mem: storing 7 in location 1052
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1780 is 5
9999 mem: storing 4 in location 1792
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1779 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1792 is 4
9999 mem: storing 0 in location 1793
 104 run: break-if at-right?:boolean, 
9999 mem: location 1793 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1779 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1779 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1772 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1395 is 1354
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1801
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1354 in location 1803
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1803 is 1354
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1803 is 1354
9999 mem: location 1354 is 99
9999 mem: location 1355 is 0
9999 mem: location 1356 is 1289
9999 mem: location 1803 is 1354
9999 run: address to copy is 1355
9999 run: its type is address
9999 mem: location 1355 is 0
9999 mem: storing 0 in location 1804
 104 run: reply result:address:duplex-list
9999 mem: location 1804 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1395
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1396 is 1289
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1832
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1289 in location 1834
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1834 is 1289
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1834 is 1289
9999 mem: location 1289 is 98
9999 mem: location 1290 is 1354
9999 mem: location 1291 is 1224
9999 mem: location 1834 is 1289
9999 run: address to copy is 1290
9999 run: its type is address
9999 mem: location 1290 is 1354
9999 mem: storing 1354 in location 1835
 104 run: reply result:address:duplex-list
9999 mem: location 1835 is 1354
9999 run: result 0 is 1354
9999 mem: storing 1354 in location 1396
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1398 is 2
9999 mem: storing 3 in location 1398
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1395 is 0
9999 run: jumping to instruction 64
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1397 is 1
9999 mem: location 1399 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1403
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1398 is 3
9999 mem: location 1400 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1409
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1403 is 1
9999 mem: location 1409 is 0
9999 mem: storing 0 in location 1410
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1397 is 1
9999 mem: location 1399 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1411
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1410 is 0
9999 mem: location 1411 is 0
9999 mem: storing 0 in location 1412
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 1412 is 0
9999 run: jumping to instruction 83
 103 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1390 is 1031
9999 mem: location 1398 is 3
9999 mem: location 1394 is 4
 104 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 1863
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1865
 104 run: left:number <- next-ingredient 
9999 mem: storing 3 in location 1866
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1867
 104 run: column:number <- copy left:number
9999 mem: location 1866 is 3
9999 mem: storing 3 in location 1868
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1868 is 3
9999 mem: location 1867 is 4
9999 mem: storing 0 in location 1869
 104 run: break-if done?:boolean, 
9999 mem: location 1869 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1865 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1904
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1906
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1907
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1908
9999 mem: storing 0 in location 1909
 105 run: break-if color-found?:boolean, 
9999 mem: location 1909 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1908
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1910
9999 mem: storing 0 in location 1911
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1911 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1910
 105 run: break-unless x:address:screen, 
9999 mem: location 1906 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1906 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1906 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1912
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1906 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1906 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1913
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1906 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1906 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1914
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1906 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1906 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1915
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1907 is 32
9999 mem: storing 0 in location 1916
 105 run: break-unless newline?:boolean, 
9999 mem: location 1916 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1912 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1914 is 5
9999 mem: storing 5 in location 1919
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1919 is 5
9999 mem: location 1913 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 8 in location 1919
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1906 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1906 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1920
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1907 is 32
9999 mem: storing 0 in location 1921
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1921 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1920 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1919 is 8
9999 mem: location 1920 is 1036
9999 mem: location 1919 is 8
9999 mem: storing 1053 in location 1923
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1923 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1923 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1924
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1923 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1923 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1925
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1907 is 32
9999 mem: location 1924 is 1053
9999 mem: storing 32 in location 1053
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1908 is 7
9999 mem: location 1925 is 1054
9999 mem: storing 7 in location 1054
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1914 is 5
9999 mem: storing 4 in location 1926
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1913 is 1034
9999 mem: location 1034 is 3
9999 mem: location 1926 is 4
9999 mem: storing 0 in location 1927
 105 run: break-if at-right?:boolean, 
9999 mem: location 1927 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1913 is 1034
9999 mem: location 1034 is 3
9999 mem: location 1913 is 1034
9999 mem: storing 4 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1906 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1868 is 3
9999 mem: storing 4 in location 1868
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1868 is 4
9999 mem: location 1867 is 4
9999 mem: storing 0 in location 1869
 104 run: break-if done?:boolean, 
9999 mem: location 1869 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1865 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1935
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1937
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1938
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1939
9999 mem: storing 0 in location 1940
 105 run: break-if color-found?:boolean, 
9999 mem: location 1940 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1939
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1941
9999 mem: storing 0 in location 1942
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1942 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1941
 105 run: break-unless x:address:screen, 
9999 mem: location 1937 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1937 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1937 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1943
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1937 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1937 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1944
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1937 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1937 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1945
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1937 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1937 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1946
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1938 is 32
9999 mem: storing 0 in location 1947
 105 run: break-unless newline?:boolean, 
9999 mem: location 1947 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1943 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1945 is 5
9999 mem: storing 5 in location 1950
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1950 is 5
9999 mem: location 1944 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 9 in location 1950
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1937 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1937 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1951
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1938 is 32
9999 mem: storing 0 in location 1952
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1952 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1951 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1950 is 9
9999 mem: location 1951 is 1036
9999 mem: location 1950 is 9
9999 mem: storing 1055 in location 1954
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1954 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1954 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1955
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1954 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1954 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1956
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1938 is 32
9999 mem: location 1955 is 1055
9999 mem: storing 32 in location 1055
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1939 is 7
9999 mem: location 1956 is 1056
9999 mem: storing 7 in location 1056
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1945 is 5
9999 mem: storing 4 in location 1957
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1944 is 1034
9999 mem: location 1034 is 4
9999 mem: location 1957 is 4
9999 mem: storing 1 in location 1958
 105 run: break-if at-right?:boolean, 
9999 mem: location 1958 is 1
9999 run: jumping to instruction 60
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1937 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1868 is 4
9999 mem: storing 5 in location 1868
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1868 is 5
9999 mem: location 1867 is 4
9999 mem: storing 1 in location 1869
 104 run: break-if done?:boolean, 
9999 mem: location 1869 is 1
9999 run: jumping to instruction 11
 103 run: reply editor:address:editor-data/same-as-ingredient:1, row:number, screen:address/same-as-ingredient:0
9999 mem: location 1391 is 1153
9999 mem: location 1397 is 1
9999 mem: location 1390 is 1031
9999 run: result 0 is 1153
9999 run: result 1 is 1
9999 run: result 2 is 1031
9999 mem: storing 1153 in location 1128
9999 mem: storing 1031 in location 1125
 102 run: reply result:address:editor-data, screen:address/same-as-ingredient:0
9999 mem: location 1128 is 1153
9999 mem: location 1125 is 1031
9999 run: result 0 is 1153
9999 mem: storing 1153 in location 2
 101 run: assume-console [
    type [e]
  ]
parse: instruction: type
parse:   ingredient: {name: "e", properties: [_: "literal-string"]}
 101 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1001
after-brace: editor-event-loop ...
 101 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1031
9999 mem: location 901 is 1971
9999 mem: location 2 is 1153
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1973
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1975
 102 run: console:address <- next-ingredient 
9999 mem: storing 1971 in location 1976
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1153 in location 1977
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 1976 is 1971
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2004
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1971 in location 2006
 103 run: break-unless x:address:console, 
9999 mem: location 2006 is 1971
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 2006 is 1971
9999 mem: location 1971 is 0
9999 mem: location 1972 is 1966
9999 mem: location 2006 is 1971
9999 run: address to copy is 1971
9999 mem: storing 1971 in location 2007
 103 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 2006 is 1971
9999 mem: location 1971 is 0
9999 mem: location 1972 is 1966
9999 mem: location 2006 is 1971
9999 run: address to copy is 1972
9999 run: its type is address
9999 mem: location 1972 is 1966
9999 mem: storing 1966 in location 2008
 103 run: max:number <- length buf:address:array:event/deref
9999 mem: location 2008 is 1966
9999 mem: location 1966 is 1
9999 mem: location 1967 is 0
9999 mem: location 1968 is 101
9999 mem: location 1969 is 0
9999 mem: location 1970 is 0
9999 mem: location 2008 is 1966
9999 mem: storing 1 in location 2009
 103 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 2007 is 1971
9999 mem: location 1971 is 0
9999 mem: location 2009 is 1
9999 mem: storing 0 in location 2010
 103 run: break-unless done?:boolean, 
9999 mem: location 2010 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index buf:address:array:event/deref, idx:address:number/deref
9999 mem: location 2008 is 1966
9999 mem: location 1966 is 1
9999 mem: location 1967 is 0
9999 mem: location 1968 is 101
9999 mem: location 1969 is 0
9999 mem: location 1970 is 0
9999 mem: location 2007 is 1971
9999 mem: location 1971 is 0
9999 mem: location 2008 is 1966
9999 mem: location 2007 is 1971
9999 mem: location 1971 is 0
9999 run: address to copy is 1967
9999 run: its type is event
9999 mem: location 1967 is 0
9999 mem: location 1968 is 101
9999 mem: location 1969 is 0
9999 mem: location 1970 is 0
9999 mem: storing 0 in location 2012
9999 mem: storing 101 in location 2013
9999 mem: storing 0 in location 2014
9999 mem: storing 0 in location 2015
 103 run: idx:address:number/deref <- add idx:address:number/deref, 1:literal
9999 mem: location 2007 is 1971
9999 mem: location 1971 is 0
9999 mem: location 2007 is 1971
9999 mem: storing 1 in location 1971
 103 run: reply result:event, x:address:console/same-as-ingredient:0, 1:literal/found, 0:literal/quit
9999 mem: location 2012 is 0
9999 mem: location 2013 is 101
9999 mem: location 2014 is 0
9999 mem: location 2015 is 0
9999 mem: location 2006 is 1971
9999 run: result 0 is [0, 101, 0, 0]
9999 run: result 1 is 1971
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1978
9999 mem: storing 101 in location 1979
9999 mem: storing 0 in location 1980
9999 mem: storing 0 in location 1981
9999 mem: storing 1971 in location 1976
9999 mem: storing 1 in location 1982
9999 mem: storing 0 in location 1983
 102 run: loop-unless found?:boolean, 
9999 mem: location 1982 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?:boolean, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 102 run: trace [app], [next-event]
   1 app: next-event
 102 run: t:address:touch-event <- maybe-convert e:event, touch:variant
9999 mem: location 1978 is 0
9999 mem: location 1979 is 101
9999 mem: location 1980 is 0
9999 mem: location 1981 is 0
9999 mem: storing 0 in location 1984
 102 run: break-unless t:address:touch-event, 
9999 mem: location 1984 is 0
9999 run: jumping to instruction 15
 102 run: handle-event screen:address, console:address, editor:address:editor-data, e:event
9999 mem: location 1975 is 1031
9999 mem: location 1976 is 1971
9999 mem: location 1977 is 1153
9999 mem: location 1978 is 0
9999 mem: location 1979 is 101
9999 mem: location 1980 is 0
9999 mem: location 1981 is 0
 103 run: default-space:address:array:location <- new location:type, 50:literal
9999 mem: array size is 50
9999 mem: new alloc: 2035
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2037
 103 run: console:address <- next-ingredient 
9999 mem: storing 1971 in location 2038
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1153 in location 2039
 103 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 2040
9999 mem: storing 101 in location 2041
9999 mem: storing 0 in location 2042
9999 mem: storing 0 in location 2043
 103 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 2039 is 1153
9999 run: jumping to instruction 7
 103 run: c:address:character <- maybe-convert e:event, text:variant
9999 mem: location 2040 is 0
9999 mem: location 2041 is 101
9999 mem: location 2042 is 0
9999 mem: location 2043 is 0
9999 mem: storing 2041 in location 2044
 103 run: break-unless c:address:character, 
9999 mem: location 2044 is 2041
9999 run: jump-unless fell through
 103 run: backspace?:boolean <- equal c:address:character/deref, 8:literal/backspace
9999 mem: location 2044 is 2041
9999 mem: location 2041 is 101
9999 mem: storing 0 in location 2045
 103 run: break-unless backspace?:boolean, 
9999 mem: location 2045 is 0
9999 run: jumping to instruction 15
 103 run: insert-at-cursor editor:address:editor-data, c:address:character/deref, screen:address
9999 mem: location 2039 is 1153
9999 mem: location 2044 is 2041
9999 mem: location 2041 is 101
9999 mem: location 2037 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2086
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1153 in location 2088
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 2089
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2090
 104 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 2088 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 1190
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 2088 is 1153
9999 run: address to copy is 1154
9999 mem: storing 1154 in location 2091
 104 run: d:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 2088 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 1190
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 2088 is 1153
9999 run: address to copy is 1153
9999 run: its type is address
9999 mem: location 1153 is 1190
9999 mem: storing 1190 in location 2092
 104 run: insert-duplex c:character, before-cursor:address:address:duplex-list/deref
9999 mem: location 2089 is 101
9999 mem: location 2091 is 1154
9999 mem: location 1154 is 1190
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2117
 105 run: x:location <- next-ingredient 
9999 mem: storing 101 in location 2119
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1190 in location 2120
 105 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 2148
9999 mem: storing 2148 in location 2121
 105 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 2121 is 2148
9999 mem: location 2148 is 0
9999 mem: location 2149 is 0
9999 mem: location 2150 is 0
9999 mem: location 2121 is 2148
9999 run: address to copy is 2148
9999 mem: storing 2148 in location 2122
 105 run: val:address:location/deref <- copy x:location
9999 mem: location 2119 is 101
9999 mem: location 2122 is 2148
9999 mem: storing 101 in location 2148
 105 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2120 is 1190
9999 mem: location 1190 is 167
9999 mem: location 1191 is 1224
9999 mem: location 1192 is 0
9999 mem: location 2120 is 1190
9999 run: address to copy is 1191
9999 run: its type is address
9999 mem: location 1191 is 1224
9999 mem: storing 1224 in location 2123
 105 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 2120 is 1190
9999 mem: location 1190 is 167
9999 mem: location 1191 is 1224
9999 mem: location 1192 is 0
9999 mem: location 2120 is 1190
9999 run: address to copy is 1191
9999 mem: storing 1191 in location 2124
 105 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 2121 is 2148
9999 mem: location 2124 is 1191
9999 mem: storing 2148 in location 1191
 105 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 2121 is 2148
9999 mem: location 2148 is 101
9999 mem: location 2149 is 0
9999 mem: location 2150 is 0
9999 mem: location 2121 is 2148
9999 run: address to copy is 2150
9999 mem: storing 2150 in location 2124
 105 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 2120 is 1190
9999 mem: location 2124 is 2150
9999 mem: storing 1190 in location 2150
 105 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 2121 is 2148
9999 mem: location 2148 is 101
9999 mem: location 2149 is 0
9999 mem: location 2150 is 1190
9999 mem: location 2121 is 2148
9999 run: address to copy is 2149
9999 mem: storing 2149 in location 2124
 105 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 2123 is 1224
9999 mem: location 2124 is 2149
9999 mem: storing 1224 in location 2149
 105 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 2123 is 1224
9999 run: jumping to instruction 15
 105 run: y:address:address:duplex-list <- get-address next-node:address:duplex-list/deref, prev:offset
9999 mem: location 2123 is 1224
9999 mem: location 1224 is 97
9999 mem: location 1225 is 1289
9999 mem: location 1226 is 1190
9999 mem: location 2123 is 1224
9999 run: address to copy is 1226
9999 mem: storing 1226 in location 2124
 105 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 2121 is 2148
9999 mem: location 2124 is 1226
9999 mem: storing 2148 in location 1226
 105 run: reply new-node:address:duplex-list
9999 mem: location 2121 is 2148
 104 run: before-cursor:address:address:duplex-list/deref <- next-duplex before-cursor:address:address:duplex-list/deref
9999 mem: location 2091 is 1154
9999 mem: location 1154 is 1190
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2151
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1190 in location 2153
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2153 is 1190
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2153 is 1190
9999 mem: location 1190 is 167
9999 mem: location 1191 is 2148
9999 mem: location 1192 is 0
9999 mem: location 2153 is 1190
9999 run: address to copy is 1191
9999 run: its type is address
9999 mem: location 1191 is 2148
9999 mem: storing 2148 in location 2154
 105 run: reply result:address:duplex-list
9999 mem: location 2154 is 2148
9999 run: result 0 is 2148
9999 mem: location 2091 is 1154
9999 mem: storing 2148 in location 1154
 104 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 2088 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 2148
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 2088 is 1153
9999 run: address to copy is 1157
9999 mem: storing 1157 in location 2093
 104 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 2088 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 2148
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 2088 is 1153
9999 run: address to copy is 1158
9999 mem: storing 1158 in location 2094
 104 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 2088 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 2148
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 2088 is 1153
9999 run: address to copy is 1155
9999 run: its type is number
9999 mem: location 1155 is 0
9999 mem: storing 0 in location 2095
 104 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 2088 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 2148
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 2088 is 1153
9999 run: address to copy is 1156
9999 run: its type is number
9999 mem: location 1156 is 4
9999 mem: storing 4 in location 2096
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2089 is 101
9999 mem: storing 0 in location 2097
 104 run: break-unless newline?:boolean, 
9999 mem: location 2097 is 0
9999 run: jumping to instruction 18
 104 run: wrap-column:number <- subtract right:number, 1:literal
9999 mem: location 2096 is 4
9999 mem: storing 3 in location 2098
 104 run: at-wrap?:boolean <- greater-or-equal cursor-column:address:number/deref, wrap-column:number
9999 mem: location 2094 is 1158
9999 mem: location 1158 is 0
9999 mem: location 2098 is 3
9999 mem: storing 0 in location 2099
 104 run: break-unless at-wrap?:boolean, 
9999 mem: location 2099 is 0
9999 run: jumping to instruction 29
 104 run: cursor-column:address:number/deref <- add cursor-column:address:number/deref, 1:literal
9999 mem: location 2094 is 1158
9999 mem: location 1158 is 0
9999 mem: location 2094 is 1158
9999 mem: storing 1 in location 1158
 103 run: reply 
 102 run: render screen:address, editor:address:editor-data
9999 mem: location 1975 is 1031
9999 mem: location 1977 is 1153
 103 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 2182
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2184
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1153 in location 2185
 103 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 2185 is 1153
9999 run: jumping to instruction 5
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 2185 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 2148
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 2185 is 1153
9999 run: address to copy is 1155
9999 run: its type is number
9999 mem: location 1155 is 0
9999 mem: storing 0 in location 2186
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 2184 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2223
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2225
 104 run: break-unless x:address:screen, 
9999 mem: location 2225 is 1031
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2225 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2225 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2226
 104 run: reply height:number
9999 mem: location 2226 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 2187
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 2185 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 2148
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 2185 is 1153
9999 run: address to copy is 1156
9999 run: its type is number
9999 mem: location 1156 is 4
9999 mem: storing 4 in location 2188
 103 run: hide-screen screen:address
9999 mem: location 2184 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2254
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2256
 104 run: break-unless x:address:screen, 
9999 mem: location 2256 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 2256 is 1031
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 2185 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 2148
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 2185 is 1153
9999 run: address to copy is 1153
9999 run: its type is address
9999 mem: location 1153 is 1190
9999 mem: storing 1190 in location 2189
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 2189 is 1190
9999 mem: storing 1190 in location 2190
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2189 is 1190
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2285
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1190 in location 2287
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2287 is 1190
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2287 is 1190
9999 mem: location 1190 is 167
9999 mem: location 1191 is 2148
9999 mem: location 1192 is 0
9999 mem: location 2287 is 1190
9999 run: address to copy is 1191
9999 run: its type is address
9999 mem: location 1191 is 2148
9999 mem: storing 2148 in location 2288
 104 run: reply result:address:duplex-list
9999 mem: location 2288 is 2148
9999 run: result 0 is 2148
9999 mem: storing 2148 in location 2189
 103 run: row:number <- copy 1:literal/top
9999 mem: storing 1 in location 2191
 103 run: column:number <- copy left:number
9999 mem: location 2186 is 0
9999 mem: storing 0 in location 2192
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 2185 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 2148
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 2185 is 1153
9999 run: address to copy is 1157
9999 mem: storing 1157 in location 2193
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 2185 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 2148
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 2185 is 1153
9999 run: address to copy is 1158
9999 mem: storing 1158 in location 2194
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 2185 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 2148
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 2185 is 1153
9999 run: address to copy is 1154
9999 mem: storing 1154 in location 2195
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 2184 is 1031
9999 mem: location 2191 is 1
9999 mem: location 2192 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2316
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2318
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 2319
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2320
 104 run: break-unless x:address:screen, 
9999 mem: location 2318 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2318 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2318 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2321
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2319 is 1
9999 mem: location 2321 is 1033
9999 mem: storing 1 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2318 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2318 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2322
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2320 is 0
9999 mem: location 2322 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2318 is 1031
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 2189 is 2148
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2191 is 1
9999 mem: location 2187 is 5
9999 mem: storing 0 in location 2196
 103 run: break-if off-screen?:boolean, 
9999 mem: location 2196 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2191 is 1
9999 mem: location 2193 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 2197
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2197 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 2192 is 0
9999 mem: location 2194 is 1158
9999 mem: location 1158 is 1
9999 mem: storing 0 in location 2198
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 2198 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2189 is 2148
9999 mem: location 2148 is 101
9999 mem: location 2149 is 1224
9999 mem: location 2150 is 1190
9999 mem: location 2189 is 2148
9999 run: address to copy is 2148
9999 run: its type is number
9999 mem: location 2148 is 101
9999 mem: storing 101 in location 2199
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2199 is 101
9999 mem: storing 0 in location 2200
 103 run: break-unless newline?:boolean, 
9999 mem: location 2200 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2192 is 0
9999 mem: location 2188 is 4
9999 mem: storing 0 in location 2202
 103 run: break-unless at-right?:boolean, 
9999 mem: location 2202 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 2184 is 1031
9999 mem: location 2199 is 101
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2347
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2349
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 2350
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2351
9999 mem: storing 0 in location 2352
 104 run: break-if color-found?:boolean, 
9999 mem: location 2352 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2351
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2353
9999 mem: storing 0 in location 2354
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2354 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2353
 104 run: break-unless x:address:screen, 
9999 mem: location 2349 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2349 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2349 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2355
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2349 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2349 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2356
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2349 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2349 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2357
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2349 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2349 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2358
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2350 is 101
9999 mem: storing 0 in location 2359
 104 run: break-unless newline?:boolean, 
9999 mem: location 2359 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2355 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2357 is 5
9999 mem: storing 5 in location 2362
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2362 is 5
9999 mem: location 2356 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 5 in location 2362
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2349 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2349 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2363
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2350 is 101
9999 mem: storing 0 in location 2364
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2364 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2363 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2362 is 5
9999 mem: location 2363 is 1036
9999 mem: location 2362 is 5
9999 mem: storing 1047 in location 2366
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2366 is 1047
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 2366 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 2367
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2366 is 1047
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 2366 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 2368
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2350 is 101
9999 mem: location 2367 is 1047
9999 mem: storing 101 in location 1047
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2351 is 7
9999 mem: location 2368 is 1048
9999 mem: storing 7 in location 1048
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2357 is 5
9999 mem: storing 4 in location 2369
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2356 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2369 is 4
9999 mem: storing 0 in location 2370
 104 run: break-if at-right?:boolean, 
9999 mem: location 2370 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2356 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2356 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2349 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2189 is 2148
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2378
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2148 in location 2380
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2380 is 2148
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2380 is 2148
9999 mem: location 2148 is 101
9999 mem: location 2149 is 1224
9999 mem: location 2150 is 1190
9999 mem: location 2380 is 2148
9999 run: address to copy is 2149
9999 run: its type is address
9999 mem: location 2149 is 1224
9999 mem: storing 1224 in location 2381
 104 run: reply result:address:duplex-list
9999 mem: location 2381 is 1224
9999 run: result 0 is 1224
9999 mem: storing 1224 in location 2189
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2190 is 1190
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2409
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1190 in location 2411
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2411 is 1190
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2411 is 1190
9999 mem: location 1190 is 167
9999 mem: location 1191 is 2148
9999 mem: location 1192 is 0
9999 mem: location 2411 is 1190
9999 run: address to copy is 1191
9999 run: its type is address
9999 mem: location 1191 is 2148
9999 mem: storing 2148 in location 2412
 104 run: reply result:address:duplex-list
9999 mem: location 2412 is 2148
9999 run: result 0 is 2148
9999 mem: storing 2148 in location 2190
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2192 is 0
9999 mem: storing 1 in location 2192
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 2189 is 1224
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2191 is 1
9999 mem: location 2187 is 5
9999 mem: storing 0 in location 2196
 103 run: break-if off-screen?:boolean, 
9999 mem: location 2196 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2191 is 1
9999 mem: location 2193 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 2197
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2197 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 2192 is 1
9999 mem: location 2194 is 1158
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 2198
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 2198 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 2189 is 1224
schedule: prev-duplex/render/editor-event-loop/run1001/editor-wraps-line-on-insert
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2440
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1224 in location 2442
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2442 is 1224
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 2442 is 1224
9999 mem: location 1224 is 97
9999 mem: location 1225 is 1289
9999 mem: location 1226 is 2148
9999 mem: location 2442 is 1224
9999 run: address to copy is 1226
9999 run: its type is address
9999 mem: location 1226 is 2148
9999 mem: storing 2148 in location 2443
 104 run: reply result:address:duplex-list
9999 mem: location 2443 is 2148
9999 run: result 0 is 2148
9999 mem: location 2195 is 1154
9999 mem: storing 2148 in location 1154
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2189 is 1224
9999 mem: location 1224 is 97
9999 mem: location 1225 is 1289
9999 mem: location 1226 is 2148
9999 mem: location 2189 is 1224
9999 run: address to copy is 1224
9999 run: its type is number
9999 mem: location 1224 is 97
9999 mem: storing 97 in location 2199
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2199 is 97
9999 mem: storing 0 in location 2200
 103 run: break-unless newline?:boolean, 
9999 mem: location 2200 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2192 is 1
9999 mem: location 2188 is 4
9999 mem: storing 0 in location 2202
 103 run: break-unless at-right?:boolean, 
9999 mem: location 2202 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 2184 is 1031
9999 mem: location 2199 is 97
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2471
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2473
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 2474
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2475
9999 mem: storing 0 in location 2476
 104 run: break-if color-found?:boolean, 
9999 mem: location 2476 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2475
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2477
9999 mem: storing 0 in location 2478
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2478 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2477
 104 run: break-unless x:address:screen, 
9999 mem: location 2473 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2473 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2473 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2479
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2473 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2473 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2480
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2473 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2473 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2481
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2473 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2473 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2482
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2474 is 97
9999 mem: storing 0 in location 2483
 104 run: break-unless newline?:boolean, 
9999 mem: location 2483 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2479 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2481 is 5
9999 mem: storing 5 in location 2486
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2486 is 5
9999 mem: location 2480 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 6 in location 2486
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2473 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2473 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2487
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2474 is 97
9999 mem: storing 0 in location 2488
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2488 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2487 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2486 is 6
9999 mem: location 2487 is 1036
9999 mem: location 2486 is 6
9999 mem: storing 1049 in location 2490
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2490 is 1049
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 2490 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 2491
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2490 is 1049
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 2490 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 2492
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2474 is 97
9999 mem: location 2491 is 1049
9999 mem: storing 97 in location 1049
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2475 is 7
9999 mem: location 2492 is 1050
9999 mem: storing 7 in location 1050
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2481 is 5
9999 mem: storing 4 in location 2493
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2480 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2493 is 4
9999 mem: storing 0 in location 2494
 104 run: break-if at-right?:boolean, 
9999 mem: location 2494 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2480 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2480 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2473 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2189 is 1224
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2502
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1224 in location 2504
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2504 is 1224
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2504 is 1224
9999 mem: location 1224 is 97
9999 mem: location 1225 is 1289
9999 mem: location 1226 is 2148
9999 mem: location 2504 is 1224
9999 run: address to copy is 1225
9999 run: its type is address
9999 mem: location 1225 is 1289
9999 mem: storing 1289 in location 2505
 104 run: reply result:address:duplex-list
9999 mem: location 2505 is 1289
9999 run: result 0 is 1289
9999 mem: storing 1289 in location 2189
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2190 is 2148
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2533
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2148 in location 2535
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2535 is 2148
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2535 is 2148
9999 mem: location 2148 is 101
9999 mem: location 2149 is 1224
9999 mem: location 2150 is 1190
9999 mem: location 2535 is 2148
9999 run: address to copy is 2149
9999 run: its type is address
9999 mem: location 2149 is 1224
9999 mem: storing 1224 in location 2536
 104 run: reply result:address:duplex-list
9999 mem: location 2536 is 1224
9999 run: result 0 is 1224
9999 mem: storing 1224 in location 2190
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2192 is 1
9999 mem: storing 2 in location 2192
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 2189 is 1289
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2191 is 1
9999 mem: location 2187 is 5
9999 mem: storing 0 in location 2196
 103 run: break-if off-screen?:boolean, 
9999 mem: location 2196 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2191 is 1
9999 mem: location 2193 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 2197
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2197 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 2192 is 2
9999 mem: location 2194 is 1158
9999 mem: location 1158 is 1
9999 mem: storing 0 in location 2198
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 2198 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2189 is 1289
9999 mem: location 1289 is 98
9999 mem: location 1290 is 1354
9999 mem: location 1291 is 1224
9999 mem: location 2189 is 1289
9999 run: address to copy is 1289
9999 run: its type is number
9999 mem: location 1289 is 98
9999 mem: storing 98 in location 2199
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2199 is 98
9999 mem: storing 0 in location 2200
 103 run: break-unless newline?:boolean, 
9999 mem: location 2200 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2192 is 2
9999 mem: location 2188 is 4
9999 mem: storing 0 in location 2202
 103 run: break-unless at-right?:boolean, 
9999 mem: location 2202 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 2184 is 1031
9999 mem: location 2199 is 98
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2564
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2566
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 2567
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2568
9999 mem: storing 0 in location 2569
 104 run: break-if color-found?:boolean, 
9999 mem: location 2569 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2568
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2570
9999 mem: storing 0 in location 2571
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2571 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2570
 104 run: break-unless x:address:screen, 
9999 mem: location 2566 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2566 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2566 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2572
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2566 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2566 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2573
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2566 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2566 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2574
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2566 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2566 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2575
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2567 is 98
9999 mem: storing 0 in location 2576
 104 run: break-unless newline?:boolean, 
9999 mem: location 2576 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2572 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2574 is 5
9999 mem: storing 5 in location 2579
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2579 is 5
9999 mem: location 2573 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 7 in location 2579
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2566 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2566 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2580
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2567 is 98
9999 mem: storing 0 in location 2581
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2581 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2580 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 97
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2579 is 7
9999 mem: location 2580 is 1036
9999 mem: location 2579 is 7
9999 mem: storing 1051 in location 2583
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2583 is 1051
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 2583 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 2584
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2583 is 1051
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 2583 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 2585
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2567 is 98
9999 mem: location 2584 is 1051
9999 mem: storing 98 in location 1051
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2568 is 7
9999 mem: location 2585 is 1052
9999 mem: storing 7 in location 1052
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2574 is 5
9999 mem: storing 4 in location 2586
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2573 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2586 is 4
9999 mem: storing 0 in location 2587
 104 run: break-if at-right?:boolean, 
9999 mem: location 2587 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2573 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2573 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2566 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2189 is 1289
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2595
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1289 in location 2597
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2597 is 1289
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2597 is 1289
9999 mem: location 1289 is 98
9999 mem: location 1290 is 1354
9999 mem: location 1291 is 1224
9999 mem: location 2597 is 1289
9999 run: address to copy is 1290
9999 run: its type is address
9999 mem: location 1290 is 1354
9999 mem: storing 1354 in location 2598
 104 run: reply result:address:duplex-list
9999 mem: location 2598 is 1354
9999 run: result 0 is 1354
9999 mem: storing 1354 in location 2189
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2190 is 1224
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2626
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1224 in location 2628
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2628 is 1224
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2628 is 1224
9999 mem: location 1224 is 97
9999 mem: location 1225 is 1289
9999 mem: location 1226 is 2148
9999 mem: location 2628 is 1224
9999 run: address to copy is 1225
9999 run: its type is address
9999 mem: location 1225 is 1289
9999 mem: storing 1289 in location 2629
 104 run: reply result:address:duplex-list
9999 mem: location 2629 is 1289
9999 run: result 0 is 1289
9999 mem: storing 1289 in location 2190
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2192 is 2
9999 mem: storing 3 in location 2192
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 2189 is 1354
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2191 is 1
9999 mem: location 2187 is 5
9999 mem: storing 0 in location 2196
 103 run: break-if off-screen?:boolean, 
9999 mem: location 2196 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2191 is 1
9999 mem: location 2193 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 2197
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2197 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 2192 is 3
9999 mem: location 2194 is 1158
9999 mem: location 1158 is 1
9999 mem: storing 0 in location 2198
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 2198 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2189 is 1354
9999 mem: location 1354 is 99
9999 mem: location 1355 is 0
9999 mem: location 1356 is 1289
9999 mem: location 2189 is 1354
9999 run: address to copy is 1354
9999 run: its type is number
9999 mem: location 1354 is 99
9999 mem: storing 99 in location 2199
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2199 is 99
9999 mem: storing 0 in location 2200
 103 run: break-unless newline?:boolean, 
9999 mem: location 2200 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2192 is 3
9999 mem: location 2188 is 4
9999 mem: storing 0 in location 2202
 103 run: break-unless at-right?:boolean, 
9999 mem: location 2202 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 2184 is 1031
9999 mem: location 2199 is 99
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2657
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2659
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 2660
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2661
9999 mem: storing 0 in location 2662
 104 run: break-if color-found?:boolean, 
9999 mem: location 2662 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2661
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2663
9999 mem: storing 0 in location 2664
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2664 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2663
 104 run: break-unless x:address:screen, 
9999 mem: location 2659 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2659 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2659 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2665
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2659 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2659 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2666
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2659 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2659 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2667
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2659 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2659 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2668
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2660 is 99
9999 mem: storing 0 in location 2669
 104 run: break-unless newline?:boolean, 
9999 mem: location 2669 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2665 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2667 is 5
9999 mem: storing 5 in location 2672
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2672 is 5
9999 mem: location 2666 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 8 in location 2672
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2659 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2659 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2673
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2660 is 99
9999 mem: storing 0 in location 2674
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2674 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2673 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 97
9999 mem: location 1050 is 7
9999 mem: location 1051 is 98
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2672 is 8
9999 mem: location 2673 is 1036
9999 mem: location 2672 is 8
9999 mem: storing 1053 in location 2676
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2676 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 2676 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 2677
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2676 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 2676 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 2678
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2660 is 99
9999 mem: location 2677 is 1053
9999 mem: storing 99 in location 1053
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2661 is 7
9999 mem: location 2678 is 1054
9999 mem: storing 7 in location 1054
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2667 is 5
9999 mem: storing 4 in location 2679
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2666 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2679 is 4
9999 mem: storing 0 in location 2680
 104 run: break-if at-right?:boolean, 
9999 mem: location 2680 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2666 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2666 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2659 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2189 is 1354
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2688
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1354 in location 2690
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2690 is 1354
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2690 is 1354
9999 mem: location 1354 is 99
9999 mem: location 1355 is 0
9999 mem: location 1356 is 1289
9999 mem: location 2690 is 1354
9999 run: address to copy is 1355
9999 run: its type is address
9999 mem: location 1355 is 0
9999 mem: storing 0 in location 2691
 104 run: reply result:address:duplex-list
9999 mem: location 2691 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 2189
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2190 is 1289
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2719
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1289 in location 2721
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2721 is 1289
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2721 is 1289
9999 mem: location 1289 is 98
9999 mem: location 1290 is 1354
9999 mem: location 1291 is 1224
9999 mem: location 2721 is 1289
9999 run: address to copy is 1290
9999 run: its type is address
9999 mem: location 1290 is 1354
9999 mem: storing 1354 in location 2722
 104 run: reply result:address:duplex-list
9999 mem: location 2722 is 1354
9999 run: result 0 is 1354
9999 mem: storing 1354 in location 2190
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2192 is 3
9999 mem: storing 4 in location 2192
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 2189 is 0
9999 run: jumping to instruction 64
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2191 is 1
9999 mem: location 2193 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 2197
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 2192 is 4
9999 mem: location 2194 is 1158
9999 mem: location 1158 is 1
9999 mem: storing 0 in location 2203
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 2197 is 1
9999 mem: location 2203 is 0
9999 mem: storing 0 in location 2204
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 2191 is 1
9999 mem: location 2193 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 2205
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 2204 is 0
9999 mem: location 2205 is 0
9999 mem: storing 0 in location 2206
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 2206 is 0
9999 run: jumping to instruction 83
 103 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 2184 is 1031
9999 mem: location 2192 is 4
9999 mem: location 2188 is 4
 104 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 2750
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2752
 104 run: left:number <- next-ingredient 
9999 mem: storing 4 in location 2753
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 2754
 104 run: column:number <- copy left:number
9999 mem: location 2753 is 4
9999 mem: storing 4 in location 2755
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2755 is 4
9999 mem: location 2754 is 4
9999 mem: storing 0 in location 2756
 104 run: break-if done?:boolean, 
9999 mem: location 2756 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2752 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2791
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2793
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2794
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2795
9999 mem: storing 0 in location 2796
 105 run: break-if color-found?:boolean, 
9999 mem: location 2796 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2795
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2797
9999 mem: storing 0 in location 2798
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2798 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2797
 105 run: break-unless x:address:screen, 
9999 mem: location 2793 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2793 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2793 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2799
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2793 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2793 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2800
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2793 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2793 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2801
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2793 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2793 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2802
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2794 is 32
9999 mem: storing 0 in location 2803
 105 run: break-unless newline?:boolean, 
9999 mem: location 2803 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2799 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2801 is 5
9999 mem: storing 5 in location 2806
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2806 is 5
9999 mem: location 2800 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 9 in location 2806
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2793 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2793 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2807
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2794 is 32
9999 mem: storing 0 in location 2808
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2808 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2807 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 97
9999 mem: location 1050 is 7
9999 mem: location 1051 is 98
9999 mem: location 1052 is 7
9999 mem: location 1053 is 99
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2806 is 9
9999 mem: location 2807 is 1036
9999 mem: location 2806 is 9
9999 mem: storing 1055 in location 2810
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2810 is 1055
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 2810 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 2811
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2810 is 1055
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 2810 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 2812
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2794 is 32
9999 mem: location 2811 is 1055
9999 mem: storing 32 in location 1055
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2795 is 7
9999 mem: location 2812 is 1056
9999 mem: storing 7 in location 1056
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2801 is 5
9999 mem: storing 4 in location 2813
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2800 is 1034
9999 mem: location 1034 is 4
9999 mem: location 2813 is 4
9999 mem: storing 1 in location 2814
 105 run: break-if at-right?:boolean, 
9999 mem: location 2814 is 1
9999 run: jumping to instruction 60
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2793 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2755 is 4
9999 mem: storing 5 in location 2755
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2755 is 5
9999 mem: location 2754 is 4
9999 mem: storing 1 in location 2756
 104 run: break-if done?:boolean, 
9999 mem: location 2756 is 1
9999 run: jumping to instruction 11
 103 run: reply editor:address:editor-data/same-as-ingredient:1, row:number, screen:address/same-as-ingredient:0
9999 mem: location 2185 is 1153
9999 mem: location 2191 is 1
9999 mem: location 2184 is 1031
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 1976 is 1971
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2822
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1971 in location 2824
 103 run: break-unless x:address:console, 
9999 mem: location 2824 is 1971
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 2824 is 1971
9999 mem: location 1971 is 1
9999 mem: location 1972 is 1966
9999 mem: location 2824 is 1971
9999 run: address to copy is 1971
9999 mem: storing 1971 in location 2825
 103 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 2824 is 1971
9999 mem: location 1971 is 1
9999 mem: location 1972 is 1966
9999 mem: location 2824 is 1971
9999 run: address to copy is 1972
9999 run: its type is address
9999 mem: location 1972 is 1966
9999 mem: storing 1966 in location 2826
 103 run: max:number <- length buf:address:array:event/deref
9999 mem: location 2826 is 1966
9999 mem: location 1966 is 1
9999 mem: location 1967 is 0
9999 mem: location 1968 is 101
9999 mem: location 1969 is 0
9999 mem: location 1970 is 0
9999 mem: location 2826 is 1966
9999 mem: storing 1 in location 2827
 103 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 2825 is 1971
9999 mem: location 1971 is 1
9999 mem: location 2827 is 1
9999 mem: storing 1 in location 2828
 103 run: break-unless done?:boolean, 
9999 mem: location 2828 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: new alloc: 2853
9999 mem: storing 2853 in location 2829
 103 run: reply dummy:address:event/deref, x:address:console/same-as-ingredient:0, 1:literal/found, 1:literal/quit
9999 mem: location 2829 is 2853
9999 mem: location 2853 is 0
9999 mem: location 2854 is 0
9999 mem: location 2855 is 0
9999 mem: location 2856 is 0
9999 mem: location 2824 is 1971
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1971
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1978
9999 mem: storing 0 in location 1979
9999 mem: storing 0 in location 1980
9999 mem: storing 0 in location 1981
9999 mem: storing 1971 in location 1976
9999 mem: storing 1 in location 1982
9999 mem: storing 1 in location 1983
 102 run: loop-unless found?:boolean, 
9999 mem: location 1982 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?:boolean, 
9999 mem: location 1983 is 1
9999 run: jumping to instruction 20
 100 run: screen-should-contain [
    .     .
    .eabc .
    .     .
    .     .
  ]
 100 run: assume-console [
    type [f]
  ]
parse: instruction: type
parse:   ingredient: {name: "f", properties: [_: "literal-string"]}
 100 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1002
after-brace: editor-event-loop ...
 100 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1031
9999 mem: location 901 is 2862
9999 mem: location 2 is 1153
 101 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2864
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2866
 101 run: console:address <- next-ingredient 
9999 mem: storing 2862 in location 2867
 101 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1153 in location 2868
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 2867 is 2862
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2895
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 2862 in location 2897
 102 run: break-unless x:address:console, 
9999 mem: location 2897 is 2862
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 2897 is 2862
9999 mem: location 2862 is 0
9999 mem: location 2863 is 2857
9999 mem: location 2897 is 2862
9999 run: address to copy is 2862
9999 mem: storing 2862 in location 2898
 102 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 2897 is 2862
9999 mem: location 2862 is 0
9999 mem: location 2863 is 2857
9999 mem: location 2897 is 2862
9999 run: address to copy is 2863
9999 run: its type is address
9999 mem: location 2863 is 2857
9999 mem: storing 2857 in location 2899
 102 run: max:number <- length buf:address:array:event/deref
9999 mem: location 2899 is 2857
9999 mem: location 2857 is 1
9999 mem: location 2858 is 0
9999 mem: location 2859 is 102
9999 mem: location 2860 is 0
9999 mem: location 2861 is 0
9999 mem: location 2899 is 2857
9999 mem: storing 1 in location 2900
 102 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 2898 is 2862
9999 mem: location 2862 is 0
9999 mem: location 2900 is 1
9999 mem: storing 0 in location 2901
 102 run: break-unless done?:boolean, 
9999 mem: location 2901 is 0
9999 run: jumping to instruction 12
 102 run: result:event <- index buf:address:array:event/deref, idx:address:number/deref
9999 mem: location 2899 is 2857
9999 mem: location 2857 is 1
9999 mem: location 2858 is 0
9999 mem: location 2859 is 102
9999 mem: location 2860 is 0
9999 mem: location 2861 is 0
9999 mem: location 2898 is 2862
9999 mem: location 2862 is 0
9999 mem: location 2899 is 2857
9999 mem: location 2898 is 2862
9999 mem: location 2862 is 0
9999 run: address to copy is 2858
9999 run: its type is event
9999 mem: location 2858 is 0
9999 mem: location 2859 is 102
9999 mem: location 2860 is 0
9999 mem: location 2861 is 0
9999 mem: storing 0 in location 2903
9999 mem: storing 102 in location 2904
9999 mem: storing 0 in location 2905
9999 mem: storing 0 in location 2906
 102 run: idx:address:number/deref <- add idx:address:number/deref, 1:literal
9999 mem: location 2898 is 2862
9999 mem: location 2862 is 0
9999 mem: location 2898 is 2862
9999 mem: storing 1 in location 2862
 102 run: reply result:event, x:address:console/same-as-ingredient:0, 1:literal/found, 0:literal/quit
9999 mem: location 2903 is 0
9999 mem: location 2904 is 102
9999 mem: location 2905 is 0
9999 mem: location 2906 is 0
9999 mem: location 2897 is 2862
9999 run: result 0 is [0, 102, 0, 0]
9999 run: result 1 is 2862
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 2869
9999 mem: storing 102 in location 2870
9999 mem: storing 0 in location 2871
9999 mem: storing 0 in location 2872
9999 mem: storing 2862 in location 2867
9999 mem: storing 1 in location 2873
9999 mem: storing 0 in location 2874
 101 run: loop-unless found?:boolean, 
9999 mem: location 2873 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?:boolean, 
9999 mem: location 2874 is 0
9999 run: jump-if fell through
 101 run: trace [app], [next-event]
   1 app: next-event
 101 run: t:address:touch-event <- maybe-convert e:event, touch:variant
9999 mem: location 2869 is 0
9999 mem: location 2870 is 102
9999 mem: location 2871 is 0
9999 mem: location 2872 is 0
9999 mem: storing 0 in location 2875
 101 run: break-unless t:address:touch-event, 
9999 mem: location 2875 is 0
9999 run: jumping to instruction 15
 101 run: handle-event screen:address, console:address, editor:address:editor-data, e:event
9999 mem: location 2866 is 1031
9999 mem: location 2867 is 2862
9999 mem: location 2868 is 1153
9999 mem: location 2869 is 0
9999 mem: location 2870 is 102
9999 mem: location 2871 is 0
9999 mem: location 2872 is 0
 102 run: default-space:address:array:location <- new location:type, 50:literal
9999 mem: array size is 50
9999 mem: new alloc: 2926
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2928
 102 run: console:address <- next-ingredient 
9999 mem: storing 2862 in location 2929
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1153 in location 2930
 102 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 2931
9999 mem: storing 102 in location 2932
9999 mem: storing 0 in location 2933
9999 mem: storing 0 in location 2934
 102 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 2930 is 1153
9999 run: jumping to instruction 7
 102 run: c:address:character <- maybe-convert e:event, text:variant
9999 mem: location 2931 is 0
9999 mem: location 2932 is 102
9999 mem: location 2933 is 0
9999 mem: location 2934 is 0
9999 mem: storing 2932 in location 2935
 102 run: break-unless c:address:character, 
9999 mem: location 2935 is 2932
9999 run: jump-unless fell through
 102 run: backspace?:boolean <- equal c:address:character/deref, 8:literal/backspace
9999 mem: location 2935 is 2932
9999 mem: location 2932 is 102
9999 mem: storing 0 in location 2936
 102 run: break-unless backspace?:boolean, 
9999 mem: location 2936 is 0
9999 run: jumping to instruction 15
 102 run: insert-at-cursor editor:address:editor-data, c:address:character/deref, screen:address
9999 mem: location 2930 is 1153
9999 mem: location 2935 is 2932
9999 mem: location 2932 is 102
9999 mem: location 2928 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2977
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1153 in location 2979
 103 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 2980
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2981
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 2979 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 2148
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 2979 is 1153
9999 run: address to copy is 1154
9999 mem: storing 1154 in location 2982
 103 run: d:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 2979 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 2148
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 2979 is 1153
9999 run: address to copy is 1153
9999 run: its type is address
9999 mem: location 1153 is 1190
9999 mem: storing 1190 in location 2983
 103 run: insert-duplex c:character, before-cursor:address:address:duplex-list/deref
9999 mem: location 2980 is 102
9999 mem: location 2982 is 1154
9999 mem: location 1154 is 2148
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3008
 104 run: x:location <- next-ingredient 
9999 mem: storing 102 in location 3010
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2148 in location 3011
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 3039
9999 mem: storing 3039 in location 3012
 104 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 3012 is 3039
9999 mem: location 3039 is 0
9999 mem: location 3040 is 0
9999 mem: location 3041 is 0
9999 mem: location 3012 is 3039
9999 run: address to copy is 3039
9999 mem: storing 3039 in location 3013
 104 run: val:address:location/deref <- copy x:location
9999 mem: location 3010 is 102
9999 mem: location 3013 is 3039
9999 mem: storing 102 in location 3039
 104 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3011 is 2148
9999 mem: location 2148 is 101
9999 mem: location 2149 is 1224
9999 mem: location 2150 is 1190
9999 mem: location 3011 is 2148
9999 run: address to copy is 2149
9999 run: its type is address
9999 mem: location 2149 is 1224
9999 mem: storing 1224 in location 3014
 104 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 3011 is 2148
9999 mem: location 2148 is 101
9999 mem: location 2149 is 1224
9999 mem: location 2150 is 1190
9999 mem: location 3011 is 2148
9999 run: address to copy is 2149
9999 mem: storing 2149 in location 3015
 104 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 3012 is 3039
9999 mem: location 3015 is 2149
9999 mem: storing 3039 in location 2149
 104 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 3012 is 3039
9999 mem: location 3039 is 102
9999 mem: location 3040 is 0
9999 mem: location 3041 is 0
9999 mem: location 3012 is 3039
9999 run: address to copy is 3041
9999 mem: storing 3041 in location 3015
 104 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 3011 is 2148
9999 mem: location 3015 is 3041
9999 mem: storing 2148 in location 3041
 104 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 3012 is 3039
9999 mem: location 3039 is 102
9999 mem: location 3040 is 0
9999 mem: location 3041 is 2148
9999 mem: location 3012 is 3039
9999 run: address to copy is 3040
9999 mem: storing 3040 in location 3015
 104 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 3014 is 1224
9999 mem: location 3015 is 3040
9999 mem: storing 1224 in location 3040
 104 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 3014 is 1224
9999 run: jumping to instruction 15
 104 run: y:address:address:duplex-list <- get-address next-node:address:duplex-list/deref, prev:offset
9999 mem: location 3014 is 1224
9999 mem: location 1224 is 97
9999 mem: location 1225 is 1289
9999 mem: location 1226 is 2148
9999 mem: location 3014 is 1224
9999 run: address to copy is 1226
9999 mem: storing 1226 in location 3015
 104 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 3012 is 3039
9999 mem: location 3015 is 1226
9999 mem: storing 3039 in location 1226
 104 run: reply new-node:address:duplex-list
9999 mem: location 3012 is 3039
 103 run: before-cursor:address:address:duplex-list/deref <- next-duplex before-cursor:address:address:duplex-list/deref
9999 mem: location 2982 is 1154
9999 mem: location 1154 is 2148
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3042
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2148 in location 3044
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3044 is 2148
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3044 is 2148
9999 mem: location 2148 is 101
9999 mem: location 2149 is 3039
9999 mem: location 2150 is 1190
9999 mem: location 3044 is 2148
9999 run: address to copy is 2149
9999 run: its type is address
9999 mem: location 2149 is 3039
9999 mem: storing 3039 in location 3045
 104 run: reply result:address:duplex-list
9999 mem: location 3045 is 3039
9999 run: result 0 is 3039
9999 mem: location 2982 is 1154
9999 mem: storing 3039 in location 1154
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 2979 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 3039
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 2979 is 1153
9999 run: address to copy is 1157
9999 mem: storing 1157 in location 2984
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 2979 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 3039
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 2979 is 1153
9999 run: address to copy is 1158
9999 mem: storing 1158 in location 2985
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 2979 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 3039
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 2979 is 1153
9999 run: address to copy is 1155
9999 run: its type is number
9999 mem: location 1155 is 0
9999 mem: storing 0 in location 2986
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 2979 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 3039
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 2979 is 1153
9999 run: address to copy is 1156
9999 run: its type is number
9999 mem: location 1156 is 4
9999 mem: storing 4 in location 2987
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2980 is 102
9999 mem: storing 0 in location 2988
 103 run: break-unless newline?:boolean, 
9999 mem: location 2988 is 0
9999 run: jumping to instruction 18
 103 run: wrap-column:number <- subtract right:number, 1:literal
9999 mem: location 2987 is 4
9999 mem: storing 3 in location 2989
 103 run: at-wrap?:boolean <- greater-or-equal cursor-column:address:number/deref, wrap-column:number
9999 mem: location 2985 is 1158
9999 mem: location 1158 is 1
9999 mem: location 2989 is 3
9999 mem: storing 0 in location 2990
 103 run: break-unless at-wrap?:boolean, 
9999 mem: location 2990 is 0
9999 run: jumping to instruction 29
 103 run: cursor-column:address:number/deref <- add cursor-column:address:number/deref, 1:literal
9999 mem: location 2985 is 1158
9999 mem: location 1158 is 1
9999 mem: location 2985 is 1158
9999 mem: storing 2 in location 1158
 102 run: reply 
 101 run: render screen:address, editor:address:editor-data
9999 mem: location 2866 is 1031
9999 mem: location 2868 is 1153
 102 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 3073
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 3075
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1153 in location 3076
 102 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 3076 is 1153
9999 run: jumping to instruction 5
 102 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 3076 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 3039
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 2
9999 mem: location 3076 is 1153
9999 run: address to copy is 1155
9999 run: its type is number
9999 mem: location 1155 is 0
9999 mem: storing 0 in location 3077
 102 run: screen-height:number <- screen-height screen:address
9999 mem: location 3075 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3114
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3116
 103 run: break-unless x:address:screen, 
9999 mem: location 3116 is 1031
9999 run: jump-unless fell through
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3116 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3116 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 3117
 103 run: reply height:number
9999 mem: location 3117 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 3078
 102 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 3076 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 3039
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 2
9999 mem: location 3076 is 1153
9999 run: address to copy is 1156
9999 run: its type is number
9999 mem: location 1156 is 4
9999 mem: storing 4 in location 3079
 102 run: hide-screen screen:address
9999 mem: location 3075 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3145
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3147
 103 run: break-unless x:address:screen, 
9999 mem: location 3147 is 1031
9999 run: jump-unless fell through
 103 run: reply x:address:screen
9999 mem: location 3147 is 1031
 102 run: curr:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 3076 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 3039
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 2
9999 mem: location 3076 is 1153
9999 run: address to copy is 1153
9999 run: its type is address
9999 mem: location 1153 is 1190
9999 mem: storing 1190 in location 3080
 102 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 3080 is 1190
9999 mem: storing 1190 in location 3081
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3080 is 1190
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3176
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1190 in location 3178
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3178 is 1190
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3178 is 1190
9999 mem: location 1190 is 167
9999 mem: location 1191 is 2148
9999 mem: location 1192 is 0
9999 mem: location 3178 is 1190
9999 run: address to copy is 1191
9999 run: its type is address
9999 mem: location 1191 is 2148
9999 mem: storing 2148 in location 3179
 103 run: reply result:address:duplex-list
9999 mem: location 3179 is 2148
9999 run: result 0 is 2148
9999 mem: storing 2148 in location 3080
 102 run: row:number <- copy 1:literal/top
9999 mem: storing 1 in location 3082
 102 run: column:number <- copy left:number
9999 mem: location 3077 is 0
9999 mem: storing 0 in location 3083
 102 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 3076 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 3039
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 2
9999 mem: location 3076 is 1153
9999 run: address to copy is 1157
9999 mem: storing 1157 in location 3084
 102 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 3076 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 3039
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 2
9999 mem: location 3076 is 1153
9999 run: address to copy is 1158
9999 mem: storing 1158 in location 3085
 102 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 3076 is 1153
9999 mem: location 1153 is 1190
9999 mem: location 1154 is 3039
9999 mem: location 1155 is 0
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 2
9999 mem: location 3076 is 1153
9999 run: address to copy is 1154
9999 mem: storing 1154 in location 3086
 102 run: move-cursor screen:address, row:number, column:number
9999 mem: location 3075 is 1031
9999 mem: location 3082 is 1
9999 mem: location 3083 is 0
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3207
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3209
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 3210
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 3211
 103 run: break-unless x:address:screen, 
9999 mem: location 3209 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3209 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3209 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3212
 103 run: row:address:number/deref <- copy new-row:number
9999 mem: location 3210 is 1
9999 mem: location 3212 is 1033
9999 mem: storing 1 in location 1033
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3209 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3209 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3213
 103 run: column:address:number/deref <- copy new-column:number
9999 mem: location 3211 is 0
9999 mem: location 3213 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3209 is 1031
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 3080 is 2148
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3082 is 1
9999 mem: location 3078 is 5
9999 mem: storing 0 in location 3087
 102 run: break-if off-screen?:boolean, 
9999 mem: location 3087 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3082 is 1
9999 mem: location 3084 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 3088
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3088 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 3083 is 0
9999 mem: location 3085 is 1158
9999 mem: location 1158 is 2
9999 mem: storing 0 in location 3089
 102 run: break-unless at-cursor?:boolean, 
9999 mem: location 3089 is 0
9999 run: jumping to instruction 29
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3080 is 2148
9999 mem: location 2148 is 101
9999 mem: location 2149 is 3039
9999 mem: location 2150 is 1190
9999 mem: location 3080 is 2148
9999 run: address to copy is 2148
9999 run: its type is number
9999 mem: location 2148 is 101
9999 mem: storing 101 in location 3090
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3090 is 101
9999 mem: storing 0 in location 3091
 102 run: break-unless newline?:boolean, 
9999 mem: location 3091 is 0
9999 run: jumping to instruction 49
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3083 is 0
9999 mem: location 3079 is 4
9999 mem: storing 0 in location 3093
 102 run: break-unless at-right?:boolean, 
9999 mem: location 3093 is 0
9999 run: jumping to instruction 58
 102 run: print-character screen:address, c:character
9999 mem: location 3075 is 1031
9999 mem: location 3090 is 101
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3238
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3240
 103 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 3241
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3242
9999 mem: storing 0 in location 3243
 103 run: break-if color-found?:boolean, 
9999 mem: location 3243 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3242
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3244
9999 mem: storing 0 in location 3245
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 3245 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 3244
 103 run: break-unless x:address:screen, 
9999 mem: location 3240 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3240 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3240 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3246
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3240 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3240 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3247
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3240 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3240 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3248
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3240 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3240 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 3249
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3241 is 101
9999 mem: storing 0 in location 3250
 103 run: break-unless newline?:boolean, 
9999 mem: location 3250 is 0
9999 run: jumping to instruction 30
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3246 is 1033
9999 mem: location 1033 is 1
9999 mem: location 3248 is 5
9999 mem: storing 5 in location 3253
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3253 is 5
9999 mem: location 3247 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 5 in location 3253
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3240 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3240 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3254
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3241 is 101
9999 mem: storing 0 in location 3255
 103 run: break-unless backspace?:boolean, 
9999 mem: location 3255 is 0
9999 run: jumping to instruction 49
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3254 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 97
9999 mem: location 1050 is 7
9999 mem: location 1051 is 98
9999 mem: location 1052 is 7
9999 mem: location 1053 is 99
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 3253 is 5
9999 mem: location 3254 is 1036
9999 mem: location 3253 is 5
9999 mem: storing 1047 in location 3257
schedule: print-character/render/editor-event-loop/run1002/editor-wraps-line-on-insert
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3257 is 1047
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 3257 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 3258
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3257 is 1047
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 3257 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 3259
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3241 is 101
9999 mem: location 3258 is 1047
9999 mem: storing 101 in location 1047
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3242 is 7
9999 mem: location 3259 is 1048
9999 mem: storing 7 in location 1048
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3248 is 5
9999 mem: storing 4 in location 3260
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3247 is 1034
9999 mem: location 1034 is 0
9999 mem: location 3260 is 4
9999 mem: storing 0 in location 3261
 103 run: break-if at-right?:boolean, 
9999 mem: location 3261 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3247 is 1034
9999 mem: location 1034 is 0
9999 mem: location 3247 is 1034
9999 mem: storing 1 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3240 is 1031
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3080 is 2148
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3269
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2148 in location 3271
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3271 is 2148
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3271 is 2148
9999 mem: location 2148 is 101
9999 mem: location 2149 is 3039
9999 mem: location 2150 is 1190
9999 mem: location 3271 is 2148
9999 run: address to copy is 2149
9999 run: its type is address
9999 mem: location 2149 is 3039
9999 mem: storing 3039 in location 3272
 103 run: reply result:address:duplex-list
9999 mem: location 3272 is 3039
9999 run: result 0 is 3039
9999 mem: storing 3039 in location 3080
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3081 is 1190
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3300
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1190 in location 3302
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3302 is 1190
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3302 is 1190
9999 mem: location 1190 is 167
9999 mem: location 1191 is 2148
9999 mem: location 1192 is 0
9999 mem: location 3302 is 1190
9999 run: address to copy is 1191
9999 run: its type is address
9999 mem: location 1191 is 2148
9999 mem: storing 2148 in location 3303
 103 run: reply result:address:duplex-list
9999 mem: location 3303 is 2148
9999 run: result 0 is 2148
9999 mem: storing 2148 in location 3081
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 3083 is 0
9999 mem: storing 1 in location 3083
 102 run: loop 
9999 run: jumping to instruction 19
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 3080 is 3039
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3082 is 1
9999 mem: location 3078 is 5
9999 mem: storing 0 in location 3087
 102 run: break-if off-screen?:boolean, 
9999 mem: location 3087 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3082 is 1
9999 mem: location 3084 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 3088
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3088 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 3083 is 1
9999 mem: location 3085 is 1158
9999 mem: location 1158 is 2
9999 mem: storing 0 in location 3089
 102 run: break-unless at-cursor?:boolean, 
9999 mem: location 3089 is 0
9999 run: jumping to instruction 29
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3080 is 3039
9999 mem: location 3039 is 102
9999 mem: location 3040 is 1224
9999 mem: location 3041 is 2148
9999 mem: location 3080 is 3039
9999 run: address to copy is 3039
9999 run: its type is number
9999 mem: location 3039 is 102
9999 mem: storing 102 in location 3090
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3090 is 102
9999 mem: storing 0 in location 3091
 102 run: break-unless newline?:boolean, 
9999 mem: location 3091 is 0
9999 run: jumping to instruction 49
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3083 is 1
9999 mem: location 3079 is 4
9999 mem: storing 0 in location 3093
 102 run: break-unless at-right?:boolean, 
9999 mem: location 3093 is 0
9999 run: jumping to instruction 58
 102 run: print-character screen:address, c:character
9999 mem: location 3075 is 1031
9999 mem: location 3090 is 102
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3331
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3333
 103 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 3334
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3335
9999 mem: storing 0 in location 3336
 103 run: break-if color-found?:boolean, 
9999 mem: location 3336 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3335
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3337
9999 mem: storing 0 in location 3338
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 3338 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 3337
 103 run: break-unless x:address:screen, 
9999 mem: location 3333 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3333 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3333 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3339
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3333 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3333 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3340
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3333 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3333 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3341
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3333 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3333 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 3342
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3334 is 102
9999 mem: storing 0 in location 3343
 103 run: break-unless newline?:boolean, 
9999 mem: location 3343 is 0
9999 run: jumping to instruction 30
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3339 is 1033
9999 mem: location 1033 is 1
9999 mem: location 3341 is 5
9999 mem: storing 5 in location 3346
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3346 is 5
9999 mem: location 3340 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 6 in location 3346
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3333 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3333 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3347
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3334 is 102
9999 mem: storing 0 in location 3348
 103 run: break-unless backspace?:boolean, 
9999 mem: location 3348 is 0
9999 run: jumping to instruction 49
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3347 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 97
9999 mem: location 1050 is 7
9999 mem: location 1051 is 98
9999 mem: location 1052 is 7
9999 mem: location 1053 is 99
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 3346 is 6
9999 mem: location 3347 is 1036
9999 mem: location 3346 is 6
9999 mem: storing 1049 in location 3350
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3350 is 1049
9999 mem: location 1049 is 97
9999 mem: location 1050 is 7
9999 mem: location 3350 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 3351
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3350 is 1049
9999 mem: location 1049 is 97
9999 mem: location 1050 is 7
9999 mem: location 3350 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 3352
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3334 is 102
9999 mem: location 3351 is 1049
9999 mem: storing 102 in location 1049
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3335 is 7
9999 mem: location 3352 is 1050
9999 mem: storing 7 in location 1050
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3341 is 5
9999 mem: storing 4 in location 3353
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3340 is 1034
9999 mem: location 1034 is 1
9999 mem: location 3353 is 4
9999 mem: storing 0 in location 3354
 103 run: break-if at-right?:boolean, 
9999 mem: location 3354 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3340 is 1034
9999 mem: location 1034 is 1
9999 mem: location 3340 is 1034
9999 mem: storing 2 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3333 is 1031
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3080 is 3039
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3362
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 3039 in location 3364
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3364 is 3039
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3364 is 3039
9999 mem: location 3039 is 102
9999 mem: location 3040 is 1224
9999 mem: location 3041 is 2148
9999 mem: location 3364 is 3039
9999 run: address to copy is 3040
9999 run: its type is address
9999 mem: location 3040 is 1224
9999 mem: storing 1224 in location 3365
 103 run: reply result:address:duplex-list
9999 mem: location 3365 is 1224
9999 run: result 0 is 1224
9999 mem: storing 1224 in location 3080
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3081 is 2148
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3393
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 2148 in location 3395
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3395 is 2148
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3395 is 2148
9999 mem: location 2148 is 101
9999 mem: location 2149 is 3039
9999 mem: location 2150 is 1190
9999 mem: location 3395 is 2148
9999 run: address to copy is 2149
9999 run: its type is address
9999 mem: location 2149 is 3039
9999 mem: storing 3039 in location 3396
 103 run: reply result:address:duplex-list
9999 mem: location 3396 is 3039
9999 run: result 0 is 3039
9999 mem: storing 3039 in location 3081
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 3083 is 1
9999 mem: storing 2 in location 3083
 102 run: loop 
9999 run: jumping to instruction 19
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 3080 is 1224
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3082 is 1
9999 mem: location 3078 is 5
9999 mem: storing 0 in location 3087
 102 run: break-if off-screen?:boolean, 
9999 mem: location 3087 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3082 is 1
9999 mem: location 3084 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 3088
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3088 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 3083 is 2
9999 mem: location 3085 is 1158
9999 mem: location 1158 is 2
9999 mem: storing 1 in location 3089
 102 run: break-unless at-cursor?:boolean, 
9999 mem: location 3089 is 1
9999 run: jump-unless fell through
 102 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 3080 is 1224
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3424
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1224 in location 3426
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3426 is 1224
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 3426 is 1224
9999 mem: location 1224 is 97
9999 mem: location 1225 is 1289
9999 mem: location 1226 is 3039
9999 mem: location 3426 is 1224
9999 run: address to copy is 1226
9999 run: its type is address
9999 mem: location 1226 is 3039
9999 mem: storing 3039 in location 3427
 103 run: reply result:address:duplex-list
9999 mem: location 3427 is 3039
9999 run: result 0 is 3039
9999 mem: location 3086 is 1154
9999 mem: storing 3039 in location 1154
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3080 is 1224
9999 mem: location 1224 is 97
9999 mem: location 1225 is 1289
9999 mem: location 1226 is 3039
9999 mem: location 3080 is 1224
9999 run: address to copy is 1224
9999 run: its type is number
9999 mem: location 1224 is 97
9999 mem: storing 97 in location 3090
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3090 is 97
9999 mem: storing 0 in location 3091
 102 run: break-unless newline?:boolean, 
9999 mem: location 3091 is 0
9999 run: jumping to instruction 49
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3083 is 2
9999 mem: location 3079 is 4
9999 mem: storing 0 in location 3093
 102 run: break-unless at-right?:boolean, 
9999 mem: location 3093 is 0
9999 run: jumping to instruction 58
 102 run: print-character screen:address, c:character
9999 mem: location 3075 is 1031
9999 mem: location 3090 is 97
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3455
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3457
 103 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 3458
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3459
9999 mem: storing 0 in location 3460
 103 run: break-if color-found?:boolean, 
9999 mem: location 3460 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3459
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3461
9999 mem: storing 0 in location 3462
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 3462 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 3461
 103 run: break-unless x:address:screen, 
9999 mem: location 3457 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3457 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3457 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3463
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3457 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3457 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3464
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3457 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3457 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3465
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3457 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3457 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 3466
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3458 is 97
9999 mem: storing 0 in location 3467
 103 run: break-unless newline?:boolean, 
9999 mem: location 3467 is 0
9999 run: jumping to instruction 30
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3463 is 1033
9999 mem: location 1033 is 1
9999 mem: location 3465 is 5
9999 mem: storing 5 in location 3470
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3470 is 5
9999 mem: location 3464 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 7 in location 3470
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3457 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3457 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3471
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3458 is 97
9999 mem: storing 0 in location 3472
 103 run: break-unless backspace?:boolean, 
9999 mem: location 3472 is 0
9999 run: jumping to instruction 49
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3471 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 102
9999 mem: location 1050 is 7
9999 mem: location 1051 is 98
9999 mem: location 1052 is 7
9999 mem: location 1053 is 99
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 3470 is 7
9999 mem: location 3471 is 1036
9999 mem: location 3470 is 7
9999 mem: storing 1051 in location 3474
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3474 is 1051
9999 mem: location 1051 is 98
9999 mem: location 1052 is 7
9999 mem: location 3474 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 3475
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3474 is 1051
9999 mem: location 1051 is 98
9999 mem: location 1052 is 7
9999 mem: location 3474 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 3476
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3458 is 97
9999 mem: location 3475 is 1051
9999 mem: storing 97 in location 1051
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3459 is 7
9999 mem: location 3476 is 1052
9999 mem: storing 7 in location 1052
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3465 is 5
9999 mem: storing 4 in location 3477
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3464 is 1034
9999 mem: location 1034 is 2
9999 mem: location 3477 is 4
9999 mem: storing 0 in location 3478
 103 run: break-if at-right?:boolean, 
9999 mem: location 3478 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3464 is 1034
9999 mem: location 1034 is 2
9999 mem: location 3464 is 1034
9999 mem: storing 3 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3457 is 1031
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3080 is 1224
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3486
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1224 in location 3488
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3488 is 1224
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3488 is 1224
9999 mem: location 1224 is 97
9999 mem: location 1225 is 1289
9999 mem: location 1226 is 3039
9999 mem: location 3488 is 1224
9999 run: address to copy is 1225
9999 run: its type is address
9999 mem: location 1225 is 1289
9999 mem: storing 1289 in location 3489
 103 run: reply result:address:duplex-list
9999 mem: location 3489 is 1289
9999 run: result 0 is 1289
9999 mem: storing 1289 in location 3080
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3081 is 3039
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3517
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 3039 in location 3519
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3519 is 3039
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3519 is 3039
9999 mem: location 3039 is 102
9999 mem: location 3040 is 1224
9999 mem: location 3041 is 2148
9999 mem: location 3519 is 3039
9999 run: address to copy is 3040
9999 run: its type is address
9999 mem: location 3040 is 1224
9999 mem: storing 1224 in location 3520
 103 run: reply result:address:duplex-list
9999 mem: location 3520 is 1224
9999 run: result 0 is 1224
9999 mem: storing 1224 in location 3081
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 3083 is 2
9999 mem: storing 3 in location 3083
 102 run: loop 
9999 run: jumping to instruction 19
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 3080 is 1289
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3082 is 1
9999 mem: location 3078 is 5
9999 mem: storing 0 in location 3087
 102 run: break-if off-screen?:boolean, 
9999 mem: location 3087 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3082 is 1
9999 mem: location 3084 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 3088
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3088 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 3083 is 3
9999 mem: location 3085 is 1158
9999 mem: location 1158 is 2
9999 mem: storing 0 in location 3089
 102 run: break-unless at-cursor?:boolean, 
9999 mem: location 3089 is 0
9999 run: jumping to instruction 29
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3080 is 1289
9999 mem: location 1289 is 98
9999 mem: location 1290 is 1354
9999 mem: location 1291 is 1224
9999 mem: location 3080 is 1289
9999 run: address to copy is 1289
9999 run: its type is number
9999 mem: location 1289 is 98
9999 mem: storing 98 in location 3090
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3090 is 98
9999 mem: storing 0 in location 3091
 102 run: break-unless newline?:boolean, 
9999 mem: location 3091 is 0
9999 run: jumping to instruction 49
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3083 is 3
9999 mem: location 3079 is 4
9999 mem: storing 0 in location 3093
 102 run: break-unless at-right?:boolean, 
9999 mem: location 3093 is 0
9999 run: jumping to instruction 58
 102 run: print-character screen:address, c:character
9999 mem: location 3075 is 1031
9999 mem: location 3090 is 98
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3548
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3550
 103 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 3551
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3552
9999 mem: storing 0 in location 3553
 103 run: break-if color-found?:boolean, 
9999 mem: location 3553 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3552
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3554
9999 mem: storing 0 in location 3555
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 3555 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 3554
 103 run: break-unless x:address:screen, 
9999 mem: location 3550 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3550 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3550 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3556
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3550 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3550 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3557
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3550 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3550 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3558
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3550 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3550 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 3559
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3551 is 98
9999 mem: storing 0 in location 3560
 103 run: break-unless newline?:boolean, 
9999 mem: location 3560 is 0
9999 run: jumping to instruction 30
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3556 is 1033
9999 mem: location 1033 is 1
9999 mem: location 3558 is 5
9999 mem: storing 5 in location 3563
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3563 is 5
9999 mem: location 3557 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 8 in location 3563
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3550 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3550 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3564
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3551 is 98
9999 mem: storing 0 in location 3565
 103 run: break-unless backspace?:boolean, 
9999 mem: location 3565 is 0
9999 run: jumping to instruction 49
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3564 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 102
9999 mem: location 1050 is 7
9999 mem: location 1051 is 97
9999 mem: location 1052 is 7
9999 mem: location 1053 is 99
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 3563 is 8
9999 mem: location 3564 is 1036
9999 mem: location 3563 is 8
9999 mem: storing 1053 in location 3567
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3567 is 1053
9999 mem: location 1053 is 99
9999 mem: location 1054 is 7
9999 mem: location 3567 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 3568
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3567 is 1053
9999 mem: location 1053 is 99
9999 mem: location 1054 is 7
9999 mem: location 3567 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 3569
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3551 is 98
9999 mem: location 3568 is 1053
9999 mem: storing 98 in location 1053
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3552 is 7
9999 mem: location 3569 is 1054
9999 mem: storing 7 in location 1054
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3558 is 5
9999 mem: storing 4 in location 3570
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3557 is 1034
9999 mem: location 1034 is 3
9999 mem: location 3570 is 4
9999 mem: storing 0 in location 3571
 103 run: break-if at-right?:boolean, 
9999 mem: location 3571 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3557 is 1034
9999 mem: location 1034 is 3
9999 mem: location 3557 is 1034
9999 mem: storing 4 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3550 is 1031
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3080 is 1289
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3579
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1289 in location 3581
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3581 is 1289
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3581 is 1289
9999 mem: location 1289 is 98
9999 mem: location 1290 is 1354
9999 mem: location 1291 is 1224
9999 mem: location 3581 is 1289
9999 run: address to copy is 1290
9999 run: its type is address
9999 mem: location 1290 is 1354
9999 mem: storing 1354 in location 3582
 103 run: reply result:address:duplex-list
9999 mem: location 3582 is 1354
9999 run: result 0 is 1354
9999 mem: storing 1354 in location 3080
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3081 is 1224
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3610
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1224 in location 3612
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3612 is 1224
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3612 is 1224
9999 mem: location 1224 is 97
9999 mem: location 1225 is 1289
9999 mem: location 1226 is 3039
9999 mem: location 3612 is 1224
9999 run: address to copy is 1225
9999 run: its type is address
9999 mem: location 1225 is 1289
9999 mem: storing 1289 in location 3613
 103 run: reply result:address:duplex-list
9999 mem: location 3613 is 1289
9999 run: result 0 is 1289
9999 mem: storing 1289 in location 3081
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 3083 is 3
9999 mem: storing 4 in location 3083
 102 run: loop 
9999 run: jumping to instruction 19
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 3080 is 1354
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3082 is 1
9999 mem: location 3078 is 5
9999 mem: storing 0 in location 3087
 102 run: break-if off-screen?:boolean, 
9999 mem: location 3087 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3082 is 1
9999 mem: location 3084 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 3088
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3088 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 3083 is 4
9999 mem: location 3085 is 1158
9999 mem: location 1158 is 2
9999 mem: storing 0 in location 3089
 102 run: break-unless at-cursor?:boolean, 
9999 mem: location 3089 is 0
9999 run: jumping to instruction 29
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3080 is 1354
9999 mem: location 1354 is 99
9999 mem: location 1355 is 0
9999 mem: location 1356 is 1289
9999 mem: location 3080 is 1354
9999 run: address to copy is 1354
9999 run: its type is number
9999 mem: location 1354 is 99
9999 mem: storing 99 in location 3090
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3090 is 99
9999 mem: storing 0 in location 3091
 102 run: break-unless newline?:boolean, 
9999 mem: location 3091 is 0
9999 run: jumping to instruction 49
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3083 is 4
9999 mem: location 3079 is 4
9999 mem: storing 1 in location 3093
 102 run: break-unless at-right?:boolean, 
9999 mem: location 3093 is 1
9999 run: jump-unless fell through
 102 run: print-character screen:address, 8617:literal/loop-back-to-left, 245:literal/grey
9999 mem: location 3075 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3641
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3643
 103 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 3644
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 3645
9999 mem: storing 1 in location 3646
 103 run: break-if color-found?:boolean, 
9999 mem: location 3646 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3647
9999 mem: storing 0 in location 3648
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 3648 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 3647
 103 run: break-unless x:address:screen, 
9999 mem: location 3643 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3643 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3643 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3649
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3643 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3643 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3650
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3643 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3643 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3651
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3643 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3643 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 3652
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3644 is 8617
9999 mem: storing 0 in location 3653
 103 run: break-unless newline?:boolean, 
9999 mem: location 3653 is 0
9999 run: jumping to instruction 30
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3649 is 1033
9999 mem: location 1033 is 1
9999 mem: location 3651 is 5
9999 mem: storing 5 in location 3656
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3656 is 5
9999 mem: location 3650 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 9 in location 3656
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3643 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3643 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3657
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3644 is 8617
9999 mem: storing 0 in location 3658
 103 run: break-unless backspace?:boolean, 
9999 mem: location 3658 is 0
9999 run: jumping to instruction 49
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3657 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 102
9999 mem: location 1050 is 7
9999 mem: location 1051 is 97
9999 mem: location 1052 is 7
9999 mem: location 1053 is 98
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 3656 is 9
9999 mem: location 3657 is 1036
9999 mem: location 3656 is 9
9999 mem: storing 1055 in location 3660
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3660 is 1055
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 3660 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 3661
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3660 is 1055
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 3660 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 3662
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3644 is 8617
9999 mem: location 3661 is 1055
9999 mem: storing 8617 in location 1055
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3645 is 245
9999 mem: location 3662 is 1056
9999 mem: storing 245 in location 1056
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3651 is 5
9999 mem: storing 4 in location 3663
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3650 is 1034
9999 mem: location 1034 is 4
9999 mem: location 3663 is 4
9999 mem: storing 1 in location 3664
 103 run: break-if at-right?:boolean, 
9999 mem: location 3664 is 1
9999 run: jumping to instruction 60
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3643 is 1031
 102 run: column:number <- copy left:number
9999 mem: location 3077 is 0
9999 mem: storing 0 in location 3083
 102 run: row:number <- add row:number, 1:literal
9999 mem: location 3082 is 1
9999 mem: storing 2 in location 3082
 102 run: move-cursor screen:address, row:number, column:number
9999 mem: location 3075 is 1031
9999 mem: location 3082 is 2
9999 mem: location 3083 is 0
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3672
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3674
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 3675
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 3676
 103 run: break-unless x:address:screen, 
9999 mem: location 3674 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3674 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3674 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3677
 103 run: row:address:number/deref <- copy new-row:number
9999 mem: location 3675 is 2
9999 mem: location 3677 is 1033
9999 mem: storing 2 in location 1033
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3674 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3674 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3678
 103 run: column:address:number/deref <- copy new-column:number
9999 mem: location 3676 is 0
9999 mem: location 3678 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3674 is 1031
 102 run: loop +next-character:label
9999 run: jumping to instruction 20
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 3080 is 1354
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 3082 is 2
9999 mem: location 3078 is 5
9999 mem: storing 0 in location 3087
 102 run: break-if off-screen?:boolean, 
9999 mem: location 3087 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3082 is 2
9999 mem: location 3084 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 3088
 102 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 3088 is 0
9999 run: jumping to instruction 29
 102 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 3080 is 1354
9999 mem: location 1354 is 99
9999 mem: location 1355 is 0
9999 mem: location 1356 is 1289
9999 mem: location 3080 is 1354
9999 run: address to copy is 1354
9999 run: its type is number
9999 mem: location 1354 is 99
9999 mem: storing 99 in location 3090
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3090 is 99
9999 mem: storing 0 in location 3091
 102 run: break-unless newline?:boolean, 
9999 mem: location 3091 is 0
9999 run: jumping to instruction 49
 102 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 3083 is 0
9999 mem: location 3079 is 4
9999 mem: storing 0 in location 3093
 102 run: break-unless at-right?:boolean, 
9999 mem: location 3093 is 0
9999 run: jumping to instruction 58
 102 run: print-character screen:address, c:character
9999 mem: location 3075 is 1031
9999 mem: location 3090 is 99
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3703
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3705
 103 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 3706
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3707
9999 mem: storing 0 in location 3708
 103 run: break-if color-found?:boolean, 
9999 mem: location 3708 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3707
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3709
9999 mem: storing 0 in location 3710
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 3710 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 3709
 103 run: break-unless x:address:screen, 
9999 mem: location 3705 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3705 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3705 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3711
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3705 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3705 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3712
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3705 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3705 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3713
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3705 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3705 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 3714
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3706 is 99
9999 mem: storing 0 in location 3715
 103 run: break-unless newline?:boolean, 
9999 mem: location 3715 is 0
9999 run: jumping to instruction 30
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3711 is 1033
9999 mem: location 1033 is 2
9999 mem: location 3713 is 5
9999 mem: storing 10 in location 3718
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3718 is 10
9999 mem: location 3712 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 10 in location 3718
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3705 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 3705 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3719
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3706 is 99
9999 mem: storing 0 in location 3720
 103 run: break-unless backspace?:boolean, 
9999 mem: location 3720 is 0
9999 run: jumping to instruction 49
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3719 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 102
9999 mem: location 1050 is 7
9999 mem: location 1051 is 97
9999 mem: location 1052 is 7
9999 mem: location 1053 is 98
9999 mem: location 1054 is 7
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 245
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 3718 is 10
9999 mem: location 3719 is 1036
9999 mem: location 3718 is 10
9999 mem: storing 1057 in location 3722
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3722 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 3722 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 3723
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3722 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 3722 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 3724
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3706 is 99
9999 mem: location 3723 is 1057
9999 mem: storing 99 in location 1057
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3707 is 7
9999 mem: location 3724 is 1058
9999 mem: storing 7 in location 1058
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3713 is 5
9999 mem: storing 4 in location 3725
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3712 is 1034
9999 mem: location 1034 is 0
9999 mem: location 3725 is 4
9999 mem: storing 0 in location 3726
 103 run: break-if at-right?:boolean, 
9999 mem: location 3726 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3712 is 1034
9999 mem: location 1034 is 0
9999 mem: location 3712 is 1034
9999 mem: storing 1 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3705 is 1031
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 3080 is 1354
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3734
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1354 in location 3736
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3736 is 1354
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3736 is 1354
9999 mem: location 1354 is 99
9999 mem: location 1355 is 0
9999 mem: location 1356 is 1289
9999 mem: location 3736 is 1354
9999 run: address to copy is 1355
9999 run: its type is address
9999 mem: location 1355 is 0
9999 mem: storing 0 in location 3737
 103 run: reply result:address:duplex-list
9999 mem: location 3737 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 3080
 102 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 3081 is 1289
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3765
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1289 in location 3767
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 3767 is 1289
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 3767 is 1289
9999 mem: location 1289 is 98
9999 mem: location 1290 is 1354
9999 mem: location 1291 is 1224
9999 mem: location 3767 is 1289
9999 run: address to copy is 1290
9999 run: its type is address
9999 mem: location 1290 is 1354
9999 mem: storing 1354 in location 3768
 103 run: reply result:address:duplex-list
9999 mem: location 3768 is 1354
9999 run: result 0 is 1354
9999 mem: storing 1354 in location 3081
 102 run: column:number <- add column:number, 1:literal
9999 mem: location 3083 is 0
9999 mem: storing 1 in location 3083
 102 run: loop 
9999 run: jumping to instruction 19
 102 run: break-unless curr:address:duplex-list, 
9999 mem: location 3080 is 0
9999 run: jumping to instruction 64
 102 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 3082 is 2
9999 mem: location 3084 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 3088
 102 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 3083 is 1
9999 mem: location 3085 is 1158
9999 mem: location 1158 is 2
9999 mem: storing 1 in location 3094
 102 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 3088 is 0
9999 mem: location 3094 is 1
9999 mem: storing 0 in location 3095
 102 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 3082 is 2
9999 mem: location 3084 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 3096
 102 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 3095 is 0
9999 mem: location 3096 is 0
9999 mem: storing 0 in location 3097
 102 run: break-unless before-cursor?:boolean, 
9999 mem: location 3097 is 0
9999 run: jumping to instruction 83
 102 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 3075 is 1031
9999 mem: location 3083 is 1
9999 mem: location 3079 is 4
 103 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 3796
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 3798
 103 run: left:number <- next-ingredient 
9999 mem: storing 1 in location 3799
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 3800
 103 run: column:number <- copy left:number
9999 mem: location 3799 is 1
9999 mem: storing 1 in location 3801
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 3801 is 1
9999 mem: location 3800 is 4
9999 mem: storing 0 in location 3802
 103 run: break-if done?:boolean, 
9999 mem: location 3802 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 3798 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3837
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3839
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 3840
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3841
9999 mem: storing 0 in location 3842
 104 run: break-if color-found?:boolean, 
9999 mem: location 3842 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3841
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3843
9999 mem: storing 0 in location 3844
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 3844 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 3843
 104 run: break-unless x:address:screen, 
9999 mem: location 3839 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3839 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3839 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3845
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3839 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3839 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3846
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3839 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3839 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3847
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3839 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3839 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 3848
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3840 is 32
9999 mem: storing 0 in location 3849
 104 run: break-unless newline?:boolean, 
9999 mem: location 3849 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3845 is 1033
9999 mem: location 1033 is 2
9999 mem: location 3847 is 5
9999 mem: storing 10 in location 3852
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3852 is 10
9999 mem: location 3846 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 11 in location 3852
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3839 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 3839 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3853
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3840 is 32
9999 mem: storing 0 in location 3854
 104 run: break-unless backspace?:boolean, 
9999 mem: location 3854 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3853 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 102
9999 mem: location 1050 is 7
9999 mem: location 1051 is 97
9999 mem: location 1052 is 7
9999 mem: location 1053 is 98
9999 mem: location 1054 is 7
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 245
9999 mem: location 1057 is 99
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 3852 is 11
9999 mem: location 3853 is 1036
9999 mem: location 3852 is 11
9999 mem: storing 1059 in location 3856
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3856 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 3856 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 3857
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3856 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 3856 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 3858
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3840 is 32
9999 mem: location 3857 is 1059
9999 mem: storing 32 in location 1059
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3841 is 7
9999 mem: location 3858 is 1060
9999 mem: storing 7 in location 1060
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3847 is 5
9999 mem: storing 4 in location 3859
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3846 is 1034
9999 mem: location 1034 is 1
9999 mem: location 3859 is 4
9999 mem: storing 0 in location 3860
 104 run: break-if at-right?:boolean, 
9999 mem: location 3860 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3846 is 1034
9999 mem: location 1034 is 1
9999 mem: location 3846 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3839 is 1031
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 3801 is 1
9999 mem: storing 2 in location 3801
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 3801 is 2
9999 mem: location 3800 is 4
9999 mem: storing 0 in location 3802
 103 run: break-if done?:boolean, 
9999 mem: location 3802 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 3798 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3868
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3870
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 3871
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3872
9999 mem: storing 0 in location 3873
 104 run: break-if color-found?:boolean, 
9999 mem: location 3873 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3872
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3874
9999 mem: storing 0 in location 3875
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 3875 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 3874
 104 run: break-unless x:address:screen, 
9999 mem: location 3870 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3870 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3870 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3876
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3870 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3870 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3877
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3870 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3870 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3878
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3870 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3870 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 3879
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3871 is 32
9999 mem: storing 0 in location 3880
 104 run: break-unless newline?:boolean, 
9999 mem: location 3880 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3876 is 1033
9999 mem: location 1033 is 2
9999 mem: location 3878 is 5
9999 mem: storing 10 in location 3883
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3883 is 10
9999 mem: location 3877 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 12 in location 3883
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3870 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 3870 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3884
schedule: print-character/clear-line-delimited/render/editor-event-loop/run1002/editor-wraps-line-on-insert
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3871 is 32
9999 mem: storing 0 in location 3885
 104 run: break-unless backspace?:boolean, 
9999 mem: location 3885 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3884 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 102
9999 mem: location 1050 is 7
9999 mem: location 1051 is 97
9999 mem: location 1052 is 7
9999 mem: location 1053 is 98
9999 mem: location 1054 is 7
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 245
9999 mem: location 1057 is 99
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 3883 is 12
9999 mem: location 3884 is 1036
9999 mem: location 3883 is 12
9999 mem: storing 1061 in location 3887
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3887 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 3887 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 3888
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3887 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 3887 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 3889
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3871 is 32
9999 mem: location 3888 is 1061
9999 mem: storing 32 in location 1061
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3872 is 7
9999 mem: location 3889 is 1062
9999 mem: storing 7 in location 1062
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3878 is 5
9999 mem: storing 4 in location 3890
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3877 is 1034
9999 mem: location 1034 is 2
9999 mem: location 3890 is 4
9999 mem: storing 0 in location 3891
 104 run: break-if at-right?:boolean, 
9999 mem: location 3891 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3877 is 1034
9999 mem: location 1034 is 2
9999 mem: location 3877 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3870 is 1031
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 3801 is 2
9999 mem: storing 3 in location 3801
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 3801 is 3
9999 mem: location 3800 is 4
9999 mem: storing 0 in location 3802
 103 run: break-if done?:boolean, 
9999 mem: location 3802 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 3798 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3899
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3901
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 3902
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3903
9999 mem: storing 0 in location 3904
 104 run: break-if color-found?:boolean, 
9999 mem: location 3904 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3903
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3905
9999 mem: storing 0 in location 3906
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 3906 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 3905
 104 run: break-unless x:address:screen, 
9999 mem: location 3901 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3901 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3901 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3907
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3901 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3901 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3908
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3901 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3901 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3909
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3901 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3901 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 3910
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3902 is 32
9999 mem: storing 0 in location 3911
 104 run: break-unless newline?:boolean, 
9999 mem: location 3911 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3907 is 1033
9999 mem: location 1033 is 2
9999 mem: location 3909 is 5
9999 mem: storing 10 in location 3914
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3914 is 10
9999 mem: location 3908 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 13 in location 3914
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3901 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 3901 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3915
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3902 is 32
9999 mem: storing 0 in location 3916
 104 run: break-unless backspace?:boolean, 
9999 mem: location 3916 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3915 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 102
9999 mem: location 1050 is 7
9999 mem: location 1051 is 97
9999 mem: location 1052 is 7
9999 mem: location 1053 is 98
9999 mem: location 1054 is 7
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 245
9999 mem: location 1057 is 99
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 3914 is 13
9999 mem: location 3915 is 1036
9999 mem: location 3914 is 13
9999 mem: storing 1063 in location 3918
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3918 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 3918 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 3919
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3918 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 3918 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 3920
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3902 is 32
9999 mem: location 3919 is 1063
9999 mem: storing 32 in location 1063
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3903 is 7
9999 mem: location 3920 is 1064
9999 mem: storing 7 in location 1064
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3909 is 5
9999 mem: storing 4 in location 3921
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3908 is 1034
9999 mem: location 1034 is 3
9999 mem: location 3921 is 4
9999 mem: storing 0 in location 3922
 104 run: break-if at-right?:boolean, 
9999 mem: location 3922 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 3908 is 1034
9999 mem: location 1034 is 3
9999 mem: location 3908 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3901 is 1031
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 3801 is 3
9999 mem: storing 4 in location 3801
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 3801 is 4
9999 mem: location 3800 is 4
9999 mem: storing 0 in location 3802
 103 run: break-if done?:boolean, 
9999 mem: location 3802 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 3798 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3930
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 3932
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 3933
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3934
9999 mem: storing 0 in location 3935
 104 run: break-if color-found?:boolean, 
9999 mem: location 3935 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 3934
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 3936
9999 mem: storing 0 in location 3937
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 3937 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 3936
 104 run: break-unless x:address:screen, 
9999 mem: location 3932 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 3932 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3932 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 3938
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 3932 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3932 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 3939
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 3932 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3932 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 3940
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 3932 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3932 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 3941
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 3933 is 32
9999 mem: storing 0 in location 3942
 104 run: break-unless newline?:boolean, 
9999 mem: location 3942 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 3938 is 1033
9999 mem: location 1033 is 2
9999 mem: location 3940 is 5
9999 mem: storing 10 in location 3945
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 3945 is 10
9999 mem: location 3939 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 14 in location 3945
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 3932 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 3932 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 3946
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 3933 is 32
9999 mem: storing 0 in location 3947
 104 run: break-unless backspace?:boolean, 
9999 mem: location 3947 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 3946 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 102
9999 mem: location 1050 is 7
9999 mem: location 1051 is 97
9999 mem: location 1052 is 7
9999 mem: location 1053 is 98
9999 mem: location 1054 is 7
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 245
9999 mem: location 1057 is 99
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 3945 is 14
9999 mem: location 3946 is 1036
9999 mem: location 3945 is 14
9999 mem: storing 1065 in location 3949
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 3949 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 3949 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 3950
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 3949 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 3949 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 3951
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 3933 is 32
9999 mem: location 3950 is 1065
9999 mem: storing 32 in location 1065
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 3934 is 7
9999 mem: location 3951 is 1066
9999 mem: storing 7 in location 1066
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 3940 is 5
9999 mem: storing 4 in location 3952
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 3939 is 1034
9999 mem: location 1034 is 4
9999 mem: location 3952 is 4
9999 mem: storing 1 in location 3953
 104 run: break-if at-right?:boolean, 
9999 mem: location 3953 is 1
9999 run: jumping to instruction 60
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 3932 is 1031
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 3801 is 4
9999 mem: storing 5 in location 3801
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 3801 is 5
9999 mem: location 3800 is 4
9999 mem: storing 1 in location 3802
 103 run: break-if done?:boolean, 
9999 mem: location 3802 is 1
9999 run: jumping to instruction 11
 102 run: reply editor:address:editor-data/same-as-ingredient:1, row:number, screen:address/same-as-ingredient:0
9999 mem: location 3076 is 1153
9999 mem: location 3082 is 2
9999 mem: location 3075 is 1031
 101 run: loop 
9999 run: jumping to instruction 5
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 2867 is 2862
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 3961
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 2862 in location 3963
 102 run: break-unless x:address:console, 
9999 mem: location 3963 is 2862
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 3963 is 2862
9999 mem: location 2862 is 1
9999 mem: location 2863 is 2857
9999 mem: location 3963 is 2862
9999 run: address to copy is 2862
9999 mem: storing 2862 in location 3964
 102 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 3963 is 2862
9999 mem: location 2862 is 1
9999 mem: location 2863 is 2857
9999 mem: location 3963 is 2862
9999 run: address to copy is 2863
9999 run: its type is address
9999 mem: location 2863 is 2857
9999 mem: storing 2857 in location 3965
 102 run: max:number <- length buf:address:array:event/deref
9999 mem: location 3965 is 2857
9999 mem: location 2857 is 1
9999 mem: location 2858 is 0
9999 mem: location 2859 is 102
9999 mem: location 2860 is 0
9999 mem: location 2861 is 0
9999 mem: location 3965 is 2857
9999 mem: storing 1 in location 3966
 102 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 3964 is 2862
9999 mem: location 2862 is 1
9999 mem: location 3966 is 1
9999 mem: storing 1 in location 3967
 102 run: break-unless done?:boolean, 
9999 mem: location 3967 is 1
9999 run: jump-unless fell through
 102 run: dummy:address:event <- new event:type
9999 mem: new alloc: 3992
9999 mem: storing 3992 in location 3968
 102 run: reply dummy:address:event/deref, x:address:console/same-as-ingredient:0, 1:literal/found, 1:literal/quit
9999 mem: location 3968 is 3992
9999 mem: location 3992 is 0
9999 mem: location 3993 is 0
9999 mem: location 3994 is 0
9999 mem: location 3995 is 0
9999 mem: location 3963 is 2862
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 2862
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 2869
9999 mem: storing 0 in location 2870
9999 mem: storing 0 in location 2871
9999 mem: storing 0 in location 2872
9999 mem: storing 2862 in location 2867
9999 mem: storing 1 in location 2873
9999 mem: storing 1 in location 2874
 101 run: loop-unless found?:boolean, 
9999 mem: location 2873 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?:boolean, 
9999 mem: location 2874 is 1
9999 run: jumping to instruction 20
  99 run: screen-should-contain [
    .     .
    .efabâ†©.
    .c    .
    .     .
  ]
