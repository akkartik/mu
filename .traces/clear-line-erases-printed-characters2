parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "3", properties: ["3": "literal", "height": ]}
parse: instruction: run
parse:   ingredient: {name: "
    # print a character
    screen:address <- print-character screen:address, 97:literal  # 'a'
    # move cursor to start of line
    screen:address <- move-cursor screen:address, 0:literal/row, 0:literal/column
    # clear line
    screen:address <- clear-line screen:address
  ", properties: ["
    # print a character
    screen:address <- print-character screen:address, 97:literal  # 'a'
    # move cursor to start of line
    screen:address <- move-cursor screen:address, 0:literal/row, 0:literal/column
    # clear line
    screen:address <- clear-line screen:address
  ": "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "
    .     .
    .     .
    .     .
  ", properties: ["
    .     .
    .     .
    .     .
  ": "literal-string"]}
after-brace: recipe clear-line-erases-printed-characters2
after-brace: assume-screen ...
after-brace: run ...
after-brace: screen-should-contain ...
new: routine allocated memory from 1000 to 101000
schedule: clear-line-erases-printed-characters2
run: screen:address <- assume-screen 5:literal/width, 3:literal/height
run: default-space:address:array:location <- new location:type, 30:literal/capacity
mem: array size is 30
mem: new alloc: 1000
run: result:address:screen <- new screen:type
mem: new alloc: 1031
mem: storing 1031 in location 1002
run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
mem: location 1002 is 1031
mem: location 1031 is 0
mem: location 1032 is 0
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 0
mem: location 1002 is 1031
run: address to copy is 1032
mem: storing 1032 in location 1003
run: width:address:number/deref <- next-ingredient 
mem: location 1003 is 1032
mem: storing 5 in location 1032
run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
mem: location 1002 is 1031
mem: location 1031 is 0
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 0
mem: location 1002 is 1031
run: address to copy is 1031
mem: storing 1031 in location 1004
run: height:address:number/deref <- next-ingredient 
mem: location 1004 is 1031
mem: storing 3 in location 1031
run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
mem: location 1002 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 0
mem: location 1002 is 1031
run: address to copy is 1033
mem: storing 1033 in location 1005
run: row:address:number/deref <- copy 0:literal
mem: location 1005 is 1033
mem: storing 0 in location 1033
run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
mem: location 1002 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 0
mem: location 1002 is 1031
run: address to copy is 1034
mem: storing 1034 in location 1006
run: column:address:number/deref <- copy 0:literal
mem: location 1006 is 1034
mem: storing 0 in location 1034
run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
mem: location 1003 is 1032
mem: location 1032 is 5
mem: location 1004 is 1031
mem: location 1031 is 3
mem: storing 15 in location 1007
run: buf:address:address:array:character <- get-address result:address:screen/deref, data:offset
mem: location 1002 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 0
mem: location 1002 is 1031
run: address to copy is 1035
mem: storing 1035 in location 1008
run: buf:address:address:array:character/deref <- new character:literal, bufsize:number
mem: location 1007 is 15
mem: array size is 15
mem: new alloc: 1036
mem: location 1008 is 1035
mem: storing 1036 in location 1035
run: clear-screen result:address:screen
mem: location 1002 is 1031
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 1052
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 1054
run: break-unless x:address:screen, 
mem: location 1054 is 1031
run: jump-unless fell through
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 1054 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1054 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 1055
run: max:number <- length buf:address:array:character/deref
mem: location 1055 is 1036
mem: location 1036 is 15
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1055 is 1036
mem: storing 15 in location 1056
run: i:number <- copy 0:literal
mem: storing 0 in location 1057
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1057 is 0
mem: location 1056 is 15
mem: storing 0 in location 1058
run: break-if done?:boolean, 
mem: location 1058 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1055 is 1036
mem: location 1036 is 15
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1057 is 0
mem: location 1055 is 1036
mem: location 1057 is 0
mem: storing 1037 in location 1059
run: c:address:character/deref <- copy [ ]
mem: location 1059 is 1037
mem: storing 0 in location 1037
run: i:number <- add i:number, 1:literal
mem: location 1057 is 0
mem: storing 1 in location 1057
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1057 is 1
mem: location 1056 is 15
mem: storing 0 in location 1058
run: break-if done?:boolean, 
mem: location 1058 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1055 is 1036
mem: location 1036 is 15
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1057 is 1
mem: location 1055 is 1036
mem: location 1057 is 1
mem: storing 1038 in location 1059
run: c:address:character/deref <- copy [ ]
mem: location 1059 is 1038
mem: storing 0 in location 1038
run: i:number <- add i:number, 1:literal
mem: location 1057 is 1
mem: storing 2 in location 1057
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1057 is 2
mem: location 1056 is 15
mem: storing 0 in location 1058
run: break-if done?:boolean, 
mem: location 1058 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1055 is 1036
mem: location 1036 is 15
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1057 is 2
mem: location 1055 is 1036
mem: location 1057 is 2
mem: storing 1039 in location 1059
run: c:address:character/deref <- copy [ ]
mem: location 1059 is 1039
mem: storing 0 in location 1039
run: i:number <- add i:number, 1:literal
mem: location 1057 is 2
mem: storing 3 in location 1057
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1057 is 3
mem: location 1056 is 15
mem: storing 0 in location 1058
run: break-if done?:boolean, 
mem: location 1058 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1055 is 1036
mem: location 1036 is 15
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1057 is 3
mem: location 1055 is 1036
mem: location 1057 is 3
mem: storing 1040 in location 1059
run: c:address:character/deref <- copy [ ]
mem: location 1059 is 1040
mem: storing 0 in location 1040
run: i:number <- add i:number, 1:literal
mem: location 1057 is 3
mem: storing 4 in location 1057
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1057 is 4
mem: location 1056 is 15
mem: storing 0 in location 1058
run: break-if done?:boolean, 
mem: location 1058 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1055 is 1036
mem: location 1036 is 15
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1057 is 4
mem: location 1055 is 1036
mem: location 1057 is 4
mem: storing 1041 in location 1059
run: c:address:character/deref <- copy [ ]
mem: location 1059 is 1041
mem: storing 0 in location 1041
run: i:number <- add i:number, 1:literal
mem: location 1057 is 4
mem: storing 5 in location 1057
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1057 is 5
mem: location 1056 is 15
mem: storing 0 in location 1058
run: break-if done?:boolean, 
mem: location 1058 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1055 is 1036
mem: location 1036 is 15
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1057 is 5
mem: location 1055 is 1036
mem: location 1057 is 5
mem: storing 1042 in location 1059
run: c:address:character/deref <- copy [ ]
mem: location 1059 is 1042
mem: storing 0 in location 1042
run: i:number <- add i:number, 1:literal
mem: location 1057 is 5
mem: storing 6 in location 1057
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1057 is 6
mem: location 1056 is 15
mem: storing 0 in location 1058
run: break-if done?:boolean, 
mem: location 1058 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1055 is 1036
mem: location 1036 is 15
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1057 is 6
mem: location 1055 is 1036
mem: location 1057 is 6
mem: storing 1043 in location 1059
run: c:address:character/deref <- copy [ ]
mem: location 1059 is 1043
mem: storing 0 in location 1043
run: i:number <- add i:number, 1:literal
mem: location 1057 is 6
mem: storing 7 in location 1057
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1057 is 7
mem: location 1056 is 15
mem: storing 0 in location 1058
run: break-if done?:boolean, 
mem: location 1058 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1055 is 1036
mem: location 1036 is 15
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1057 is 7
mem: location 1055 is 1036
mem: location 1057 is 7
mem: storing 1044 in location 1059
run: c:address:character/deref <- copy [ ]
mem: location 1059 is 1044
mem: storing 0 in location 1044
run: i:number <- add i:number, 1:literal
mem: location 1057 is 7
mem: storing 8 in location 1057
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1057 is 8
mem: location 1056 is 15
mem: storing 0 in location 1058
run: break-if done?:boolean, 
mem: location 1058 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1055 is 1036
mem: location 1036 is 15
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1057 is 8
mem: location 1055 is 1036
mem: location 1057 is 8
mem: storing 1045 in location 1059
run: c:address:character/deref <- copy [ ]
mem: location 1059 is 1045
mem: storing 0 in location 1045
run: i:number <- add i:number, 1:literal
mem: location 1057 is 8
mem: storing 9 in location 1057
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1057 is 9
mem: location 1056 is 15
mem: storing 0 in location 1058
run: break-if done?:boolean, 
mem: location 1058 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1055 is 1036
mem: location 1036 is 15
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1057 is 9
mem: location 1055 is 1036
mem: location 1057 is 9
mem: storing 1046 in location 1059
run: c:address:character/deref <- copy [ ]
mem: location 1059 is 1046
mem: storing 0 in location 1046
run: i:number <- add i:number, 1:literal
mem: location 1057 is 9
mem: storing 10 in location 1057
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1057 is 10
mem: location 1056 is 15
mem: storing 0 in location 1058
run: break-if done?:boolean, 
mem: location 1058 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1055 is 1036
mem: location 1036 is 15
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1057 is 10
mem: location 1055 is 1036
mem: location 1057 is 10
mem: storing 1047 in location 1059
run: c:address:character/deref <- copy [ ]
mem: location 1059 is 1047
mem: storing 0 in location 1047
run: i:number <- add i:number, 1:literal
mem: location 1057 is 10
mem: storing 11 in location 1057
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1057 is 11
mem: location 1056 is 15
mem: storing 0 in location 1058
run: break-if done?:boolean, 
mem: location 1058 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1055 is 1036
mem: location 1036 is 15
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1057 is 11
mem: location 1055 is 1036
mem: location 1057 is 11
mem: storing 1048 in location 1059
run: c:address:character/deref <- copy [ ]
mem: location 1059 is 1048
mem: storing 0 in location 1048
run: i:number <- add i:number, 1:literal
mem: location 1057 is 11
mem: storing 12 in location 1057
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1057 is 12
mem: location 1056 is 15
mem: storing 0 in location 1058
run: break-if done?:boolean, 
mem: location 1058 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1055 is 1036
mem: location 1036 is 15
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1057 is 12
mem: location 1055 is 1036
mem: location 1057 is 12
mem: storing 1049 in location 1059
run: c:address:character/deref <- copy [ ]
mem: location 1059 is 1049
mem: storing 0 in location 1049
run: i:number <- add i:number, 1:literal
mem: location 1057 is 12
mem: storing 13 in location 1057
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1057 is 13
mem: location 1056 is 15
mem: storing 0 in location 1058
run: break-if done?:boolean, 
mem: location 1058 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1055 is 1036
mem: location 1036 is 15
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1057 is 13
mem: location 1055 is 1036
mem: location 1057 is 13
mem: storing 1050 in location 1059
run: c:address:character/deref <- copy [ ]
mem: location 1059 is 1050
mem: storing 0 in location 1050
run: i:number <- add i:number, 1:literal
mem: location 1057 is 13
mem: storing 14 in location 1057
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1057 is 14
mem: location 1056 is 15
mem: storing 0 in location 1058
run: break-if done?:boolean, 
mem: location 1058 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1055 is 1036
mem: location 1036 is 15
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1057 is 14
mem: location 1055 is 1036
mem: location 1057 is 14
mem: storing 1051 in location 1059
run: c:address:character/deref <- copy [ ]
mem: location 1059 is 1051
mem: storing 0 in location 1051
run: i:number <- add i:number, 1:literal
mem: location 1057 is 14
mem: storing 15 in location 1057
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1057 is 15
mem: location 1056 is 15
mem: storing 1 in location 1058
run: break-if done?:boolean, 
mem: location 1058 is 1
run: jumping to instruction 14
run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 1054 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1054 is 1031
run: address to copy is 1033
mem: storing 1033 in location 1060
run: cur:address:number/deref <- copy 0:literal
mem: location 1060 is 1033
mem: storing 0 in location 1033
run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 1054 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1054 is 1031
run: address to copy is 1034
mem: storing 1034 in location 1060
run: cur:address:number/deref <- copy 0:literal
mem: location 1060 is 1034
mem: storing 0 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 1054 is 1031
run: reply result:address:screen
mem: location 1002 is 1031
run: result 0 is 1031
mem: storing 1031 in location 900
run: run [
    # print a character
    screen:address <- print-character screen:address, 97:literal  # 'a'
    # move cursor to start of line
    screen:address <- move-cursor screen:address, 0:literal/row, 0:literal/column
    # clear line
    screen:address <- clear-line screen:address
  ]
parse: instruction: print-character
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "97", properties: ["97": "literal"]}
parse:   product: {name: "screen", properties: ["screen": "address"]}
parse: instruction: move-cursor
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "row": ]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "column": ]}
parse:   product: {name: "screen", properties: ["screen": "address"]}
parse: instruction: clear-line
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   product: {name: "screen", properties: ["screen": "address"]}
after-brace: recipe run1001
after-brace: print-character ...
after-brace: move-cursor ...
after-brace: clear-line ...
run: screen:address <- print-character screen:address, 97:literal
mem: location 900 is 1031
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 1083
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 1085
run: c:character <- next-ingredient 
mem: storing 97 in location 1086
run: break-unless x:address:screen, 
mem: location 1085 is 1031
run: jump-unless fell through
run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 1085 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1085 is 1031
run: address to copy is 1033
mem: storing 1033 in location 1087
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 1085 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1085 is 1031
run: address to copy is 1034
mem: storing 1034 in location 1088
run: width:number <- get x:address:screen/deref, num-columns:offset
mem: location 1085 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1085 is 1031
run: address to copy is 1032
run: its type is 1
mem: location 1032 is 5
mem: storing 5 in location 1089
run: height:number <- get x:address:screen/deref, num-rows:offset
mem: location 1085 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1085 is 1031
run: address to copy is 1031
run: its type is 1
mem: location 1031 is 3
mem: storing 3 in location 1090
run: max-row:number <- subtract height:number, 1:literal
mem: location 1090 is 3
mem: storing 2 in location 1091
run: newline?:boolean <- equal c:character, 10:literal/newlin
mem: location 1086 is 97
mem: storing 0 in location 1092
run: break-unless newline?:boolean, 
mem: location 1092 is 0
run: jumping to instruction 20
run: index:number <- multiply row:address:number/deref, width:number
mem: location 1087 is 1033
mem: location 1033 is 0
mem: location 1089 is 5
mem: storing 0 in location 1094
run: index:number <- add index:number, column:address:number/deref
mem: location 1094 is 0
mem: location 1088 is 1034
mem: location 1034 is 0
mem: storing 0 in location 1094
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 1085 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1085 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 1095
run: cursor:address:character <- index-address buf:address:array:character/deref, index:number
mem: location 1095 is 1036
mem: location 1036 is 15
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1094 is 0
mem: location 1095 is 1036
mem: location 1094 is 0
mem: storing 1037 in location 1096
run: backspace?:boolean <- equal c:character, 8:literal
mem: location 1086 is 97
mem: storing 0 in location 1097
run: break-unless backspace?:boolean, 
mem: location 1097 is 0
run: jumping to instruction 36
run: cursor:address:character/deref <- copy c:character
mem: location 1086 is 97
mem: location 1096 is 1037
mem: storing 97 in location 1037
run: at-right?:boolean <- equal column:address:number/deref, width:number
mem: location 1088 is 1034
mem: location 1034 is 0
mem: location 1089 is 5
mem: storing 0 in location 1099
run: break-if at-right?:boolean, 
mem: location 1099 is 0
run: jump-if fell through
run: column:address:number/deref <- add column:address:number/deref, 1:literal
mem: location 1088 is 1034
mem: location 1034 is 0
mem: location 1088 is 1034
mem: storing 1 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 1085 is 1031
run: result 0 is 1031
mem: storing 1031 in location 900
run: screen:address <- move-cursor screen:address, 0:literal/row, 0:literal/column
mem: location 900 is 1031
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 1114
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 1116
run: new-row:number <- next-ingredient 
mem: storing 0 in location 1117
run: new-column:number <- next-ingredient 
mem: storing 0 in location 1118
run: break-unless x:address:screen, 
mem: location 1116 is 1031
run: jump-unless fell through
run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 1116 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 1
mem: location 1035 is 1036
mem: location 1116 is 1031
run: address to copy is 1033
mem: storing 1033 in location 1119
run: row:address:number/deref <- copy new-row:number
mem: location 1117 is 0
mem: location 1119 is 1033
mem: storing 0 in location 1033
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 1116 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 1
mem: location 1035 is 1036
mem: location 1116 is 1031
run: address to copy is 1034
mem: storing 1034 in location 1120
run: column:address:number/deref <- copy new-column:number
mem: location 1118 is 0
mem: location 1120 is 1034
mem: storing 0 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 1116 is 1031
run: result 0 is 1031
mem: storing 1031 in location 900
run: screen:address <- clear-line screen:address
mem: location 900 is 1031
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 1145
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 1147
run: break-unless x:address:screen, 
mem: location 1147 is 1031
run: jump-unless fell through
run: n:number <- get x:address:screen/deref, num-columns:offset
mem: location 1147 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1147 is 1031
run: address to copy is 1032
run: its type is 1
mem: location 1032 is 5
mem: storing 5 in location 1148
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 1147 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1147 is 1031
run: address to copy is 1034
mem: storing 1034 in location 1149
run: original-column:number <- copy column:address:number/deref
mem: location 1149 is 1034
mem: location 1034 is 0
mem: storing 0 in location 1150
run: done?:boolean <- greater-or-equal column:address:number/deref, n:number
mem: location 1149 is 1034
mem: location 1034 is 0
mem: location 1148 is 5
mem: storing 0 in location 1151
run: break-if done?:boolean, 
mem: location 1151 is 0
run: jump-if fell through
run: print-character x:address:screen, [ ]
mem: location 1147 is 1031
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 1176
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 1178
run: c:character <- next-ingredient 
mem: storing 0 in location 1179
run: break-unless x:address:screen, 
mem: location 1178 is 1031
run: jump-unless fell through
run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 1178 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1178 is 1031
run: address to copy is 1033
mem: storing 1033 in location 1180
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 1178 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1178 is 1031
run: address to copy is 1034
mem: storing 1034 in location 1181
run: width:number <- get x:address:screen/deref, num-columns:offset
mem: location 1178 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1178 is 1031
run: address to copy is 1032
run: its type is 1
mem: location 1032 is 5
mem: storing 5 in location 1182
run: height:number <- get x:address:screen/deref, num-rows:offset
mem: location 1178 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1178 is 1031
run: address to copy is 1031
run: its type is 1
mem: location 1031 is 3
mem: storing 3 in location 1183
run: max-row:number <- subtract height:number, 1:literal
mem: location 1183 is 3
mem: storing 2 in location 1184
run: newline?:boolean <- equal c:character, 10:literal/newlin
mem: location 1179 is 0
mem: storing 0 in location 1185
run: break-unless newline?:boolean, 
mem: location 1185 is 0
run: jumping to instruction 20
run: index:number <- multiply row:address:number/deref, width:number
mem: location 1180 is 1033
mem: location 1033 is 0
mem: location 1182 is 5
mem: storing 0 in location 1187
run: index:number <- add index:number, column:address:number/deref
mem: location 1187 is 0
mem: location 1181 is 1034
mem: location 1034 is 0
mem: storing 0 in location 1187
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 1178 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1178 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 1188
run: cursor:address:character <- index-address buf:address:array:character/deref, index:number
mem: location 1188 is 1036
mem: location 1036 is 15
mem: location 1037 is 97
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1187 is 0
mem: location 1188 is 1036
mem: location 1187 is 0
mem: storing 1037 in location 1189
run: backspace?:boolean <- equal c:character, 8:literal
mem: location 1179 is 0
mem: storing 0 in location 1190
run: break-unless backspace?:boolean, 
mem: location 1190 is 0
run: jumping to instruction 36
run: cursor:address:character/deref <- copy c:character
mem: location 1179 is 0
mem: location 1189 is 1037
mem: storing 0 in location 1037
run: at-right?:boolean <- equal column:address:number/deref, width:number
mem: location 1181 is 1034
mem: location 1034 is 0
mem: location 1182 is 5
mem: storing 0 in location 1192
run: break-if at-right?:boolean, 
mem: location 1192 is 0
run: jump-if fell through
run: column:address:number/deref <- add column:address:number/deref, 1:literal
mem: location 1181 is 1034
mem: location 1034 is 0
mem: location 1181 is 1034
mem: storing 1 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 1178 is 1031
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal column:address:number/deref, n:number
mem: location 1149 is 1034
mem: location 1034 is 1
mem: location 1148 is 5
mem: storing 0 in location 1151
run: break-if done?:boolean, 
mem: location 1151 is 0
run: jump-if fell through
run: print-character x:address:screen, [ ]
mem: location 1147 is 1031
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 1207
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 1209
run: c:character <- next-ingredient 
mem: storing 0 in location 1210
run: break-unless x:address:screen, 
mem: location 1209 is 1031
run: jump-unless fell through
run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 1209 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 1
mem: location 1035 is 1036
mem: location 1209 is 1031
run: address to copy is 1033
mem: storing 1033 in location 1211
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 1209 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 1
mem: location 1035 is 1036
mem: location 1209 is 1031
run: address to copy is 1034
mem: storing 1034 in location 1212
run: width:number <- get x:address:screen/deref, num-columns:offset
mem: location 1209 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 1
mem: location 1035 is 1036
mem: location 1209 is 1031
run: address to copy is 1032
run: its type is 1
mem: location 1032 is 5
mem: storing 5 in location 1213
run: height:number <- get x:address:screen/deref, num-rows:offset
mem: location 1209 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 1
mem: location 1035 is 1036
mem: location 1209 is 1031
run: address to copy is 1031
run: its type is 1
mem: location 1031 is 3
mem: storing 3 in location 1214
run: max-row:number <- subtract height:number, 1:literal
mem: location 1214 is 3
mem: storing 2 in location 1215
run: newline?:boolean <- equal c:character, 10:literal/newlin
mem: location 1210 is 0
mem: storing 0 in location 1216
run: break-unless newline?:boolean, 
mem: location 1216 is 0
run: jumping to instruction 20
run: index:number <- multiply row:address:number/deref, width:number
mem: location 1211 is 1033
mem: location 1033 is 0
mem: location 1213 is 5
mem: storing 0 in location 1218
run: index:number <- add index:number, column:address:number/deref
mem: location 1218 is 0
mem: location 1212 is 1034
mem: location 1034 is 1
mem: storing 1 in location 1218
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 1209 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 1
mem: location 1035 is 1036
mem: location 1209 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 1219
run: cursor:address:character <- index-address buf:address:array:character/deref, index:number
mem: location 1219 is 1036
mem: location 1036 is 15
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1218 is 1
mem: location 1219 is 1036
mem: location 1218 is 1
mem: storing 1038 in location 1220
run: backspace?:boolean <- equal c:character, 8:literal
mem: location 1210 is 0
mem: storing 0 in location 1221
run: break-unless backspace?:boolean, 
mem: location 1221 is 0
run: jumping to instruction 36
run: cursor:address:character/deref <- copy c:character
mem: location 1210 is 0
mem: location 1220 is 1038
mem: storing 0 in location 1038
run: at-right?:boolean <- equal column:address:number/deref, width:number
mem: location 1212 is 1034
mem: location 1034 is 1
mem: location 1213 is 5
mem: storing 0 in location 1223
run: break-if at-right?:boolean, 
mem: location 1223 is 0
run: jump-if fell through
run: column:address:number/deref <- add column:address:number/deref, 1:literal
mem: location 1212 is 1034
mem: location 1034 is 1
mem: location 1212 is 1034
mem: storing 2 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 1209 is 1031
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal column:address:number/deref, n:number
mem: location 1149 is 1034
mem: location 1034 is 2
mem: location 1148 is 5
mem: storing 0 in location 1151
run: break-if done?:boolean, 
mem: location 1151 is 0
run: jump-if fell through
run: print-character x:address:screen, [ ]
mem: location 1147 is 1031
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 1238
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 1240
run: c:character <- next-ingredient 
mem: storing 0 in location 1241
run: break-unless x:address:screen, 
mem: location 1240 is 1031
run: jump-unless fell through
run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 1240 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 2
mem: location 1035 is 1036
mem: location 1240 is 1031
run: address to copy is 1033
mem: storing 1033 in location 1242
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 1240 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 2
mem: location 1035 is 1036
mem: location 1240 is 1031
run: address to copy is 1034
mem: storing 1034 in location 1243
run: width:number <- get x:address:screen/deref, num-columns:offset
mem: location 1240 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 2
mem: location 1035 is 1036
mem: location 1240 is 1031
run: address to copy is 1032
run: its type is 1
mem: location 1032 is 5
mem: storing 5 in location 1244
run: height:number <- get x:address:screen/deref, num-rows:offset
mem: location 1240 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 2
mem: location 1035 is 1036
mem: location 1240 is 1031
run: address to copy is 1031
run: its type is 1
mem: location 1031 is 3
mem: storing 3 in location 1245
run: max-row:number <- subtract height:number, 1:literal
mem: location 1245 is 3
mem: storing 2 in location 1246
run: newline?:boolean <- equal c:character, 10:literal/newlin
mem: location 1241 is 0
mem: storing 0 in location 1247
run: break-unless newline?:boolean, 
mem: location 1247 is 0
run: jumping to instruction 20
run: index:number <- multiply row:address:number/deref, width:number
mem: location 1242 is 1033
mem: location 1033 is 0
mem: location 1244 is 5
mem: storing 0 in location 1249
run: index:number <- add index:number, column:address:number/deref
mem: location 1249 is 0
mem: location 1243 is 1034
mem: location 1034 is 2
mem: storing 2 in location 1249
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 1240 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 2
mem: location 1035 is 1036
mem: location 1240 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 1250
run: cursor:address:character <- index-address buf:address:array:character/deref, index:number
mem: location 1250 is 1036
mem: location 1036 is 15
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1249 is 2
mem: location 1250 is 1036
mem: location 1249 is 2
mem: storing 1039 in location 1251
run: backspace?:boolean <- equal c:character, 8:literal
mem: location 1241 is 0
mem: storing 0 in location 1252
run: break-unless backspace?:boolean, 
mem: location 1252 is 0
run: jumping to instruction 36
run: cursor:address:character/deref <- copy c:character
mem: location 1241 is 0
mem: location 1251 is 1039
mem: storing 0 in location 1039
run: at-right?:boolean <- equal column:address:number/deref, width:number
mem: location 1243 is 1034
mem: location 1034 is 2
mem: location 1244 is 5
mem: storing 0 in location 1254
run: break-if at-right?:boolean, 
mem: location 1254 is 0
run: jump-if fell through
run: column:address:number/deref <- add column:address:number/deref, 1:literal
mem: location 1243 is 1034
mem: location 1034 is 2
mem: location 1243 is 1034
mem: storing 3 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 1240 is 1031
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal column:address:number/deref, n:number
mem: location 1149 is 1034
mem: location 1034 is 3
mem: location 1148 is 5
mem: storing 0 in location 1151
run: break-if done?:boolean, 
mem: location 1151 is 0
run: jump-if fell through
run: print-character x:address:screen, [ ]
mem: location 1147 is 1031
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 1269
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 1271
run: c:character <- next-ingredient 
mem: storing 0 in location 1272
run: break-unless x:address:screen, 
mem: location 1271 is 1031
run: jump-unless fell through
run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 1271 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 3
mem: location 1035 is 1036
mem: location 1271 is 1031
run: address to copy is 1033
mem: storing 1033 in location 1273
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 1271 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 3
mem: location 1035 is 1036
mem: location 1271 is 1031
run: address to copy is 1034
mem: storing 1034 in location 1274
run: width:number <- get x:address:screen/deref, num-columns:offset
mem: location 1271 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 3
mem: location 1035 is 1036
mem: location 1271 is 1031
run: address to copy is 1032
run: its type is 1
mem: location 1032 is 5
mem: storing 5 in location 1275
run: height:number <- get x:address:screen/deref, num-rows:offset
mem: location 1271 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 3
mem: location 1035 is 1036
mem: location 1271 is 1031
run: address to copy is 1031
run: its type is 1
mem: location 1031 is 3
mem: storing 3 in location 1276
run: max-row:number <- subtract height:number, 1:literal
mem: location 1276 is 3
mem: storing 2 in location 1277
run: newline?:boolean <- equal c:character, 10:literal/newlin
mem: location 1272 is 0
mem: storing 0 in location 1278
run: break-unless newline?:boolean, 
mem: location 1278 is 0
run: jumping to instruction 20
run: index:number <- multiply row:address:number/deref, width:number
mem: location 1273 is 1033
mem: location 1033 is 0
mem: location 1275 is 5
mem: storing 0 in location 1280
run: index:number <- add index:number, column:address:number/deref
mem: location 1280 is 0
mem: location 1274 is 1034
mem: location 1034 is 3
mem: storing 3 in location 1280
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 1271 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 3
mem: location 1035 is 1036
mem: location 1271 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 1281
run: cursor:address:character <- index-address buf:address:array:character/deref, index:number
mem: location 1281 is 1036
mem: location 1036 is 15
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1280 is 3
mem: location 1281 is 1036
mem: location 1280 is 3
mem: storing 1040 in location 1282
run: backspace?:boolean <- equal c:character, 8:literal
mem: location 1272 is 0
mem: storing 0 in location 1283
run: break-unless backspace?:boolean, 
mem: location 1283 is 0
run: jumping to instruction 36
run: cursor:address:character/deref <- copy c:character
mem: location 1272 is 0
mem: location 1282 is 1040
mem: storing 0 in location 1040
run: at-right?:boolean <- equal column:address:number/deref, width:number
mem: location 1274 is 1034
mem: location 1034 is 3
mem: location 1275 is 5
mem: storing 0 in location 1285
run: break-if at-right?:boolean, 
mem: location 1285 is 0
run: jump-if fell through
run: column:address:number/deref <- add column:address:number/deref, 1:literal
mem: location 1274 is 1034
mem: location 1034 is 3
mem: location 1274 is 1034
mem: storing 4 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 1271 is 1031
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal column:address:number/deref, n:number
mem: location 1149 is 1034
mem: location 1034 is 4
mem: location 1148 is 5
mem: storing 0 in location 1151
run: break-if done?:boolean, 
mem: location 1151 is 0
run: jump-if fell through
run: print-character x:address:screen, [ ]
mem: location 1147 is 1031
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 1300
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 1302
run: c:character <- next-ingredient 
mem: storing 0 in location 1303
run: break-unless x:address:screen, 
mem: location 1302 is 1031
run: jump-unless fell through
run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 1302 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 4
mem: location 1035 is 1036
mem: location 1302 is 1031
run: address to copy is 1033
mem: storing 1033 in location 1304
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 1302 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 4
mem: location 1035 is 1036
mem: location 1302 is 1031
run: address to copy is 1034
mem: storing 1034 in location 1305
run: width:number <- get x:address:screen/deref, num-columns:offset
mem: location 1302 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 4
mem: location 1035 is 1036
mem: location 1302 is 1031
run: address to copy is 1032
run: its type is 1
mem: location 1032 is 5
mem: storing 5 in location 1306
run: height:number <- get x:address:screen/deref, num-rows:offset
mem: location 1302 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 4
mem: location 1035 is 1036
mem: location 1302 is 1031
run: address to copy is 1031
run: its type is 1
mem: location 1031 is 3
mem: storing 3 in location 1307
run: max-row:number <- subtract height:number, 1:literal
mem: location 1307 is 3
mem: storing 2 in location 1308
run: newline?:boolean <- equal c:character, 10:literal/newlin
mem: location 1303 is 0
mem: storing 0 in location 1309
run: break-unless newline?:boolean, 
mem: location 1309 is 0
run: jumping to instruction 20
run: index:number <- multiply row:address:number/deref, width:number
mem: location 1304 is 1033
mem: location 1033 is 0
mem: location 1306 is 5
mem: storing 0 in location 1311
run: index:number <- add index:number, column:address:number/deref
mem: location 1311 is 0
mem: location 1305 is 1034
mem: location 1034 is 4
mem: storing 4 in location 1311
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 1302 is 1031
mem: location 1031 is 3
mem: location 1032 is 5
mem: location 1033 is 0
mem: location 1034 is 4
mem: location 1035 is 1036
mem: location 1302 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 1312
run: cursor:address:character <- index-address buf:address:array:character/deref, index:number
mem: location 1312 is 1036
mem: location 1036 is 15
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1311 is 4
mem: location 1312 is 1036
mem: location 1311 is 4
mem: storing 1041 in location 1313
run: backspace?:boolean <- equal c:character, 8:literal
mem: location 1303 is 0
mem: storing 0 in location 1314
run: break-unless backspace?:boolean, 
mem: location 1314 is 0
run: jumping to instruction 36
run: cursor:address:character/deref <- copy c:character
mem: location 1303 is 0
mem: location 1313 is 1041
mem: storing 0 in location 1041
run: at-right?:boolean <- equal column:address:number/deref, width:number
mem: location 1305 is 1034
mem: location 1034 is 4
mem: location 1306 is 5
mem: storing 0 in location 1316
run: break-if at-right?:boolean, 
mem: location 1316 is 0
run: jump-if fell through
run: column:address:number/deref <- add column:address:number/deref, 1:literal
mem: location 1305 is 1034
mem: location 1034 is 4
mem: location 1305 is 1034
mem: storing 5 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 1302 is 1031
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal column:address:number/deref, n:number
mem: location 1149 is 1034
mem: location 1034 is 5
mem: location 1148 is 5
mem: storing 1 in location 1151
run: break-if done?:boolean, 
mem: location 1151 is 1
run: jumping to instruction 12
run: column:address:number/deref <- copy original-column:number
mem: location 1150 is 0
mem: location 1149 is 1034
mem: storing 0 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 1147 is 1031
run: result 0 is 1031
mem: storing 1031 in location 900
run: screen-should-contain [
    .     .
    .     .
    .     .
  ]
