parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "3", properties: ["3": "literal", "height": ]}
parse: instruction: run
parse:   ingredient: {name: "
    # print a character
    screen:address <- print-character screen:address, 97:literal  # 'a'
    # move cursor to start of line
    screen:address <- move-cursor screen:address, 0:literal/row, 0:literal/column
    # clear line
    screen:address <- clear-line screen:address
  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "
    .     .
    .     .
    .     .
  ", properties: [_: "literal-string"]}
after-brace: recipe clear-line-erases-printed-characters2
after-brace: assume-screen ...
after-brace: run ...
after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: clear-line-erases-printed-characters2
 101 run: screen:address <- assume-screen 5:literal/width, 3:literal/height
 102 run: default-space:address:array:location <- new location:type, 30:literal/capacity
9999 mem: array size is 30
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1031
9999 mem: storing 1031 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1032
9999 mem: storing 5 in location 1032
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1031
9999 mem: storing 3 in location 1031
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1033
9999 mem: storing 0 in location 1033
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1034
9999 mem: storing 0 in location 1034
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1032
9999 mem: location 1032 is 5
9999 mem: location 1004 is 1031
9999 mem: location 1031 is 3
9999 mem: storing 15 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 15
9999 mem: array size is 15
9999 mem: new alloc: 1036
9999 mem: location 1008 is 1035
9999 mem: storing 1036 in location 1035
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1067
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1069
 103 run: break-unless x:address:screen, 
9999 mem: location 1069 is 1031
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1070
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1070 is 1036
9999 mem: storing 15 in location 1071
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1072
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 0
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 0
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 0
9999 mem: storing 1037 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 0
9999 mem: storing 1 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 1
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 1
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 1
9999 mem: storing 1039 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 1
9999 mem: storing 2 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 2
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 2
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 2
9999 mem: storing 1041 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 2
9999 mem: storing 3 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 3
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 3
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 3
9999 mem: storing 1043 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 3
9999 mem: storing 4 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 4
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 4
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 4
9999 mem: storing 1045 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 4
9999 mem: storing 5 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 5
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 5
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 5
9999 mem: storing 1047 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 5
9999 mem: storing 6 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 6
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 6
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 6
9999 mem: storing 1049 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 6
9999 mem: storing 7 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 7
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 7
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 7
9999 mem: storing 1051 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 7
9999 mem: storing 8 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 8
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 8
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 8
9999 mem: storing 1053 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 8
9999 mem: storing 9 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 9
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 9
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 9
9999 mem: storing 1055 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 9
9999 mem: storing 10 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 10
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 10
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 10
9999 mem: storing 1057 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 10
9999 mem: storing 11 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 11
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 11
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 11
9999 mem: storing 1059 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 11
9999 mem: storing 12 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 12
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 12
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 12
9999 mem: storing 1061 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 12
9999 mem: storing 13 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 13
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 13
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 13
9999 mem: storing 1063 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 13
9999 mem: storing 14 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 14
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 14
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 14
9999 mem: storing 1065 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1066
9999 mem: storing 7 in location 1066
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 14
9999 mem: storing 15 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 15
9999 mem: location 1071 is 15
9999 mem: storing 1 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1033
9999 mem: storing 0 in location 1033
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1069 is 1031
 102 run: reply result:address:screen
9999 mem: location 1002 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 101 run: run [
    # print a character
    screen:address <- print-character screen:address, 97:literal  # 'a'
    # move cursor to start of line
    screen:address <- move-cursor screen:address, 0:literal/row, 0:literal/column
    # clear line
    screen:address <- clear-line screen:address
  ]
parse: instruction: print-character
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "97", properties: ["97": "literal"]}
parse:   product: {name: "screen", properties: ["screen": "address"]}
parse: instruction: move-cursor
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "row": ]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "column": ]}
parse:   product: {name: "screen", properties: ["screen": "address"]}
parse: instruction: clear-line
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   product: {name: "screen", properties: ["screen": "address"]}
after-brace: recipe run1001
after-brace: print-character ...
after-brace: move-cursor ...
after-brace: clear-line ...
 101 run: screen:address <- print-character screen:address, 97:literal
9999 mem: location 900 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1098
 102 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1100
 102 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1101
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1102
9999 mem: storing 0 in location 1103
 102 run: break-if color-found?:boolean, 
9999 mem: location 1103 is 0
9999 run: jump-if fell through
 102 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1102
 102 run: break-unless x:address:screen, 
9999 mem: location 1100 is 1031
9999 run: jump-unless fell through
 102 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1100 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1100 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1104
 102 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1100 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1100 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1105
 102 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1100 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1100 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1106
 102 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1100 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1100 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1107
 102 run: max-row:number <- subtract height:number, 1:literal
9999 mem: location 1107 is 3
9999 mem: storing 2 in location 1108
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1101 is 97
9999 mem: storing 0 in location 1109
 102 run: break-unless newline?:boolean, 
9999 mem: location 1109 is 0
9999 run: jumping to instruction 25
 102 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1104 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1106 is 5
9999 mem: storing 0 in location 1111
 102 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1111 is 0
9999 mem: location 1105 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 0 in location 1111
 102 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1100 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1100 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1112
 102 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1101 is 97
9999 mem: storing 0 in location 1113
 102 run: break-unless backspace?:boolean, 
9999 mem: location 1113 is 0
9999 run: jumping to instruction 44
 102 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1112 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 1036
9999 mem: location 1111 is 0
9999 mem: storing 1037 in location 1115
 102 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1115 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1115 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1116
 102 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1115 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1115 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1117
 102 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1101 is 97
9999 mem: location 1116 is 1037
9999 mem: storing 97 in location 1037
 102 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1102 is 7
9999 mem: location 1117 is 1038
9999 mem: storing 7 in location 1038
 102 run: at-right?:boolean <- equal column:address:number/deref, width:number
9999 mem: location 1105 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1106 is 5
9999 mem: storing 0 in location 1118
 102 run: break-if at-right?:boolean, 
9999 mem: location 1118 is 0
9999 run: jump-if fell through
 102 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1105 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1105 is 1034
9999 mem: storing 1 in location 1034
 102 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1100 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 101 run: screen:address <- move-cursor screen:address, 0:literal/row, 0:literal/column
9999 mem: location 900 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1129
 102 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1131
 102 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 1132
 102 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1133
 102 run: break-unless x:address:screen, 
9999 mem: location 1131 is 1031
9999 run: jump-unless fell through
 102 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1131 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1131 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1134
 102 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1132 is 0
9999 mem: location 1134 is 1033
9999 mem: storing 0 in location 1033
 102 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1131 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1131 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1135
 102 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1133 is 0
9999 mem: location 1135 is 1034
9999 mem: storing 0 in location 1034
 102 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1131 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 101 run: screen:address <- clear-line screen:address
9999 mem: location 900 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1160
 102 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1162
 102 run: break-unless x:address:screen, 
9999 mem: location 1162 is 1031
9999 run: jump-unless fell through
 102 run: n:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1162 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1162 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1163
 102 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1162 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1162 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1164
 102 run: original-column:number <- copy column:address:number/deref
9999 mem: location 1164 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 0 in location 1165
 102 run: done?:boolean <- greater-or-equal column:address:number/deref, n:number
9999 mem: location 1164 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1163 is 5
9999 mem: storing 0 in location 1166
 102 run: break-if done?:boolean, 
9999 mem: location 1166 is 0
9999 run: jump-if fell through
 102 run: print-character x:address:screen, [ ]
9999 mem: location 1162 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1191
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1193
 103 run: c:character <- next-ingredient 
9999 mem: storing 0 in location 1194
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1195
9999 mem: storing 0 in location 1196
 103 run: break-if color-found?:boolean, 
9999 mem: location 1196 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1195
 103 run: break-unless x:address:screen, 
9999 mem: location 1193 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1193 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1193 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1197
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1193 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1193 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1198
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1193 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1193 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1199
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1193 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1193 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1200
 103 run: max-row:number <- subtract height:number, 1:literal
9999 mem: location 1200 is 3
9999 mem: storing 2 in location 1201
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1194 is 0
9999 mem: storing 0 in location 1202
 103 run: break-unless newline?:boolean, 
9999 mem: location 1202 is 0
9999 run: jumping to instruction 25
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1197 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1199 is 5
9999 mem: storing 0 in location 1204
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1204 is 0
9999 mem: location 1198 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 0 in location 1204
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1193 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1193 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1205
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1194 is 0
9999 mem: storing 0 in location 1206
 103 run: break-unless backspace?:boolean, 
9999 mem: location 1206 is 0
9999 run: jumping to instruction 44
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1205 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1204 is 0
9999 mem: location 1205 is 1036
9999 mem: location 1204 is 0
9999 mem: storing 1037 in location 1208
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1208 is 1037
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1208 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1209
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1208 is 1037
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1208 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1210
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1194 is 0
9999 mem: location 1209 is 1037
9999 mem: storing 0 in location 1037
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1195 is 7
9999 mem: location 1210 is 1038
9999 mem: storing 7 in location 1038
 103 run: at-right?:boolean <- equal column:address:number/deref, width:number
9999 mem: location 1198 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1199 is 5
9999 mem: storing 0 in location 1211
 103 run: break-if at-right?:boolean, 
9999 mem: location 1211 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1198 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1198 is 1034
9999 mem: storing 1 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1193 is 1031
 102 run: loop 
9999 run: jumping to instruction 8
 102 run: done?:boolean <- greater-or-equal column:address:number/deref, n:number
9999 mem: location 1164 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1163 is 5
9999 mem: storing 0 in location 1166
 102 run: break-if done?:boolean, 
9999 mem: location 1166 is 0
9999 run: jump-if fell through
 102 run: print-character x:address:screen, [ ]
9999 mem: location 1162 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1222
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1224
 103 run: c:character <- next-ingredient 
9999 mem: storing 0 in location 1225
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1226
9999 mem: storing 0 in location 1227
 103 run: break-if color-found?:boolean, 
9999 mem: location 1227 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1226
 103 run: break-unless x:address:screen, 
9999 mem: location 1224 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1224 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1224 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1228
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1224 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1224 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1229
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1224 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1224 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1230
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1224 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1224 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1231
 103 run: max-row:number <- subtract height:number, 1:literal
9999 mem: location 1231 is 3
9999 mem: storing 2 in location 1232
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1225 is 0
9999 mem: storing 0 in location 1233
 103 run: break-unless newline?:boolean, 
9999 mem: location 1233 is 0
9999 run: jumping to instruction 25
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1228 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1230 is 5
9999 mem: storing 0 in location 1235
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1235 is 0
9999 mem: location 1229 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 1 in location 1235
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1224 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1224 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1236
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1225 is 0
9999 mem: storing 0 in location 1237
 103 run: break-unless backspace?:boolean, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 44
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1236 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1235 is 1
9999 mem: location 1236 is 1036
9999 mem: location 1235 is 1
9999 mem: storing 1039 in location 1239
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1239 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1239 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1240
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1239 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1239 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1241
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1225 is 0
9999 mem: location 1240 is 1039
9999 mem: storing 0 in location 1039
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1226 is 7
9999 mem: location 1241 is 1040
9999 mem: storing 7 in location 1040
 103 run: at-right?:boolean <- equal column:address:number/deref, width:number
9999 mem: location 1229 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1230 is 5
9999 mem: storing 0 in location 1242
 103 run: break-if at-right?:boolean, 
9999 mem: location 1242 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1229 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1229 is 1034
9999 mem: storing 2 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1224 is 1031
 102 run: loop 
9999 run: jumping to instruction 8
 102 run: done?:boolean <- greater-or-equal column:address:number/deref, n:number
9999 mem: location 1164 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1163 is 5
9999 mem: storing 0 in location 1166
 102 run: break-if done?:boolean, 
9999 mem: location 1166 is 0
9999 run: jump-if fell through
 102 run: print-character x:address:screen, [ ]
9999 mem: location 1162 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1253
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1255
 103 run: c:character <- next-ingredient 
9999 mem: storing 0 in location 1256
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1257
9999 mem: storing 0 in location 1258
 103 run: break-if color-found?:boolean, 
9999 mem: location 1258 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1257
 103 run: break-unless x:address:screen, 
9999 mem: location 1255 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1255 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1255 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1259
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1255 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1255 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1260
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1255 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1255 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1261
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1255 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1255 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1262
 103 run: max-row:number <- subtract height:number, 1:literal
9999 mem: location 1262 is 3
9999 mem: storing 2 in location 1263
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1256 is 0
9999 mem: storing 0 in location 1264
 103 run: break-unless newline?:boolean, 
9999 mem: location 1264 is 0
9999 run: jumping to instruction 25
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1259 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1261 is 5
9999 mem: storing 0 in location 1266
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1266 is 0
9999 mem: location 1260 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 2 in location 1266
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1255 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1255 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1267
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1256 is 0
9999 mem: storing 0 in location 1268
 103 run: break-unless backspace?:boolean, 
9999 mem: location 1268 is 0
9999 run: jumping to instruction 44
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1267 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1266 is 2
9999 mem: location 1267 is 1036
9999 mem: location 1266 is 2
9999 mem: storing 1041 in location 1270
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1270 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1270 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1271
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1270 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1270 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1272
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1256 is 0
9999 mem: location 1271 is 1041
9999 mem: storing 0 in location 1041
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1257 is 7
9999 mem: location 1272 is 1042
9999 mem: storing 7 in location 1042
 103 run: at-right?:boolean <- equal column:address:number/deref, width:number
9999 mem: location 1260 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1261 is 5
9999 mem: storing 0 in location 1273
 103 run: break-if at-right?:boolean, 
9999 mem: location 1273 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1260 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1260 is 1034
9999 mem: storing 3 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1255 is 1031
 102 run: loop 
9999 run: jumping to instruction 8
 102 run: done?:boolean <- greater-or-equal column:address:number/deref, n:number
9999 mem: location 1164 is 1034
9999 mem: location 1034 is 3
9999 mem: location 1163 is 5
9999 mem: storing 0 in location 1166
 102 run: break-if done?:boolean, 
9999 mem: location 1166 is 0
9999 run: jump-if fell through
 102 run: print-character x:address:screen, [ ]
9999 mem: location 1162 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1284
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1286
 103 run: c:character <- next-ingredient 
9999 mem: storing 0 in location 1287
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 103 run: break-if color-found?:boolean, 
9999 mem: location 1289 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1288
 103 run: break-unless x:address:screen, 
9999 mem: location 1286 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1286 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1286 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1290
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1286 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1286 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1291
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1286 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1286 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1292
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1286 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1286 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1293
 103 run: max-row:number <- subtract height:number, 1:literal
9999 mem: location 1293 is 3
9999 mem: storing 2 in location 1294
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1287 is 0
9999 mem: storing 0 in location 1295
 103 run: break-unless newline?:boolean, 
9999 mem: location 1295 is 0
9999 run: jumping to instruction 25
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1290 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1292 is 5
9999 mem: storing 0 in location 1297
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1297 is 0
9999 mem: location 1291 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 3 in location 1297
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1286 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1286 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1298
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1287 is 0
9999 mem: storing 0 in location 1299
 103 run: break-unless backspace?:boolean, 
9999 mem: location 1299 is 0
9999 run: jumping to instruction 44
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1298 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1297 is 3
9999 mem: location 1298 is 1036
9999 mem: location 1297 is 3
9999 mem: storing 1043 in location 1301
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1301 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1301 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1302
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1301 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1301 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1303
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1287 is 0
9999 mem: location 1302 is 1043
9999 mem: storing 0 in location 1043
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1288 is 7
9999 mem: location 1303 is 1044
9999 mem: storing 7 in location 1044
 103 run: at-right?:boolean <- equal column:address:number/deref, width:number
9999 mem: location 1291 is 1034
9999 mem: location 1034 is 3
9999 mem: location 1292 is 5
9999 mem: storing 0 in location 1304
 103 run: break-if at-right?:boolean, 
9999 mem: location 1304 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1291 is 1034
9999 mem: location 1034 is 3
9999 mem: location 1291 is 1034
9999 mem: storing 4 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1286 is 1031
 102 run: loop 
9999 run: jumping to instruction 8
 102 run: done?:boolean <- greater-or-equal column:address:number/deref, n:number
9999 mem: location 1164 is 1034
9999 mem: location 1034 is 4
9999 mem: location 1163 is 5
9999 mem: storing 0 in location 1166
 102 run: break-if done?:boolean, 
9999 mem: location 1166 is 0
9999 run: jump-if fell through
 102 run: print-character x:address:screen, [ ]
9999 mem: location 1162 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1315
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1317
 103 run: c:character <- next-ingredient 
9999 mem: storing 0 in location 1318
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1319
9999 mem: storing 0 in location 1320
 103 run: break-if color-found?:boolean, 
9999 mem: location 1320 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1319
 103 run: break-unless x:address:screen, 
9999 mem: location 1317 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1317 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1317 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1321
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1317 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1317 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1322
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1317 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1317 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1323
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1317 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1317 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1324
 103 run: max-row:number <- subtract height:number, 1:literal
9999 mem: location 1324 is 3
9999 mem: storing 2 in location 1325
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1318 is 0
9999 mem: storing 0 in location 1326
 103 run: break-unless newline?:boolean, 
9999 mem: location 1326 is 0
9999 run: jumping to instruction 25
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1321 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1323 is 5
9999 mem: storing 0 in location 1328
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1328 is 0
9999 mem: location 1322 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 4 in location 1328
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1317 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1317 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1329
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1318 is 0
9999 mem: storing 0 in location 1330
 103 run: break-unless backspace?:boolean, 
9999 mem: location 1330 is 0
9999 run: jumping to instruction 44
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1329 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1328 is 4
9999 mem: location 1329 is 1036
9999 mem: location 1328 is 4
9999 mem: storing 1045 in location 1332
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1332 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1332 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1333
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1332 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1332 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1334
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1318 is 0
9999 mem: location 1333 is 1045
9999 mem: storing 0 in location 1045
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1319 is 7
9999 mem: location 1334 is 1046
9999 mem: storing 7 in location 1046
 103 run: at-right?:boolean <- equal column:address:number/deref, width:number
9999 mem: location 1322 is 1034
9999 mem: location 1034 is 4
9999 mem: location 1323 is 5
9999 mem: storing 0 in location 1335
 103 run: break-if at-right?:boolean, 
9999 mem: location 1335 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1322 is 1034
9999 mem: location 1034 is 4
9999 mem: location 1322 is 1034
9999 mem: storing 5 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1317 is 1031
 102 run: loop 
9999 run: jumping to instruction 8
 102 run: done?:boolean <- greater-or-equal column:address:number/deref, n:number
9999 mem: location 1164 is 1034
9999 mem: location 1034 is 5
9999 mem: location 1163 is 5
9999 mem: storing 1 in location 1166
 102 run: break-if done?:boolean, 
9999 mem: location 1166 is 1
9999 run: jumping to instruction 12
 102 run: column:address:number/deref <- copy original-column:number
9999 mem: location 1165 is 0
9999 mem: location 1164 is 1034
9999 mem: storing 0 in location 1034
 102 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1162 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 100 run: screen-should-contain [
    .     .
    .     .
    .     .
  ]
