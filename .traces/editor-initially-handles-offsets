parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "3", properties: ["3": "literal", "height": ]}
parse: instruction: run
parse:   ingredient: {name: "\n    s:address:array:character <- new [abc]\n    new-editor s:address:array:character, screen:address, 0:literal/top, 1:literal/left, 5:literal/right\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    . abc .\n    .     .\n    .     .\n  ", properties: [_: "literal-string"]}
after-brace: recipe editor-initially-handles-offsets
after-brace: new-fake-screen ...
after-brace: run ...
after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: editor-initially-handles-offsets
 101 run: screen:address <- new-fake-screen 5:literal/width, 3:literal/height
 102 run: default-space:address:array:location <- new location:type, 30:literal/capacity
9999 mem: array size is 30
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1031
9999 mem: storing 1031 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1032
9999 mem: storing 5 in location 1032
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1031
9999 mem: storing 3 in location 1031
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1033
9999 mem: storing 0 in location 1033
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1034
9999 mem: storing 0 in location 1034
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1032
9999 mem: location 1032 is 5
9999 mem: location 1004 is 1031
9999 mem: location 1031 is 3
9999 mem: storing 15 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 15
9999 mem: array size is 15
9999 mem: new alloc: 1036
9999 mem: location 1008 is 1035
9999 mem: storing 1036 in location 1035
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1067
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1069
 103 run: break-unless x:address:screen, 
9999 mem: location 1069 is 1031
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1070
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1070 is 1036
9999 mem: storing 15 in location 1071
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1072
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 0
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 0
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 0
9999 mem: storing 1037 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 0
9999 mem: storing 1 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 1
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 1
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 1
9999 mem: storing 1039 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 1
9999 mem: storing 2 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 2
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 2
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 2
9999 mem: storing 1041 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 2
9999 mem: storing 3 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 3
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 3
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 3
9999 mem: storing 1043 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 3
9999 mem: storing 4 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 4
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 4
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 4
9999 mem: storing 1045 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 4
9999 mem: storing 5 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 5
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 5
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 5
9999 mem: storing 1047 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 5
9999 mem: storing 6 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 6
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 6
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 6
9999 mem: storing 1049 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 6
9999 mem: storing 7 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 7
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 7
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 7
9999 mem: storing 1051 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 7
9999 mem: storing 8 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 8
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 8
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 8
9999 mem: storing 1053 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 8
9999 mem: storing 9 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 9
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 9
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 9
9999 mem: storing 1055 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 9
9999 mem: storing 10 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 10
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 10
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 10
9999 mem: storing 1057 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 10
9999 mem: storing 11 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 11
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 11
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 11
9999 mem: storing 1059 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 11
9999 mem: storing 12 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 12
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 12
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 12
9999 mem: storing 1061 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 12
9999 mem: storing 13 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 13
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 13
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 13
9999 mem: storing 1063 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 13
9999 mem: storing 14 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 14
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 14
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 14
9999 mem: storing 1065 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1066
9999 mem: storing 7 in location 1066
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 14
9999 mem: storing 15 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 15
9999 mem: location 1071 is 15
9999 mem: storing 1 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1033
9999 mem: storing 0 in location 1033
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1069 is 1031
 102 run: reply result:address:screen
9999 mem: location 1002 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 101 run: run [
    s:address:array:character <- new [abc]
    new-editor s:address:array:character, screen:address, 0:literal/top, 1:literal/left, 5:literal/right
  ]
parse: instruction: new
parse:   ingredient: {name: "abc", properties: [_: "literal-string"]}
parse:   product: {name: "s", properties: ["s": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "s", properties: ["s": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "top": ]}
parse:   ingredient: {name: "1", properties: ["1": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
name: assign s 1
after-brace: recipe run1001
after-brace: new ...
after-brace: new-editor ...
 101 run: s:address:array:character <- new [abc]
9999 mem: storing 1098 in location 1
 101 run: new-editor s:address:array:character, screen:address, 0:literal/top, 1:literal/left, 5:literal/right
9999 mem: location 1 is 1098
9999 mem: location 900 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1102
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1098 in location 1104
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1105
 102 run: top:number <- next-ingredient 
9999 mem: storing 0 in location 1106
 102 run: left:number <- next-ingredient 
9999 mem: storing 1 in location 1107
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1108
 102 run: right:number <- subtract right:number, 1:literal
9999 mem: location 1108 is 5
9999 mem: storing 4 in location 1108
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: new alloc: 1133
9999 mem: storing 1133 in location 1109
 102 run: sc:address:address:screen <- get-address result:address:editor-data/deref, screen:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 0
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1109 is 1133
9999 run: address to copy is 1138
9999 mem: storing 1138 in location 1110
 102 run: sc:address:address:screen/deref <- copy screen:address
9999 mem: location 1105 is 1031
9999 mem: location 1110 is 1138
9999 mem: storing 1031 in location 1138
 102 run: x:address:number <- get-address result:address:editor-data/deref, top:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 0
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1109 is 1133
9999 run: address to copy is 1139
9999 mem: storing 1139 in location 1111
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1106 is 0
9999 mem: location 1111 is 1139
9999 mem: storing 0 in location 1139
 102 run: x:address:number <- get-address result:address:editor-data/deref, left:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 0
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1109 is 1133
9999 run: address to copy is 1140
9999 mem: storing 1140 in location 1111
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1107 is 1
9999 mem: location 1111 is 1140
9999 mem: storing 1 in location 1140
 102 run: x:address:number <- get-address result:address:editor-data/deref, right:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 0
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1109 is 1133
9999 run: address to copy is 1142
9999 mem: storing 1142 in location 1111
 102 run: x:address:number/deref <- copy right:number
9999 mem: location 1108 is 4
9999 mem: location 1111 is 1142
9999 mem: storing 4 in location 1142
 102 run: x:address:number <- get-address result:address:editor-data/deref, bottom:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 0
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1109 is 1133
9999 run: address to copy is 1141
9999 mem: storing 1141 in location 1111
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1106 is 0
9999 mem: location 1111 is 1141
9999 mem: storing 0 in location 1141
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-row:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 0
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1109 is 1133
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 1111
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1106 is 0
9999 mem: location 1111 is 1143
9999 mem: storing 0 in location 1143
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-column:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 0
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1109 is 1133
9999 run: address to copy is 1144
9999 mem: storing 1144 in location 1111
 102 run: response:address:address:array:character <- get-address result:address:editor-data/deref, response:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 0
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1109 is 1133
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 1112
 102 run: response:address:address:array:character/deref <- copy 0:literal
9999 mem: location 1112 is 1136
9999 mem: storing 0 in location 1136
 102 run: warnings:address:address:array:character <- get-address result:address:editor-data/deref, warnings:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 0
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1109 is 1133
9999 run: address to copy is 1137
9999 mem: storing 1137 in location 1113
 102 run: warnings:address:address:array:character/deref <- copy 0:literal
9999 mem: location 1113 is 1137
9999 mem: storing 0 in location 1137
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1107 is 1
9999 mem: location 1111 is 1144
9999 mem: storing 1 in location 1144
 102 run: d:address:address:duplex-list <- get-address result:address:editor-data/deref, data:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 0
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1109 is 1133
9999 run: address to copy is 1133
9999 mem: storing 1133 in location 1114
 102 run: d:address:address:duplex-list/deref <- push-duplex 167:literal/§, 0:literal/tail
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1148
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1150
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1151
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1179
9999 mem: storing 1179 in location 1152
 103 run: val:address:location <- get-address result:address:duplex-list/deref, value:offset
9999 mem: location 1152 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1152 is 1179
9999 run: address to copy is 1179
9999 mem: storing 1179 in location 1153
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1150 is 167
9999 mem: location 1153 is 1179
9999 mem: storing 167 in location 1179
 103 run: next:address:address:duplex-list <- get-address result:address:duplex-list/deref, next:offset
9999 mem: location 1152 is 1179
9999 mem: location 1179 is 167
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1152 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 1154
 103 run: next:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1151 is 0
9999 mem: location 1154 is 1180
9999 mem: storing 0 in location 1180
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1151 is 0
9999 run: jump-if fell through
 103 run: reply result:address:duplex-list
9999 mem: location 1152 is 1179
9999 run: result 0 is 1179
9999 mem: location 1114 is 1133
9999 mem: storing 1179 in location 1133
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 1179
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1109 is 1133
9999 run: address to copy is 1135
9999 mem: storing 1135 in location 1115
 102 run: y:address:address:duplex-list/deref <- copy d:address:address:duplex-list/deref
9999 mem: location 1114 is 1133
9999 mem: location 1133 is 1179
9999 mem: location 1115 is 1135
9999 mem: storing 1179 in location 1135
 102 run: init:address:address:duplex-list <- get-address result:address:editor-data/deref, top-of-screen:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 1179
9999 mem: location 1134 is 0
9999 mem: location 1135 is 1179
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1109 is 1133
9999 run: address to copy is 1134
9999 mem: storing 1134 in location 1116
 102 run: init:address:address:duplex-list/deref <- copy d:address:address:duplex-list/deref
9999 mem: location 1114 is 1133
9999 mem: location 1133 is 1179
9999 mem: location 1116 is 1134
9999 mem: storing 1179 in location 1134
 102 run: b:address:boolean <- get-address result:address:editor-data/deref, in-focus?:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 1179
9999 mem: location 1134 is 1179
9999 mem: location 1135 is 1179
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1109 is 1133
9999 run: address to copy is 1146
9999 mem: storing 1146 in location 1117
 102 run: b:address:boolean/deref <- copy 1:literal/true
9999 mem: location 1117 is 1146
9999 mem: storing 1 in location 1146
 102 run: r:address:recipe-ordinal <- get-address result:address:editor-data/deref, respond:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 1179
9999 mem: location 1134 is 1179
9999 mem: location 1135 is 1179
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1109 is 1133
9999 run: address to copy is 1147
9999 mem: storing 1147 in location 1118
 102 run: r:address:recipe-ordinal/deref <- copy handle-event:recipe
9999 mem: location 1118 is 1147
9999 mem: storing 180 in location 1147
 102 run: jump-if s:address:array:character, 1:offset
9999 mem: location 1104 is 1098
9999 run: jumping to instruction 38
 102 run: len:number <- length s:address:array:character/deref
9999 mem: location 1104 is 1098
9999 mem: location 1098 is 3
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1104 is 1098
9999 mem: storing 3 in location 1119
 102 run: jump-if len:number, 1:offset
9999 mem: location 1119 is 3
9999 run: jumping to instruction 41
 102 run: idx:number <- copy 0:literal
9999 mem: storing 0 in location 1120
 102 run: curr:address:duplex-list <- copy init:address:address:duplex-list/deref
9999 mem: location 1116 is 1134
9999 mem: location 1134 is 1179
9999 mem: storing 1179 in location 1121
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1120 is 0
9999 mem: location 1119 is 3
9999 mem: storing 0 in location 1122
 102 run: break-if done?:boolean, 
9999 mem: location 1122 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1104 is 1098
9999 mem: location 1098 is 3
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1120 is 0
9999 mem: location 1104 is 1098
9999 mem: location 1120 is 0
9999 run: address to copy is 1099
9999 run: its type is character
9999 mem: location 1099 is 97
9999 mem: storing 97 in location 1123
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1123 is 97
9999 mem: location 1121 is 1179
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1182
 103 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1184
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1185
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1213
9999 mem: storing 1213 in location 1186
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1186 is 1213
9999 mem: location 1213 is 0
9999 mem: location 1214 is 0
9999 mem: location 1215 is 0
9999 mem: location 1186 is 1213
9999 run: address to copy is 1213
9999 mem: storing 1213 in location 1187
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1184 is 97
9999 mem: location 1187 is 1213
9999 mem: storing 97 in location 1213
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1185 is 1179
9999 mem: location 1179 is 167
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1185 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1188
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1185 is 1179
9999 mem: location 1179 is 167
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1185 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 1189
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1186 is 1213
9999 mem: location 1189 is 1180
9999 mem: storing 1213 in location 1180
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1186 is 1213
9999 mem: location 1213 is 97
9999 mem: location 1214 is 0
9999 mem: location 1215 is 0
9999 mem: location 1186 is 1213
9999 run: address to copy is 1215
9999 mem: storing 1215 in location 1189
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1185 is 1179
9999 mem: location 1189 is 1215
9999 mem: storing 1179 in location 1215
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1186 is 1213
9999 mem: location 1213 is 97
9999 mem: location 1214 is 0
9999 mem: location 1215 is 1179
9999 mem: location 1186 is 1213
9999 run: address to copy is 1214
9999 mem: storing 1214 in location 1189
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1188 is 0
9999 mem: location 1189 is 1214
9999 mem: storing 0 in location 1214
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1188 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1186 is 1213
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1121 is 1179
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1216
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1218
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1218 is 1179
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1218 is 1179
9999 mem: location 1179 is 167
9999 mem: location 1180 is 1213
9999 mem: location 1181 is 0
9999 mem: location 1218 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 1213
9999 mem: storing 1213 in location 1219
 103 run: reply result:address:duplex-list
9999 mem: location 1219 is 1213
9999 run: result 0 is 1213
9999 mem: storing 1213 in location 1121
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1120 is 0
9999 mem: storing 1 in location 1120
 102 run: loop 
9999 run: jumping to instruction 44
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1120 is 1
9999 mem: location 1119 is 3
9999 mem: storing 0 in location 1122
 102 run: break-if done?:boolean, 
9999 mem: location 1122 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1104 is 1098
9999 mem: location 1098 is 3
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1120 is 1
9999 mem: location 1104 is 1098
9999 mem: location 1120 is 1
9999 run: address to copy is 1100
9999 run: its type is character
9999 mem: location 1100 is 98
9999 mem: storing 98 in location 1123
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1123 is 98
9999 mem: location 1121 is 1213
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1247
 103 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1249
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1213 in location 1250
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1278
9999 mem: storing 1278 in location 1251
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1251 is 1278
9999 mem: location 1278 is 0
9999 mem: location 1279 is 0
9999 mem: location 1280 is 0
9999 mem: location 1251 is 1278
9999 run: address to copy is 1278
9999 mem: storing 1278 in location 1252
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1249 is 98
9999 mem: location 1252 is 1278
9999 mem: storing 98 in location 1278
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1250 is 1213
9999 mem: location 1213 is 97
9999 mem: location 1214 is 0
9999 mem: location 1215 is 1179
9999 mem: location 1250 is 1213
9999 run: address to copy is 1214
9999 run: its type is address
9999 mem: location 1214 is 0
9999 mem: storing 0 in location 1253
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1250 is 1213
9999 mem: location 1213 is 97
9999 mem: location 1214 is 0
9999 mem: location 1215 is 1179
9999 mem: location 1250 is 1213
9999 run: address to copy is 1214
9999 mem: storing 1214 in location 1254
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1251 is 1278
9999 mem: location 1254 is 1214
9999 mem: storing 1278 in location 1214
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1251 is 1278
9999 mem: location 1278 is 98
9999 mem: location 1279 is 0
9999 mem: location 1280 is 0
9999 mem: location 1251 is 1278
9999 run: address to copy is 1280
9999 mem: storing 1280 in location 1254
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1250 is 1213
9999 mem: location 1254 is 1280
9999 mem: storing 1213 in location 1280
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1251 is 1278
9999 mem: location 1278 is 98
9999 mem: location 1279 is 0
9999 mem: location 1280 is 1213
9999 mem: location 1251 is 1278
9999 run: address to copy is 1279
9999 mem: storing 1279 in location 1254
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1279
9999 mem: storing 0 in location 1279
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1251 is 1278
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1121 is 1213
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1281
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1213 in location 1283
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1283 is 1213
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1283 is 1213
9999 mem: location 1213 is 97
9999 mem: location 1214 is 1278
9999 mem: location 1215 is 1179
9999 mem: location 1283 is 1213
9999 run: address to copy is 1214
9999 run: its type is address
9999 mem: location 1214 is 1278
9999 mem: storing 1278 in location 1284
 103 run: reply result:address:duplex-list
9999 mem: location 1284 is 1278
9999 run: result 0 is 1278
9999 mem: storing 1278 in location 1121
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1120 is 1
9999 mem: storing 2 in location 1120
 102 run: loop 
9999 run: jumping to instruction 44
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1120 is 2
9999 mem: location 1119 is 3
9999 mem: storing 0 in location 1122
 102 run: break-if done?:boolean, 
9999 mem: location 1122 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1104 is 1098
9999 mem: location 1098 is 3
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1120 is 2
9999 mem: location 1104 is 1098
9999 mem: location 1120 is 2
9999 run: address to copy is 1101
9999 run: its type is character
9999 mem: location 1101 is 99
9999 mem: storing 99 in location 1123
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1123 is 99
9999 mem: location 1121 is 1278
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1312
 103 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1314
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1278 in location 1315
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1343
9999 mem: storing 1343 in location 1316
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1316 is 1343
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 mem: location 1345 is 0
9999 mem: location 1316 is 1343
9999 run: address to copy is 1343
9999 mem: storing 1343 in location 1317
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1314 is 99
9999 mem: location 1317 is 1343
9999 mem: storing 99 in location 1343
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1315 is 1278
9999 mem: location 1278 is 98
9999 mem: location 1279 is 0
9999 mem: location 1280 is 1213
9999 mem: location 1315 is 1278
9999 run: address to copy is 1279
9999 run: its type is address
9999 mem: location 1279 is 0
9999 mem: storing 0 in location 1318
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1315 is 1278
9999 mem: location 1278 is 98
9999 mem: location 1279 is 0
9999 mem: location 1280 is 1213
9999 mem: location 1315 is 1278
9999 run: address to copy is 1279
9999 mem: storing 1279 in location 1319
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1316 is 1343
9999 mem: location 1319 is 1279
9999 mem: storing 1343 in location 1279
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1316 is 1343
9999 mem: location 1343 is 99
9999 mem: location 1344 is 0
9999 mem: location 1345 is 0
9999 mem: location 1316 is 1343
9999 run: address to copy is 1345
9999 mem: storing 1345 in location 1319
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1315 is 1278
9999 mem: location 1319 is 1345
9999 mem: storing 1278 in location 1345
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1316 is 1343
9999 mem: location 1343 is 99
9999 mem: location 1344 is 0
9999 mem: location 1345 is 1278
9999 mem: location 1316 is 1343
9999 run: address to copy is 1344
9999 mem: storing 1344 in location 1319
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1318 is 0
9999 mem: location 1319 is 1344
9999 mem: storing 0 in location 1344
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1318 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1316 is 1343
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1121 is 1278
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1346
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1278 in location 1348
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1348 is 1278
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1348 is 1278
9999 mem: location 1278 is 98
9999 mem: location 1279 is 1343
9999 mem: location 1280 is 1213
9999 mem: location 1348 is 1278
9999 run: address to copy is 1279
9999 run: its type is address
9999 mem: location 1279 is 1343
9999 mem: storing 1343 in location 1349
 103 run: reply result:address:duplex-list
9999 mem: location 1349 is 1343
9999 run: result 0 is 1343
9999 mem: storing 1343 in location 1121
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1120 is 2
9999 mem: storing 3 in location 1120
 102 run: loop 
9999 run: jumping to instruction 44
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1120 is 3
9999 mem: location 1119 is 3
9999 mem: storing 1 in location 1122
 102 run: break-if done?:boolean, 
9999 mem: location 1122 is 1
9999 run: jumping to instruction 51
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 1179
9999 mem: location 1134 is 1179
9999 mem: location 1135 is 1179
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 180
9999 mem: location 1109 is 1133
9999 run: address to copy is 1135
9999 mem: storing 1135 in location 1115
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1116 is 1134
9999 mem: location 1134 is 1179
9999 mem: location 1115 is 1135
9999 mem: storing 1179 in location 1135
 102 run: bottom:address:number <- get-address result:address:editor-data/deref, bottom:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 1179
9999 mem: location 1134 is 1179
9999 mem: location 1135 is 1179
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 180
9999 mem: location 1109 is 1133
9999 run: address to copy is 1141
9999 mem: storing 1141 in location 1124
 102 run: result:address:editor-data <- render result:address:editor-data
9999 mem: location 1109 is 1133
 103 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 1377
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1133 in location 1379
 103 run: screen:address <- get editor:address:editor-data/deref, screen:offset
9999 mem: location 1379 is 1133
9999 mem: location 1133 is 1179
9999 mem: location 1134 is 1179
9999 mem: location 1135 is 1179
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 180
9999 mem: location 1379 is 1133
9999 run: address to copy is 1138
9999 run: its type is address
9999 mem: location 1138 is 1031
9999 mem: storing 1031 in location 1380
 103 run: top:number <- get editor:address:editor-data/deref, top:offset
9999 mem: location 1379 is 1133
9999 mem: location 1133 is 1179
9999 mem: location 1134 is 1179
9999 mem: location 1135 is 1179
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 180
9999 mem: location 1379 is 1133
9999 run: address to copy is 1139
9999 run: its type is number
9999 mem: location 1139 is 0
9999 mem: storing 0 in location 1381
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1379 is 1133
9999 mem: location 1133 is 1179
9999 mem: location 1134 is 1179
9999 mem: location 1135 is 1179
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 180
9999 mem: location 1379 is 1133
9999 run: address to copy is 1140
9999 run: its type is number
9999 mem: location 1140 is 1
9999 mem: storing 1 in location 1382
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1380 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1418
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1420
 104 run: break-unless x:address:screen, 
9999 mem: location 1420 is 1031
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1420 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1420 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1421
 104 run: reply height:number
9999 mem: location 1421 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1383
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1379 is 1133
9999 mem: location 1133 is 1179
9999 mem: location 1134 is 1179
9999 mem: location 1135 is 1179
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 180
9999 mem: location 1379 is 1133
9999 run: address to copy is 1142
9999 run: its type is number
9999 mem: location 1142 is 4
9999 mem: storing 4 in location 1384
 103 run: hide-screen screen:address
9999 mem: location 1380 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1449
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1451
 104 run: break-unless x:address:screen, 
9999 mem: location 1451 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 1451 is 1031
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, top-of-screen:offset
9999 mem: location 1379 is 1133
9999 mem: location 1133 is 1179
9999 mem: location 1134 is 1179
9999 mem: location 1135 is 1179
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 180
9999 mem: location 1379 is 1133
9999 run: address to copy is 1134
9999 run: its type is address
9999 mem: location 1134 is 1179
9999 mem: storing 1179 in location 1385
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1385 is 1179
9999 mem: storing 1179 in location 1386
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1385 is 1179
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1480
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1482
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1482 is 1179
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1482 is 1179
9999 mem: location 1179 is 167
9999 mem: location 1180 is 1213
9999 mem: location 1181 is 0
9999 mem: location 1482 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 1213
9999 mem: storing 1213 in location 1483
 104 run: reply result:address:duplex-list
9999 mem: location 1483 is 1213
9999 run: result 0 is 1213
9999 mem: storing 1213 in location 1385
 103 run: row:number <- copy top:number
9999 mem: location 1381 is 0
9999 mem: storing 0 in location 1387
 103 run: column:number <- copy left:number
9999 mem: location 1382 is 1
9999 mem: storing 1 in location 1388
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1379 is 1133
9999 mem: location 1133 is 1179
9999 mem: location 1134 is 1179
9999 mem: location 1135 is 1179
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 180
9999 mem: location 1379 is 1133
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 1389
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1379 is 1133
9999 mem: location 1133 is 1179
9999 mem: location 1134 is 1179
9999 mem: location 1135 is 1179
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 180
9999 mem: location 1379 is 1133
9999 run: address to copy is 1144
9999 mem: storing 1144 in location 1390
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1379 is 1133
9999 mem: location 1133 is 1179
9999 mem: location 1134 is 1179
9999 mem: location 1135 is 1179
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 180
9999 mem: location 1379 is 1133
9999 run: address to copy is 1135
9999 mem: storing 1135 in location 1391
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1380 is 1031
9999 mem: location 1387 is 0
9999 mem: location 1388 is 1
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1511
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1513
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 1514
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1515
 104 run: break-unless x:address:screen, 
9999 mem: location 1513 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1513 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1513 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1516
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1514 is 0
9999 mem: location 1516 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1513 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1513 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1517
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1515 is 1
9999 mem: location 1517 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1513 is 1031
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1385 is 1213
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1387 is 0
9999 mem: location 1383 is 3
9999 mem: storing 0 in location 1392
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1392 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1387 is 0
9999 mem: location 1389 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 1 in location 1393
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1393 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1388 is 1
9999 mem: location 1390 is 1144
9999 mem: location 1144 is 1
9999 mem: storing 1 in location 1394
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1394 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1385 is 1213
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1542
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1213 in location 1544
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1544 is 1213
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1544 is 1213
9999 mem: location 1213 is 97
9999 mem: location 1214 is 1278
9999 mem: location 1215 is 1179
9999 mem: location 1544 is 1213
9999 run: address to copy is 1215
9999 run: its type is address
9999 mem: location 1215 is 1179
9999 mem: storing 1179 in location 1545
 104 run: reply result:address:duplex-list
9999 mem: location 1545 is 1179
9999 run: result 0 is 1179
9999 mem: location 1391 is 1135
9999 mem: storing 1179 in location 1135
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1385 is 1213
9999 mem: location 1213 is 97
9999 mem: location 1214 is 1278
9999 mem: location 1215 is 1179
9999 mem: location 1385 is 1213
9999 run: address to copy is 1213
9999 run: its type is number
9999 mem: location 1213 is 97
9999 mem: storing 97 in location 1395
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1395 is 97
9999 mem: storing 0 in location 1396
 103 run: break-unless newline?:boolean, 
9999 mem: location 1396 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1388 is 1
9999 mem: location 1384 is 4
9999 mem: storing 0 in location 1399
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1399 is 0
9999 run: jumping to instruction 63
 103 run: print-character screen:address, c:character
9999 mem: location 1380 is 1031
9999 mem: location 1395 is 97
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1573
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1575
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1576
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1577
9999 mem: storing 0 in location 1578
 104 run: break-if color-found?:boolean, 
9999 mem: location 1578 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1577
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1579
9999 mem: storing 0 in location 1580
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1580 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1579
 104 run: break-unless x:address:screen, 
9999 mem: location 1575 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1575 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1575 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1581
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1575 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1575 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1582
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1575 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1575 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1583
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1575 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1575 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1584
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1576 is 97
9999 mem: storing 0 in location 1585
 104 run: break-unless newline?:boolean, 
9999 mem: location 1585 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1581 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1583 is 5
9999 mem: storing 0 in location 1588
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1588 is 0
9999 mem: location 1582 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 1 in location 1588
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1575 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1575 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1589
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1576 is 97
9999 mem: storing 0 in location 1590
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1590 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1589 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1588 is 1
9999 mem: location 1589 is 1036
9999 mem: location 1588 is 1
9999 mem: storing 1039 in location 1592
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1592 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1592 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1593
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1592 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1592 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1594
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1576 is 97
9999 mem: location 1593 is 1039
9999 mem: storing 97 in location 1039
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1577 is 7
9999 mem: location 1594 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1583 is 5
9999 mem: storing 4 in location 1595
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1582 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1595 is 4
9999 mem: storing 0 in location 1596
 104 run: break-if at-right?:boolean, 
9999 mem: location 1596 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1582 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1582 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1575 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1385 is 1213
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1604
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1213 in location 1606
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1606 is 1213
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1606 is 1213
9999 mem: location 1213 is 97
9999 mem: location 1214 is 1278
9999 mem: location 1215 is 1179
9999 mem: location 1606 is 1213
9999 run: address to copy is 1214
9999 run: its type is address
9999 mem: location 1214 is 1278
9999 mem: storing 1278 in location 1607
 104 run: reply result:address:duplex-list
9999 mem: location 1607 is 1278
9999 run: result 0 is 1278
9999 mem: storing 1278 in location 1385
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1386 is 1179
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1635
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1637
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1637 is 1179
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1637 is 1179
9999 mem: location 1179 is 167
9999 mem: location 1180 is 1213
9999 mem: location 1181 is 0
9999 mem: location 1637 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 1213
9999 mem: storing 1213 in location 1638
 104 run: reply result:address:duplex-list
9999 mem: location 1638 is 1213
9999 run: result 0 is 1213
9999 mem: storing 1213 in location 1386
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1388 is 1
9999 mem: storing 2 in location 1388
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1385 is 1278
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1387 is 0
9999 mem: location 1383 is 3
9999 mem: storing 0 in location 1392
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1392 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1387 is 0
9999 mem: location 1389 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 1 in location 1393
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1393 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1388 is 2
9999 mem: location 1390 is 1144
9999 mem: location 1144 is 1
9999 mem: storing 0 in location 1394
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1394 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1385 is 1278
9999 mem: location 1278 is 98
9999 mem: location 1279 is 1343
9999 mem: location 1280 is 1213
9999 mem: location 1385 is 1278
9999 run: address to copy is 1278
9999 run: its type is number
9999 mem: location 1278 is 98
9999 mem: storing 98 in location 1395
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1395 is 98
9999 mem: storing 0 in location 1396
 103 run: break-unless newline?:boolean, 
9999 mem: location 1396 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1388 is 2
9999 mem: location 1384 is 4
9999 mem: storing 0 in location 1399
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1399 is 0
9999 run: jumping to instruction 63
 103 run: print-character screen:address, c:character
9999 mem: location 1380 is 1031
9999 mem: location 1395 is 98
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1666
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1668
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1669
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1670
9999 mem: storing 0 in location 1671
 104 run: break-if color-found?:boolean, 
9999 mem: location 1671 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1670
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1672
9999 mem: storing 0 in location 1673
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1673 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1672
 104 run: break-unless x:address:screen, 
9999 mem: location 1668 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1668 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1668 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1674
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1668 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1668 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1675
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1668 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1668 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1676
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1668 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1668 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1677
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1669 is 98
9999 mem: storing 0 in location 1678
 104 run: break-unless newline?:boolean, 
9999 mem: location 1678 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1674 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1676 is 5
9999 mem: storing 0 in location 1681
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1681 is 0
9999 mem: location 1675 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 2 in location 1681
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1668 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1668 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1682
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1669 is 98
9999 mem: storing 0 in location 1683
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1683 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1682 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1681 is 2
9999 mem: location 1682 is 1036
9999 mem: location 1681 is 2
9999 mem: storing 1041 in location 1685
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1685 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1685 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1686
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1685 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1685 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1687
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1669 is 98
9999 mem: location 1686 is 1041
9999 mem: storing 98 in location 1041
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1670 is 7
9999 mem: location 1687 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1676 is 5
9999 mem: storing 4 in location 1688
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1675 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1688 is 4
9999 mem: storing 0 in location 1689
 104 run: break-if at-right?:boolean, 
9999 mem: location 1689 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1675 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1675 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1668 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1385 is 1278
schedule: next-duplex/render/new-editor/run1001/editor-initially-handles-offsets
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1697
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1278 in location 1699
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1699 is 1278
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1699 is 1278
9999 mem: location 1278 is 98
9999 mem: location 1279 is 1343
9999 mem: location 1280 is 1213
9999 mem: location 1699 is 1278
9999 run: address to copy is 1279
9999 run: its type is address
9999 mem: location 1279 is 1343
9999 mem: storing 1343 in location 1700
 104 run: reply result:address:duplex-list
9999 mem: location 1700 is 1343
9999 run: result 0 is 1343
9999 mem: storing 1343 in location 1385
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1386 is 1213
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1728
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1213 in location 1730
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1730 is 1213
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1730 is 1213
9999 mem: location 1213 is 97
9999 mem: location 1214 is 1278
9999 mem: location 1215 is 1179
9999 mem: location 1730 is 1213
9999 run: address to copy is 1214
9999 run: its type is address
9999 mem: location 1214 is 1278
9999 mem: storing 1278 in location 1731
 104 run: reply result:address:duplex-list
9999 mem: location 1731 is 1278
9999 run: result 0 is 1278
9999 mem: storing 1278 in location 1386
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1388 is 2
9999 mem: storing 3 in location 1388
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1385 is 1343
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1387 is 0
9999 mem: location 1383 is 3
9999 mem: storing 0 in location 1392
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1392 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1387 is 0
9999 mem: location 1389 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 1 in location 1393
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1393 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1388 is 3
9999 mem: location 1390 is 1144
9999 mem: location 1144 is 1
9999 mem: storing 0 in location 1394
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1394 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1385 is 1343
9999 mem: location 1343 is 99
9999 mem: location 1344 is 0
9999 mem: location 1345 is 1278
9999 mem: location 1385 is 1343
9999 run: address to copy is 1343
9999 run: its type is number
9999 mem: location 1343 is 99
9999 mem: storing 99 in location 1395
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1395 is 99
9999 mem: storing 0 in location 1396
 103 run: break-unless newline?:boolean, 
9999 mem: location 1396 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1388 is 3
9999 mem: location 1384 is 4
9999 mem: storing 0 in location 1399
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1399 is 0
9999 run: jumping to instruction 63
 103 run: print-character screen:address, c:character
9999 mem: location 1380 is 1031
9999 mem: location 1395 is 99
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1759
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1761
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1762
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1763
9999 mem: storing 0 in location 1764
 104 run: break-if color-found?:boolean, 
9999 mem: location 1764 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1763
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1765
9999 mem: storing 0 in location 1766
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1766 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1765
 104 run: break-unless x:address:screen, 
9999 mem: location 1761 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1761 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1761 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1767
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1761 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1761 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1768
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1761 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1761 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1769
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1761 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1761 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1770
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1762 is 99
9999 mem: storing 0 in location 1771
 104 run: break-unless newline?:boolean, 
9999 mem: location 1771 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1767 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1769 is 5
9999 mem: storing 0 in location 1774
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1774 is 0
9999 mem: location 1768 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 3 in location 1774
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1761 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1761 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1775
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1762 is 99
9999 mem: storing 0 in location 1776
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1776 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1775 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1774 is 3
9999 mem: location 1775 is 1036
9999 mem: location 1774 is 3
9999 mem: storing 1043 in location 1778
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1778 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1778 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1779
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1778 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1778 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1780
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1762 is 99
9999 mem: location 1779 is 1043
9999 mem: storing 99 in location 1043
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1763 is 7
9999 mem: location 1780 is 1044
9999 mem: storing 7 in location 1044
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1769 is 5
9999 mem: storing 4 in location 1781
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1768 is 1034
9999 mem: location 1034 is 3
9999 mem: location 1781 is 4
9999 mem: storing 0 in location 1782
 104 run: break-if at-right?:boolean, 
9999 mem: location 1782 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1768 is 1034
9999 mem: location 1034 is 3
9999 mem: location 1768 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1761 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1385 is 1343
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1790
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1343 in location 1792
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1792 is 1343
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1792 is 1343
9999 mem: location 1343 is 99
9999 mem: location 1344 is 0
9999 mem: location 1345 is 1278
9999 mem: location 1792 is 1343
9999 run: address to copy is 1344
9999 run: its type is address
9999 mem: location 1344 is 0
9999 mem: storing 0 in location 1793
 104 run: reply result:address:duplex-list
9999 mem: location 1793 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1385
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1386 is 1278
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1821
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1278 in location 1823
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1823 is 1278
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1823 is 1278
9999 mem: location 1278 is 98
9999 mem: location 1279 is 1343
9999 mem: location 1280 is 1213
9999 mem: location 1823 is 1278
9999 run: address to copy is 1279
9999 run: its type is address
9999 mem: location 1279 is 1343
9999 mem: storing 1343 in location 1824
 104 run: reply result:address:duplex-list
9999 mem: location 1824 is 1343
9999 run: result 0 is 1343
9999 mem: storing 1343 in location 1386
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1388 is 3
9999 mem: storing 4 in location 1388
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1385 is 0
9999 run: jumping to instruction 69
 103 run: bottom:address:number <- get-address editor:address:editor-data/deref, bottom:offset
9999 mem: location 1379 is 1133
9999 mem: location 1133 is 1179
9999 mem: location 1134 is 1179
9999 mem: location 1135 is 1179
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 180
9999 mem: location 1379 is 1133
9999 run: address to copy is 1141
9999 mem: storing 1141 in location 1400
 103 run: bottom:address:number/deref <- copy row:number
9999 mem: location 1387 is 0
9999 mem: location 1400 is 1141
9999 mem: storing 0 in location 1141
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1387 is 0
9999 mem: location 1389 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 1 in location 1393
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1388 is 4
9999 mem: location 1390 is 1144
9999 mem: location 1144 is 1
9999 mem: storing 0 in location 1401
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1393 is 1
9999 mem: location 1401 is 0
9999 mem: storing 0 in location 1402
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1387 is 0
9999 mem: location 1389 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1403
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1402 is 0
9999 mem: location 1403 is 0
9999 mem: storing 0 in location 1404
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 1404 is 0
9999 run: jumping to instruction 90
 103 run: done?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1387 is 0
9999 mem: location 1383 is 3
9999 mem: storing 0 in location 1398
 103 run: break-if done?:boolean, 
9999 mem: location 1398 is 0
9999 run: jump-if fell through
 103 run: line-done?:boolean <- greater-than column:number, right:number
9999 mem: location 1388 is 4
9999 mem: location 1384 is 4
9999 mem: storing 0 in location 1407
 103 run: break-if line-done?:boolean, 
9999 mem: location 1407 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1380 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1852
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1854
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1855
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1856
9999 mem: storing 0 in location 1857
 104 run: break-if color-found?:boolean, 
9999 mem: location 1857 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1856
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1858
9999 mem: storing 0 in location 1859
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1859 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1858
 104 run: break-unless x:address:screen, 
9999 mem: location 1854 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1854 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1854 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1860
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1854 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1854 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1861
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1854 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1854 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1862
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1854 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1854 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1863
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1855 is 32
9999 mem: storing 0 in location 1864
 104 run: break-unless newline?:boolean, 
9999 mem: location 1864 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1860 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1862 is 5
9999 mem: storing 0 in location 1867
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1867 is 0
9999 mem: location 1861 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 4 in location 1867
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1854 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1854 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1868
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1855 is 32
9999 mem: storing 0 in location 1869
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1869 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1868 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1867 is 4
9999 mem: location 1868 is 1036
9999 mem: location 1867 is 4
9999 mem: storing 1045 in location 1871
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1871 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1871 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1872
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1871 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1871 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1873
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1855 is 32
9999 mem: location 1872 is 1045
9999 mem: storing 32 in location 1045
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1856 is 7
9999 mem: location 1873 is 1046
9999 mem: storing 7 in location 1046
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1862 is 5
9999 mem: storing 4 in location 1874
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1861 is 1034
9999 mem: location 1034 is 4
9999 mem: location 1874 is 4
9999 mem: storing 1 in location 1875
 104 run: break-if at-right?:boolean, 
9999 mem: location 1875 is 1
9999 run: jumping to instruction 60
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1854 is 1031
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1388 is 4
9999 mem: storing 5 in location 1388
 103 run: loop 
9999 run: jumping to instruction 95
 103 run: line-done?:boolean <- greater-than column:number, right:number
9999 mem: location 1388 is 5
9999 mem: location 1384 is 4
9999 mem: storing 1 in location 1407
 103 run: break-if line-done?:boolean, 
9999 mem: location 1407 is 1
9999 run: jumping to instruction 100
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 1387 is 0
9999 mem: storing 1 in location 1387
 103 run: warnings:address:array:character <- get editor:address:editor-data/deref, warnings:offset
9999 mem: location 1379 is 1133
9999 mem: location 1133 is 1179
9999 mem: location 1134 is 1179
9999 mem: location 1135 is 1179
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 180
9999 mem: location 1379 is 1133
9999 run: address to copy is 1137
9999 run: its type is address
9999 mem: location 1137 is 0
9999 mem: storing 0 in location 1408
 103 run: break-unless warnings:address:array:character, 
9999 mem: location 1408 is 0
9999 run: jumping to instruction 108
 103 run: break-if warnings:address:array:character, 
9999 mem: location 1408 is 0
9999 run: jump-if fell through
 103 run: response:address:array:character <- get editor:address:editor-data/deref, response:offset
9999 mem: location 1379 is 1133
9999 mem: location 1133 is 1179
9999 mem: location 1134 is 1179
9999 mem: location 1135 is 1179
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 180
9999 mem: location 1379 is 1133
9999 run: address to copy is 1136
9999 run: its type is address
9999 mem: location 1136 is 0
9999 mem: storing 0 in location 1409
 103 run: break-unless response:address:array:character, 
9999 mem: location 1409 is 0
9999 run: jumping to instruction 114
 103 run: column:number <- copy left:number
9999 mem: location 1382 is 1
9999 mem: storing 1 in location 1388
 103 run: done?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1387 is 1
9999 mem: location 1383 is 3
9999 mem: storing 0 in location 1398
 103 run: break-if done?:boolean, 
9999 mem: location 1398 is 0
9999 run: jump-if fell through
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1380 is 1031
9999 mem: location 1387 is 1
9999 mem: location 1388 is 1
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1883
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1885
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1886
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1887
 104 run: break-unless x:address:screen, 
9999 mem: location 1885 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1885 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1885 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1888
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1886 is 1
9999 mem: location 1888 is 1033
9999 mem: storing 1 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1885 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1885 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1889
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1887 is 1
9999 mem: location 1889 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1885 is 1031
 103 run: line-done?:boolean <- greater-or-equal column:number, right:number
9999 mem: location 1388 is 1
9999 mem: location 1384 is 4
9999 mem: storing 0 in location 1407
 103 run: break-if line-done?:boolean, 
9999 mem: location 1407 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1380 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1914
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1916
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1917
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1918
9999 mem: storing 0 in location 1919
 104 run: break-if color-found?:boolean, 
9999 mem: location 1919 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1918
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1920
9999 mem: storing 0 in location 1921
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1921 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1920
 104 run: break-unless x:address:screen, 
9999 mem: location 1916 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1916 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1916 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1922
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1916 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1916 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1923
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1916 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1916 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1924
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1916 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1916 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1925
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1917 is 32
9999 mem: storing 0 in location 1926
 104 run: break-unless newline?:boolean, 
9999 mem: location 1926 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1922 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1924 is 5
9999 mem: storing 5 in location 1929
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1929 is 5
9999 mem: location 1923 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 6 in location 1929
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1916 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1916 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1930
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1917 is 32
9999 mem: storing 0 in location 1931
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1931 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1930 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1929 is 6
9999 mem: location 1930 is 1036
9999 mem: location 1929 is 6
9999 mem: storing 1049 in location 1933
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1933 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1933 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1934
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1933 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1933 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1935
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1917 is 32
9999 mem: location 1934 is 1049
9999 mem: storing 32 in location 1049
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1918 is 7
9999 mem: location 1935 is 1050
9999 mem: storing 7 in location 1050
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1924 is 5
9999 mem: storing 4 in location 1936
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1923 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1936 is 4
9999 mem: storing 0 in location 1937
 104 run: break-if at-right?:boolean, 
9999 mem: location 1937 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1923 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1923 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1916 is 1031
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1388 is 1
9999 mem: storing 2 in location 1388
 103 run: loop 
9999 run: jumping to instruction 122
 103 run: line-done?:boolean <- greater-or-equal column:number, right:number
9999 mem: location 1388 is 2
9999 mem: location 1384 is 4
9999 mem: storing 0 in location 1407
 103 run: break-if line-done?:boolean, 
9999 mem: location 1407 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1380 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1945
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1947
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1948
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1949
9999 mem: storing 0 in location 1950
 104 run: break-if color-found?:boolean, 
9999 mem: location 1950 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1949
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1951
9999 mem: storing 0 in location 1952
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1952 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1951
 104 run: break-unless x:address:screen, 
9999 mem: location 1947 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1947 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1947 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1953
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1947 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1947 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1954
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1947 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1947 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1955
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1947 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1947 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1956
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1948 is 32
9999 mem: storing 0 in location 1957
 104 run: break-unless newline?:boolean, 
9999 mem: location 1957 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1953 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1955 is 5
9999 mem: storing 5 in location 1960
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1960 is 5
9999 mem: location 1954 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 7 in location 1960
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1947 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1947 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1961
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1948 is 32
9999 mem: storing 0 in location 1962
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1962 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1961 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1960 is 7
9999 mem: location 1961 is 1036
9999 mem: location 1960 is 7
9999 mem: storing 1051 in location 1964
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1964 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1964 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1965
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1964 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1964 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1966
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1948 is 32
9999 mem: location 1965 is 1051
9999 mem: storing 32 in location 1051
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1949 is 7
9999 mem: location 1966 is 1052
9999 mem: storing 7 in location 1052
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1955 is 5
9999 mem: storing 4 in location 1967
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1954 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1967 is 4
9999 mem: storing 0 in location 1968
 104 run: break-if at-right?:boolean, 
9999 mem: location 1968 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1954 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1954 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1947 is 1031
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1388 is 2
9999 mem: storing 3 in location 1388
 103 run: loop 
9999 run: jumping to instruction 122
 103 run: line-done?:boolean <- greater-or-equal column:number, right:number
9999 mem: location 1388 is 3
9999 mem: location 1384 is 4
9999 mem: storing 0 in location 1407
 103 run: break-if line-done?:boolean, 
9999 mem: location 1407 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1380 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1976
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1978
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1979
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1980
9999 mem: storing 0 in location 1981
 104 run: break-if color-found?:boolean, 
9999 mem: location 1981 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1980
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1982
9999 mem: storing 0 in location 1983
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1982
 104 run: break-unless x:address:screen, 
9999 mem: location 1978 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1978 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1978 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1984
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1978 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1978 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1985
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1978 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1978 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1986
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1978 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1978 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1987
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1979 is 32
9999 mem: storing 0 in location 1988
 104 run: break-unless newline?:boolean, 
9999 mem: location 1988 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1984 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1986 is 5
9999 mem: storing 5 in location 1991
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1991 is 5
9999 mem: location 1985 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 8 in location 1991
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1978 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1978 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1992
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1979 is 32
9999 mem: storing 0 in location 1993
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1993 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1992 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1991 is 8
9999 mem: location 1992 is 1036
9999 mem: location 1991 is 8
9999 mem: storing 1053 in location 1995
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1995 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1995 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1996
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1995 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1995 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1997
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1979 is 32
9999 mem: location 1996 is 1053
9999 mem: storing 32 in location 1053
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1980 is 7
9999 mem: location 1997 is 1054
9999 mem: storing 7 in location 1054
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1986 is 5
9999 mem: storing 4 in location 1998
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1985 is 1034
9999 mem: location 1034 is 3
9999 mem: location 1998 is 4
9999 mem: storing 0 in location 1999
 104 run: break-if at-right?:boolean, 
9999 mem: location 1999 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1985 is 1034
9999 mem: location 1034 is 3
9999 mem: location 1985 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1978 is 1031
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1388 is 3
9999 mem: storing 4 in location 1388
 103 run: loop 
9999 run: jumping to instruction 122
 103 run: line-done?:boolean <- greater-or-equal column:number, right:number
9999 mem: location 1388 is 4
9999 mem: location 1384 is 4
9999 mem: storing 1 in location 1407
 103 run: break-if line-done?:boolean, 
9999 mem: location 1407 is 1
9999 run: jumping to instruction 127
 103 run: in-focus?:boolean <- get editor:address:editor-data/deref, in-focus?:offset
9999 mem: location 1379 is 1133
9999 mem: location 1133 is 1179
9999 mem: location 1134 is 1179
9999 mem: location 1135 is 1179
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 180
9999 mem: location 1379 is 1133
9999 run: address to copy is 1146
9999 run: its type is boolean
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1410
 103 run: break-unless in-focus?:boolean, 
9999 mem: location 1410 is 1
9999 run: jump-unless fell through
 103 run: cursor-inside-right-margin?:boolean <- lesser-or-equal cursor-column:address:number/deref, right:number
9999 mem: location 1390 is 1144
9999 mem: location 1144 is 1
9999 mem: location 1384 is 4
9999 mem: storing 1 in location 1411
 103 run: assert cursor-inside-right-margin?:boolean, [cursor outside right margin]
9999 mem: location 1411 is 1
 103 run: cursor-inside-left-margin?:boolean <- greater-or-equal cursor-column:address:number/deref, left:number
9999 mem: location 1390 is 1144
9999 mem: location 1144 is 1
9999 mem: location 1382 is 1
9999 mem: storing 1 in location 1412
 103 run: assert cursor-inside-left-margin?:boolean, [cursor outside left margin]
9999 mem: location 1412 is 1
 103 run: move-cursor screen:address, cursor-row:address:number/deref, cursor-column:address:number/deref
9999 mem: location 1380 is 1031
9999 mem: location 1389 is 1143
9999 mem: location 1143 is 0
9999 mem: location 1390 is 1144
9999 mem: location 1144 is 1
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2007
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2009
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 2010
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 2011
 104 run: break-unless x:address:screen, 
9999 mem: location 2009 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2009 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2009 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2012
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2010 is 0
9999 mem: location 2012 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2009 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2009 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2013
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2011 is 1
9999 mem: location 2013 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2009 is 1031
 103 run: show-screen screen:address
9999 mem: location 1380 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2038
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2040
 104 run: break-unless x:address:screen, 
9999 mem: location 2040 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 2040 is 1031
 103 run: reply editor:address:editor-data/same-as-ingredient:0
9999 mem: location 1379 is 1133
9999 run: result 0 is 1133
9999 mem: storing 1133 in location 1109
 102 run: reply result:address:editor-data
9999 mem: location 1109 is 1133
 100 run: screen-should-contain [
    . abc .
    .     .
    .     .
  ]
