parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "height": ]}
parse: instruction: run
parse:   ingredient: {name: "\n    s:address:array:character <- new [abc]\n    new-editor s:address:array:character, screen:address, 1:literal/left, 5:literal/right\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .     .\n    . abc .\n    .     .\n  ", properties: [_: "literal-string"]}
after-brace: recipe editor-initially-handles-offsets
after-brace: new-fake-screen ...
after-brace: run ...
after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: editor-initially-handles-offsets
 101 run: screen:address <- new-fake-screen 5:literal/width, 5:literal/height
 102 run: default-space:address:array:location <- new location:type, 30:literal/capacity
9999 mem: array size is 30
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1031
9999 mem: storing 1031 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1032
9999 mem: storing 5 in location 1032
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1031
9999 mem: storing 5 in location 1031
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1033
9999 mem: storing 0 in location 1033
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1034
9999 mem: storing 0 in location 1034
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1032
9999 mem: location 1032 is 5
9999 mem: location 1004 is 1031
9999 mem: location 1031 is 5
9999 mem: storing 25 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 25
9999 mem: array size is 25
9999 mem: new alloc: 1036
9999 mem: location 1008 is 1035
9999 mem: storing 1036 in location 1035
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1087
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1089
 103 run: break-unless x:address:screen, 
9999 mem: location 1089 is 1031
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1089 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1089 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1090
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1090 is 1036
9999 mem: storing 25 in location 1091
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1092
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 0
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 0
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 0
9999 mem: storing 1037 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1094 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1094 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 0
9999 mem: storing 1 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 1
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 1
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 1
9999 mem: storing 1039 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1094 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1094 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 1
9999 mem: storing 2 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 2
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 2
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 2
9999 mem: storing 1041 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1094 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1094 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 2
9999 mem: storing 3 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 3
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 3
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 3
9999 mem: storing 1043 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1094 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1094 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 3
9999 mem: storing 4 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 4
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 4
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 4
9999 mem: storing 1045 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1094 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1094 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 4
9999 mem: storing 5 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 5
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 5
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 5
9999 mem: storing 1047 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1094 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1094 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 5
9999 mem: storing 6 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 6
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 6
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 6
9999 mem: storing 1049 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1094 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1094 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 6
9999 mem: storing 7 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 7
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 7
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 7
9999 mem: storing 1051 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1094 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1094 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 7
9999 mem: storing 8 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 8
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 8
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 8
9999 mem: storing 1053 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1094 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1094 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 8
9999 mem: storing 9 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 9
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 9
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 9
9999 mem: storing 1055 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1094 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1094 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 9
9999 mem: storing 10 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 10
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 10
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 10
9999 mem: storing 1057 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1094 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1094 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 10
9999 mem: storing 11 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 11
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 11
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 11
9999 mem: storing 1059 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1094 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1094 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 11
9999 mem: storing 12 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 12
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 12
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 12
9999 mem: storing 1061 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1094 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1094 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 12
9999 mem: storing 13 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 13
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 13
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 13
9999 mem: storing 1063 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1094 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1094 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 13
9999 mem: storing 14 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 14
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 14
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 14
9999 mem: storing 1065 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1094 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1094 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1066
9999 mem: storing 7 in location 1066
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 14
9999 mem: storing 15 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 15
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 15
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 15
9999 mem: storing 1067 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1094 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1067
9999 mem: storing 0 in location 1067
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1094 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1068
9999 mem: storing 7 in location 1068
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 15
9999 mem: storing 16 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 16
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 16
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 16
9999 mem: storing 1069 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1094 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1069
9999 mem: storing 0 in location 1069
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1094 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1070
9999 mem: storing 7 in location 1070
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 16
9999 mem: storing 17 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 17
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 17
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 17
9999 mem: storing 1071 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1094 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1071
9999 mem: storing 0 in location 1071
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1094 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1072
9999 mem: storing 7 in location 1072
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 17
9999 mem: storing 18 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 18
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 18
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 18
9999 mem: storing 1073 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1094 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1073
9999 mem: storing 0 in location 1073
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1094 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1074
9999 mem: storing 7 in location 1074
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 18
9999 mem: storing 19 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 19
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 19
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 19
9999 mem: storing 1075 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1094 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1075
9999 mem: storing 0 in location 1075
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1094 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1076
9999 mem: storing 7 in location 1076
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 19
9999 mem: storing 20 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 20
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 20
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 20
9999 mem: storing 1077 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1094 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1077
9999 mem: storing 0 in location 1077
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1094 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1078
9999 mem: storing 7 in location 1078
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 20
9999 mem: storing 21 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 21
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 21
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 21
9999 mem: storing 1079 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1094 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1079
9999 mem: storing 0 in location 1079
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1094 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1080
9999 mem: storing 7 in location 1080
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 21
9999 mem: storing 22 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 22
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 22
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 22
9999 mem: storing 1081 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1094 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1081
9999 mem: storing 0 in location 1081
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1094 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1082
9999 mem: storing 7 in location 1082
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 22
9999 mem: storing 23 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 23
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 23
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 23
9999 mem: storing 1083 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1094 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1083
9999 mem: storing 0 in location 1083
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1094 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1084
9999 mem: storing 7 in location 1084
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 23
9999 mem: storing 24 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 24
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 24
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 24
9999 mem: storing 1085 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1094 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1085
9999 mem: storing 0 in location 1085
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1094 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1086
9999 mem: storing 7 in location 1086
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 24
9999 mem: storing 25 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 25
9999 mem: location 1091 is 25
9999 mem: storing 1 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1089 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1089 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1097
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1097 is 1033
9999 mem: storing 0 in location 1033
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1089 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1089 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1097
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1097 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1089 is 1031
 102 run: reply result:address:screen
9999 mem: location 1002 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 101 run: run [
    s:address:array:character <- new [abc]
    new-editor s:address:array:character, screen:address, 1:literal/left, 5:literal/right
  ]
parse: instruction: new
parse:   ingredient: {name: "abc", properties: [_: "literal-string"]}
parse:   product: {name: "s", properties: ["s": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "s", properties: ["s": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "1", properties: ["1": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
name: assign s 1
after-brace: recipe run1001
after-brace: new ...
after-brace: new-editor ...
 101 run: s:address:array:character <- new [abc]
9999 mem: storing 1118 in location 1
 101 run: new-editor s:address:array:character, screen:address, 1:literal/left, 5:literal/right
9999 mem: location 1 is 1118
9999 mem: location 900 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1122
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1118 in location 1124
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1125
 102 run: left:number <- next-ingredient 
9999 mem: storing 1 in location 1126
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1127
 102 run: right:number <- subtract right:number, 1:literal
9999 mem: location 1127 is 5
9999 mem: storing 4 in location 1127
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: new alloc: 1153
9999 mem: storing 1153 in location 1128
 102 run: x:address:number <- get-address result:address:editor-data/deref, left:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1128 is 1153
9999 run: address to copy is 1157
9999 mem: storing 1157 in location 1129
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1126 is 1
9999 mem: location 1129 is 1157
9999 mem: storing 1 in location 1157
 102 run: x:address:number <- get-address result:address:editor-data/deref, right:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1128 is 1153
9999 run: address to copy is 1158
9999 mem: storing 1158 in location 1129
 102 run: x:address:number/deref <- copy right:number
9999 mem: location 1127 is 4
9999 mem: location 1129 is 1158
9999 mem: storing 4 in location 1158
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-row:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1128 is 1153
9999 run: address to copy is 1159
9999 mem: storing 1159 in location 1129
 102 run: x:address:number/deref <- copy 1:literal/top
9999 mem: location 1129 is 1159
9999 mem: storing 1 in location 1159
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-column:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1128 is 1153
9999 run: address to copy is 1160
9999 mem: storing 1160 in location 1129
 102 run: response:address:address:array:character <- get-address result:address:editor-data/deref, response:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1128 is 1153
9999 run: address to copy is 1155
9999 mem: storing 1155 in location 1130
 102 run: response:address:address:array:character/deref <- copy 0:literal
9999 mem: location 1130 is 1155
9999 mem: storing 0 in location 1155
 102 run: warnings:address:address:array:character <- get-address result:address:editor-data/deref, warnings:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1128 is 1153
9999 run: address to copy is 1156
9999 mem: storing 1156 in location 1131
 102 run: warnings:address:address:array:character/deref <- copy 0:literal
9999 mem: location 1131 is 1156
9999 mem: storing 0 in location 1156
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1126 is 1
9999 mem: location 1129 is 1160
9999 mem: storing 1 in location 1160
 102 run: init:address:address:duplex-list <- get-address result:address:editor-data/deref, data:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1128 is 1153
9999 run: address to copy is 1153
9999 mem: storing 1153 in location 1132
 102 run: init:address:address:duplex-list/deref <- push-duplex 167:literal/§, 0:literal/tail
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1163
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1165
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1166
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1194
9999 mem: storing 1194 in location 1167
 103 run: val:address:location <- get-address result:address:duplex-list/deref, value:offset
9999 mem: location 1167 is 1194
9999 mem: location 1194 is 0
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1167 is 1194
9999 run: address to copy is 1194
9999 mem: storing 1194 in location 1168
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1165 is 167
9999 mem: location 1168 is 1194
9999 mem: storing 167 in location 1194
 103 run: next:address:address:duplex-list <- get-address result:address:duplex-list/deref, next:offset
9999 mem: location 1167 is 1194
9999 mem: location 1194 is 167
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1167 is 1194
9999 run: address to copy is 1195
9999 mem: storing 1195 in location 1169
 103 run: next:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1166 is 0
9999 mem: location 1169 is 1195
9999 mem: storing 0 in location 1195
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1166 is 0
9999 run: jump-if fell through
 103 run: reply result:address:duplex-list
9999 mem: location 1167 is 1194
9999 run: result 0 is 1194
9999 mem: location 1132 is 1153
9999 mem: storing 1194 in location 1153
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1128 is 1153
9999 run: address to copy is 1154
9999 mem: storing 1154 in location 1133
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1132 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1133 is 1154
9999 mem: storing 1194 in location 1154
 102 run: b:address:boolean <- get-address result:address:editor-data/deref, in-focus?:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 1194
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1128 is 1153
9999 run: address to copy is 1162
9999 mem: storing 1162 in location 1134
 102 run: b:address:boolean/deref <- copy 1:literal/true
9999 mem: location 1134 is 1162
9999 mem: storing 1 in location 1162
 102 run: jump-if s:address:array:character, 1:offset
9999 mem: location 1124 is 1118
9999 run: jumping to instruction 27
 102 run: len:number <- length s:address:array:character/deref
9999 mem: location 1124 is 1118
9999 mem: location 1118 is 3
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1124 is 1118
9999 mem: storing 3 in location 1135
 102 run: jump-if len:number, 1:offset
9999 mem: location 1135 is 3
9999 run: jumping to instruction 30
 102 run: idx:number <- copy 0:literal
9999 mem: storing 0 in location 1136
 102 run: curr:address:duplex-list <- copy init:address:address:duplex-list/deref
9999 mem: location 1132 is 1153
9999 mem: location 1153 is 1194
9999 mem: storing 1194 in location 1137
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1136 is 0
9999 mem: location 1135 is 3
9999 mem: storing 0 in location 1138
 102 run: break-if done?:boolean, 
9999 mem: location 1138 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1124 is 1118
9999 mem: location 1118 is 3
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1136 is 0
9999 mem: location 1124 is 1118
9999 mem: location 1136 is 0
9999 run: address to copy is 1119
9999 run: its type is character
9999 mem: location 1119 is 97
9999 mem: storing 97 in location 1139
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1139 is 97
9999 mem: location 1137 is 1194
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1197
 103 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1199
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1200
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1228
9999 mem: storing 1228 in location 1201
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1201 is 1228
9999 mem: location 1228 is 0
9999 mem: location 1229 is 0
9999 mem: location 1230 is 0
9999 mem: location 1201 is 1228
9999 run: address to copy is 1228
9999 mem: storing 1228 in location 1202
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1199 is 97
9999 mem: location 1202 is 1228
9999 mem: storing 97 in location 1228
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1200 is 1194
9999 mem: location 1194 is 167
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1200 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 0
9999 mem: storing 0 in location 1203
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1200 is 1194
9999 mem: location 1194 is 167
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1200 is 1194
9999 run: address to copy is 1195
9999 mem: storing 1195 in location 1204
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1201 is 1228
9999 mem: location 1204 is 1195
9999 mem: storing 1228 in location 1195
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1201 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 0
9999 mem: location 1230 is 0
9999 mem: location 1201 is 1228
9999 run: address to copy is 1230
9999 mem: storing 1230 in location 1204
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1200 is 1194
9999 mem: location 1204 is 1230
9999 mem: storing 1194 in location 1230
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1201 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 0
9999 mem: location 1230 is 1194
9999 mem: location 1201 is 1228
9999 run: address to copy is 1229
9999 mem: storing 1229 in location 1204
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1229
9999 mem: storing 0 in location 1229
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1203 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1201 is 1228
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1137 is 1194
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1231
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1233
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1233 is 1194
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1233 is 1194
9999 mem: location 1194 is 167
9999 mem: location 1195 is 1228
9999 mem: location 1196 is 0
9999 mem: location 1233 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1228
9999 mem: storing 1228 in location 1234
 103 run: reply result:address:duplex-list
9999 mem: location 1234 is 1228
9999 run: result 0 is 1228
9999 mem: storing 1228 in location 1137
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1136 is 0
9999 mem: storing 1 in location 1136
 102 run: loop 
9999 run: jumping to instruction 33
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1136 is 1
9999 mem: location 1135 is 3
9999 mem: storing 0 in location 1138
 102 run: break-if done?:boolean, 
9999 mem: location 1138 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1124 is 1118
9999 mem: location 1118 is 3
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1136 is 1
9999 mem: location 1124 is 1118
9999 mem: location 1136 is 1
9999 run: address to copy is 1120
9999 run: its type is character
9999 mem: location 1120 is 98
9999 mem: storing 98 in location 1139
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1139 is 98
9999 mem: location 1137 is 1228
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1262
 103 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1264
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1228 in location 1265
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1293
9999 mem: storing 1293 in location 1266
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1266 is 1293
9999 mem: location 1293 is 0
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: location 1266 is 1293
9999 run: address to copy is 1293
9999 mem: storing 1293 in location 1267
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1264 is 98
9999 mem: location 1267 is 1293
9999 mem: storing 98 in location 1293
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1265 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 0
9999 mem: location 1230 is 1194
9999 mem: location 1265 is 1228
9999 run: address to copy is 1229
9999 run: its type is address
9999 mem: location 1229 is 0
9999 mem: storing 0 in location 1268
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1265 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 0
9999 mem: location 1230 is 1194
9999 mem: location 1265 is 1228
9999 run: address to copy is 1229
9999 mem: storing 1229 in location 1269
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1266 is 1293
9999 mem: location 1269 is 1229
9999 mem: storing 1293 in location 1229
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1266 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: location 1266 is 1293
9999 run: address to copy is 1295
9999 mem: storing 1295 in location 1269
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1265 is 1228
9999 mem: location 1269 is 1295
9999 mem: storing 1228 in location 1295
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1266 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 0
9999 mem: location 1295 is 1228
9999 mem: location 1266 is 1293
9999 run: address to copy is 1294
9999 mem: storing 1294 in location 1269
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1268 is 0
9999 mem: location 1269 is 1294
9999 mem: storing 0 in location 1294
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1266 is 1293
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1137 is 1228
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1296
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1228 in location 1298
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1298 is 1228
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1298 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 1293
9999 mem: location 1230 is 1194
9999 mem: location 1298 is 1228
9999 run: address to copy is 1229
9999 run: its type is address
9999 mem: location 1229 is 1293
9999 mem: storing 1293 in location 1299
 103 run: reply result:address:duplex-list
9999 mem: location 1299 is 1293
9999 run: result 0 is 1293
9999 mem: storing 1293 in location 1137
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1136 is 1
9999 mem: storing 2 in location 1136
 102 run: loop 
9999 run: jumping to instruction 33
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1136 is 2
9999 mem: location 1135 is 3
9999 mem: storing 0 in location 1138
 102 run: break-if done?:boolean, 
9999 mem: location 1138 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1124 is 1118
9999 mem: location 1118 is 3
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1136 is 2
9999 mem: location 1124 is 1118
9999 mem: location 1136 is 2
9999 run: address to copy is 1121
9999 run: its type is character
9999 mem: location 1121 is 99
9999 mem: storing 99 in location 1139
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1139 is 99
9999 mem: location 1137 is 1293
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1327
 103 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1329
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1293 in location 1330
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1358
9999 mem: storing 1358 in location 1331
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1331 is 1358
9999 mem: location 1358 is 0
9999 mem: location 1359 is 0
9999 mem: location 1360 is 0
9999 mem: location 1331 is 1358
9999 run: address to copy is 1358
9999 mem: storing 1358 in location 1332
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1329 is 99
9999 mem: location 1332 is 1358
9999 mem: storing 99 in location 1358
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1330 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 0
9999 mem: location 1295 is 1228
9999 mem: location 1330 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 0
9999 mem: storing 0 in location 1333
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1330 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 0
9999 mem: location 1295 is 1228
9999 mem: location 1330 is 1293
9999 run: address to copy is 1294
9999 mem: storing 1294 in location 1334
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1331 is 1358
9999 mem: location 1334 is 1294
9999 mem: storing 1358 in location 1294
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1331 is 1358
9999 mem: location 1358 is 99
9999 mem: location 1359 is 0
9999 mem: location 1360 is 0
9999 mem: location 1331 is 1358
9999 run: address to copy is 1360
9999 mem: storing 1360 in location 1334
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1330 is 1293
9999 mem: location 1334 is 1360
9999 mem: storing 1293 in location 1360
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1331 is 1358
9999 mem: location 1358 is 99
9999 mem: location 1359 is 0
9999 mem: location 1360 is 1293
9999 mem: location 1331 is 1358
9999 run: address to copy is 1359
9999 mem: storing 1359 in location 1334
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1333 is 0
9999 mem: location 1334 is 1359
9999 mem: storing 0 in location 1359
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1333 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1331 is 1358
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1137 is 1293
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1361
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1293 in location 1363
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1363 is 1293
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1363 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 1358
9999 mem: location 1295 is 1228
9999 mem: location 1363 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 1358
9999 mem: storing 1358 in location 1364
 103 run: reply result:address:duplex-list
9999 mem: location 1364 is 1358
9999 run: result 0 is 1358
9999 mem: storing 1358 in location 1137
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1136 is 2
9999 mem: storing 3 in location 1136
 102 run: loop 
9999 run: jumping to instruction 33
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1136 is 3
9999 mem: location 1135 is 3
9999 mem: storing 1 in location 1138
 102 run: break-if done?:boolean, 
9999 mem: location 1138 is 1
9999 run: jumping to instruction 40
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1128 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 1194
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1128 is 1153
9999 run: address to copy is 1154
9999 mem: storing 1154 in location 1133
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1132 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1133 is 1154
9999 mem: storing 1194 in location 1154
 102 run: result:address:editor-data <- render screen:address, result:address:editor-data
9999 mem: location 1125 is 1031
9999 mem: location 1128 is 1153
 103 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 1392
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1394
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1153 in location 1395
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1395 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 1194
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1395 is 1153
9999 run: address to copy is 1157
9999 run: its type is number
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1396
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1394 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1433
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1435
 104 run: break-unless x:address:screen, 
9999 mem: location 1435 is 1031
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1435 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1435 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1436
 104 run: reply height:number
9999 mem: location 1436 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1397
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1395 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 1194
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1395 is 1153
9999 run: address to copy is 1158
9999 run: its type is number
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 1398
 103 run: hide-screen screen:address
9999 mem: location 1394 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1464
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1466
 104 run: break-unless x:address:screen, 
9999 mem: location 1466 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 1466 is 1031
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 1395 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 1194
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1395 is 1153
9999 run: address to copy is 1153
9999 run: its type is address
9999 mem: location 1153 is 1194
9999 mem: storing 1194 in location 1399
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1399 is 1194
9999 mem: storing 1194 in location 1400
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1399 is 1194
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1495
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1497
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1497 is 1194
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1497 is 1194
9999 mem: location 1194 is 167
9999 mem: location 1195 is 1228
9999 mem: location 1196 is 0
9999 mem: location 1497 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1228
9999 mem: storing 1228 in location 1498
 104 run: reply result:address:duplex-list
9999 mem: location 1498 is 1228
9999 run: result 0 is 1228
9999 mem: storing 1228 in location 1399
 103 run: row:number <- copy 1:literal/top
9999 mem: storing 1 in location 1401
 103 run: column:number <- copy left:number
9999 mem: location 1396 is 1
9999 mem: storing 1 in location 1402
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1395 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 1194
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1395 is 1153
9999 run: address to copy is 1159
9999 mem: storing 1159 in location 1403
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1395 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 1194
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1395 is 1153
9999 run: address to copy is 1160
9999 mem: storing 1160 in location 1404
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1395 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 1194
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1395 is 1153
9999 run: address to copy is 1154
9999 mem: storing 1154 in location 1405
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1394 is 1031
9999 mem: location 1401 is 1
9999 mem: location 1402 is 1
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1526
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1528
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1529
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1530
 104 run: break-unless x:address:screen, 
9999 mem: location 1528 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1528 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1528 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1531
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1529 is 1
9999 mem: location 1531 is 1033
9999 mem: storing 1 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1528 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1528 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1532
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1530 is 1
9999 mem: location 1532 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1528 is 1031
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1399 is 1228
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1401 is 1
9999 mem: location 1397 is 5
9999 mem: storing 0 in location 1406
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1406 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1401 is 1
9999 mem: location 1403 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1407
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1407 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1402 is 1
9999 mem: location 1404 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1408
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1408 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1399 is 1228
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1557
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1228 in location 1559
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1559 is 1228
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1559 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 1293
9999 mem: location 1230 is 1194
9999 mem: location 1559 is 1228
9999 run: address to copy is 1230
9999 run: its type is address
9999 mem: location 1230 is 1194
9999 mem: storing 1194 in location 1560
 104 run: reply result:address:duplex-list
9999 mem: location 1560 is 1194
9999 run: result 0 is 1194
9999 mem: location 1405 is 1154
9999 mem: storing 1194 in location 1154
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1399 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 1293
9999 mem: location 1230 is 1194
9999 mem: location 1399 is 1228
9999 run: address to copy is 1228
9999 run: its type is number
9999 mem: location 1228 is 97
9999 mem: storing 97 in location 1409
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1409 is 97
9999 mem: storing 0 in location 1410
 103 run: break-unless newline?:boolean, 
9999 mem: location 1410 is 0
9999 run: jumping to instruction 47
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1402 is 1
9999 mem: location 1398 is 4
9999 mem: storing 0 in location 1412
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1412 is 0
9999 run: jumping to instruction 56
 103 run: print-character screen:address, c:character
9999 mem: location 1394 is 1031
9999 mem: location 1409 is 97
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1588
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1590
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1591
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1592
9999 mem: storing 0 in location 1593
 104 run: break-if color-found?:boolean, 
9999 mem: location 1593 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1592
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1594
9999 mem: storing 0 in location 1595
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1595 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1594
 104 run: break-unless x:address:screen, 
9999 mem: location 1590 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1590 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1590 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1596
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1590 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1590 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1597
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1590 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1590 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1598
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1590 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1590 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1599
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1591 is 97
9999 mem: storing 0 in location 1600
 104 run: break-unless newline?:boolean, 
9999 mem: location 1600 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1596 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1598 is 5
9999 mem: storing 5 in location 1603
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1603 is 5
9999 mem: location 1597 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 6 in location 1603
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1590 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1590 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1604
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1591 is 97
9999 mem: storing 0 in location 1605
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1605 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1604 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1603 is 6
9999 mem: location 1604 is 1036
9999 mem: location 1603 is 6
9999 mem: storing 1049 in location 1607
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1607 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1607 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1608
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1607 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1607 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1609
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1591 is 97
9999 mem: location 1608 is 1049
9999 mem: storing 97 in location 1049
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1592 is 7
9999 mem: location 1609 is 1050
9999 mem: storing 7 in location 1050
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1598 is 5
9999 mem: storing 4 in location 1610
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1597 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1610 is 4
9999 mem: storing 0 in location 1611
 104 run: break-if at-right?:boolean, 
9999 mem: location 1611 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1597 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1597 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1590 is 1031
schedule: render/new-editor/run1001/editor-initially-handles-offsets
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1399 is 1228
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1619
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1228 in location 1621
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1621 is 1228
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1621 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 1293
9999 mem: location 1230 is 1194
9999 mem: location 1621 is 1228
9999 run: address to copy is 1229
9999 run: its type is address
9999 mem: location 1229 is 1293
9999 mem: storing 1293 in location 1622
 104 run: reply result:address:duplex-list
9999 mem: location 1622 is 1293
9999 run: result 0 is 1293
9999 mem: storing 1293 in location 1399
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1400 is 1194
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1650
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1652
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1652 is 1194
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1652 is 1194
9999 mem: location 1194 is 167
9999 mem: location 1195 is 1228
9999 mem: location 1196 is 0
9999 mem: location 1652 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1228
9999 mem: storing 1228 in location 1653
 104 run: reply result:address:duplex-list
9999 mem: location 1653 is 1228
9999 run: result 0 is 1228
9999 mem: storing 1228 in location 1400
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1402 is 1
9999 mem: storing 2 in location 1402
 103 run: loop 
9999 run: jumping to instruction 17
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1399 is 1293
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1401 is 1
9999 mem: location 1397 is 5
9999 mem: storing 0 in location 1406
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1406 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1401 is 1
9999 mem: location 1403 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1407
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1407 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1402 is 2
9999 mem: location 1404 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1408
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1408 is 0
9999 run: jumping to instruction 27
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1399 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 1358
9999 mem: location 1295 is 1228
9999 mem: location 1399 is 1293
9999 run: address to copy is 1293
9999 run: its type is number
9999 mem: location 1293 is 98
9999 mem: storing 98 in location 1409
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1409 is 98
9999 mem: storing 0 in location 1410
 103 run: break-unless newline?:boolean, 
9999 mem: location 1410 is 0
9999 run: jumping to instruction 47
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1402 is 2
9999 mem: location 1398 is 4
9999 mem: storing 0 in location 1412
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1412 is 0
9999 run: jumping to instruction 56
 103 run: print-character screen:address, c:character
9999 mem: location 1394 is 1031
9999 mem: location 1409 is 98
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1681
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1683
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1684
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1685
9999 mem: storing 0 in location 1686
 104 run: break-if color-found?:boolean, 
9999 mem: location 1686 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1685
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1687
9999 mem: storing 0 in location 1688
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1688 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1687
 104 run: break-unless x:address:screen, 
9999 mem: location 1683 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1683 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1683 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1689
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1683 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1683 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1690
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1683 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1683 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1691
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1683 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1683 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1692
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1684 is 98
9999 mem: storing 0 in location 1693
 104 run: break-unless newline?:boolean, 
9999 mem: location 1693 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1689 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1691 is 5
9999 mem: storing 5 in location 1696
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1696 is 5
9999 mem: location 1690 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 7 in location 1696
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1683 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1683 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1697
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1684 is 98
9999 mem: storing 0 in location 1698
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1698 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1697 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 97
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1696 is 7
9999 mem: location 1697 is 1036
9999 mem: location 1696 is 7
9999 mem: storing 1051 in location 1700
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1700 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1700 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1701
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1700 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1700 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1702
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1684 is 98
9999 mem: location 1701 is 1051
9999 mem: storing 98 in location 1051
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1685 is 7
9999 mem: location 1702 is 1052
9999 mem: storing 7 in location 1052
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1691 is 5
9999 mem: storing 4 in location 1703
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1690 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1703 is 4
9999 mem: storing 0 in location 1704
 104 run: break-if at-right?:boolean, 
9999 mem: location 1704 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1690 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1690 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1683 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1399 is 1293
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1712
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1293 in location 1714
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1714 is 1293
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1714 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 1358
9999 mem: location 1295 is 1228
9999 mem: location 1714 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 1358
9999 mem: storing 1358 in location 1715
 104 run: reply result:address:duplex-list
9999 mem: location 1715 is 1358
9999 run: result 0 is 1358
9999 mem: storing 1358 in location 1399
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1400 is 1228
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1743
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1228 in location 1745
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1745 is 1228
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1745 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 1293
9999 mem: location 1230 is 1194
9999 mem: location 1745 is 1228
9999 run: address to copy is 1229
9999 run: its type is address
9999 mem: location 1229 is 1293
9999 mem: storing 1293 in location 1746
 104 run: reply result:address:duplex-list
9999 mem: location 1746 is 1293
9999 run: result 0 is 1293
9999 mem: storing 1293 in location 1400
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1402 is 2
9999 mem: storing 3 in location 1402
 103 run: loop 
9999 run: jumping to instruction 17
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1399 is 1358
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1401 is 1
9999 mem: location 1397 is 5
9999 mem: storing 0 in location 1406
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1406 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1401 is 1
9999 mem: location 1403 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1407
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1407 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1402 is 3
9999 mem: location 1404 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1408
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1408 is 0
9999 run: jumping to instruction 27
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1399 is 1358
9999 mem: location 1358 is 99
9999 mem: location 1359 is 0
9999 mem: location 1360 is 1293
9999 mem: location 1399 is 1358
9999 run: address to copy is 1358
9999 run: its type is number
9999 mem: location 1358 is 99
9999 mem: storing 99 in location 1409
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1409 is 99
9999 mem: storing 0 in location 1410
 103 run: break-unless newline?:boolean, 
9999 mem: location 1410 is 0
9999 run: jumping to instruction 47
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1402 is 3
9999 mem: location 1398 is 4
9999 mem: storing 0 in location 1412
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1412 is 0
9999 run: jumping to instruction 56
 103 run: print-character screen:address, c:character
9999 mem: location 1394 is 1031
9999 mem: location 1409 is 99
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1774
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1776
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1777
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1778
9999 mem: storing 0 in location 1779
 104 run: break-if color-found?:boolean, 
9999 mem: location 1779 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1778
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1780
9999 mem: storing 0 in location 1781
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1781 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1780
 104 run: break-unless x:address:screen, 
9999 mem: location 1776 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1776 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1776 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1782
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1776 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1776 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1783
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1776 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1776 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1784
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1776 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1776 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1785
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1777 is 99
9999 mem: storing 0 in location 1786
 104 run: break-unless newline?:boolean, 
9999 mem: location 1786 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1782 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1784 is 5
9999 mem: storing 5 in location 1789
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1789 is 5
9999 mem: location 1783 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 8 in location 1789
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1776 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1776 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1790
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1777 is 99
9999 mem: storing 0 in location 1791
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1791 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1790 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 97
9999 mem: location 1050 is 7
9999 mem: location 1051 is 98
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1789 is 8
9999 mem: location 1790 is 1036
9999 mem: location 1789 is 8
9999 mem: storing 1053 in location 1793
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1793 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1793 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1794
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1793 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1793 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1795
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1777 is 99
9999 mem: location 1794 is 1053
9999 mem: storing 99 in location 1053
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1778 is 7
9999 mem: location 1795 is 1054
9999 mem: storing 7 in location 1054
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1784 is 5
9999 mem: storing 4 in location 1796
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1783 is 1034
9999 mem: location 1034 is 3
9999 mem: location 1796 is 4
9999 mem: storing 0 in location 1797
 104 run: break-if at-right?:boolean, 
9999 mem: location 1797 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1783 is 1034
9999 mem: location 1034 is 3
9999 mem: location 1783 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1776 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1399 is 1358
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1805
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1358 in location 1807
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1807 is 1358
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1807 is 1358
9999 mem: location 1358 is 99
9999 mem: location 1359 is 0
9999 mem: location 1360 is 1293
9999 mem: location 1807 is 1358
9999 run: address to copy is 1359
9999 run: its type is address
9999 mem: location 1359 is 0
9999 mem: storing 0 in location 1808
 104 run: reply result:address:duplex-list
9999 mem: location 1808 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1399
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1400 is 1293
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1836
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1293 in location 1838
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1838 is 1293
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1838 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 1358
9999 mem: location 1295 is 1228
9999 mem: location 1838 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 1358
9999 mem: storing 1358 in location 1839
 104 run: reply result:address:duplex-list
9999 mem: location 1839 is 1358
9999 run: result 0 is 1358
9999 mem: storing 1358 in location 1400
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1402 is 3
9999 mem: storing 4 in location 1402
 103 run: loop 
9999 run: jumping to instruction 17
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1399 is 0
9999 run: jumping to instruction 62
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1401 is 1
9999 mem: location 1403 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1407
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1402 is 4
9999 mem: location 1404 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1413
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1407 is 1
9999 mem: location 1413 is 0
9999 mem: storing 0 in location 1414
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1401 is 1
9999 mem: location 1403 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1415
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1414 is 0
9999 mem: location 1415 is 0
9999 mem: storing 0 in location 1416
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 1416 is 0
9999 run: jumping to instruction 81
 103 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1394 is 1031
9999 mem: location 1402 is 4
9999 mem: location 1398 is 4
 104 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 1867
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1869
 104 run: left:number <- next-ingredient 
9999 mem: storing 4 in location 1870
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1871
 104 run: column:number <- copy left:number
9999 mem: location 1870 is 4
9999 mem: storing 4 in location 1872
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1872 is 4
9999 mem: location 1871 is 4
9999 mem: storing 0 in location 1873
 104 run: break-if done?:boolean, 
9999 mem: location 1873 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1869 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1908
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1910
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1911
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1912
9999 mem: storing 0 in location 1913
 105 run: break-if color-found?:boolean, 
9999 mem: location 1913 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1912
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1914
9999 mem: storing 0 in location 1915
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1915 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1914
 105 run: break-unless x:address:screen, 
9999 mem: location 1910 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1910 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1910 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1916
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1910 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1910 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1917
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1910 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1910 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1918
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1910 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1910 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1919
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1911 is 32
9999 mem: storing 0 in location 1920
 105 run: break-unless newline?:boolean, 
9999 mem: location 1920 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1916 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1918 is 5
9999 mem: storing 5 in location 1923
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1923 is 5
9999 mem: location 1917 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 9 in location 1923
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1910 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1910 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1924
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1911 is 32
9999 mem: storing 0 in location 1925
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1925 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1924 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 97
9999 mem: location 1050 is 7
9999 mem: location 1051 is 98
9999 mem: location 1052 is 7
9999 mem: location 1053 is 99
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1923 is 9
9999 mem: location 1924 is 1036
9999 mem: location 1923 is 9
9999 mem: storing 1055 in location 1927
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1927 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1927 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1928
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1927 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1927 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1929
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1911 is 32
9999 mem: location 1928 is 1055
9999 mem: storing 32 in location 1055
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1912 is 7
9999 mem: location 1929 is 1056
9999 mem: storing 7 in location 1056
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1918 is 5
9999 mem: storing 4 in location 1930
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1917 is 1034
9999 mem: location 1034 is 4
9999 mem: location 1930 is 4
9999 mem: storing 1 in location 1931
 105 run: break-if at-right?:boolean, 
9999 mem: location 1931 is 1
9999 run: jumping to instruction 60
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1910 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1872 is 4
9999 mem: storing 5 in location 1872
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1872 is 5
9999 mem: location 1871 is 4
9999 mem: storing 1 in location 1873
 104 run: break-if done?:boolean, 
9999 mem: location 1873 is 1
9999 run: jumping to instruction 11
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 1401 is 1
9999 mem: storing 2 in location 1401
 103 run: warnings:address:array:character <- get editor:address:editor-data/deref, warnings:offset
9999 mem: location 1395 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 1194
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1395 is 1153
9999 run: address to copy is 1156
9999 run: its type is address
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1419
 103 run: break-unless warnings:address:array:character, 
9999 mem: location 1419 is 0
9999 run: jumping to instruction 89
 103 run: break-if warnings:address:array:character, 
9999 mem: location 1419 is 0
9999 run: jump-if fell through
 103 run: response:address:array:character <- get editor:address:editor-data/deref, response:offset
9999 mem: location 1395 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 1194
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1395 is 1153
9999 run: address to copy is 1155
9999 run: its type is address
9999 mem: location 1155 is 0
9999 mem: storing 0 in location 1420
 103 run: break-unless response:address:array:character, 
9999 mem: location 1420 is 0
9999 run: jumping to instruction 95
 103 run: break-if screen:address, 
9999 mem: location 1394 is 1031
9999 run: jumping to instruction 108
 103 run: done?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1401 is 2
9999 mem: location 1397 is 5
9999 mem: storing 0 in location 1421
 103 run: break-if done?:boolean, 
9999 mem: location 1421 is 0
9999 run: jump-if fell through
 103 run: draw-horizontal screen:address, row:number, left:number, right:number, 32:literal/space
9999 mem: location 1394 is 1031
9999 mem: location 1401 is 2
9999 mem: location 1396 is 1
9999 mem: location 1398 is 4
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1939
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1941
 104 run: row:number <- next-ingredient 
9999 mem: storing 2 in location 1942
 104 run: x:number <- next-ingredient 
9999 mem: storing 1 in location 1943
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1944
 104 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1945
9999 mem: storing 1 in location 1946
 104 run: break-if style-found?:boolean, 
9999 mem: location 1946 is 1
9999 run: jumping to instruction 9
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1947
9999 mem: storing 0 in location 1948
 104 run: break-if color-found?:boolean, 
9999 mem: location 1948 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 245:literal/grey
9999 mem: storing 245 in location 1947
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1949
9999 mem: storing 0 in location 1950
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1950 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1949
 104 run: move-cursor screen:address, row:number, x:number
9999 mem: location 1941 is 1031
9999 mem: location 1942 is 2
9999 mem: location 1943 is 1
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1970
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1972
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1973
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1974
 105 run: break-unless x:address:screen, 
9999 mem: location 1972 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1972 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1972 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1975
 105 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1973 is 2
9999 mem: location 1975 is 1033
9999 mem: storing 2 in location 1033
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1972 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1972 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1976
 105 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1974 is 1
9999 mem: location 1976 is 1034
9999 mem: storing 1 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1972 is 1031
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 1943 is 1
9999 mem: location 1944 is 4
9999 mem: storing 1 in location 1951
 104 run: break-unless continue?:boolean, 
9999 mem: location 1951 is 1
9999 run: jump-unless fell through
 104 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 1941 is 1031
9999 mem: location 1945 is 32
9999 mem: location 1947 is 245
9999 mem: location 1949 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2001
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2003
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2004
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 2005
9999 mem: storing 1 in location 2006
 105 run: break-if color-found?:boolean, 
9999 mem: location 2006 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2007
9999 mem: storing 1 in location 2008
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2008 is 1
9999 run: jumping to instruction 12
 105 run: break-unless x:address:screen, 
9999 mem: location 2003 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2003 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2003 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2009
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2003 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2003 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2010
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2003 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2003 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2011
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2003 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2003 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2012
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2004 is 32
9999 mem: storing 0 in location 2013
 105 run: break-unless newline?:boolean, 
9999 mem: location 2013 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2009 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2011 is 5
9999 mem: storing 10 in location 2016
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2016 is 10
9999 mem: location 2010 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 11 in location 2016
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2003 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2003 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2017
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2004 is 32
9999 mem: storing 0 in location 2018
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2018 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2017 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 97
9999 mem: location 1050 is 7
9999 mem: location 1051 is 98
9999 mem: location 1052 is 7
9999 mem: location 1053 is 99
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2016 is 11
9999 mem: location 2017 is 1036
9999 mem: location 2016 is 11
9999 mem: storing 1059 in location 2020
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2020 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 2020 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 2021
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2020 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 2020 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 2022
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2004 is 32
9999 mem: location 2021 is 1059
9999 mem: storing 32 in location 1059
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2005 is 245
9999 mem: location 2022 is 1060
9999 mem: storing 245 in location 1060
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2011 is 5
9999 mem: storing 4 in location 2023
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2010 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2023 is 4
9999 mem: storing 0 in location 2024
 105 run: break-if at-right?:boolean, 
9999 mem: location 2024 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2010 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2010 is 1034
9999 mem: storing 2 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2003 is 1031
 104 run: x:number <- add x:number, 1:literal
9999 mem: location 1943 is 1
9999 mem: storing 2 in location 1943
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 1943 is 2
9999 mem: location 1944 is 4
9999 mem: storing 1 in location 1951
 104 run: break-unless continue?:boolean, 
9999 mem: location 1951 is 1
9999 run: jump-unless fell through
 104 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 1941 is 1031
9999 mem: location 1945 is 32
9999 mem: location 1947 is 245
9999 mem: location 1949 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2032
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2034
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2035
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 2036
9999 mem: storing 1 in location 2037
 105 run: break-if color-found?:boolean, 
9999 mem: location 2037 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2038
9999 mem: storing 1 in location 2039
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2039 is 1
9999 run: jumping to instruction 12
 105 run: break-unless x:address:screen, 
9999 mem: location 2034 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2034 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2034 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2040
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2034 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2034 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2041
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2034 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2034 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2042
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2034 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2034 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2043
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2035 is 32
9999 mem: storing 0 in location 2044
 105 run: break-unless newline?:boolean, 
9999 mem: location 2044 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2040 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2042 is 5
9999 mem: storing 10 in location 2047
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2047 is 10
9999 mem: location 2041 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 12 in location 2047
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2034 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2034 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2048
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2035 is 32
9999 mem: storing 0 in location 2049
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2049 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2048 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 97
9999 mem: location 1050 is 7
9999 mem: location 1051 is 98
9999 mem: location 1052 is 7
9999 mem: location 1053 is 99
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2047 is 12
9999 mem: location 2048 is 1036
9999 mem: location 2047 is 12
9999 mem: storing 1061 in location 2051
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2051 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 2051 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 2052
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2051 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 2051 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 2053
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2035 is 32
9999 mem: location 2052 is 1061
9999 mem: storing 32 in location 1061
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2036 is 245
9999 mem: location 2053 is 1062
9999 mem: storing 245 in location 1062
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2042 is 5
9999 mem: storing 4 in location 2054
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2041 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2054 is 4
9999 mem: storing 0 in location 2055
 105 run: break-if at-right?:boolean, 
9999 mem: location 2055 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2041 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2041 is 1034
9999 mem: storing 3 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2034 is 1031
 104 run: x:number <- add x:number, 1:literal
9999 mem: location 1943 is 2
9999 mem: storing 3 in location 1943
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 1943 is 3
9999 mem: location 1944 is 4
9999 mem: storing 1 in location 1951
 104 run: break-unless continue?:boolean, 
9999 mem: location 1951 is 1
9999 run: jump-unless fell through
 104 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 1941 is 1031
9999 mem: location 1945 is 32
9999 mem: location 1947 is 245
9999 mem: location 1949 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2063
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2065
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2066
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 2067
9999 mem: storing 1 in location 2068
 105 run: break-if color-found?:boolean, 
9999 mem: location 2068 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2069
9999 mem: storing 1 in location 2070
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2070 is 1
9999 run: jumping to instruction 12
 105 run: break-unless x:address:screen, 
9999 mem: location 2065 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2065 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2065 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2071
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2065 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2065 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2072
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2065 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2065 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2073
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2065 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2065 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2074
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2066 is 32
9999 mem: storing 0 in location 2075
 105 run: break-unless newline?:boolean, 
9999 mem: location 2075 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2071 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2073 is 5
9999 mem: storing 10 in location 2078
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2078 is 10
9999 mem: location 2072 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 13 in location 2078
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2065 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2065 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2079
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2066 is 32
9999 mem: storing 0 in location 2080
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2080 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2079 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 97
9999 mem: location 1050 is 7
9999 mem: location 1051 is 98
9999 mem: location 1052 is 7
9999 mem: location 1053 is 99
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 1061 is 32
9999 mem: location 1062 is 245
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2078 is 13
9999 mem: location 2079 is 1036
9999 mem: location 2078 is 13
9999 mem: storing 1063 in location 2082
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2082 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2082 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 2083
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2082 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2082 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 2084
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2066 is 32
9999 mem: location 2083 is 1063
9999 mem: storing 32 in location 1063
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2067 is 245
9999 mem: location 2084 is 1064
9999 mem: storing 245 in location 1064
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2073 is 5
9999 mem: storing 4 in location 2085
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2072 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2085 is 4
9999 mem: storing 0 in location 2086
 105 run: break-if at-right?:boolean, 
9999 mem: location 2086 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2072 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2072 is 1034
9999 mem: storing 4 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2065 is 1031
 104 run: x:number <- add x:number, 1:literal
9999 mem: location 1943 is 3
9999 mem: storing 4 in location 1943
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 1943 is 4
9999 mem: location 1944 is 4
9999 mem: storing 0 in location 1951
 104 run: break-unless continue?:boolean, 
9999 mem: location 1951 is 0
9999 run: jumping to instruction 27
 103 run: in-focus?:boolean <- get editor:address:editor-data/deref, in-focus?:offset
9999 mem: location 1395 is 1153
9999 mem: location 1153 is 1194
9999 mem: location 1154 is 1194
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1395 is 1153
9999 run: address to copy is 1162
9999 run: its type is boolean
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1422
 103 run: break-unless in-focus?:boolean, 
9999 mem: location 1422 is 1
9999 run: jump-unless fell through
 103 run: cursor-inside-right-margin?:boolean <- lesser-or-equal cursor-column:address:number/deref, right:number
9999 mem: location 1404 is 1160
9999 mem: location 1160 is 1
9999 mem: location 1398 is 4
9999 mem: storing 1 in location 1423
 103 run: assert cursor-inside-right-margin?:boolean, [cursor outside right margin]
9999 mem: location 1423 is 1
 103 run: cursor-inside-left-margin?:boolean <- greater-or-equal cursor-column:address:number/deref, left:number
9999 mem: location 1404 is 1160
9999 mem: location 1160 is 1
9999 mem: location 1396 is 1
9999 mem: storing 1 in location 1424
 103 run: assert cursor-inside-left-margin?:boolean, [cursor outside left margin]
9999 mem: location 1424 is 1
 103 run: move-cursor screen:address, cursor-row:address:number/deref, cursor-column:address:number/deref
9999 mem: location 1394 is 1031
9999 mem: location 1403 is 1159
9999 mem: location 1159 is 1
9999 mem: location 1404 is 1160
9999 mem: location 1160 is 1
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2094
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2096
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 2097
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 2098
 104 run: break-unless x:address:screen, 
9999 mem: location 2096 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2096 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2096 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2099
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2097 is 1
9999 mem: location 2099 is 1033
9999 mem: storing 1 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2096 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2096 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2100
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2098 is 1
9999 mem: location 2100 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2096 is 1031
 103 run: show-screen screen:address
9999 mem: location 1394 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2125
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2127
 104 run: break-unless x:address:screen, 
9999 mem: location 2127 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 2127 is 1031
 103 run: reply editor:address:editor-data/same-as-ingredient:1
9999 mem: location 1395 is 1153
9999 run: result 0 is 1153
9999 mem: storing 1153 in location 1128
 102 run: reply result:address:editor-data
9999 mem: location 1128 is 1153
 100 run: screen-should-contain [
    .     .
    . abc .
    .     .
  ]
