parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "3", properties: ["3": "literal", "height": ]}
parse: instruction: run
parse:   ingredient: {name: "\n    s:address:array:character <- new [abc]\n    new-editor s:address:array:character, screen:address, 0:literal/top, 1:literal/left, 5:literal/right\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    . abc .\n    .     .\n    .     .\n  ", properties: [_: "literal-string"]}
after-brace: recipe editor-initially-handles-offsets
after-brace: new-fake-screen ...
after-brace: run ...
after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: editor-initially-handles-offsets
 101 run: screen:address <- new-fake-screen 5:literal/width, 3:literal/height
 102 run: default-space:address:array:location <- new location:type, 30:literal/capacity
9999 mem: array size is 30
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1031
9999 mem: storing 1031 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1032
9999 mem: storing 5 in location 1032
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1031
9999 mem: storing 3 in location 1031
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1033
9999 mem: storing 0 in location 1033
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1034
9999 mem: storing 0 in location 1034
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1032
9999 mem: location 1032 is 5
9999 mem: location 1004 is 1031
9999 mem: location 1031 is 3
9999 mem: storing 15 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 15
9999 mem: array size is 15
9999 mem: new alloc: 1036
9999 mem: location 1008 is 1035
9999 mem: storing 1036 in location 1035
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1067
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1069
 103 run: break-unless x:address:screen, 
9999 mem: location 1069 is 1031
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1070
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1070 is 1036
9999 mem: storing 15 in location 1071
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1072
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 0
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 0
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 0
9999 mem: storing 1037 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 0
9999 mem: storing 1 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 1
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 1
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 1
9999 mem: storing 1039 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 1
9999 mem: storing 2 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 2
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 2
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 2
9999 mem: storing 1041 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 2
9999 mem: storing 3 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 3
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 3
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 3
9999 mem: storing 1043 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 3
9999 mem: storing 4 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 4
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 4
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 4
9999 mem: storing 1045 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 4
9999 mem: storing 5 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 5
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 5
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 5
9999 mem: storing 1047 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 5
9999 mem: storing 6 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 6
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 6
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 6
9999 mem: storing 1049 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 6
9999 mem: storing 7 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 7
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 7
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 7
9999 mem: storing 1051 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 7
9999 mem: storing 8 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 8
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 8
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 8
9999 mem: storing 1053 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 8
9999 mem: storing 9 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 9
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 9
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 9
9999 mem: storing 1055 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 9
9999 mem: storing 10 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 10
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 10
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 10
9999 mem: storing 1057 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 10
9999 mem: storing 11 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 11
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 11
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 11
9999 mem: storing 1059 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 11
9999 mem: storing 12 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 12
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 12
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 12
9999 mem: storing 1061 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 12
9999 mem: storing 13 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 13
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 13
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 13
9999 mem: storing 1063 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 13
9999 mem: storing 14 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 14
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 14
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 14
9999 mem: storing 1065 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1066
9999 mem: storing 7 in location 1066
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 14
9999 mem: storing 15 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 15
9999 mem: location 1071 is 15
9999 mem: storing 1 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1033
9999 mem: storing 0 in location 1033
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1069 is 1031
 102 run: reply result:address:screen
9999 mem: location 1002 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 101 run: run [
    s:address:array:character <- new [abc]
    new-editor s:address:array:character, screen:address, 0:literal/top, 1:literal/left, 5:literal/right
  ]
parse: instruction: new
parse:   ingredient: {name: "abc", properties: [_: "literal-string"]}
parse:   product: {name: "s", properties: ["s": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "s", properties: ["s": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "top": ]}
parse:   ingredient: {name: "1", properties: ["1": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
name: assign s 1
after-brace: recipe run1001
after-brace: new ...
after-brace: new-editor ...
 101 run: s:address:array:character <- new [abc]
9999 mem: storing 1098 in location 1
 101 run: new-editor s:address:array:character, screen:address, 0:literal/top, 1:literal/left, 5:literal/right
9999 mem: location 1 is 1098
9999 mem: location 900 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1102
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1098 in location 1104
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1105
 102 run: top:number <- next-ingredient 
9999 mem: storing 0 in location 1106
 102 run: left:number <- next-ingredient 
9999 mem: storing 1 in location 1107
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1108
 102 run: right:number <- subtract right:number, 1:literal
9999 mem: location 1108 is 5
9999 mem: storing 4 in location 1108
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: new alloc: 1133
9999 mem: storing 1133 in location 1109
 102 run: d:address:address:duplex-list <- get-address result:address:editor-data/deref, data:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 0
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1109 is 1133
9999 run: address to copy is 1133
9999 mem: storing 1133 in location 1110
 102 run: d:address:address:duplex-list/deref <- push-duplex 167:literal/§, 0:literal/tail
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1143
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1145
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1146
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1174
9999 mem: storing 1174 in location 1147
 103 run: val:address:location <- get-address result:address:duplex-list/deref, value:offset
9999 mem: location 1147 is 1174
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: location 1176 is 0
9999 mem: location 1147 is 1174
9999 run: address to copy is 1174
9999 mem: storing 1174 in location 1148
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1145 is 167
9999 mem: location 1148 is 1174
9999 mem: storing 167 in location 1174
 103 run: next:address:address:duplex-list <- get-address result:address:duplex-list/deref, next:offset
9999 mem: location 1147 is 1174
9999 mem: location 1174 is 167
9999 mem: location 1175 is 0
9999 mem: location 1176 is 0
9999 mem: location 1147 is 1174
9999 run: address to copy is 1175
9999 mem: storing 1175 in location 1149
 103 run: next:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1146 is 0
9999 mem: location 1149 is 1175
9999 mem: storing 0 in location 1175
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1146 is 0
9999 run: jump-if fell through
 103 run: reply result:address:duplex-list
9999 mem: location 1147 is 1174
9999 run: result 0 is 1174
9999 mem: location 1110 is 1133
9999 mem: storing 1174 in location 1133
 102 run: sc:address:address:screen <- get-address result:address:editor-data/deref, screen:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 1174
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1109 is 1133
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 1111
 102 run: sc:address:address:screen/deref <- copy screen:address
9999 mem: location 1105 is 1031
9999 mem: location 1111 is 1136
9999 mem: storing 1031 in location 1136
 102 run: x:address:number <- get-address result:address:editor-data/deref, top:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 1174
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1031
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1109 is 1133
9999 run: address to copy is 1137
9999 mem: storing 1137 in location 1112
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1106 is 0
9999 mem: location 1112 is 1137
9999 mem: storing 0 in location 1137
 102 run: x:address:number <- get-address result:address:editor-data/deref, left:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 1174
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1031
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1109 is 1133
9999 run: address to copy is 1138
9999 mem: storing 1138 in location 1112
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1107 is 1
9999 mem: location 1112 is 1138
9999 mem: storing 1 in location 1138
 102 run: x:address:number <- get-address result:address:editor-data/deref, right:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 1174
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1031
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1109 is 1133
9999 run: address to copy is 1140
9999 mem: storing 1140 in location 1112
 102 run: x:address:number/deref <- copy right:number
9999 mem: location 1108 is 4
9999 mem: location 1112 is 1140
9999 mem: storing 4 in location 1140
 102 run: x:address:number <- get-address result:address:editor-data/deref, bottom:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 1174
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1031
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 4
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1109 is 1133
9999 run: address to copy is 1139
9999 mem: storing 1139 in location 1112
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1106 is 0
9999 mem: location 1112 is 1139
9999 mem: storing 0 in location 1139
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-row:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 1174
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1031
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 4
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1109 is 1133
9999 run: address to copy is 1141
9999 mem: storing 1141 in location 1112
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1106 is 0
9999 mem: location 1112 is 1141
9999 mem: storing 0 in location 1141
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-column:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 1174
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1031
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 4
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1109 is 1133
9999 run: address to copy is 1142
9999 mem: storing 1142 in location 1112
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1107 is 1
9999 mem: location 1112 is 1142
9999 mem: storing 1 in location 1142
 102 run: jump-if s:address:array:character, 1:offset
9999 mem: location 1104 is 1098
9999 run: jumping to instruction 26
 102 run: len:number <- length s:address:array:character/deref
9999 mem: location 1104 is 1098
9999 mem: location 1098 is 3
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1104 is 1098
9999 mem: storing 3 in location 1113
 102 run: jump-if len:number, 1:offset
9999 mem: location 1113 is 3
9999 run: jumping to instruction 29
 102 run: idx:number <- copy 0:literal
9999 mem: storing 0 in location 1114
 102 run: init:address:address:duplex-list <- get-address result:address:editor-data/deref, top-of-screen:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 1174
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1031
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 4
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1109 is 1133
9999 run: address to copy is 1134
9999 mem: storing 1134 in location 1115
 102 run: init:address:address:duplex-list/deref <- copy d:address:address:duplex-list/deref
9999 mem: location 1110 is 1133
9999 mem: location 1133 is 1174
9999 mem: location 1115 is 1134
9999 mem: storing 1174 in location 1134
 102 run: curr:address:duplex-list <- copy init:address:address:duplex-list/deref
9999 mem: location 1115 is 1134
9999 mem: location 1134 is 1174
9999 mem: storing 1174 in location 1116
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1114 is 0
9999 mem: location 1113 is 3
9999 mem: storing 0 in location 1117
 102 run: break-if done?:boolean, 
9999 mem: location 1117 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1104 is 1098
9999 mem: location 1098 is 3
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1114 is 0
9999 mem: location 1104 is 1098
9999 mem: location 1114 is 0
9999 run: address to copy is 1099
9999 run: its type is character
9999 mem: location 1099 is 97
9999 mem: storing 97 in location 1118
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1118 is 97
9999 mem: location 1116 is 1174
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1177
 103 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1179
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1180
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1208
9999 mem: storing 1208 in location 1181
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1181 is 1208
9999 mem: location 1208 is 0
9999 mem: location 1209 is 0
9999 mem: location 1210 is 0
9999 mem: location 1181 is 1208
9999 run: address to copy is 1208
9999 mem: storing 1208 in location 1182
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1179 is 97
9999 mem: location 1182 is 1208
9999 mem: storing 97 in location 1208
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1180 is 1174
9999 mem: location 1174 is 167
9999 mem: location 1175 is 0
9999 mem: location 1176 is 0
9999 mem: location 1180 is 1174
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 0
9999 mem: storing 0 in location 1183
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1180 is 1174
9999 mem: location 1174 is 167
9999 mem: location 1175 is 0
9999 mem: location 1176 is 0
9999 mem: location 1180 is 1174
9999 run: address to copy is 1175
9999 mem: storing 1175 in location 1184
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1181 is 1208
9999 mem: location 1184 is 1175
9999 mem: storing 1208 in location 1175
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1181 is 1208
9999 mem: location 1208 is 97
9999 mem: location 1209 is 0
9999 mem: location 1210 is 0
9999 mem: location 1181 is 1208
9999 run: address to copy is 1210
9999 mem: storing 1210 in location 1184
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1180 is 1174
9999 mem: location 1184 is 1210
9999 mem: storing 1174 in location 1210
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1181 is 1208
9999 mem: location 1208 is 97
9999 mem: location 1209 is 0
9999 mem: location 1210 is 1174
9999 mem: location 1181 is 1208
9999 run: address to copy is 1209
9999 mem: storing 1209 in location 1184
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1209
9999 mem: storing 0 in location 1209
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1181 is 1208
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1116 is 1174
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1211
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1213
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1213 is 1174
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1213 is 1174
9999 mem: location 1174 is 167
9999 mem: location 1175 is 1208
9999 mem: location 1176 is 0
9999 mem: location 1213 is 1174
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1208
9999 mem: storing 1208 in location 1214
 103 run: reply result:address:duplex-list
9999 mem: location 1214 is 1208
9999 run: result 0 is 1208
9999 mem: storing 1208 in location 1116
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1114 is 0
9999 mem: storing 1 in location 1114
 102 run: loop 
9999 run: jumping to instruction 34
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1114 is 1
9999 mem: location 1113 is 3
9999 mem: storing 0 in location 1117
 102 run: break-if done?:boolean, 
9999 mem: location 1117 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1104 is 1098
9999 mem: location 1098 is 3
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1114 is 1
9999 mem: location 1104 is 1098
9999 mem: location 1114 is 1
9999 run: address to copy is 1100
9999 run: its type is character
9999 mem: location 1100 is 98
9999 mem: storing 98 in location 1118
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1118 is 98
9999 mem: location 1116 is 1208
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1242
 103 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1244
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1208 in location 1245
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1273
9999 mem: storing 1273 in location 1246
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1246 is 1273
9999 mem: location 1273 is 0
9999 mem: location 1274 is 0
9999 mem: location 1275 is 0
9999 mem: location 1246 is 1273
9999 run: address to copy is 1273
9999 mem: storing 1273 in location 1247
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1244 is 98
9999 mem: location 1247 is 1273
9999 mem: storing 98 in location 1273
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1245 is 1208
9999 mem: location 1208 is 97
9999 mem: location 1209 is 0
9999 mem: location 1210 is 1174
9999 mem: location 1245 is 1208
9999 run: address to copy is 1209
9999 run: its type is address
9999 mem: location 1209 is 0
9999 mem: storing 0 in location 1248
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1245 is 1208
9999 mem: location 1208 is 97
9999 mem: location 1209 is 0
9999 mem: location 1210 is 1174
9999 mem: location 1245 is 1208
9999 run: address to copy is 1209
9999 mem: storing 1209 in location 1249
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1246 is 1273
9999 mem: location 1249 is 1209
9999 mem: storing 1273 in location 1209
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1246 is 1273
9999 mem: location 1273 is 98
9999 mem: location 1274 is 0
9999 mem: location 1275 is 0
9999 mem: location 1246 is 1273
9999 run: address to copy is 1275
9999 mem: storing 1275 in location 1249
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1245 is 1208
9999 mem: location 1249 is 1275
9999 mem: storing 1208 in location 1275
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1246 is 1273
9999 mem: location 1273 is 98
9999 mem: location 1274 is 0
9999 mem: location 1275 is 1208
9999 mem: location 1246 is 1273
9999 run: address to copy is 1274
9999 mem: storing 1274 in location 1249
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1248 is 0
9999 mem: location 1249 is 1274
9999 mem: storing 0 in location 1274
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1246 is 1273
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1116 is 1208
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1276
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1208 in location 1278
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1278 is 1208
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1278 is 1208
9999 mem: location 1208 is 97
9999 mem: location 1209 is 1273
9999 mem: location 1210 is 1174
9999 mem: location 1278 is 1208
9999 run: address to copy is 1209
9999 run: its type is address
9999 mem: location 1209 is 1273
9999 mem: storing 1273 in location 1279
 103 run: reply result:address:duplex-list
9999 mem: location 1279 is 1273
9999 run: result 0 is 1273
9999 mem: storing 1273 in location 1116
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1114 is 1
9999 mem: storing 2 in location 1114
 102 run: loop 
9999 run: jumping to instruction 34
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1114 is 2
9999 mem: location 1113 is 3
9999 mem: storing 0 in location 1117
 102 run: break-if done?:boolean, 
9999 mem: location 1117 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1104 is 1098
9999 mem: location 1098 is 3
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1114 is 2
9999 mem: location 1104 is 1098
9999 mem: location 1114 is 2
9999 run: address to copy is 1101
9999 run: its type is character
9999 mem: location 1101 is 99
9999 mem: storing 99 in location 1118
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1118 is 99
9999 mem: location 1116 is 1273
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1307
 103 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1309
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1273 in location 1310
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1338
9999 mem: storing 1338 in location 1311
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1311 is 1338
9999 mem: location 1338 is 0
9999 mem: location 1339 is 0
9999 mem: location 1340 is 0
9999 mem: location 1311 is 1338
9999 run: address to copy is 1338
9999 mem: storing 1338 in location 1312
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1309 is 99
9999 mem: location 1312 is 1338
9999 mem: storing 99 in location 1338
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1310 is 1273
9999 mem: location 1273 is 98
9999 mem: location 1274 is 0
9999 mem: location 1275 is 1208
9999 mem: location 1310 is 1273
9999 run: address to copy is 1274
9999 run: its type is address
9999 mem: location 1274 is 0
9999 mem: storing 0 in location 1313
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1310 is 1273
9999 mem: location 1273 is 98
9999 mem: location 1274 is 0
9999 mem: location 1275 is 1208
9999 mem: location 1310 is 1273
9999 run: address to copy is 1274
9999 mem: storing 1274 in location 1314
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1311 is 1338
9999 mem: location 1314 is 1274
9999 mem: storing 1338 in location 1274
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1311 is 1338
9999 mem: location 1338 is 99
9999 mem: location 1339 is 0
9999 mem: location 1340 is 0
9999 mem: location 1311 is 1338
9999 run: address to copy is 1340
9999 mem: storing 1340 in location 1314
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1310 is 1273
9999 mem: location 1314 is 1340
9999 mem: storing 1273 in location 1340
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1311 is 1338
9999 mem: location 1338 is 99
9999 mem: location 1339 is 0
9999 mem: location 1340 is 1273
9999 mem: location 1311 is 1338
9999 run: address to copy is 1339
9999 mem: storing 1339 in location 1314
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1313 is 0
9999 mem: location 1314 is 1339
9999 mem: storing 0 in location 1339
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1313 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1311 is 1338
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1116 is 1273
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1341
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1273 in location 1343
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1343 is 1273
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1343 is 1273
9999 mem: location 1273 is 98
9999 mem: location 1274 is 1338
9999 mem: location 1275 is 1208
9999 mem: location 1343 is 1273
9999 run: address to copy is 1274
9999 run: its type is address
9999 mem: location 1274 is 1338
9999 mem: storing 1338 in location 1344
 103 run: reply result:address:duplex-list
9999 mem: location 1344 is 1338
9999 run: result 0 is 1338
9999 mem: storing 1338 in location 1116
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1114 is 2
9999 mem: storing 3 in location 1114
 102 run: loop 
9999 run: jumping to instruction 34
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1114 is 3
9999 mem: location 1113 is 3
9999 mem: storing 1 in location 1117
 102 run: break-if done?:boolean, 
9999 mem: location 1117 is 1
9999 run: jumping to instruction 41
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 1174
9999 mem: location 1134 is 1174
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1031
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 4
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1109 is 1133
9999 run: address to copy is 1135
9999 mem: storing 1135 in location 1119
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1115 is 1134
9999 mem: location 1134 is 1174
9999 mem: location 1119 is 1135
9999 mem: storing 1174 in location 1135
 102 run: bottom:address:number <- get-address result:address:editor-data/deref, bottom:offset
9999 mem: location 1109 is 1133
9999 mem: location 1133 is 1174
9999 mem: location 1134 is 1174
9999 mem: location 1135 is 1174
9999 mem: location 1136 is 1031
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 4
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1109 is 1133
9999 run: address to copy is 1139
9999 mem: storing 1139 in location 1120
 102 run: result:address:editor-data <- render result:address:editor-data
9999 mem: location 1109 is 1133
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1372
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1133 in location 1374
 103 run: screen:address <- get editor:address:editor-data/deref, screen:offset
9999 mem: location 1374 is 1133
9999 mem: location 1133 is 1174
9999 mem: location 1134 is 1174
9999 mem: location 1135 is 1174
9999 mem: location 1136 is 1031
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 4
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1374 is 1133
9999 run: address to copy is 1136
9999 run: its type is address
9999 mem: location 1136 is 1031
9999 mem: storing 1031 in location 1375
 103 run: top:number <- get editor:address:editor-data/deref, top:offset
9999 mem: location 1374 is 1133
9999 mem: location 1133 is 1174
9999 mem: location 1134 is 1174
9999 mem: location 1135 is 1174
9999 mem: location 1136 is 1031
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 4
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1374 is 1133
9999 run: address to copy is 1137
9999 run: its type is number
9999 mem: location 1137 is 0
9999 mem: storing 0 in location 1376
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1374 is 1133
9999 mem: location 1133 is 1174
9999 mem: location 1134 is 1174
9999 mem: location 1135 is 1174
9999 mem: location 1136 is 1031
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 4
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1374 is 1133
9999 run: address to copy is 1138
9999 run: its type is number
9999 mem: location 1138 is 1
9999 mem: storing 1 in location 1377
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1375 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1403
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1405
 104 run: break-unless x:address:screen, 
9999 mem: location 1405 is 1031
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1405 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1405 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1406
 104 run: reply height:number
9999 mem: location 1406 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1378
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1374 is 1133
9999 mem: location 1133 is 1174
9999 mem: location 1134 is 1174
9999 mem: location 1135 is 1174
9999 mem: location 1136 is 1031
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 4
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1374 is 1133
9999 run: address to copy is 1140
9999 run: its type is number
9999 mem: location 1140 is 4
9999 mem: storing 4 in location 1379
 103 run: hide-screen screen:address
9999 mem: location 1375 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1434
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1436
 104 run: break-unless x:address:screen, 
9999 mem: location 1436 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 1436 is 1031
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, top-of-screen:offset
9999 mem: location 1374 is 1133
9999 mem: location 1133 is 1174
9999 mem: location 1134 is 1174
9999 mem: location 1135 is 1174
9999 mem: location 1136 is 1031
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 4
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1374 is 1133
9999 run: address to copy is 1134
9999 run: its type is address
9999 mem: location 1134 is 1174
9999 mem: storing 1174 in location 1380
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1380 is 1174
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1465
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1467
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1467 is 1174
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1467 is 1174
9999 mem: location 1174 is 167
9999 mem: location 1175 is 1208
9999 mem: location 1176 is 0
9999 mem: location 1467 is 1174
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1208
9999 mem: storing 1208 in location 1468
 104 run: reply result:address:duplex-list
9999 mem: location 1468 is 1208
9999 run: result 0 is 1208
9999 mem: storing 1208 in location 1380
 103 run: row:number <- copy top:number
9999 mem: location 1376 is 0
9999 mem: storing 0 in location 1381
 103 run: column:number <- copy left:number
9999 mem: location 1377 is 1
9999 mem: storing 1 in location 1382
 103 run: cursor-row:number <- get editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1374 is 1133
9999 mem: location 1133 is 1174
9999 mem: location 1134 is 1174
9999 mem: location 1135 is 1174
9999 mem: location 1136 is 1031
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 4
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1374 is 1133
9999 run: address to copy is 1141
9999 run: its type is number
9999 mem: location 1141 is 0
9999 mem: storing 0 in location 1383
 103 run: cursor-column:number <- get editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1374 is 1133
9999 mem: location 1133 is 1174
9999 mem: location 1134 is 1174
9999 mem: location 1135 is 1174
9999 mem: location 1136 is 1031
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 4
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1374 is 1133
9999 run: address to copy is 1142
9999 run: its type is number
9999 mem: location 1142 is 1
9999 mem: storing 1 in location 1384
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1375 is 1031
9999 mem: location 1381 is 0
9999 mem: location 1382 is 1
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1496
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1498
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 1499
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1500
 104 run: break-unless x:address:screen, 
9999 mem: location 1498 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1498 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1498 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1501
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1499 is 0
9999 mem: location 1501 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1498 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1498 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1502
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1500 is 1
9999 mem: location 1502 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1498 is 1031
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1380 is 1208
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1381 is 0
9999 mem: location 1378 is 3
9999 mem: storing 0 in location 1385
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1385 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:number
9999 mem: location 1381 is 0
9999 mem: location 1383 is 0
9999 mem: storing 1 in location 1386
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1386 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:number
9999 mem: location 1382 is 1
9999 mem: location 1384 is 1
9999 mem: storing 1 in location 1387
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1387 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1374 is 1133
9999 mem: location 1133 is 1174
9999 mem: location 1134 is 1174
9999 mem: location 1135 is 1174
9999 mem: location 1136 is 1031
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 4
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1374 is 1133
9999 run: address to copy is 1135
9999 mem: storing 1135 in location 1388
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1380 is 1208
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1527
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1208 in location 1529
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1529 is 1208
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1529 is 1208
9999 mem: location 1208 is 97
9999 mem: location 1209 is 1273
9999 mem: location 1210 is 1174
9999 mem: location 1529 is 1208
9999 run: address to copy is 1210
9999 run: its type is address
9999 mem: location 1210 is 1174
9999 mem: storing 1174 in location 1530
 104 run: reply result:address:duplex-list
9999 mem: location 1530 is 1174
9999 run: result 0 is 1174
9999 mem: location 1388 is 1135
9999 mem: storing 1174 in location 1135
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1380 is 1208
9999 mem: location 1208 is 97
9999 mem: location 1209 is 1273
9999 mem: location 1210 is 1174
9999 mem: location 1380 is 1208
9999 run: address to copy is 1208
9999 run: its type is number
9999 mem: location 1208 is 97
9999 mem: storing 97 in location 1389
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1389 is 97
9999 mem: storing 0 in location 1390
 103 run: break-unless newline?:boolean, 
9999 mem: location 1390 is 0
9999 run: jumping to instruction 38
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1382 is 1
9999 mem: location 1379 is 4
9999 mem: storing 0 in location 1391
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1391 is 0
9999 run: jumping to instruction 52
 103 run: print-character screen:address, c:character
9999 mem: location 1375 is 1031
9999 mem: location 1389 is 97
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1558
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1560
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1561
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1562
9999 mem: storing 0 in location 1563
 104 run: break-if color-found?:boolean, 
9999 mem: location 1563 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1562
 104 run: break-unless x:address:screen, 
9999 mem: location 1560 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1560 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1560 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1564
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1560 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1560 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1565
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1560 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1560 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1566
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1560 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1560 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1567
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1561 is 97
9999 mem: storing 0 in location 1568
 104 run: break-unless newline?:boolean, 
9999 mem: location 1568 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1564 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1566 is 5
9999 mem: storing 0 in location 1571
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1571 is 0
9999 mem: location 1565 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 1 in location 1571
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1560 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1560 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1572
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1561 is 97
9999 mem: storing 0 in location 1573
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1573 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1572 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1571 is 1
9999 mem: location 1572 is 1036
9999 mem: location 1571 is 1
9999 mem: storing 1039 in location 1575
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1575 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1575 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1576
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1575 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1575 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1577
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1561 is 97
9999 mem: location 1576 is 1039
9999 mem: storing 97 in location 1039
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1562 is 7
9999 mem: location 1577 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1566 is 5
9999 mem: storing 4 in location 1578
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1565 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1578 is 4
9999 mem: storing 0 in location 1579
 104 run: break-if at-right?:boolean, 
9999 mem: location 1579 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1565 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1565 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1560 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1380 is 1208
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1589
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1208 in location 1591
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1591 is 1208
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1591 is 1208
9999 mem: location 1208 is 97
9999 mem: location 1209 is 1273
9999 mem: location 1210 is 1174
9999 mem: location 1591 is 1208
9999 run: address to copy is 1209
9999 run: its type is address
9999 mem: location 1209 is 1273
9999 mem: storing 1273 in location 1592
 104 run: reply result:address:duplex-list
9999 mem: location 1592 is 1273
9999 run: result 0 is 1273
9999 mem: storing 1273 in location 1380
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1382 is 1
9999 mem: storing 2 in location 1382
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1380 is 1273
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1381 is 0
9999 mem: location 1378 is 3
9999 mem: storing 0 in location 1385
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1385 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:number
9999 mem: location 1381 is 0
9999 mem: location 1383 is 0
9999 mem: storing 1 in location 1386
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1386 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:number
9999 mem: location 1382 is 2
9999 mem: location 1384 is 1
9999 mem: storing 0 in location 1387
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1387 is 0
9999 run: jumping to instruction 27
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1380 is 1273
9999 mem: location 1273 is 98
9999 mem: location 1274 is 1338
9999 mem: location 1275 is 1208
9999 mem: location 1380 is 1273
9999 run: address to copy is 1273
9999 run: its type is number
9999 mem: location 1273 is 98
9999 mem: storing 98 in location 1389
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1389 is 98
9999 mem: storing 0 in location 1390
 103 run: break-unless newline?:boolean, 
9999 mem: location 1390 is 0
9999 run: jumping to instruction 38
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1382 is 2
9999 mem: location 1379 is 4
9999 mem: storing 0 in location 1391
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1391 is 0
9999 run: jumping to instruction 52
 103 run: print-character screen:address, c:character
9999 mem: location 1375 is 1031
9999 mem: location 1389 is 98
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1620
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1622
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1623
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1624
9999 mem: storing 0 in location 1625
 104 run: break-if color-found?:boolean, 
9999 mem: location 1625 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1624
 104 run: break-unless x:address:screen, 
9999 mem: location 1622 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1622 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1622 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1626
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1622 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1622 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1627
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1622 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1622 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1628
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1622 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1622 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1629
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1623 is 98
9999 mem: storing 0 in location 1630
 104 run: break-unless newline?:boolean, 
9999 mem: location 1630 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1626 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1628 is 5
9999 mem: storing 0 in location 1633
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1633 is 0
9999 mem: location 1627 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 2 in location 1633
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1622 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1622 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1634
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1623 is 98
9999 mem: storing 0 in location 1635
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1635 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1634 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1633 is 2
9999 mem: location 1634 is 1036
9999 mem: location 1633 is 2
9999 mem: storing 1041 in location 1637
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1637 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1637 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1638
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1637 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1637 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1639
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1623 is 98
9999 mem: location 1638 is 1041
9999 mem: storing 98 in location 1041
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1624 is 7
9999 mem: location 1639 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1628 is 5
9999 mem: storing 4 in location 1640
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1627 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1640 is 4
9999 mem: storing 0 in location 1641
 104 run: break-if at-right?:boolean, 
9999 mem: location 1641 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1627 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1627 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1622 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1380 is 1273
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1651
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1273 in location 1653
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1653 is 1273
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1653 is 1273
9999 mem: location 1273 is 98
9999 mem: location 1274 is 1338
9999 mem: location 1275 is 1208
9999 mem: location 1653 is 1273
9999 run: address to copy is 1274
9999 run: its type is address
9999 mem: location 1274 is 1338
9999 mem: storing 1338 in location 1654
 104 run: reply result:address:duplex-list
9999 mem: location 1654 is 1338
9999 run: result 0 is 1338
9999 mem: storing 1338 in location 1380
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1382 is 2
9999 mem: storing 3 in location 1382
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1380 is 1338
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1381 is 0
9999 mem: location 1378 is 3
9999 mem: storing 0 in location 1385
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1385 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:number
9999 mem: location 1381 is 0
9999 mem: location 1383 is 0
9999 mem: storing 1 in location 1386
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1386 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:number
9999 mem: location 1382 is 3
9999 mem: location 1384 is 1
9999 mem: storing 0 in location 1387
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1387 is 0
9999 run: jumping to instruction 27
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1380 is 1338
9999 mem: location 1338 is 99
9999 mem: location 1339 is 0
9999 mem: location 1340 is 1273
9999 mem: location 1380 is 1338
9999 run: address to copy is 1338
9999 run: its type is number
9999 mem: location 1338 is 99
9999 mem: storing 99 in location 1389
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1389 is 99
9999 mem: storing 0 in location 1390
 103 run: break-unless newline?:boolean, 
9999 mem: location 1390 is 0
9999 run: jumping to instruction 38
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1382 is 3
9999 mem: location 1379 is 4
9999 mem: storing 0 in location 1391
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1391 is 0
9999 run: jumping to instruction 52
 103 run: print-character screen:address, c:character
9999 mem: location 1375 is 1031
9999 mem: location 1389 is 99
schedule: print-character/render/new-editor/run1001/editor-initially-handles-offsets
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1682
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1684
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1685
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1686
9999 mem: storing 0 in location 1687
 104 run: break-if color-found?:boolean, 
9999 mem: location 1687 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1686
 104 run: break-unless x:address:screen, 
9999 mem: location 1684 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1684 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1684 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1688
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1684 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1684 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1689
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1684 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1684 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1690
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1684 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1684 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1691
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1685 is 99
9999 mem: storing 0 in location 1692
 104 run: break-unless newline?:boolean, 
9999 mem: location 1692 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1688 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1690 is 5
9999 mem: storing 0 in location 1695
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1695 is 0
9999 mem: location 1689 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 3 in location 1695
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1684 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1684 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1696
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1685 is 99
9999 mem: storing 0 in location 1697
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1697 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1696 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1695 is 3
9999 mem: location 1696 is 1036
9999 mem: location 1695 is 3
9999 mem: storing 1043 in location 1699
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1699 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1699 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1700
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1699 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1699 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1701
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1685 is 99
9999 mem: location 1700 is 1043
9999 mem: storing 99 in location 1043
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1686 is 7
9999 mem: location 1701 is 1044
9999 mem: storing 7 in location 1044
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1690 is 5
9999 mem: storing 4 in location 1702
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1689 is 1034
9999 mem: location 1034 is 3
9999 mem: location 1702 is 4
9999 mem: storing 0 in location 1703
 104 run: break-if at-right?:boolean, 
9999 mem: location 1703 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1689 is 1034
9999 mem: location 1034 is 3
9999 mem: location 1689 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1684 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1380 is 1338
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1713
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1338 in location 1715
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1715 is 1338
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1715 is 1338
9999 mem: location 1338 is 99
9999 mem: location 1339 is 0
9999 mem: location 1340 is 1273
9999 mem: location 1715 is 1338
9999 run: address to copy is 1339
9999 run: its type is address
9999 mem: location 1339 is 0
9999 mem: storing 0 in location 1716
 104 run: reply result:address:duplex-list
9999 mem: location 1716 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1380
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1382 is 3
9999 mem: storing 4 in location 1382
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1380 is 0
9999 run: jumping to instruction 57
 103 run: bottom:address:number <- get-address editor:address:editor-data/deref, bottom:offset
9999 mem: location 1374 is 1133
9999 mem: location 1133 is 1174
9999 mem: location 1134 is 1174
9999 mem: location 1135 is 1174
9999 mem: location 1136 is 1031
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 4
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1374 is 1133
9999 run: address to copy is 1139
9999 mem: storing 1139 in location 1395
 103 run: bottom:address:number/deref <- copy row:number
9999 mem: location 1381 is 0
9999 mem: location 1395 is 1139
9999 mem: storing 0 in location 1139
 103 run: cursor-row:number <- get editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1374 is 1133
9999 mem: location 1133 is 1174
9999 mem: location 1134 is 1174
9999 mem: location 1135 is 1174
9999 mem: location 1136 is 1031
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 4
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1374 is 1133
9999 run: address to copy is 1141
9999 run: its type is number
9999 mem: location 1141 is 0
9999 mem: storing 0 in location 1383
 103 run: cursor-column:number <- get editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1374 is 1133
9999 mem: location 1133 is 1174
9999 mem: location 1134 is 1174
9999 mem: location 1135 is 1174
9999 mem: location 1136 is 1031
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 4
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1374 is 1133
9999 run: address to copy is 1142
9999 run: its type is number
9999 mem: location 1142 is 1
9999 mem: storing 1 in location 1384
 103 run: move-cursor screen:address, cursor-row:number, cursor-column:number
9999 mem: location 1375 is 1031
9999 mem: location 1383 is 0
9999 mem: location 1384 is 1
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1744
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1746
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 1747
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1748
 104 run: break-unless x:address:screen, 
9999 mem: location 1746 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1746 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1746 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1749
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1747 is 0
9999 mem: location 1749 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1746 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1746 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1750
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1748 is 1
9999 mem: location 1750 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1746 is 1031
 103 run: show-screen screen:address
9999 mem: location 1375 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1775
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1777
 104 run: break-unless x:address:screen, 
9999 mem: location 1777 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 1777 is 1031
 103 run: reply editor:address:editor-data/same-as-ingredient:0
9999 mem: location 1374 is 1133
9999 run: result 0 is 1133
9999 mem: storing 1133 in location 1109
 102 run: reply result:address:editor-data
9999 mem: location 1109 is 1133
 100 run: screen-should-contain [
    . abc .
    .     .
    .     .
  ]
