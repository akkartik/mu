 101 run: assume-console [
    left-click 2, 0
    press 65515  # left arrow
  ]
parse: instruction: left-click
parse:   ingredient: {name: "2", properties: ["2": "literal"]}
parse:   ingredient: {name: "0", properties: ["0": "literal"]}
parse: instruction: press
parse:   ingredient: {name: "65515", properties: ["65515": "literal"]}
 101 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
    3:number <- get *2:address:editor-data, cursor-row:offset
    4:number <- get *2:address:editor-data, cursor-column:offset
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-row", properties: ["cursor-row": "offset"]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-column", properties: ["cursor-column": "offset"]}
parse:   product: {name: "4", properties: ["4": "number"]}
name: element cursor-row of type editor-data is at offset 6
name: element cursor-column of type editor-data is at offset 7
after-brace: recipe run1001
after-brace: editor-event-loop ...
after-brace: get ...
after-brace: get ...
 101 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1286
9999 mem: location 2 is 1000
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1251
 102 run: console:address <- next-ingredient 
9999 mem: storing 1286 in location 1252
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1253
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1252 is 1286
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1288
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1286 in location 1290
 103 run: break-unless x, 
9999 mem: location 1290 is 1286
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1290 is 1286
9999 mem: location 1286 is 0
9999 mem: location 1287 is 1277
9999 mem: location 1290 is 1286
9999 run: address to copy is 1286
9999 mem: storing 1286 in location 1291
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1290 is 1286
9999 mem: location 1286 is 0
9999 mem: location 1287 is 1277
9999 mem: location 1290 is 1286
9999 run: address to copy is 1287
9999 run: its type is address
9999 mem: location 1287 is 1277
9999 mem: storing 1277 in location 1292
 103 run: max:number <- length *buf
9999 mem: location 1292 is 1277
9999 mem: storing 2 in location 1293
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1291 is 1286
9999 mem: location 1286 is 0
9999 mem: location 1293 is 2
9999 mem: storing 0 in location 1294
 103 run: break-unless done?, 
9999 mem: location 1294 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1292 is 1277
9999 mem: location 1291 is 1286
9999 mem: location 1286 is 0
9999 run: address to copy is 1278
9999 run: its type is event
9999 mem: location 1278 is 2
9999 mem: location 1279 is 65513
9999 mem: location 1280 is 2
9999 mem: location 1281 is 0
9999 mem: storing 2 in location 1296
9999 mem: storing 65513 in location 1297
9999 mem: storing 2 in location 1298
9999 mem: storing 0 in location 1299
 103 run: *idx <- add *idx, 1
9999 mem: location 1291 is 1286
9999 mem: location 1286 is 0
9999 mem: location 1291 is 1286
9999 mem: storing 1 in location 1286
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1296 is 2
9999 mem: location 1297 is 65513
9999 mem: location 1298 is 2
9999 mem: location 1299 is 0
9999 mem: location 1290 is 1286
9999 run: result 0 is [2, 65513, 2, 0]
9999 run: result 1 is 1286
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 2 in location 1254
9999 mem: storing 65513 in location 1255
9999 mem: storing 2 in location 1256
9999 mem: storing 0 in location 1257
9999 mem: storing 1286 in location 1252
9999 mem: storing 1 in location 1258
9999 mem: storing 0 in location 1259
 102 run: loop-unless found?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1259 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1254 is 2
9999 mem: location 1255 is 65513
9999 mem: location 1256 is 2
9999 mem: location 1257 is 0
9999 mem: storing 1255 in location 1260
 102 run: break-unless t, 
9999 mem: location 1260 is 1255
9999 run: jump-unless fell through
 102 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1251 is 1009
9999 mem: location 1253 is 1000
9999 mem: location 1260 is 1255
9999 mem: location 1255 is 65513
9999 mem: location 1256 is 2
9999 mem: location 1257 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1290
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1291
 103 run: t:touch-event <- next-ingredient 
9999 mem: storing 65513 in location 1292
9999 mem: storing 2 in location 1293
9999 mem: storing 0 in location 1294
 103 run: jump-if editor, 1:offset
9999 mem: location 1291 is 1000
9999 run: jumping to instruction 6
 103 run: click-column:number <- get t, column:offset
9999 mem: location 1292 is 65513
9999 mem: location 1293 is 2
9999 mem: location 1294 is 0
9999 run: address to copy is 1294
9999 run: its type is number
9999 mem: location 1294 is 0
9999 mem: storing 0 in location 1295
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1291 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1152
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1291 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1296
 103 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1295 is 0
9999 mem: location 1296 is 0
9999 mem: storing 0 in location 1297
 103 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1297 is 0
9999 run: jumping to instruction 11
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1291 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1152
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1291 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1298
 103 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1295 is 0
9999 mem: location 1298 is 9
9999 mem: storing 0 in location 1299
 103 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1299 is 0
9999 run: jumping to instruction 15
 103 run: click-row:number <- get t, row:offset
9999 mem: location 1292 is 65513
9999 mem: location 1293 is 2
9999 mem: location 1294 is 0
9999 run: address to copy is 1293
9999 run: its type is number
9999 mem: location 1293 is 2
9999 mem: storing 2 in location 1300
 103 run: click-column:number <- get t, column:offset
9999 mem: location 1292 is 65513
9999 mem: location 1293 is 2
9999 mem: location 1294 is 0
9999 run: address to copy is 1294
9999 run: its type is number
9999 mem: location 1294 is 0
9999 mem: storing 0 in location 1295
 103 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1290 is 1009
9999 mem: location 1291 is 1000
9999 mem: location 1300 is 2
9999 mem: location 1295 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1185
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1186
 104 run: target-row:number <- next-ingredient 
9999 mem: storing 2 in location 1187
 104 run: target-column:number <- next-ingredient 
9999 mem: storing 0 in location 1188
 104 run: jump-if editor, 1:offset
9999 mem: location 1186 is 1000
9999 run: jumping to instruction 7
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1186 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1152
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1186 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1189
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1186 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1152
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1186 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1190
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1185 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1169
 105 run: break-unless sc, 
9999 mem: location 1169 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1169 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1170
 105 run: reply height
9999 mem: location 1170 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1191
 104 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1186 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1152
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1186 is 1000
9999 run: address to copy is 1001
9999 run: its type is address
9999 mem: location 1001 is 1152
9999 mem: storing 1152 in location 1192
 104 run: prev:address:duplex-list <- copy curr
9999 mem: location 1192 is 1152
9999 mem: storing 1152 in location 1193
 104 run: curr <- next-duplex curr
9999 mem: location 1192 is 1152
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1152 in location 1169
 105 run: jump-if in, 1:offset
9999 mem: location 1169 is 1152
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1169 is 1152
9999 mem: location 1152 is 167
9999 mem: location 1153 is 1164
9999 mem: location 1154 is 0
9999 mem: location 1169 is 1152
9999 run: address to copy is 1153
9999 run: its type is address
9999 mem: location 1153 is 1164
9999 mem: storing 1164 in location 1170
 105 run: reply result
9999 mem: location 1170 is 1164
9999 run: result 0 is 1164
9999 mem: storing 1164 in location 1192
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1194
 104 run: column:number <- copy left
9999 mem: location 1189 is 0
9999 mem: storing 0 in location 1195
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1186 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1152
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1186 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1196
 104 run: *cursor-row <- copy target-row
9999 mem: location 1187 is 2
9999 mem: location 1196 is 1006
9999 mem: location 1196 is 1006
9999 mem: storing 2 in location 1006
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1186 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1152
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1186 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1197
 104 run: *cursor-column <- copy target-column
9999 mem: location 1188 is 0
9999 mem: location 1197 is 1007
9999 mem: location 1197 is 1007
9999 mem: storing 0 in location 1007
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1186 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1152
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1186 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1198
 104 run: break-unless curr, 
9999 mem: location 1192 is 1164
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1191 is 5
9999 mem: storing 0 in location 1199
 104 run: break-if off-screen?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1200
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1200 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1192 is 1164
9999 mem: location 1164 is 97
9999 mem: location 1165 is 1171
9999 mem: location 1166 is 1152
9999 mem: location 1192 is 1164
9999 run: address to copy is 1164
9999 run: its type is number
9999 mem: location 1164 is 97
9999 mem: storing 97 in location 1202
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 97
9999 mem: storing 0 in location 1203
 104 run: break-unless newline?, 
9999 mem: location 1203 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 0
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 104 run: break-unless at-right?, 
9999 mem: location 1205 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1192 is 1164
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1164 in location 1169
 105 run: jump-if in, 1:offset
9999 mem: location 1169 is 1164
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1169 is 1164
9999 mem: location 1164 is 97
9999 mem: location 1165 is 1171
9999 mem: location 1166 is 1152
9999 mem: location 1169 is 1164
9999 run: address to copy is 1165
9999 run: its type is address
9999 mem: location 1165 is 1171
9999 mem: storing 1171 in location 1170
 105 run: reply result
9999 mem: location 1170 is 1171
9999 run: result 0 is 1171
9999 mem: storing 1171 in location 1192
 104 run: prev <- next-duplex prev
9999 mem: location 1193 is 1152
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1152 in location 1169
 105 run: jump-if in, 1:offset
9999 mem: location 1169 is 1152
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1169 is 1152
9999 mem: location 1152 is 167
9999 mem: location 1153 is 1164
9999 mem: location 1154 is 0
9999 mem: location 1169 is 1152
9999 run: address to copy is 1153
9999 run: its type is address
9999 mem: location 1153 is 1164
9999 mem: storing 1164 in location 1170
 105 run: reply result
9999 mem: location 1170 is 1164
9999 run: result 0 is 1164
9999 mem: storing 1164 in location 1193
 104 run: column <- add column, 1
9999 mem: location 1195 is 0
9999 mem: storing 1 in location 1195
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1192 is 1171
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1191 is 5
9999 mem: storing 0 in location 1199
 104 run: break-if off-screen?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1200
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1200 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1192 is 1171
9999 mem: location 1171 is 98
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1164
9999 mem: location 1192 is 1171
9999 run: address to copy is 1171
9999 run: its type is number
9999 mem: location 1171 is 98
9999 mem: storing 98 in location 1202
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 98
9999 mem: storing 0 in location 1203
 104 run: break-unless newline?, 
9999 mem: location 1203 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 1
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 104 run: break-unless at-right?, 
9999 mem: location 1205 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1192 is 1171
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1171 in location 1169
schedule: next-duplex/snap-cursor/move-cursor-in-editor/editor-event-loop/run1001/scenario-editor-moves-cursor-to-previous-line-with-left-arrow-at-start-of-line
 105 run: jump-if in, 1:offset
9999 mem: location 1169 is 1171
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1169 is 1171
9999 mem: location 1171 is 98
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1164
9999 mem: location 1169 is 1171
9999 run: address to copy is 1172
9999 run: its type is address
9999 mem: location 1172 is 1174
9999 mem: storing 1174 in location 1170
 105 run: reply result
9999 mem: location 1170 is 1174
9999 run: result 0 is 1174
9999 mem: storing 1174 in location 1192
 104 run: prev <- next-duplex prev
9999 mem: location 1193 is 1164
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1164 in location 1169
 105 run: jump-if in, 1:offset
9999 mem: location 1169 is 1164
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1169 is 1164
9999 mem: location 1164 is 97
9999 mem: location 1165 is 1171
9999 mem: location 1166 is 1152
9999 mem: location 1169 is 1164
9999 run: address to copy is 1165
9999 run: its type is address
9999 mem: location 1165 is 1171
9999 mem: storing 1171 in location 1170
 105 run: reply result
9999 mem: location 1170 is 1171
9999 run: result 0 is 1171
9999 mem: storing 1171 in location 1193
 104 run: column <- add column, 1
9999 mem: location 1195 is 1
9999 mem: storing 2 in location 1195
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1192 is 1174
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1191 is 5
9999 mem: storing 0 in location 1199
 104 run: break-if off-screen?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1200
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1200 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1192 is 1174
9999 mem: location 1174 is 99
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1192 is 1174
9999 run: address to copy is 1174
9999 run: its type is number
9999 mem: location 1174 is 99
9999 mem: storing 99 in location 1202
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 99
9999 mem: storing 0 in location 1203
 104 run: break-unless newline?, 
9999 mem: location 1203 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 2
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 104 run: break-unless at-right?, 
9999 mem: location 1205 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1192 is 1174
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1169
 105 run: jump-if in, 1:offset
9999 mem: location 1169 is 1174
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1169 is 1174
9999 mem: location 1174 is 99
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1169 is 1174
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1177
9999 mem: storing 1177 in location 1170
 105 run: reply result
9999 mem: location 1170 is 1177
9999 run: result 0 is 1177
9999 mem: storing 1177 in location 1192
 104 run: prev <- next-duplex prev
9999 mem: location 1193 is 1171
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1171 in location 1169
 105 run: jump-if in, 1:offset
9999 mem: location 1169 is 1171
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1169 is 1171
9999 mem: location 1171 is 98
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1164
9999 mem: location 1169 is 1171
9999 run: address to copy is 1172
9999 run: its type is address
9999 mem: location 1172 is 1174
9999 mem: storing 1174 in location 1170
 105 run: reply result
9999 mem: location 1170 is 1174
9999 run: result 0 is 1174
9999 mem: storing 1174 in location 1193
 104 run: column <- add column, 1
9999 mem: location 1195 is 2
9999 mem: storing 3 in location 1195
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1192 is 1177
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 1
9999 mem: location 1191 is 5
9999 mem: storing 0 in location 1199
 104 run: break-if off-screen?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1200
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1200 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1192 is 1177
9999 mem: location 1177 is 10
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1192 is 1177
9999 run: address to copy is 1177
9999 run: its type is number
9999 mem: location 1177 is 10
9999 mem: storing 10 in location 1202
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1203
 104 run: break-unless newline?, 
9999 mem: location 1203 is 1
9999 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1200
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1200 is 0
9999 run: jumping to instruction 43
 104 run: row <- add row, 1
9999 mem: location 1194 is 1
9999 mem: storing 2 in location 1194
 104 run: column <- copy left
9999 mem: location 1189 is 0
9999 mem: storing 0 in location 1195
 104 run: curr <- next-duplex curr
9999 mem: location 1192 is 1177
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1169
 105 run: jump-if in, 1:offset
9999 mem: location 1169 is 1177
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1169 is 1177
9999 mem: location 1177 is 10
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1169 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1180
9999 mem: storing 1180 in location 1170
 105 run: reply result
9999 mem: location 1170 is 1180
9999 run: result 0 is 1180
9999 mem: storing 1180 in location 1192
 104 run: prev <- next-duplex prev
9999 mem: location 1193 is 1174
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1169
 105 run: jump-if in, 1:offset
9999 mem: location 1169 is 1174
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1169 is 1174
9999 mem: location 1174 is 99
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1169 is 1174
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1177
9999 mem: storing 1177 in location 1170
 105 run: reply result
9999 mem: location 1170 is 1177
9999 run: result 0 is 1177
9999 mem: storing 1177 in location 1193
 104 run: loop +next-character:label
9999 run: jumping to instruction 22
 104 run: break-unless curr, 
9999 mem: location 1192 is 1180
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1194 is 2
9999 mem: location 1191 is 5
9999 mem: storing 0 in location 1199
 104 run: break-if off-screen?, 
9999 mem: location 1199 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 2
9999 mem: location 1196 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 1 in location 1200
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1200 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1195 is 0
9999 mem: location 1197 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 1 in location 1201
 104 run: break-unless at-cursor?, 
9999 mem: location 1201 is 1
9999 run: jump-unless fell through
 104 run: *before-cursor <- copy prev
9999 mem: location 1193 is 1177
9999 mem: location 1198 is 1003
9999 mem: location 1198 is 1003
9999 mem: storing 1177 in location 1003
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1192 is 1180
9999 mem: location 1180 is 100
9999 mem: location 1181 is 0
9999 mem: location 1182 is 1177
9999 mem: location 1192 is 1180
9999 run: address to copy is 1180
9999 run: its type is number
9999 mem: location 1180 is 100
9999 mem: storing 100 in location 1202
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1202 is 100
9999 mem: storing 0 in location 1203
 104 run: break-unless newline?, 
9999 mem: location 1203 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1195 is 0
9999 mem: location 1190 is 9
9999 mem: storing 0 in location 1205
 104 run: break-unless at-right?, 
9999 mem: location 1205 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1192 is 1180
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1169
 105 run: jump-if in, 1:offset
9999 mem: location 1169 is 1180
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1169 is 1180
9999 mem: location 1180 is 100
9999 mem: location 1181 is 0
9999 mem: location 1182 is 1177
9999 mem: location 1169 is 1180
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 0
9999 mem: storing 0 in location 1170
 105 run: reply result
9999 mem: location 1170 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1192
 104 run: prev <- next-duplex prev
9999 mem: location 1193 is 1177
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1169
 105 run: jump-if in, 1:offset
9999 mem: location 1169 is 1177
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1169 is 1177
9999 mem: location 1177 is 10
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1169 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1180
9999 mem: storing 1180 in location 1170
 105 run: reply result
9999 mem: location 1170 is 1180
9999 run: result 0 is 1180
9999 mem: storing 1180 in location 1193
 104 run: column <- add column, 1
9999 mem: location 1195 is 0
9999 mem: storing 1 in location 1195
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 61
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1194 is 2
9999 mem: location 1196 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 1 in location 1200
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1195 is 1
9999 mem: location 1197 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1206
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1200 is 1
9999 mem: location 1206 is 0
9999 mem: storing 0 in location 1207
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1194 is 2
9999 mem: location 1196 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1208
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1207 is 0
9999 mem: location 1208 is 0
9999 mem: storing 0 in location 1209
 104 run: break-unless before-cursor?, 
9999 mem: location 1209 is 0
9999 run: jumping to instruction 72
 104 run: reply editor/same-as-ingredient:1
9999 mem: location 1186 is 1000
9999 run: result 0 is 1000
9999 mem: storing 1000 in location 1291
 103 run: reply 1/true
 102 run: loop +next-event:label
9999 run: jumping to instruction 6
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1252 is 1286
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1286 in location 1290
 103 run: break-unless x, 
9999 mem: location 1290 is 1286
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1290 is 1286
9999 mem: location 1286 is 1
9999 mem: location 1287 is 1277
9999 mem: location 1290 is 1286
9999 run: address to copy is 1286
9999 mem: storing 1286 in location 1291
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1290 is 1286
9999 mem: location 1286 is 1
9999 mem: location 1287 is 1277
9999 mem: location 1290 is 1286
9999 run: address to copy is 1287
9999 run: its type is address
9999 mem: location 1287 is 1277
9999 mem: storing 1277 in location 1292
 103 run: max:number <- length *buf
9999 mem: location 1292 is 1277
9999 mem: storing 2 in location 1293
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1291 is 1286
9999 mem: location 1286 is 1
9999 mem: location 1293 is 2
9999 mem: storing 0 in location 1294
 103 run: break-unless done?, 
9999 mem: location 1294 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1292 is 1277
9999 mem: location 1291 is 1286
9999 mem: location 1286 is 1
9999 run: address to copy is 1282
9999 run: its type is event
9999 mem: location 1282 is 1
9999 mem: location 1283 is 65515
9999 mem: location 1284 is 0
9999 mem: location 1285 is 0
9999 mem: storing 1 in location 1296
9999 mem: storing 65515 in location 1297
9999 mem: storing 0 in location 1298
9999 mem: storing 0 in location 1299
 103 run: *idx <- add *idx, 1
9999 mem: location 1291 is 1286
9999 mem: location 1286 is 1
9999 mem: location 1291 is 1286
9999 mem: storing 2 in location 1286
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1296 is 1
9999 mem: location 1297 is 65515
9999 mem: location 1298 is 0
9999 mem: location 1299 is 0
9999 mem: location 1290 is 1286
9999 run: result 0 is [1, 65515, 0, 0]
9999 run: result 1 is 1286
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1254
9999 mem: storing 65515 in location 1255
9999 mem: storing 0 in location 1256
9999 mem: storing 0 in location 1257
9999 mem: storing 1286 in location 1252
9999 mem: storing 1 in location 1258
9999 mem: storing 0 in location 1259
 102 run: loop-unless found?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1259 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1254 is 1
9999 mem: location 1255 is 65515
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
9999 mem: storing 0 in location 1260
 102 run: break-unless t, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 15
 102 run: break-if t, 
9999 mem: location 1260 is 0
9999 run: jump-if fell through
 102 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1251 is 1009
9999 mem: location 1253 is 1000
9999 mem: location 1254 is 1
9999 mem: location 1255 is 65515
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 68
9999 mem: new alloc: 1301
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1303
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1304
 103 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1305
9999 mem: storing 65515 in location 1306
9999 mem: storing 0 in location 1307
9999 mem: storing 0 in location 1308
 103 run: jump-if editor, 1:offset
9999 mem: location 1304 is 1000
9999 run: jumping to instruction 6
 103 run: screen-width:number <- screen-width screen
9999 mem: location 1303 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1169
 104 run: break-unless sc, 
9999 mem: location 1169 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1169 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1170
 104 run: reply width
9999 mem: location 1170 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1309
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1303 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1169
 104 run: break-unless sc, 
9999 mem: location 1169 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1169 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1170
 104 run: reply height
9999 mem: location 1170 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1310
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1304 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1177
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1304 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1311
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1304 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1177
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1304 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1312
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1304 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1177
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1304 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1313
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1304 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1177
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1304 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1314
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1304 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1177
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1304 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1315
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1314 is 1006
9999 mem: location 1006 is 2
9999 mem: location 1314 is 1006
9999 mem: location 1314 is 1006
9999 mem: storing 2 in location 1316
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1315 is 1007
9999 mem: location 1007 is 0
9999 mem: location 1315 is 1007
9999 mem: location 1315 is 1007
9999 mem: storing 0 in location 1317
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1305 is 1
9999 mem: location 1306 is 65515
9999 mem: location 1307 is 0
9999 mem: location 1308 is 0
9999 mem: storing 0 in location 1318
 103 run: break-unless c, 
9999 mem: location 1318 is 0
9999 run: jumping to instruction 75
 103 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1305 is 1
9999 mem: location 1306 is 65515
9999 mem: location 1307 is 0
9999 mem: location 1308 is 0
9999 mem: storing 1306 in location 1330
 103 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1330 is 1306
 103 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1330 is 1306
9999 mem: location 1306 is 65515
9999 mem: storing 0 in location 1331
 103 run: break-unless page-up?, 
9999 mem: location 1331 is 0
9999 run: jumping to instruction 84
 103 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1330 is 1306
9999 mem: location 1306 is 65515
9999 mem: storing 0 in location 1332
 103 run: break-unless page-down?, 
9999 mem: location 1332 is 0
9999 run: jumping to instruction 90
 103 run: end?:boolean <- equal *k, 65520/end
9999 mem: location 1330 is 1306
9999 mem: location 1306 is 65515
9999 mem: storing 0 in location 1333
 103 run: break-unless end?, 
9999 mem: location 1333 is 0
9999 run: jumping to instruction 96
 103 run: home?:boolean <- equal *k, 65521/home
9999 mem: location 1330 is 1306
9999 mem: location 1306 is 65515
9999 mem: storing 0 in location 1334
 103 run: break-unless home?, 
9999 mem: location 1334 is 0
9999 run: jumping to instruction 102
 103 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1330 is 1306
9999 mem: location 1306 is 65515
9999 mem: storing 0 in location 1335
 103 run: break-unless move-to-next-line?, 
9999 mem: location 1335 is 0
9999 run: jumping to instruction 145
 103 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1330 is 1306
9999 mem: location 1306 is 65515
9999 mem: storing 0 in location 1349
 103 run: break-unless move-to-previous-line?, 
9999 mem: location 1349 is 0
9999 run: jumping to instruction 188
 103 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1330 is 1306
9999 mem: location 1306 is 65515
9999 mem: storing 1 in location 1353
 103 run: break-unless move-to-previous-character?, 
9999 mem: location 1353 is 1
9999 run: jump-unless fell through
 103 run: prev:address:duplex-list <- prev-duplex *before-cursor
9999 mem: location 1313 is 1003
9999 mem: location 1003 is 1177
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1169
 104 run: jump-if in, 1:offset
9999 mem: location 1169 is 1177
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1169 is 1177
9999 mem: location 1177 is 10
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1169 is 1177
9999 run: address to copy is 1179
9999 run: its type is address
9999 mem: location 1179 is 1174
9999 mem: storing 1174 in location 1170
 104 run: reply result
9999 mem: location 1170 is 1174
9999 run: result 0 is 1174
9999 mem: storing 1174 in location 1351
 103 run: jump-if prev, 1:offset
9999 mem: location 1351 is 1174
9999 run: jumping to instruction 195
 103 run: editor, go-render? <- move-cursor-coordinates-left editor
9999 mem: location 1304 is 1000
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 15
9999 mem: new alloc: 1370
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1372
 104 run: before-cursor:address:duplex-list <- get *editor, before-cursor:offset
9999 mem: location 1372 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1177
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1372 is 1000
9999 run: address to copy is 1003
9999 run: its type is address
9999 mem: location 1003 is 1177
9999 mem: storing 1177 in location 1373
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1372 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1177
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1372 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1374
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1372 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1177
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1372 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1375
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1372 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1177
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1372 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1376
 104 run: at-left-margin?:boolean <- equal *cursor-column, left
9999 mem: location 1375 is 1007
9999 mem: location 1007 is 0
9999 mem: location 1376 is 0
9999 mem: storing 1 in location 1377
 104 run: break-if at-left-margin?, 
9999 mem: location 1377 is 1
9999 run: jumping to instruction 11
 104 run: top-of-screen?:boolean <- equal *cursor-row, 1
9999 mem: location 1374 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1378
 104 run: go-render?:boolean <- copy 0/false
9999 mem: storing 0 in location 1379
 104 run: break-if top-of-screen?, 
9999 mem: location 1378 is 0
9999 run: jump-if fell through
 104 run: *cursor-row <- subtract *cursor-row, 1
9999 mem: location 1374 is 1006
9999 mem: location 1006 is 2
9999 mem: location 1374 is 1006
9999 mem: storing 1 in location 1006
 104 run: break-unless top-of-screen?, 
9999 mem: location 1378 is 0
9999 run: jumping to instruction 24
 104 run: previous-character:character <- get *before-cursor, value:offset
9999 mem: location 1373 is 1177
9999 mem: location 1177 is 10
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1373 is 1177
9999 run: address to copy is 1177
9999 run: its type is number
9999 mem: location 1177 is 10
9999 mem: storing 10 in location 1381
 104 run: previous-character-is-newline?:boolean <- equal previous-character, 10/newline
9999 mem: location 1381 is 10
9999 mem: storing 1 in location 1382
 104 run: break-unless previous-character-is-newline?, 
9999 mem: location 1382 is 1
9999 run: jump-unless fell through
 104 run: d:address:duplex-list <- get *editor, data:offset
9999 mem: location 1372 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1177
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1372 is 1000
9999 run: address to copy is 1000
9999 run: its type is address
9999 mem: location 1000 is 1152
9999 mem: storing 1152 in location 1383
 104 run: end-of-line:number <- previous-line-length before-cursor, d
9999 mem: location 1373 is 1177
9999 mem: location 1383 is 1152
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: curr:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1146
 105 run: start:address:duplex-list <- next-ingredient 
9999 mem: storing 1152 in location 1147
 105 run: result:number <- copy 0
9999 mem: storing 0 in location 1148
 105 run: jump-if curr, 1:offset
9999 mem: location 1146 is 1177
9999 run: jumping to instruction 6
 105 run: at-start?:boolean <- equal curr, start
9999 mem: location 1146 is 1177
9999 mem: location 1147 is 1152
9999 mem: storing 0 in location 1149
 105 run: jump-unless at-start?, 1:offset
9999 mem: location 1149 is 0
9999 run: jumping to instruction 9
 105 run: curr <- prev-duplex curr
9999 mem: location 1146 is 1177
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1169
 106 run: jump-if in, 1:offset
9999 mem: location 1169 is 1177
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1169 is 1177
9999 mem: location 1177 is 10
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1169 is 1177
9999 run: address to copy is 1179
9999 run: its type is address
9999 mem: location 1179 is 1174
9999 mem: storing 1174 in location 1170
 106 run: reply result
9999 mem: location 1170 is 1174
9999 run: result 0 is 1174
9999 mem: storing 1174 in location 1146
 105 run: break-unless curr, 
9999 mem: location 1146 is 1174
9999 run: jump-unless fell through
 105 run: at-start?:boolean <- equal curr, start
9999 mem: location 1146 is 1174
9999 mem: location 1147 is 1152
9999 mem: storing 0 in location 1149
 105 run: break-if at-start?, 
9999 mem: location 1149 is 0
9999 run: jump-if fell through
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1146 is 1174
9999 mem: location 1174 is 99
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1146 is 1174
9999 run: address to copy is 1174
9999 run: its type is number
9999 mem: location 1174 is 99
9999 mem: storing 99 in location 1150
 105 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1150 is 99
9999 mem: storing 0 in location 1151
 105 run: break-if at-newline?, 
9999 mem: location 1151 is 0
9999 run: jump-if fell through
 105 run: result <- add result, 1
9999 mem: location 1148 is 0
9999 mem: storing 1 in location 1148
 105 run: loop 
9999 run: jumping to instruction 10
 105 run: curr <- prev-duplex curr
9999 mem: location 1146 is 1174
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1169
 106 run: jump-if in, 1:offset
9999 mem: location 1169 is 1174
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1169 is 1174
9999 mem: location 1174 is 99
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1169 is 1174
9999 run: address to copy is 1176
9999 run: its type is address
9999 mem: location 1176 is 1171
9999 mem: storing 1171 in location 1170
 106 run: reply result
9999 mem: location 1170 is 1171
9999 run: result 0 is 1171
9999 mem: storing 1171 in location 1146
 105 run: break-unless curr, 
9999 mem: location 1146 is 1171
9999 run: jump-unless fell through
 105 run: at-start?:boolean <- equal curr, start
9999 mem: location 1146 is 1171
9999 mem: location 1147 is 1152
9999 mem: storing 0 in location 1149
 105 run: break-if at-start?, 
9999 mem: location 1149 is 0
9999 run: jump-if fell through
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1146 is 1171
9999 mem: location 1171 is 98
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1164
9999 mem: location 1146 is 1171
9999 run: address to copy is 1171
9999 run: its type is number
9999 mem: location 1171 is 98
9999 mem: storing 98 in location 1150
 105 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1150 is 98
9999 mem: storing 0 in location 1151
 105 run: break-if at-newline?, 
9999 mem: location 1151 is 0
9999 run: jump-if fell through
 105 run: result <- add result, 1
9999 mem: location 1148 is 1
9999 mem: storing 2 in location 1148
 105 run: loop 
9999 run: jumping to instruction 10
 105 run: curr <- prev-duplex curr
9999 mem: location 1146 is 1171
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1171 in location 1169
 106 run: jump-if in, 1:offset
9999 mem: location 1169 is 1171
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1169 is 1171
9999 mem: location 1171 is 98
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1164
9999 mem: location 1169 is 1171
9999 run: address to copy is 1173
9999 run: its type is address
9999 mem: location 1173 is 1164
9999 mem: storing 1164 in location 1170
 106 run: reply result
9999 mem: location 1170 is 1164
9999 run: result 0 is 1164
9999 mem: storing 1164 in location 1146
 105 run: break-unless curr, 
9999 mem: location 1146 is 1164
9999 run: jump-unless fell through
 105 run: at-start?:boolean <- equal curr, start
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1152
9999 mem: storing 0 in location 1149
 105 run: break-if at-start?, 
9999 mem: location 1149 is 0
9999 run: jump-if fell through
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1146 is 1164
9999 mem: location 1164 is 97
9999 mem: location 1165 is 1171
9999 mem: location 1166 is 1152
9999 mem: location 1146 is 1164
9999 run: address to copy is 1164
9999 run: its type is number
9999 mem: location 1164 is 97
9999 mem: storing 97 in location 1150
 105 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1150 is 97
9999 mem: storing 0 in location 1151
 105 run: break-if at-newline?, 
9999 mem: location 1151 is 0
9999 run: jump-if fell through
 105 run: result <- add result, 1
9999 mem: location 1148 is 2
9999 mem: storing 3 in location 1148
 105 run: loop 
9999 run: jumping to instruction 10
 105 run: curr <- prev-duplex curr
9999 mem: location 1146 is 1164
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1164 in location 1169
 106 run: jump-if in, 1:offset
9999 mem: location 1169 is 1164
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1169 is 1164
9999 mem: location 1164 is 97
9999 mem: location 1165 is 1171
9999 mem: location 1166 is 1152
9999 mem: location 1169 is 1164
9999 run: address to copy is 1166
9999 run: its type is address
9999 mem: location 1166 is 1152
9999 mem: storing 1152 in location 1170
 106 run: reply result
9999 mem: location 1170 is 1152
9999 run: result 0 is 1152
9999 mem: storing 1152 in location 1146
 105 run: break-unless curr, 
9999 mem: location 1146 is 1152
9999 run: jump-unless fell through
 105 run: at-start?:boolean <- equal curr, start
9999 mem: location 1146 is 1152
9999 mem: location 1147 is 1152
9999 mem: storing 1 in location 1149
 105 run: break-if at-start?, 
9999 mem: location 1149 is 1
9999 run: jumping to instruction 19
 105 run: reply result
9999 mem: location 1148 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1384
 104 run: *cursor-column <- add left, end-of-line
9999 mem: location 1376 is 0
9999 mem: location 1384 is 3
9999 mem: location 1375 is 1007
9999 mem: storing 3 in location 1007
 104 run: reply editor/same-as-ingredient:0, go-render?
9999 mem: location 1372 is 1000
9999 mem: location 1379 is 0
9999 run: result 0 is 1000
9999 run: result 1 is 0
9999 mem: storing 1000 in location 1304
9999 mem: storing 0 in location 1326
 103 run: *before-cursor <- copy prev
9999 mem: location 1351 is 1174
9999 mem: location 1313 is 1003
9999 mem: location 1313 is 1003
9999 mem: storing 1174 in location 1003
 103 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1303 is 1009
9999 mem: location 1304 is 1000
9999 mem: location 1326 is 0
9999 run: result 0 is 1009
9999 run: result 1 is 1000
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1251
9999 mem: storing 1000 in location 1253
9999 mem: storing 0 in location 1261
 102 run: break-unless go-render?, 
9999 mem: location 1261 is 0
9999 run: jumping to instruction 22
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1252 is 1286
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1286 in location 1290
 103 run: break-unless x, 
9999 mem: location 1290 is 1286
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1290 is 1286
9999 mem: location 1286 is 2
9999 mem: location 1287 is 1277
9999 mem: location 1290 is 1286
9999 run: address to copy is 1286
9999 mem: storing 1286 in location 1291
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1290 is 1286
9999 mem: location 1286 is 2
9999 mem: location 1287 is 1277
9999 mem: location 1290 is 1286
9999 run: address to copy is 1287
9999 run: its type is address
9999 mem: location 1287 is 1277
9999 mem: storing 1277 in location 1292
 103 run: max:number <- length *buf
9999 mem: location 1292 is 1277
9999 mem: storing 2 in location 1293
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1291 is 1286
9999 mem: location 1286 is 2
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 103 run: break-unless done?, 
9999 mem: location 1294 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: storing 1167 in location 1295
 103 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1295 is 1167
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1290 is 1286
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1286
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1254
9999 mem: storing 0 in location 1255
9999 mem: storing 0 in location 1256
9999 mem: storing 0 in location 1257
9999 mem: storing 1286 in location 1252
9999 mem: storing 1 in location 1258
9999 mem: storing 1 in location 1259
 102 run: loop-unless found?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1259 is 1
9999 run: jumping to instruction 25
 101 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1174
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 2 is 1000
9999 run: address to copy is 1006
9999 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 3
 101 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1174
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 2 is 1000
9999 run: address to copy is 1007
9999 run: its type is number
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 4
 100 run: memory-should-contain [
    3 <- 1
    4 <- 3
  ]
9999 run: checking location 3
9999 run: checking location 4
 100 run: check-trace-count-for-label 0, [print-character]
