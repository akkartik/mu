 102 run: assume-console [
    left-click 2, 0
    press left-arrow
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": "literal"}
9993 parse:   ingredient: {"0": "literal"}
9992 load: after rewriting: left-click 2, 0
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"left-arrow": <>}
9992 load: after rewriting: press left-arrow
 102 run: run [
    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
    3:number <- get *2:address:editor-data, cursor-row:offset
    4:number <- get *2:address:editor-data, cursor-column:offset
  ]
9991 parse: --- defining run1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"screen" : <>>>}
9993 parse:   ingredient: {"console": <"address" : <"console" : <>>>}
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>}
9992 load: after rewriting: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 parse: recipe run1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1001
9991 transform: --- deduce types for recipe run1001
9992 transform: screen => <address : <screen : <>>>
9992 transform: console => <address : <console : <>>>
9991 transform: --- resolve ambiguous calls for recipe run1001
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 1000
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 1000
9991 transform: --- compute instruction operations for recipe run1001
9991 transform: --- transform braces for recipe run1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- collect surrounding spaces for recipe run1001
9991 transform: --- transform names for recipe run1001
9993 name: element cursor-row of type editor-data is at offset 6
9993 name: element cursor-column of type editor-data is at offset 7
9991 transform: --- perform checks for recipe run1001
9991 transform: --- convert 'new' to 'allocate' for recipe run1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9999 mem: location 900 is 1011
9999 mem: location 901 is 1288
9999 mem: location 2 is 1000
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1290
 104 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1011 in location 1292
 104 run: console:address:console <- next-ingredient 
9999 mem: storing 1288 in location 1293
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1294
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1294 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1294 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1295
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1294 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1294 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1296
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1292 is 1011
9999 mem: location 1295 is 1
9999 mem: location 1296 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1011 in location 1214
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1215
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1216
 105 run: jump-unless screen, 
9999 mem: location 1214 is 1011
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 5
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1214 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1217
 105 run: *row <- copy new-row
9999 mem: location 1215 is 1
9999 mem: location 1217 is 1013
9999 mem: storing 1 in location 1013
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1214 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1218
 105 run: *column <- copy new-column
9999 mem: location 1216 is 0
9999 mem: location 1218 is 1014
9999 mem: storing 0 in location 1014
 105 run: reply screen:address:screen
9999 mem: location 1214 is 1011
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1292
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1293 is 1288
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: console:address:console <- next-ingredient 
9999 mem: storing 1288 in location 1253
 105 run: jump-unless console, 
9999 mem: location 1253 is 1288
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *console, index:offset
9999 mem: location 1253 is 1288
9999 mem: location 1288 is 0
9999 mem: location 1289 is 1279
9999 mem: location 1253 is 1288
9998 run: address to copy is 1288
9999 mem: storing 1288 in location 1254
 105 run: buf:address:array:event <- get *console, data:offset
9999 mem: location 1253 is 1288
9999 mem: location 1288 is 0
9999 mem: location 1289 is 1279
9999 mem: location 1253 is 1288
9998 run: address to copy is 1289
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1289 is 1279
9999 mem: storing 1279 in location 1255
 105 run: max:number <- length *buf
9999 mem: location 1255 is 1279
9999 mem: storing 2 in location 1256
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1254 is 1288
9999 mem: location 1288 is 0
9999 mem: location 1256 is 2
9999 mem: storing 0 in location 1257
 105 run: jump-unless done?, 
9999 mem: location 1257 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *idx
9999 mem: location 1255 is 1279
9999 mem: location 1254 is 1288
9999 mem: location 1288 is 0
9998 run: address to copy is 1280
9998 run: its type is event
9999 mem: location 1280 is 2
9999 mem: location 1281 is 65513
9999 mem: location 1282 is 2
9999 mem: location 1283 is 0
9999 mem: storing 2 in location 1259
9999 mem: storing 65513 in location 1260
9999 mem: storing 2 in location 1261
9999 mem: storing 0 in location 1262
 105 run: *idx <- add *idx, 1
9999 mem: location 1254 is 1288
9999 mem: location 1288 is 0
9999 mem: location 1254 is 1288
9999 mem: storing 1 in location 1288
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1259 is 2
9999 mem: location 1260 is 65513
9999 mem: location 1261 is 2
9999 mem: location 1262 is 0
9999 mem: location 1253 is 1288
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 2, 0]
9998 run: result 1 is 1288
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1297
9999 mem: storing 65513 in location 1298
9999 mem: storing 2 in location 1299
9999 mem: storing 0 in location 1300
9999 mem: storing 1288 in location 1293
9999 mem: storing 1 in location 1301
9999 mem: storing 0 in location 1302
 104 run: jump-unless found?, 
9999 mem: location 1301 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1302 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1297 is 2
9999 mem: location 1298 is 65513
9999 mem: location 1299 is 2
9999 mem: location 1300 is 0
9999 mem: storing 1298 in location 1303
 104 run: jump-unless t, 
9999 mem: location 1303 is 1298
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1292 is 1011
9999 mem: location 1294 is 1000
9999 mem: location 1303 is 1298
9999 mem: location 1298 is 65513
9999 mem: location 1299 is 2
9999 mem: location 1300 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: new alloc: 1305
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1011 in location 1307
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1308
 105 run: t:touch-event <- next-ingredient 
9999 mem: storing 65513 in location 1309
9999 mem: storing 2 in location 1310
9999 mem: storing 0 in location 1311
 105 run: jump-if editor, 1:offset
9999 mem: location 1308 is 1000
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1309 is 65513
9999 mem: location 1310 is 2
9999 mem: location 1311 is 0
9998 run: address to copy is 1310
9998 run: its type is number
9999 mem: location 1310 is 2
9999 mem: storing 2 in location 1312
 105 run: jump-if click-row, 1:offset
9999 mem: location 1312 is 2
9998 run: jumping to instruction 9
 105 run: click-column:number <- get t, column:offset
9999 mem: location 1309 is 65513
9999 mem: location 1310 is 2
9999 mem: location 1311 is 0
9998 run: address to copy is 1311
9998 run: its type is number
9999 mem: location 1311 is 0
9999 mem: storing 0 in location 1313
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1308 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1308 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1314
 105 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1313 is 0
9999 mem: location 1314 is 0
9999 mem: storing 0 in location 1315
 105 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1315 is 0
9998 run: jumping to instruction 14
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1308 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1308 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1316
 105 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1313 is 0
9999 mem: location 1316 is 9
9999 mem: storing 0 in location 1317
 105 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1317 is 0
9998 run: jumping to instruction 18
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1308 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1308 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1318
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1308 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1308 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1319
 105 run: before-top-of-screen:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1308 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1308 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1001 is 1154
9999 mem: storing 1154 in location 1320
 105 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1307 is 1011
9999 mem: location 1308 is 1000
9999 mem: location 1312 is 2
9999 mem: location 1313 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1011 in location 1187
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1188
 106 run: target-row:number <- next-ingredient 
9999 mem: storing 2 in location 1189
 106 run: target-column:number <- next-ingredient 
9999 mem: storing 0 in location 1190
 106 run: jump-if editor, 1:offset
9999 mem: location 1188 is 1000
9998 run: jumping to instruction 7
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1188 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1188 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1191
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1188 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1188 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1192
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1187 is 1011
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1011 in location 1171
 107 run: jump-unless screen, 
9999 mem: location 1171 is 1011
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1171 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1171 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1172
 107 run: reply height:number
9999 mem: location 1172 is 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1193
 106 run: curr:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1188 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1188 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1001 is 1154
9999 mem: storing 1154 in location 1194
 106 run: prev:address:duplex-list:character <- copy curr
9999 mem: location 1194 is 1154
9999 mem: storing 1154 in location 1195
 106 run: curr <- next_2 curr
9999 mem: location 1194 is 1154
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1154 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1154
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1154
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 167
9999 mem: location 1155 is 1166
9999 mem: location 1156 is 0
9999 mem: location 1171 is 1154
9999 type: type deduced to be character$
9998 run: address to copy is 1155
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1155 is 1166
9999 mem: storing 1166 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1166
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1166
9999 mem: storing 1166 in location 1194
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1196
 106 run: column:number <- copy left
9999 mem: location 1191 is 0
9999 mem: storing 0 in location 1197
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1188 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1188 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1198
 106 run: *cursor-row <- copy target-row
9999 mem: location 1189 is 2
9999 mem: location 1198 is 1006
9999 mem: storing 2 in location 1006
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1188 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1188 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1199
 106 run: *cursor-column <- copy target-column
9999 mem: location 1190 is 0
9999 mem: location 1199 is 1007
9999 mem: storing 0 in location 1007
 106 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1188 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1188 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1200
 106 run: jump-unless curr, 
9999 mem: location 1194 is 1166
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1196 is 1
9999 mem: location 1193 is 5
9999 mem: storing 0 in location 1201
 106 run: jump-if off-screen?, 
9999 mem: location 1201 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1196 is 1
9999 mem: location 1198 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1202
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1202 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1194 is 1166
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 97
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1154
9999 mem: location 1194 is 1166
9998 run: address to copy is 1166
9998 run: its type is character
9999 mem: location 1166 is 97
9999 mem: storing 97 in location 1204
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1204 is 97
9999 mem: storing 0 in location 1205
 106 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1197 is 0
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1207
 106 run: jump-unless at-right?, 
9999 mem: location 1207 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1194 is 1166
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1166 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1166
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1166
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 97
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1154
9999 mem: location 1171 is 1166
9999 type: type deduced to be character$
9998 run: address to copy is 1167
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1167 is 1173
9999 mem: storing 1173 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1173
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1173
9999 mem: storing 1173 in location 1194
 106 run: prev <- next_2 prev
9999 mem: location 1195 is 1154
9999 trace: incrementing callstack depth to 6
9990 schedule: next_2/snap-cursor/move-cursor-in-editor/editor-event-loop/run1001/scenario-editor-moves-cursor-to-previous-line-with-left-arrow-at-start-of-line
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1154 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1154
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1154
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 167
9999 mem: location 1155 is 1166
9999 mem: location 1156 is 0
9999 mem: location 1171 is 1154
9999 type: type deduced to be character$
9998 run: address to copy is 1155
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1155 is 1166
9999 mem: storing 1166 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1166
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1166
9999 mem: storing 1166 in location 1195
 106 run: column <- add column, 1
9999 mem: location 1197 is 0
9999 mem: storing 1 in location 1197
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1194 is 1173
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1196 is 1
9999 mem: location 1193 is 5
9999 mem: storing 0 in location 1201
 106 run: jump-if off-screen?, 
9999 mem: location 1201 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1196 is 1
9999 mem: location 1198 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1202
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1202 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1194 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 98
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1194 is 1173
9998 run: address to copy is 1173
9998 run: its type is character
9999 mem: location 1173 is 98
9999 mem: storing 98 in location 1204
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1204 is 98
9999 mem: storing 0 in location 1205
 106 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1197 is 1
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1207
 106 run: jump-unless at-right?, 
9999 mem: location 1207 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1194 is 1173
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1173 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1173
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 98
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1171 is 1173
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1176
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1176
9999 mem: storing 1176 in location 1194
 106 run: prev <- next_2 prev
9999 mem: location 1195 is 1166
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1166 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1166
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1166
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 97
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1154
9999 mem: location 1171 is 1166
9999 type: type deduced to be character$
9998 run: address to copy is 1167
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1167 is 1173
9999 mem: storing 1173 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1173
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1173
9999 mem: storing 1173 in location 1195
 106 run: column <- add column, 1
9999 mem: location 1197 is 1
9999 mem: storing 2 in location 1197
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1194 is 1176
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1196 is 1
9999 mem: location 1193 is 5
9999 mem: storing 0 in location 1201
 106 run: jump-if off-screen?, 
9999 mem: location 1201 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1196 is 1
9999 mem: location 1198 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1202
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1202 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1194 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 99
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1194 is 1176
9998 run: address to copy is 1176
9998 run: its type is character
9999 mem: location 1176 is 99
9999 mem: storing 99 in location 1204
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1204 is 99
9999 mem: storing 0 in location 1205
 106 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1197 is 2
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1207
 106 run: jump-unless at-right?, 
9999 mem: location 1207 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1194 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1176 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 99
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1171 is 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1179
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1179
9999 mem: storing 1179 in location 1194
 106 run: prev <- next_2 prev
9999 mem: location 1195 is 1173
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1173 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1173
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 98
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1171 is 1173
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1176
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1176
9999 mem: storing 1176 in location 1195
 106 run: column <- add column, 1
9999 mem: location 1197 is 2
9999 mem: storing 3 in location 1197
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1194 is 1179
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1196 is 1
9999 mem: location 1193 is 5
9999 mem: storing 0 in location 1201
 106 run: jump-if off-screen?, 
9999 mem: location 1201 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1196 is 1
9999 mem: location 1198 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1202
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1202 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1194 is 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1179 is 10
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1194 is 1179
9998 run: address to copy is 1179
9998 run: its type is character
9999 mem: location 1179 is 10
9999 mem: storing 10 in location 1204
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1204 is 10
9999 mem: storing 1 in location 1205
 106 run: jump-unless newline?, 
9999 mem: location 1205 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1196 is 1
9999 mem: location 1198 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1202
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1202 is 0
9998 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1196 is 1
9999 mem: storing 2 in location 1196
 106 run: column <- copy left
9999 mem: location 1191 is 0
9999 mem: storing 0 in location 1197
 106 run: curr <- next_2 curr
9999 mem: location 1194 is 1179
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1179 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1179
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1179 is 10
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1171 is 1179
9999 type: type deduced to be character$
9998 run: address to copy is 1180
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1180 is 1182
9999 mem: storing 1182 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1182
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1182
9999 mem: storing 1182 in location 1194
 106 run: prev <- next_2 prev
9999 mem: location 1195 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1176 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 99
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1171 is 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1179
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1179
9999 mem: storing 1179 in location 1195
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1194 is 1182
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1196 is 2
9999 mem: location 1193 is 5
9999 mem: storing 0 in location 1201
 106 run: jump-if off-screen?, 
9999 mem: location 1201 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1196 is 2
9999 mem: location 1198 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 1 in location 1202
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1202 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1197 is 0
9999 mem: location 1199 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 1 in location 1203
 106 run: jump-unless at-cursor?, 
9999 mem: location 1203 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1195 is 1179
9999 mem: location 1200 is 1003
9999 mem: storing 1179 in location 1003
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1194 is 1182
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1182 is 100
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1179
9999 mem: location 1194 is 1182
9998 run: address to copy is 1182
9998 run: its type is character
9999 mem: location 1182 is 100
9999 mem: storing 100 in location 1204
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1204 is 100
9999 mem: storing 0 in location 1205
 106 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1197 is 0
9999 mem: location 1192 is 9
9999 mem: storing 0 in location 1207
 106 run: jump-unless at-right?, 
9999 mem: location 1207 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1194 is 1182
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1182 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1182
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1182
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1182 is 100
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1179
9999 mem: location 1171 is 1182
9999 type: type deduced to be character$
9998 run: address to copy is 1183
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1183 is 0
9999 mem: storing 0 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 0
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 106 run: prev <- next_2 prev
9999 mem: location 1195 is 1179
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1179 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1179
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1179 is 10
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1171 is 1179
9999 type: type deduced to be character$
9998 run: address to copy is 1180
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1180 is 1182
9999 mem: storing 1182 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1182
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1182
9999 mem: storing 1182 in location 1195
 106 run: column <- add column, 1
9999 mem: location 1197 is 0
9999 mem: storing 1 in location 1197
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 61
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1196 is 2
9999 mem: location 1198 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 1 in location 1202
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1197 is 1
9999 mem: location 1199 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1208
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1202 is 1
9999 mem: location 1208 is 0
9999 mem: storing 0 in location 1209
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1196 is 2
9999 mem: location 1198 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1210
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1209 is 0
9999 mem: location 1210 is 0
9999 mem: storing 0 in location 1211
 106 run: jump-unless before-cursor?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 72
 106 run: reply editor:address:editor-data
9999 mem: location 1188 is 1000
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1308
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1321
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1308 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1179
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1308 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 2
9999 mem: storing 2 in location 1322
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1308 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1179
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1308 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1323
 105 run: after-top-of-screen:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1308 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1179
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1308 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1001 is 1154
9999 mem: storing 1154 in location 1324
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1321 is 0
9998 run: jumping to instruction 44
 105 run: op:address:operation <- new operation:type
9999 mem: storing 1117 in location 1326
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1318 is 1
9999 mem: location 1319 is 0
9999 mem: location 1320 is 1154
9999 mem: location 1322 is 2
9999 mem: location 1323 is 0
9999 mem: location 1324 is 1154
9999 mem: location 1321 is 0
9999 mem: location 1326 is 1117
9999 mem: location 1326 is 1117
9999 mem: storing 1 in location 1117
9999 mem: storing 1 in location 1118
9999 mem: storing 0 in location 1119
9999 mem: storing 1154 in location 1120
9999 mem: storing 2 in location 1121
9999 mem: storing 0 in location 1122
9999 mem: storing 1154 in location 1123
9999 mem: storing 0 in location 1124
 105 run: editor <- add-operation editor, op
9999 mem: location 1308 is 1000
9999 mem: location 1326 is 1117
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1247
 106 run: op:address:operation <- next-ingredient 
9999 mem: storing 1117 in location 1248
 106 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1247 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1179
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1247 is 1000
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1249
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1248 is 1117
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:_elem <- next-ingredient 
9999 mem: storing 1117 in location 1214
 107 run: in:address:list:_elem <- next-ingredient 
9999 mem: storing 0 in location 1215
 107 run: result <- new {(list _elem): type}
9999 mem: new alloc: 1333
9999 mem: storing 1333 in location 1216
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1216 is 1333
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1333 is 0
9999 mem: location 1334 is 0
9999 mem: location 1216 is 1333
9998 run: address to copy is 1333
9999 mem: storing 1333 in location 1217
 107 run: *val <- copy x
9999 mem: location 1214 is 1117
9999 mem: location 1217 is 1333
9999 mem: storing 1117 in location 1333
 107 run: next:address:address:list:_elem <- get-address *result, next:offset
9999 mem: location 1216 is 1333
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1333 is 1117
9999 mem: location 1334 is 0
9999 mem: location 1216 is 1333
9999 type: type deduced to be address$
9998 run: address to copy is 1334
9999 mem: storing 1334 in location 1218
 107 run: *next <- copy in
9999 mem: location 1215 is 0
9999 mem: location 1218 is 1334
9999 mem: storing 0 in location 1334
 107 run: reply result
9999 mem: location 1216 is 1333
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1333
9999 mem: location 1249 is 1009
9999 mem: storing 1333 in location 1009
 106 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1247 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1179
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1333
9999 mem: location 1010 is 0
9999 mem: location 1247 is 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1250
 106 run: *redo <- copy 0
9999 mem: location 1250 is 1010
9999 mem: storing 0 in location 1010
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1247 is 1000
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1308
 105 run: reply 1/true
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1294 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1179
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1333
9999 mem: location 1010 is 0
9999 mem: location 1294 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 2
9999 mem: storing 2 in location 1295
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1294 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1179
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1333
9999 mem: location 1010 is 0
9999 mem: location 1294 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1296
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1292 is 1011
9999 mem: location 1295 is 2
9999 mem: location 1296 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1011 in location 1214
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1215
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1216
 105 run: jump-unless screen, 
9999 mem: location 1214 is 1011
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1214 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1217
 105 run: *row <- copy new-row
9999 mem: location 1215 is 2
9999 mem: location 1217 is 1013
9999 mem: storing 2 in location 1013
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1214 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1218
 105 run: *column <- copy new-column
9999 mem: location 1216 is 0
9999 mem: location 1218 is 1014
9999 mem: storing 0 in location 1014
 105 run: reply screen:address:screen
9999 mem: location 1214 is 1011
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1292
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1293 is 1288
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: console:address:console <- next-ingredient 
9999 mem: storing 1288 in location 1253
 105 run: jump-unless console, 
9999 mem: location 1253 is 1288
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *console, index:offset
9999 mem: location 1253 is 1288
9999 mem: location 1288 is 1
9999 mem: location 1289 is 1279
9999 mem: location 1253 is 1288
9998 run: address to copy is 1288
9999 mem: storing 1288 in location 1254
 105 run: buf:address:array:event <- get *console, data:offset
9999 mem: location 1253 is 1288
9999 mem: location 1288 is 1
9999 mem: location 1289 is 1279
9999 mem: location 1253 is 1288
9998 run: address to copy is 1289
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1289 is 1279
9999 mem: storing 1279 in location 1255
 105 run: max:number <- length *buf
9999 mem: location 1255 is 1279
9999 mem: storing 2 in location 1256
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1254 is 1288
9999 mem: location 1288 is 1
9999 mem: location 1256 is 2
9999 mem: storing 0 in location 1257
 105 run: jump-unless done?, 
9999 mem: location 1257 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *idx
9999 mem: location 1255 is 1279
9999 mem: location 1254 is 1288
9999 mem: location 1288 is 1
9998 run: address to copy is 1284
9998 run: its type is event
9999 mem: location 1284 is 1
9999 mem: location 1285 is 65515
9999 mem: location 1286 is 0
9999 mem: location 1287 is 0
9999 mem: storing 1 in location 1259
9999 mem: storing 65515 in location 1260
9999 mem: storing 0 in location 1261
9999 mem: storing 0 in location 1262
 105 run: *idx <- add *idx, 1
9999 mem: location 1254 is 1288
9999 mem: location 1288 is 1
9999 mem: location 1254 is 1288
9999 mem: storing 2 in location 1288
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1259 is 1
9999 mem: location 1260 is 65515
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1253 is 1288
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65515, 0, 0]
9998 run: result 1 is 1288
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1297
9999 mem: storing 65515 in location 1298
9999 mem: storing 0 in location 1299
9999 mem: storing 0 in location 1300
9999 mem: storing 1288 in location 1293
9999 mem: storing 1 in location 1301
9999 mem: storing 0 in location 1302
 104 run: jump-unless found?, 
9999 mem: location 1301 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1302 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1297 is 1
9999 mem: location 1298 is 65515
9999 mem: location 1299 is 0
9999 mem: location 1300 is 0
9999 mem: storing 0 in location 1303
 104 run: jump-unless t, 
9999 mem: location 1303 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1303 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1292 is 1011
9999 mem: location 1294 is 1000
9999 mem: location 1297 is 1
9999 mem: location 1298 is 65515
9999 mem: location 1299 is 0
9999 mem: location 1300 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: new alloc: 1335
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1011 in location 1337
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1338
 105 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1339
9999 mem: storing 65515 in location 1340
9999 mem: storing 0 in location 1341
9999 mem: storing 0 in location 1342
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1343
 105 run: jump-if editor, 1:offset
9999 mem: location 1338 is 1000
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1337 is 1011
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1011 in location 1171
 106 run: jump-unless screen, 
9999 mem: location 1171 is 1011
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1171 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1171 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1172
 106 run: reply width:number
9999 mem: location 1172 is 10
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1344
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1337 is 1011
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1011 in location 1171
 106 run: jump-unless screen, 
9999 mem: location 1171 is 1011
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1171 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1171 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1172
 106 run: reply height:number
9999 mem: location 1172 is 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1345
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1338 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1179
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1333
9999 mem: location 1010 is 0
9999 mem: location 1338 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1346
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1338 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1179
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1333
9999 mem: location 1010 is 0
9999 mem: location 1338 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1347
 105 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1338 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1179
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1333
9999 mem: location 1010 is 0
9999 mem: location 1338 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1348
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1338 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1179
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1333
9999 mem: location 1010 is 0
9999 mem: location 1338 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1349
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1338 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1179
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1333
9999 mem: location 1010 is 0
9999 mem: location 1338 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1350
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1349 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 2 in location 1351
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1350 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1352
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1339 is 1
9999 mem: location 1340 is 65515
9999 mem: location 1341 is 0
9999 mem: location 1342 is 0
9999 mem: storing 0 in location 1353
 105 run: jump-unless c, 
9999 mem: location 1353 is 0
9998 run: jumping to instruction 438
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1339 is 1
9999 mem: location 1340 is 65515
9999 mem: location 1341 is 0
9999 mem: location 1342 is 0
9999 mem: storing 1340 in location 1407
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1407 is 1340
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1407 is 1340
9999 mem: location 1340 is 65515
9999 mem: storing 0 in location 1370
 105 run: jump-unless page-up?, 
9999 mem: location 1370 is 0
9998 run: jumping to instruction 482
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1407 is 1340
9999 mem: location 1340 is 65515
9999 mem: storing 0 in location 1386
 105 run: jump-unless page-down?, 
9999 mem: location 1386 is 0
9998 run: jumping to instruction 523
 105 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1407 is 1340
9999 mem: location 1340 is 65515
9999 mem: storing 0 in location 1393
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1393 is 0
9998 run: jumping to instruction 561
 105 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1407 is 1340
9999 mem: location 1340 is 65515
9999 mem: storing 0 in location 1394
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1394 is 0
9998 run: jumping to instruction 599
 105 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1407 is 1340
9999 mem: location 1340 is 65515
9999 mem: storing 0 in location 1408
 105 run: jump-unless move-to-next-line?, 
9999 mem: location 1408 is 0
9998 run: jumping to instruction 636
 105 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1407 is 1340
9999 mem: location 1340 is 65515
9999 mem: storing 0 in location 1409
 105 run: jump-unless move-to-previous-line?, 
9999 mem: location 1409 is 0
9998 run: jumping to instruction 673
 105 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1407 is 1340
9999 mem: location 1340 is 65515
9999 mem: storing 1 in location 1410
 105 run: jump-unless move-to-previous-character?, 
9999 mem: location 1410 is 1
9998 run: jump-unless fell through
 105 run: trace 10, [app], [left arrow]
  10 app: left arrow 
 105 run: prev:address:duplex-list:character <- prev_2 *before-cursor
9999 mem: location 1348 is 1003
9999 mem: location 1003 is 1179
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1179 in location 1171
 106 run: jump-if in, 1:offset
9999 mem: location 1171 is 1179
9998 run: jumping to instruction 4
 106 run: result <- get *in, prev:offset
9999 mem: location 1171 is 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1179 is 10
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1171 is 1179
9999 type: type deduced to be character$
9998 run: address to copy is 1181
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1181 is 1176
9999 mem: storing 1176 in location 1172
 106 run: reply result
9999 mem: location 1172 is 1176
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1176
9999 mem: storing 1176 in location 1411
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1343
 105 run: jump-if prev, 1:offset
9999 mem: location 1411 is 1176
9998 run: jumping to instruction 682
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1179
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1333
9999 mem: location 1010 is 0
9999 mem: location 1338 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 2
9999 mem: storing 2 in location 1373
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1179
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1333
9999 mem: location 1010 is 0
9999 mem: location 1338 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1374
 105 run: before-top-of-screen:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1338 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1179
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1333
9999 mem: location 1010 is 0
9999 mem: location 1338 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1001 is 1154
9999 mem: storing 1154 in location 1375
 105 run: editor, go-render? <- move-cursor-coordinates-left editor
9999 mem: location 1338 is 1000
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 17
9999 mem: new alloc: 1421
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1423
 106 run: before-cursor:address:duplex-list:character <- get *editor, before-cursor:offset
9999 mem: location 1423 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1179
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1333
9999 mem: location 1010 is 0
9999 mem: location 1423 is 1000
9998 run: address to copy is 1003
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1003 is 1179
9999 mem: storing 1179 in location 1424
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1423 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1179
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1333
9999 mem: location 1010 is 0
9999 mem: location 1423 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1425
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1423 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1179
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1333
9999 mem: location 1010 is 0
9999 mem: location 1423 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1426
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1423 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1179
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1333
9999 mem: location 1010 is 0
9999 mem: location 1423 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1427
 106 run: at-left-margin?:boolean <- equal *cursor-column, left
9999 mem: location 1426 is 1007
9999 mem: location 1007 is 0
9999 mem: location 1427 is 0
9999 mem: storing 1 in location 1428
 106 run: jump-if at-left-margin?, 
9999 mem: location 1428 is 1
9998 run: jumping to instruction 13
 106 run: top-of-screen?:boolean <- equal *cursor-row, 1
9999 mem: location 1425 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1430
 106 run: go-render?:boolean <- copy 0/false
9999 mem: storing 0 in location 1429
 106 run: jump-if top-of-screen?, 
9999 mem: location 1430 is 0
9998 run: jump-if fell through
 106 run: *cursor-row <- subtract *cursor-row, 1
9999 mem: location 1425 is 1006
9999 mem: location 1006 is 2
9999 mem: location 1425 is 1006
9999 mem: storing 1 in location 1006
 106 run: jump-unless top-of-screen?, 
9999 mem: location 1430 is 0
9998 run: jumping to instruction 32
 106 run: previous-character:character <- get *before-cursor, value:offset
9999 mem: location 1424 is 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1179 is 10
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1424 is 1179
9998 run: address to copy is 1179
9998 run: its type is character
9999 mem: location 1179 is 10
9999 mem: storing 10 in location 1434
 106 run: previous-character-is-newline?:boolean <- equal previous-character, 10/newline
9999 mem: location 1434 is 10
9999 mem: storing 1 in location 1435
 106 run: jump-unless previous-character-is-newline?, 
9999 mem: location 1435 is 1
9998 run: jump-unless fell through
 106 run: trace 10, [app], [switching to previous line]
  10 app: switching to previous line 
 106 run: d:address:duplex-list:character <- get *editor, data:offset
9999 mem: location 1423 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1179
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1333
9999 mem: location 1010 is 0
9999 mem: location 1423 is 1000
9998 run: address to copy is 1000
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1000 is 1154
9999 mem: storing 1154 in location 1436
 106 run: end-of-line:number <- previous-line-length before-cursor, d
9999 mem: location 1424 is 1179
9999 mem: location 1436 is 1154
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 107 run: curr:address:duplex-list:character <- next-ingredient 
9999 mem: storing 1179 in location 1148
 107 run: start:address:duplex-list:character <- next-ingredient 
9999 mem: storing 1154 in location 1149
 107 run: result:number <- copy 0
9999 mem: storing 0 in location 1150
 107 run: jump-if curr, 1:offset
9999 mem: location 1148 is 1179
9998 run: jumping to instruction 6
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1148 is 1179
9999 mem: location 1149 is 1154
9999 mem: storing 0 in location 1151
 107 run: jump-unless at-start?, 1:offset
9999 mem: location 1151 is 0
9998 run: jumping to instruction 9
 107 run: curr <- prev_2 curr
9999 mem: location 1148 is 1179
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1179 in location 1171
 108 run: jump-if in, 1:offset
9999 mem: location 1171 is 1179
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1171 is 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1179 is 10
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1171 is 1179
9999 type: type deduced to be character$
9998 run: address to copy is 1181
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1181 is 1176
9999 mem: storing 1176 in location 1172
 108 run: reply result
9999 mem: location 1172 is 1176
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1176
9999 mem: storing 1176 in location 1148
 107 run: jump-unless curr, 
9999 mem: location 1148 is 1176
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1148 is 1176
9999 mem: location 1149 is 1154
9999 mem: storing 0 in location 1151
 107 run: jump-if at-start?, 
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1148 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 99
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1148 is 1176
9998 run: address to copy is 1176
9998 run: its type is character
9999 mem: location 1176 is 99
9999 mem: storing 99 in location 1152
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1152 is 99
9999 mem: storing 0 in location 1153
 107 run: jump-if at-newline?, 
9999 mem: location 1153 is 0
9998 run: jump-if fell through
 107 run: result <- add result, 1
9999 mem: location 1150 is 0
9999 mem: storing 1 in location 1150
 107 run: jump 
9998 run: jumping to instruction 10
 107 run: curr <- prev_2 curr
9999 mem: location 1148 is 1176
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1176 in location 1171
 108 run: jump-if in, 1:offset
9999 mem: location 1171 is 1176
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1171 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 99
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1171 is 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1178
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1178 is 1173
9999 mem: storing 1173 in location 1172
 108 run: reply result
9999 mem: location 1172 is 1173
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1173
9999 mem: storing 1173 in location 1148
 107 run: jump-unless curr, 
9999 mem: location 1148 is 1173
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1148 is 1173
9999 mem: location 1149 is 1154
9999 mem: storing 0 in location 1151
 107 run: jump-if at-start?, 
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1148 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 98
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1148 is 1173
9998 run: address to copy is 1173
9998 run: its type is character
9999 mem: location 1173 is 98
9999 mem: storing 98 in location 1152
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1152 is 98
9999 mem: storing 0 in location 1153
 107 run: jump-if at-newline?, 
9999 mem: location 1153 is 0
9998 run: jump-if fell through
 107 run: result <- add result, 1
9999 mem: location 1150 is 1
9999 mem: storing 2 in location 1150
 107 run: jump 
9998 run: jumping to instruction 10
 107 run: curr <- prev_2 curr
9999 mem: location 1148 is 1173
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1173 in location 1171
 108 run: jump-if in, 1:offset
9999 mem: location 1171 is 1173
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1171 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 98
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1171 is 1173
9999 type: type deduced to be character$
9998 run: address to copy is 1175
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1175 is 1166
9999 mem: storing 1166 in location 1172
 108 run: reply result
9999 mem: location 1172 is 1166
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1166
9999 mem: storing 1166 in location 1148
 107 run: jump-unless curr, 
9999 mem: location 1148 is 1166
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1154
9999 mem: storing 0 in location 1151
 107 run: jump-if at-start?, 
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1148 is 1166
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 97
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1154
9999 mem: location 1148 is 1166
9998 run: address to copy is 1166
9998 run: its type is character
9999 mem: location 1166 is 97
9999 mem: storing 97 in location 1152
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1152 is 97
9999 mem: storing 0 in location 1153
 107 run: jump-if at-newline?, 
9999 mem: location 1153 is 0
9998 run: jump-if fell through
 107 run: result <- add result, 1
9999 mem: location 1150 is 2
9999 mem: storing 3 in location 1150
 107 run: jump 
9998 run: jumping to instruction 10
 107 run: curr <- prev_2 curr
9999 mem: location 1148 is 1166
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1166 in location 1171
 108 run: jump-if in, 1:offset
9999 mem: location 1171 is 1166
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1171 is 1166
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 97
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1154
9999 mem: location 1171 is 1166
9999 type: type deduced to be character$
9998 run: address to copy is 1168
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1168 is 1154
9999 mem: storing 1154 in location 1172
 108 run: reply result
9999 mem: location 1172 is 1154
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1154
9999 mem: storing 1154 in location 1148
 107 run: jump-unless curr, 
9999 mem: location 1148 is 1154
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1148 is 1154
9999 mem: location 1149 is 1154
9999 mem: storing 1 in location 1151
 107 run: jump-if at-start?, 
9999 mem: location 1151 is 1
9998 run: jumping to instruction 19
 107 run: reply result:number
9999 mem: location 1150 is 3
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 3
9999 mem: storing 3 in location 1437
 106 run: *cursor-column <- add left, end-of-line
9999 mem: location 1427 is 0
9999 mem: location 1437 is 3
9999 mem: location 1426 is 1007
9999 mem: storing 3 in location 1007
 106 run: reply editor:address:editor-data, go-render?:boolean
9999 mem: location 1423 is 1000
9999 mem: location 1429 is 0
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9998 run: result 1 is 0
9999 mem: storing 1000 in location 1338
9999 mem: storing 0 in location 1343
 105 run: *before-cursor <- copy prev
9999 mem: location 1411 is 1176
9999 mem: location 1348 is 1003
9999 mem: storing 1176 in location 1003
 105 run: undo-coalesce-tag:number <- copy 1/left-arrow
9999 mem: storing 1 in location 1376
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1333
9999 mem: location 1010 is 0
9999 mem: location 1338 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1377
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1333
9999 mem: location 1010 is 0
9999 mem: location 1338 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1378
 105 run: after-top-of-screen:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1338 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1333
9999 mem: location 1010 is 0
9999 mem: location 1338 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1001 is 1154
9999 mem: storing 1154 in location 1379
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1376 is 1
9998 run: jump-unless fell through
 105 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1338 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1333
9999 mem: location 1010 is 0
9999 mem: location 1338 is 1000
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1357
 105 run: jump-unless *undo, 
9999 mem: location 1357 is 1009
9999 mem: location 1009 is 1333
9998 run: jump-unless fell through
 105 run: op:address:operation <- first_3 *undo
9999 mem: location 1357 is 1009
9999 mem: location 1009 is 1333
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:list:_elem <- next-ingredient 
9999 mem: storing 1333 in location 1171
 106 run: result <- get *in, value:offset
9999 mem: location 1171 is 1333
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1333 is 1117
9999 mem: location 1334 is 0
9999 mem: location 1171 is 1333
9998 run: address to copy is 1333
9998 run: its type is <address : <operation : <>>>
9999 mem: location 1333 is 1117
9999 mem: storing 1117 in location 1172
 106 run: reply result:_elem
9999 mem: location 1172 is 1117
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1117
9999 mem: storing 1117 in location 1356
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1356 is 1117
9999 mem: location 1117 is 1
9999 mem: location 1118 is 1
9999 mem: location 1119 is 0
9999 mem: location 1120 is 1154
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1154
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1126 is 0
9999 mem: location 1127 is 0
9999 mem: location 1356 is 1117
9999 mem: storing 1118 in location 1362
 105 run: jump-unless move, 
9999 mem: location 1362 is 1118
9998 run: jump-unless fell through
 105 run: previous-coalesce-tag:number <- get *move, tag:offset
9999 mem: location 1362 is 1118
9999 mem: location 1118 is 1
9999 mem: location 1119 is 0
9999 mem: location 1120 is 1154
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1154
9999 mem: location 1124 is 0
9999 mem: location 1362 is 1118
9998 run: address to copy is 1124
9998 run: its type is number
9999 mem: location 1124 is 0
9999 mem: storing 0 in location 1380
 105 run: coalesce?:boolean <- equal undo-coalesce-tag, previous-coalesce-tag
9999 mem: location 1376 is 1
9999 mem: location 1380 is 0
9999 mem: storing 0 in location 1381
 105 run: jump-unless coalesce?, 
9999 mem: location 1381 is 0
9998 run: jumping to instruction 709
 105 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1439
9999 mem: storing 1439 in location 1356
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1373 is 2
9999 mem: location 1374 is 0
9999 mem: location 1375 is 1154
9999 mem: location 1377 is 1
9999 mem: location 1378 is 3
9999 mem: location 1379 is 1154
9999 mem: location 1376 is 1
9999 mem: location 1356 is 1439
9999 mem: location 1356 is 1439
9999 mem: storing 1 in location 1439
9999 mem: storing 2 in location 1440
9999 mem: storing 0 in location 1441
9999 mem: storing 1154 in location 1442
9999 mem: storing 1 in location 1443
9999 mem: storing 3 in location 1444
9999 mem: storing 1154 in location 1445
9999 mem: storing 1 in location 1446
 105 run: editor <- add-operation editor, op
9999 mem: location 1338 is 1000
9999 mem: location 1356 is 1439
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1247
 106 run: op:address:operation <- next-ingredient 
9999 mem: storing 1439 in location 1248
 106 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1247 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1333
9999 mem: location 1010 is 0
9999 mem: location 1247 is 1000
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1249
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1248 is 1439
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 1333
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:_elem <- next-ingredient 
9999 mem: storing 1439 in location 1214
 107 run: in:address:list:_elem <- next-ingredient 
9999 mem: storing 1333 in location 1215
 107 run: result <- new {(list _elem): type}
9999 mem: new alloc: 1450
9999 mem: storing 1450 in location 1216
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1216 is 1450
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1450 is 0
9999 mem: location 1451 is 0
9999 mem: location 1216 is 1450
9998 run: address to copy is 1450
9999 mem: storing 1450 in location 1217
 107 run: *val <- copy x
9999 mem: location 1214 is 1439
9999 mem: location 1217 is 1450
9999 mem: storing 1439 in location 1450
 107 run: next:address:address:list:_elem <- get-address *result, next:offset
9999 mem: location 1216 is 1450
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1450 is 1439
9999 mem: location 1451 is 0
9999 mem: location 1216 is 1450
9999 type: type deduced to be address$
9998 run: address to copy is 1451
9999 mem: storing 1451 in location 1218
 107 run: *next <- copy in
9999 mem: location 1215 is 1333
9999 mem: location 1218 is 1451
9999 mem: storing 1333 in location 1451
 107 run: reply result
9999 mem: location 1216 is 1450
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1450
9999 mem: location 1249 is 1009
9999 mem: storing 1450 in location 1009
 106 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1247 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1450
9999 mem: location 1010 is 0
9999 mem: location 1247 is 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1250
 106 run: *redo <- copy 0
9999 mem: location 1250 is 1010
9999 mem: storing 0 in location 1010
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1247 is 1000
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1338
 105 run: reply screen:address:screen, editor:address:editor-data, go-render?:boolean
9999 mem: location 1337 is 1011
9999 mem: location 1338 is 1000
9999 mem: location 1343 is 0
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9998 run: result 1 is 1000
9998 run: result 2 is 0
9999 mem: storing 1011 in location 1292
9999 mem: storing 1000 in location 1294
9999 mem: storing 0 in location 1304
 104 run: jump-unless go-render?, 
9999 mem: location 1304 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1294 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1450
9999 mem: location 1010 is 0
9999 mem: location 1294 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1295
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1294 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1450
9999 mem: location 1010 is 0
9999 mem: location 1294 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1296
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1292 is 1011
9999 mem: location 1295 is 1
9999 mem: location 1296 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1011 in location 1214
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1215
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 3 in location 1216
 105 run: jump-unless screen, 
9999 mem: location 1214 is 1011
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1214 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1217
 105 run: *row <- copy new-row
9999 mem: location 1215 is 1
9999 mem: location 1217 is 1013
9999 mem: storing 1 in location 1013
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1214 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1218
 105 run: *column <- copy new-column
9999 mem: location 1216 is 3
9999 mem: location 1218 is 1014
9999 mem: storing 3 in location 1014
 105 run: reply screen:address:screen
9999 mem: location 1214 is 1011
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1292
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1293 is 1288
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: console:address:console <- next-ingredient 
9999 mem: storing 1288 in location 1253
 105 run: jump-unless console, 
9999 mem: location 1253 is 1288
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *console, index:offset
9999 mem: location 1253 is 1288
9999 mem: location 1288 is 2
9999 mem: location 1289 is 1279
9999 mem: location 1253 is 1288
9998 run: address to copy is 1288
9999 mem: storing 1288 in location 1254
 105 run: buf:address:array:event <- get *console, data:offset
9999 mem: location 1253 is 1288
9999 mem: location 1288 is 2
9999 mem: location 1289 is 1279
9999 mem: location 1253 is 1288
9998 run: address to copy is 1289
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1289 is 1279
9999 mem: storing 1279 in location 1255
 105 run: max:number <- length *buf
9999 mem: location 1255 is 1279
9999 mem: storing 2 in location 1256
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1254 is 1288
9999 mem: location 1288 is 2
9999 mem: location 1256 is 2
9999 mem: storing 1 in location 1257
 105 run: jump-unless done?, 
9999 mem: location 1257 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:event <- new event:type
9999 mem: storing 1169 in location 1258
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1258 is 1169
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1253 is 1288
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1288
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1297
9999 mem: storing 0 in location 1298
9999 mem: storing 0 in location 1299
9999 mem: storing 0 in location 1300
9999 mem: storing 1288 in location 1293
9999 mem: storing 1 in location 1301
9999 mem: storing 1 in location 1302
 104 run: jump-unless found?, 
9999 mem: location 1301 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1302 is 1
9998 run: jumping to instruction 28
 104 run: reply 
9999 trace: reply: decrementing callstack depth from 3
 103 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1450
9999 mem: location 1010 is 0
9999 mem: location 2 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 3
 103 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1450
9999 mem: location 1010 is 0
9999 mem: location 2 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain [
    3 <- 1
    4 <- 3
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label 0, [print-character]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
