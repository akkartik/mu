 102 run: assume-console [
    left-click 2, 0
    press left-arrow
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": "literal"}
9993 parse:   ingredient: {"0": "literal"}
9992 load: after rewriting: left-click 2, 0
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"left-arrow": <>}
9992 load: after rewriting: press left-arrow
9999 mem: storing 'left-click' event starting at 1311
9999 mem: storing 'press' event starting at 1315
9999 mem: storing console in 1319
9999 mem: storing console data in 1321
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
    3:number <- get *2:address:shared:editor-data, cursor-row:offset
    4:number <- get *2:address:shared:editor-data, cursor-column:offset
  ]
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1319
9999 mem: location 2 is 1152
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1322
9999 mem: storing 14 in location 1323
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1325
9999 mem: incrementing refcount of 1012: 75 -> 76
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1319 in location 1326
9999 mem: incrementing refcount of 1319: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1327
9999 mem: incrementing refcount of 1152: 6 -> 7
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1327 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1174
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1327 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1328
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1327 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1174
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1327 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is number
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1329
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1325 is 1012
9999 mem: location 1328 is 1
9999 mem: location 1329 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1246
9999 mem: incrementing refcount of 1012: 76 -> 77
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1247
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1248
 105 run: jump-unless screen, 
9999 mem: location 1246 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1246 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1246 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1249
 105 run: *row <- copy new-row
9999 mem: location 1247 is 1
9999 mem: location 1249 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1246 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1246 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1250
 105 run: *column <- copy new-column
9999 mem: location 1248 is 0
9999 mem: location 1250 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1246 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 77 -> 76
9999 mem: storing 1012 in location 1325
9999 mem: incrementing refcount of 1012: 76 -> 77
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1326 is 1319
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1319 in location 1281
9999 mem: incrementing refcount of 1319: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1281 is 1319
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1281 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 0
9999 mem: location 1321 is 1309
9999 mem: location 1281 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1320
9999 mem: storing 1320 in location 1282
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1281 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 0
9999 mem: location 1321 is 1309
9999 mem: location 1281 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1321
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1321 is 1309
9999 mem: storing 1309 in location 1283
9999 mem: incrementing refcount of 1309: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1283 is 1309
9999 mem: skipping refcount at 1309
9999 mem: storing 2 in location 1284
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1282 is 1320
9999 mem: location 1320 is 0
9999 mem: location 1284 is 2
9999 mem: storing 0 in location 1285
 105 run: jump-unless done?, 
9999 mem: location 1285 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1283 is 1309
9999 mem: skipping refcount at 1309
9998 run: base address is 1310
9999 mem: location 1282 is 1320
9999 mem: location 1320 is 0
9998 run: address to copy is 1311
9998 run: its type is event
9999 mem: location 1311 is 2
9999 mem: location 1312 is 65513
9999 mem: location 1313 is 2
9999 mem: location 1314 is 0
9999 mem: storing 2 in location 1287
9999 mem: storing 65513 in location 1288
9999 mem: storing 2 in location 1289
9999 mem: storing 0 in location 1290
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1282 is 1320
9999 mem: location 1320 is 0
9999 mem: location 1282 is 1320
9999 mem: storing 1 in location 1320
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1287 is 2
9999 mem: location 1288 is 65513
9999 mem: location 1289 is 2
9999 mem: location 1290 is 0
9999 mem: location 1281 is 1319
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 2, 0]
9998 run: result 1 is 1319
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1330
9999 mem: storing 65513 in location 1331
9999 mem: storing 2 in location 1332
9999 mem: storing 0 in location 1333
9999 mem: decrementing refcount of 1319: 2 -> 1
9999 mem: storing 1319 in location 1326
9999 mem: incrementing refcount of 1319: 1 -> 2
9999 mem: storing 1 in location 1334
9999 mem: storing 0 in location 1335
 104 run: jump-unless found?, 
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1335 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1330 is 2
9999 mem: location 1331 is 65513
9999 mem: location 1332 is 2
9999 mem: location 1333 is 0
9999 mem: storing 1331 in location 1336
 104 run: jump-unless t, 
9999 mem: location 1336 is 1331
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1325 is 1012
9999 mem: location 1327 is 1152
9999 mem: location 1336 is 1331
9999 mem: location 1331 is 65513
9999 mem: location 1332 is 2
9999 mem: location 1333 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1338
9999 mem: storing 27 in location 1339
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1341
9999 mem: incrementing refcount of 1012: 77 -> 78
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1342
9999 mem: incrementing refcount of 1152: 7 -> 8
 105 run: t:touch-event <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1343
9999 mem: storing 2 in location 1344
9999 mem: storing 0 in location 1345
 105 run: jump-if editor, 1:offset
9999 mem: location 1342 is 1152
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1343 is 65513
9999 mem: location 1344 is 2
9999 mem: location 1345 is 0
9998 run: address to copy is 1344
9998 run: its type is number
9999 mem: location 1344 is 2
9999 mem: storing 2 in location 1346
 105 run: jump-if click-row, 1:offset
9999 mem: location 1346 is 2
9998 run: jumping to instruction 9
 105 run: click-column:number <- get t, column:offset
9999 mem: location 1343 is 65513
9999 mem: location 1344 is 2
9999 mem: location 1345 is 0
9998 run: address to copy is 1345
9998 run: its type is number
9999 mem: location 1345 is 0
9999 mem: storing 0 in location 1347
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1342 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1174
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1342 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is number
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1348
 105 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1347 is 0
9999 mem: location 1348 is 0
9999 mem: storing 0 in location 1349
 105 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1349 is 0
9998 run: jumping to instruction 14
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1342 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1174
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1342 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is number
9999 mem: location 1158 is 9
9999 mem: storing 9 in location 1350
 105 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1347 is 0
9999 mem: location 1350 is 9
9999 mem: storing 0 in location 1351
 105 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1351 is 0
9998 run: jumping to instruction 18
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1342 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1174
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1342 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1352
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1342 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1174
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1342 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is number
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1353
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1342 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1174
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1342 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1154 is 1174
9999 mem: storing 1174 in location 1354
9999 mem: incrementing refcount of 1174: 11 -> 12
 105 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1341 is 1012
9999 mem: location 1342 is 1152
9999 mem: location 1346 is 2
9999 mem: location 1347 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1367
9999 mem: storing 26 in location 1368
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1370
9999 mem: incrementing refcount of 1012: 78 -> 79
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1371
9999 mem: incrementing refcount of 1152: 8 -> 9
 106 run: target-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1372
 106 run: target-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1373
 106 run: jump-if editor, 1:offset
9999 mem: location 1371 is 1152
9998 run: jumping to instruction 7
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1371 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1174
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1371 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is number
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1374
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1371 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1174
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1371 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is number
9999 mem: location 1158 is 9
9999 mem: storing 9 in location 1375
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1370 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1195
9999 mem: incrementing refcount of 1012: 79 -> 80
 107 run: jump-unless screen, 
9999 mem: location 1195 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1195 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1195 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1196
 107 run: reply height:number
9999 mem: location 1196 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1376
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1371 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1174
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1371 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1154 is 1174
9999 mem: storing 1174 in location 1377
9999 mem: incrementing refcount of 1174: 12 -> 13
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1377 is 1174
9999 mem: storing 1174 in location 1378
9999 mem: incrementing refcount of 1174: 13 -> 14
 106 run: curr <- next_2 curr
9999 mem: location 1377 is 1174
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1174 in location 1195
9999 mem: incrementing refcount of 1174: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1195 is 1174
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1195 is 1174
9999 mem: skipping refcount at 1174
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1175 is 167
9999 mem: location 1176 is 1188
9999 mem: location 1177 is 0
9999 mem: location 1195 is 1174
9999 mem: skipping refcount at 1174
9999 type: type deduced to be character$
9998 run: address to copy is 1176
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1176 is 1188
9999 mem: storing 1188 in location 1196
9999 mem: incrementing refcount of 1188: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1196 is 1188
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1188
9999 mem: decrementing refcount of 1174: 15 -> 14
9999 mem: storing 1188 in location 1377
9999 mem: incrementing refcount of 1188: 15 -> 16
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1379
 106 run: column:number <- copy left
9999 mem: location 1374 is 0
9999 mem: storing 0 in location 1380
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1371 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1174
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1371 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1381
 106 run: *cursor-row <- copy target-row
9999 mem: location 1372 is 2
9999 mem: location 1381 is 1160
9999 mem: storing 2 in location 1160
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1371 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1174
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1371 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1382
 106 run: *cursor-column <- copy target-column
9999 mem: location 1373 is 0
9999 mem: location 1382 is 1161
9999 mem: storing 0 in location 1161
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1371 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1174
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1371 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1383
 106 run: jump-unless curr, 
9999 mem: location 1377 is 1188
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1379 is 1
9999 mem: location 1376 is 5
9999 mem: storing 0 in location 1384
 106 run: jump-if off-screen?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1379 is 1
9999 mem: location 1381 is 1160
9999 mem: location 1160 is 2
9999 mem: storing 0 in location 1385
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1385 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1377 is 1188
9999 mem: skipping refcount at 1188
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1189 is 97
9999 mem: location 1190 is 1197
9999 mem: location 1191 is 1174
9999 mem: location 1377 is 1188
9999 mem: skipping refcount at 1188
9998 run: address to copy is 1189
9998 run: its type is character
9999 mem: location 1189 is 97
9999 mem: storing 97 in location 1387
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1387 is 97
9999 mem: storing 0 in location 1388
 106 run: jump-unless newline?, 
9999 mem: location 1388 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1380 is 0
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1390
 106 run: jump-unless at-right?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1377 is 1188
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1188 in location 1195
9999 mem: incrementing refcount of 1188: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1195 is 1188
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1195 is 1188
9999 mem: skipping refcount at 1188
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1189 is 97
9999 mem: location 1190 is 1197
9999 mem: location 1191 is 1174
9999 mem: location 1195 is 1188
9999 mem: skipping refcount at 1188
9999 type: type deduced to be character$
9998 run: address to copy is 1190
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1190 is 1197
9999 mem: storing 1197 in location 1196
9999 mem: incrementing refcount of 1197: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1196 is 1197
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1197
9999 mem: decrementing refcount of 1188: 17 -> 16
9999 mem: storing 1197 in location 1377
9999 mem: incrementing refcount of 1197: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1378 is 1174
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1174 in location 1195
9999 mem: incrementing refcount of 1174: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1195 is 1174
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1195 is 1174
9999 mem: skipping refcount at 1174
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1175 is 167
9999 mem: location 1176 is 1188
9999 mem: location 1177 is 0
9999 mem: location 1195 is 1174
9999 mem: skipping refcount at 1174
9999 type: type deduced to be character$
9998 run: address to copy is 1176
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1176 is 1188
9999 mem: storing 1188 in location 1196
9999 mem: incrementing refcount of 1188: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1196 is 1188
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1188
9999 mem: decrementing refcount of 1174: 15 -> 14
9999 mem: storing 1188 in location 1378
9999 mem: incrementing refcount of 1188: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1380 is 0
9999 mem: storing 1 in location 1380
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1377 is 1197
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1379 is 1
9999 mem: location 1376 is 5
9999 mem: storing 0 in location 1384
 106 run: jump-if off-screen?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1379 is 1
9999 mem: location 1381 is 1160
9999 mem: location 1160 is 2
9999 mem: storing 0 in location 1385
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1385 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1377 is 1197
9999 mem: skipping refcount at 1197
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1198 is 98
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1188
9999 mem: location 1377 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1198
9998 run: its type is character
9999 mem: location 1198 is 98
9999 mem: storing 98 in location 1387
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1387 is 98
9999 mem: storing 0 in location 1388
 106 run: jump-unless newline?, 
9999 mem: location 1388 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1380 is 1
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1390
 106 run: jump-unless at-right?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1377 is 1197
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1197 in location 1195
9999 mem: incrementing refcount of 1197: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1195 is 1197
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1195 is 1197
9999 mem: skipping refcount at 1197
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1198 is 98
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1188
9999 mem: location 1195 is 1197
9999 mem: skipping refcount at 1197
9999 type: type deduced to be character$
9998 run: address to copy is 1199
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1199 is 1201
9999 mem: storing 1201 in location 1196
9999 mem: incrementing refcount of 1201: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1196 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1197: 17 -> 16
9999 mem: storing 1201 in location 1377
9999 mem: incrementing refcount of 1201: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1378 is 1188
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1188 in location 1195
9999 mem: incrementing refcount of 1188: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1195 is 1188
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1195 is 1188
9999 mem: skipping refcount at 1188
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1189 is 97
9999 mem: location 1190 is 1197
9999 mem: location 1191 is 1174
9999 mem: location 1195 is 1188
9999 mem: skipping refcount at 1188
9999 type: type deduced to be character$
9998 run: address to copy is 1190
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1190 is 1197
9999 mem: storing 1197 in location 1196
9999 mem: incrementing refcount of 1197: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1196 is 1197
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1197
9999 mem: decrementing refcount of 1188: 19 -> 18
9999 mem: storing 1197 in location 1378
9999 mem: incrementing refcount of 1197: 17 -> 18
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-moves-cursor-to-previous-line-with-left-arrow-at-start-of-line
 106 run: column <- add column, 1
9999 mem: location 1380 is 1
9999 mem: storing 2 in location 1380
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1377 is 1201
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1379 is 1
9999 mem: location 1376 is 5
9999 mem: storing 0 in location 1384
 106 run: jump-if off-screen?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1379 is 1
9999 mem: location 1381 is 1160
9999 mem: location 1160 is 2
9999 mem: storing 0 in location 1385
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1385 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1377 is 1201
9999 mem: skipping refcount at 1201
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1202 is 99
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1197
9999 mem: location 1377 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1202
9998 run: its type is character
9999 mem: location 1202 is 99
9999 mem: storing 99 in location 1387
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1387 is 99
9999 mem: storing 0 in location 1388
 106 run: jump-unless newline?, 
9999 mem: location 1388 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1380 is 2
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1390
 106 run: jump-unless at-right?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1377 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1195
9999 mem: incrementing refcount of 1201: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1195 is 1201
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1195 is 1201
9999 mem: skipping refcount at 1201
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1202 is 99
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1197
9999 mem: location 1195 is 1201
9999 mem: skipping refcount at 1201
9999 type: type deduced to be character$
9998 run: address to copy is 1203
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1196
9999 mem: incrementing refcount of 1205: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1196 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 17 -> 16
9999 mem: storing 1205 in location 1377
9999 mem: incrementing refcount of 1205: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1378 is 1197
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1197 in location 1195
9999 mem: incrementing refcount of 1197: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1195 is 1197
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1195 is 1197
9999 mem: skipping refcount at 1197
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1198 is 98
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1188
9999 mem: location 1195 is 1197
9999 mem: skipping refcount at 1197
9999 type: type deduced to be character$
9998 run: address to copy is 1199
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1199 is 1201
9999 mem: storing 1201 in location 1196
9999 mem: incrementing refcount of 1201: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1196 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1197: 19 -> 18
9999 mem: storing 1201 in location 1378
9999 mem: incrementing refcount of 1201: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1380 is 2
9999 mem: storing 3 in location 1380
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1377 is 1205
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1379 is 1
9999 mem: location 1376 is 5
9999 mem: storing 0 in location 1384
 106 run: jump-if off-screen?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1379 is 1
9999 mem: location 1381 is 1160
9999 mem: location 1160 is 2
9999 mem: storing 0 in location 1385
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1385 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1377 is 1205
9999 mem: skipping refcount at 1205
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1206 is 10
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1377 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1206
9998 run: its type is character
9999 mem: location 1206 is 10
9999 mem: storing 10 in location 1387
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-unless newline?, 
9999 mem: location 1388 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1379 is 1
9999 mem: location 1381 is 1160
9999 mem: location 1160 is 2
9999 mem: storing 0 in location 1385
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1385 is 0
9998 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1379 is 1
9999 mem: storing 2 in location 1379
 106 run: column <- copy left
9999 mem: location 1374 is 0
9999 mem: storing 0 in location 1380
 106 run: curr <- next_2 curr
9999 mem: location 1377 is 1205
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1195
9999 mem: incrementing refcount of 1205: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1195 is 1205
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1195 is 1205
9999 mem: skipping refcount at 1205
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1206 is 10
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1195 is 1205
9999 mem: skipping refcount at 1205
9999 type: type deduced to be character$
9998 run: address to copy is 1207
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1196
9999 mem: incrementing refcount of 1209: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1196 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 17 -> 16
9999 mem: storing 1209 in location 1377
9999 mem: incrementing refcount of 1209: 13 -> 14
 106 run: prev <- next_2 prev
9999 mem: location 1378 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1195
9999 mem: incrementing refcount of 1201: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1195 is 1201
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1195 is 1201
9999 mem: skipping refcount at 1201
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1202 is 99
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1197
9999 mem: location 1195 is 1201
9999 mem: skipping refcount at 1201
9999 type: type deduced to be character$
9998 run: address to copy is 1203
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1196
9999 mem: incrementing refcount of 1205: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1196 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 19 -> 18
9999 mem: storing 1205 in location 1378
9999 mem: incrementing refcount of 1205: 17 -> 18
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1377 is 1209
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1379 is 2
9999 mem: location 1376 is 5
9999 mem: storing 0 in location 1384
 106 run: jump-if off-screen?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1379 is 2
9999 mem: location 1381 is 1160
9999 mem: location 1160 is 2
9999 mem: storing 1 in location 1385
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1385 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1380 is 0
9999 mem: location 1382 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 1 in location 1386
 106 run: jump-unless at-cursor?, 
9999 mem: location 1386 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1378 is 1205
9999 mem: location 1383 is 1156
9999 mem: decrementing refcount of 1174: 14 -> 13
9999 mem: storing 1205 in location 1156
9999 mem: incrementing refcount of 1205: 18 -> 19
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1377 is 1209
9999 mem: skipping refcount at 1209
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1210 is 100
9999 mem: location 1211 is 0
9999 mem: location 1212 is 1205
9999 mem: location 1377 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1210
9998 run: its type is character
9999 mem: location 1210 is 100
9999 mem: storing 100 in location 1387
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1387 is 100
9999 mem: storing 0 in location 1388
 106 run: jump-unless newline?, 
9999 mem: location 1388 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1380 is 0
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1390
 106 run: jump-unless at-right?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1377 is 1209
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1195
9999 mem: incrementing refcount of 1209: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1195 is 1209
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1195 is 1209
9999 mem: skipping refcount at 1209
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1210 is 100
9999 mem: location 1211 is 0
9999 mem: location 1212 is 1205
9999 mem: location 1195 is 1209
9999 mem: skipping refcount at 1209
9999 type: type deduced to be character$
9998 run: address to copy is 1211
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1211 is 0
9999 mem: storing 0 in location 1196
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1196 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1209: 15 -> 14
9999 mem: storing 0 in location 1377
 106 run: prev <- next_2 prev
9999 mem: location 1378 is 1205
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1195
9999 mem: incrementing refcount of 1205: 19 -> 20
 107 run: jump-if in, 1:offset
9999 mem: location 1195 is 1205
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1195 is 1205
9999 mem: skipping refcount at 1205
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1206 is 10
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1195 is 1205
9999 mem: skipping refcount at 1205
9999 type: type deduced to be character$
9998 run: address to copy is 1207
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1196
9999 mem: incrementing refcount of 1209: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1196 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 20 -> 19
9999 mem: storing 1209 in location 1378
9999 mem: incrementing refcount of 1209: 15 -> 16
 106 run: column <- add column, 1
9999 mem: location 1380 is 0
9999 mem: storing 1 in location 1380
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1377 is 0
9998 run: jumping to instruction 61
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1379 is 2
9999 mem: location 1381 is 1160
9999 mem: location 1160 is 2
9999 mem: storing 1 in location 1385
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1380 is 1
9999 mem: location 1382 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1391
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1385 is 1
9999 mem: location 1391 is 0
9999 mem: storing 0 in location 1392
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1379 is 2
9999 mem: location 1381 is 1160
9999 mem: location 1160 is 2
9999 mem: storing 0 in location 1393
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1392 is 0
9999 mem: location 1393 is 0
9999 mem: storing 0 in location 1394
 106 run: jump-unless before-cursor?, 
9999 mem: location 1394 is 0
9998 run: jumping to instruction 72
 106 run: reply editor:address:shared:editor-data
9999 mem: location 1371 is 1152
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1152
9999 mem: decrementing refcount of 1152: 9 -> 8
9999 mem: storing 1152 in location 1342
9999 mem: incrementing refcount of 1152: 8 -> 9
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1355
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1342 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1342 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 2
9999 mem: storing 2 in location 1356
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1342 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1342 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is number
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1357
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1342 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1342 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1154 is 1174
9999 mem: storing 1174 in location 1358
9999 mem: incrementing refcount of 1174: 13 -> 14
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 44
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: storing 1000 in location 1360
9999 mem: incrementing refcount of 1000: 0 -> 1
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1352 is 1
9999 mem: location 1353 is 0
9999 mem: location 1354 is 1174
9999 mem: location 1356 is 2
9999 mem: location 1357 is 0
9999 mem: location 1358 is 1174
9999 mem: location 1355 is 0
9999 mem: location 1360 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1360 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1 in location 1001
9999 mem: storing 1 in location 1002
9999 mem: storing 0 in location 1003
9999 mem: storing 1174 in location 1004
9999 mem: storing 2 in location 1005
9999 mem: storing 0 in location 1006
9999 mem: storing 1174 in location 1007
9999 mem: storing 0 in location 1008
 105 run: editor <- add-operation editor, op
9999 mem: location 1342 is 1152
9999 mem: location 1360 is 1000
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1395
9999 mem: storing 5 in location 1396
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1398
9999 mem: incrementing refcount of 1152: 9 -> 10
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1399
9999 mem: incrementing refcount of 1000: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1398 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1398 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1400
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1399 is 1000
9999 mem: location 1400 is 1163
9999 mem: location 1163 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1246
9999 mem: incrementing refcount of 1000: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1247
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1402
9999 mem: storing 1402 in location 1248
9999 mem: incrementing refcount of 1402: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1248 is 1402
9999 mem: skipping refcount at 1402
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1403 is 0
9999 mem: location 1404 is 0
9999 mem: location 1248 is 1402
9999 mem: skipping refcount at 1402
9998 run: address to copy is 1403
9999 mem: storing 1403 in location 1249
 107 run: *val <- copy x
9999 mem: location 1246 is 1000
9999 mem: location 1249 is 1403
9999 mem: storing 1000 in location 1403
9999 mem: incrementing refcount of 1000: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1248 is 1402
9999 mem: skipping refcount at 1402
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1403 is 1000
9999 mem: location 1404 is 0
9999 mem: location 1248 is 1402
9999 mem: skipping refcount at 1402
9999 type: type deduced to be address$
9998 run: address to copy is 1404
9999 mem: storing 1404 in location 1250
 107 run: *next <- copy in
9999 mem: location 1247 is 0
9999 mem: location 1250 is 1404
9999 mem: storing 0 in location 1404
 107 run: reply result
9999 mem: location 1248 is 1402
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1402
9999 mem: location 1400 is 1163
9999 mem: storing 1402 in location 1163
9999 mem: incrementing refcount of 1402: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1398 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1402
9999 mem: location 1164 is 0
9999 mem: location 1398 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1401
 106 run: *redo <- copy 0
9999 mem: location 1401 is 1164
9999 mem: storing 0 in location 1164
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1398 is 1152
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1152
9999 mem: decrementing refcount of 1152: 10 -> 9
9999 mem: storing 1152 in location 1342
9999 mem: incrementing refcount of 1152: 9 -> 10
 105 run: reply 1/true
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1327 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1402
9999 mem: location 1164 is 0
9999 mem: location 1327 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 2
9999 mem: storing 2 in location 1328
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1327 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1402
9999 mem: location 1164 is 0
9999 mem: location 1327 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is number
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1329
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1325 is 1012
9999 mem: location 1328 is 2
9999 mem: location 1329 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1246
9999 mem: incrementing refcount of 1012: 80 -> 81
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1247
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1248
 105 run: jump-unless screen, 
9999 mem: location 1246 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1246 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1246 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1249
 105 run: *row <- copy new-row
9999 mem: location 1247 is 2
9999 mem: location 1249 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1246 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1246 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1250
 105 run: *column <- copy new-column
9999 mem: location 1248 is 0
9999 mem: location 1250 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1246 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 81 -> 80
9999 mem: storing 1012 in location 1325
9999 mem: incrementing refcount of 1012: 80 -> 81
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1326 is 1319
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1319 in location 1281
9999 mem: incrementing refcount of 1319: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1281 is 1319
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1281 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 1
9999 mem: location 1321 is 1309
9999 mem: location 1281 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1320
9999 mem: storing 1320 in location 1282
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1281 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 1
9999 mem: location 1321 is 1309
9999 mem: location 1281 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1321
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1321 is 1309
9999 mem: storing 1309 in location 1283
9999 mem: incrementing refcount of 1309: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1283 is 1309
9999 mem: skipping refcount at 1309
9999 mem: storing 2 in location 1284
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1282 is 1320
9999 mem: location 1320 is 1
9999 mem: location 1284 is 2
9999 mem: storing 0 in location 1285
 105 run: jump-unless done?, 
9999 mem: location 1285 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1283 is 1309
9999 mem: skipping refcount at 1309
9998 run: base address is 1310
9999 mem: location 1282 is 1320
9999 mem: location 1320 is 1
9998 run: address to copy is 1315
9998 run: its type is event
9999 mem: location 1315 is 1
9999 mem: location 1316 is 65515
9999 mem: location 1317 is 0
9999 mem: location 1318 is 0
9999 mem: storing 1 in location 1287
9999 mem: storing 65515 in location 1288
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1282 is 1320
9999 mem: location 1320 is 1
9999 mem: location 1282 is 1320
9999 mem: storing 2 in location 1320
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1287 is 1
9999 mem: location 1288 is 65515
9999 mem: location 1289 is 0
9999 mem: location 1290 is 0
9999 mem: location 1281 is 1319
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65515, 0, 0]
9998 run: result 1 is 1319
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1330
9999 mem: storing 65515 in location 1331
9999 mem: storing 0 in location 1332
9999 mem: storing 0 in location 1333
9999 mem: decrementing refcount of 1319: 3 -> 2
9999 mem: storing 1319 in location 1326
9999 mem: incrementing refcount of 1319: 2 -> 3
9999 mem: storing 1 in location 1334
9999 mem: storing 0 in location 1335
 104 run: jump-unless found?, 
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1335 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1330 is 1
9999 mem: location 1331 is 65515
9999 mem: location 1332 is 0
9999 mem: location 1333 is 0
9999 mem: storing 0 in location 1336
 104 run: jump-unless t, 
9999 mem: location 1336 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1336 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1325 is 1012
9999 mem: location 1327 is 1152
9999 mem: location 1330 is 1
9999 mem: location 1331 is 65515
9999 mem: location 1332 is 0
9999 mem: location 1333 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1405
9999 mem: storing 85 in location 1406
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1408
9999 mem: incrementing refcount of 1012: 81 -> 82
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1409
9999 mem: incrementing refcount of 1152: 10 -> 11
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1410
9999 mem: storing 65515 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1414
 105 run: jump-if editor, 1:offset
9999 mem: location 1409 is 1152
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1408 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1195
9999 mem: incrementing refcount of 1012: 82 -> 83
 106 run: jump-unless screen, 
9999 mem: location 1195 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1195 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1195 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1196
 106 run: reply width:number
9999 mem: location 1196 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1415
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1408 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1195
9999 mem: incrementing refcount of 1012: 83 -> 84
 106 run: jump-unless screen, 
9999 mem: location 1195 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1195 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1195 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1196
 106 run: reply height:number
9999 mem: location 1196 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1416
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1409 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1402
9999 mem: location 1164 is 0
9999 mem: location 1409 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is number
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1417
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1409 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1402
9999 mem: location 1164 is 0
9999 mem: location 1409 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is number
9999 mem: location 1158 is 9
9999 mem: storing 9 in location 1418
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1409 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1402
9999 mem: location 1164 is 0
9999 mem: location 1409 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1419
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1409 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1402
9999 mem: location 1164 is 0
9999 mem: location 1409 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1420
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1409 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1402
9999 mem: location 1164 is 0
9999 mem: location 1409 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1421
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1420 is 1160
9999 mem: location 1160 is 2
9999 mem: storing 2 in location 1422
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1421 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1423
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1410 is 1
9999 mem: location 1411 is 65515
9999 mem: location 1412 is 0
9999 mem: location 1413 is 0
9999 mem: storing 0 in location 1424
 105 run: jump-unless c, 
9999 mem: location 1424 is 0
9998 run: jumping to instruction 438
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1410 is 1
9999 mem: location 1411 is 65515
9999 mem: location 1412 is 0
9999 mem: location 1413 is 0
9999 mem: storing 1411 in location 1478
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1478 is 1411
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1478 is 1411
9999 mem: location 1411 is 65515
9999 mem: storing 0 in location 1441
 105 run: jump-unless page-up?, 
9999 mem: location 1441 is 0
9998 run: jumping to instruction 482
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1478 is 1411
9999 mem: location 1411 is 65515
9999 mem: storing 0 in location 1457
 105 run: jump-unless page-down?, 
9999 mem: location 1457 is 0
9998 run: jumping to instruction 523
 105 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1478 is 1411
9999 mem: location 1411 is 65515
9999 mem: storing 0 in location 1464
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1464 is 0
9998 run: jumping to instruction 561
 105 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1478 is 1411
9999 mem: location 1411 is 65515
9999 mem: storing 0 in location 1465
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1465 is 0
9998 run: jumping to instruction 599
 105 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1478 is 1411
9999 mem: location 1411 is 65515
9999 mem: storing 0 in location 1479
 105 run: jump-unless move-to-next-line?, 
9999 mem: location 1479 is 0
9998 run: jumping to instruction 636
 105 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1478 is 1411
9999 mem: location 1411 is 65515
9999 mem: storing 0 in location 1480
 105 run: jump-unless move-to-previous-line?, 
9999 mem: location 1480 is 0
9998 run: jumping to instruction 673
 105 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1478 is 1411
9999 mem: location 1411 is 65515
9999 mem: storing 1 in location 1481
 105 run: jump-unless move-to-previous-character?, 
9999 mem: location 1481 is 1
9998 run: jump-unless fell through
 105 run: trace 10, [app], [left arrow]
  10 app: left arrow 
 105 run: prev:address:shared:duplex-list:character <- prev_2 *before-cursor
9999 mem: location 1419 is 1156
9999 mem: location 1156 is 1205
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1195
9999 mem: incrementing refcount of 1205: 19 -> 20
 106 run: jump-if in, 1:offset
9999 mem: location 1195 is 1205
9998 run: jumping to instruction 4
 106 run: result <- get *in, prev:offset
9999 mem: location 1195 is 1205
9999 mem: skipping refcount at 1205
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1206 is 10
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1195 is 1205
9999 mem: skipping refcount at 1205
9999 type: type deduced to be character$
9998 run: address to copy is 1208
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1208 is 1201
9999 mem: storing 1201 in location 1196
9999 mem: incrementing refcount of 1201: 18 -> 19
 106 run: reply result
9999 mem: location 1196 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1201
9999 mem: storing 1201 in location 1482
9999 mem: incrementing refcount of 1201: 19 -> 20
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1414
 105 run: jump-if prev, 1:offset
9999 mem: location 1482 is 1201
9998 run: jumping to instruction 682
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1409 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1402
9999 mem: location 1164 is 0
9999 mem: location 1409 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 2
9999 mem: storing 2 in location 1444
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1409 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1402
9999 mem: location 1164 is 0
9999 mem: location 1409 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is number
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1445
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1409 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1402
9999 mem: location 1164 is 0
9999 mem: location 1409 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1154 is 1174
9999 mem: storing 1174 in location 1446
9999 mem: incrementing refcount of 1174: 14 -> 15
 105 run: editor, go-render? <- move-cursor-coordinates-left editor
9999 mem: location 1409 is 1152
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 17
9999 mem: allocating size 19
9999 mem: new alloc: 1492
9999 mem: storing 17 in location 1493
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1495
9999 mem: incrementing refcount of 1152: 11 -> 12
 106 run: before-cursor:address:shared:duplex-list:character <- get *editor, before-cursor:offset
9999 mem: location 1495 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1402
9999 mem: location 1164 is 0
9999 mem: location 1495 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1156 is 1205
9999 mem: storing 1205 in location 1496
9999 mem: incrementing refcount of 1205: 20 -> 21
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1495 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1402
9999 mem: location 1164 is 0
9999 mem: location 1495 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1497
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1495 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1402
9999 mem: location 1164 is 0
9999 mem: location 1495 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1498
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1495 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1402
9999 mem: location 1164 is 0
9999 mem: location 1495 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is number
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1499
 106 run: at-left-margin?:boolean <- equal *cursor-column, left
9999 mem: location 1498 is 1161
9999 mem: location 1161 is 0
9999 mem: location 1499 is 0
9999 mem: storing 1 in location 1500
 106 run: jump-if at-left-margin?, 
9999 mem: location 1500 is 1
9998 run: jumping to instruction 13
 106 run: top-of-screen?:boolean <- equal *cursor-row, 1
9999 mem: location 1497 is 1160
9999 mem: location 1160 is 2
9999 mem: storing 0 in location 1502
 106 run: go-render?:boolean <- copy 0/false
9999 mem: storing 0 in location 1501
 106 run: jump-if top-of-screen?, 
9999 mem: location 1502 is 0
9998 run: jump-if fell through
 106 run: *cursor-row <- subtract *cursor-row, 1
9999 mem: location 1497 is 1160
9999 mem: location 1160 is 2
9999 mem: location 1497 is 1160
9999 mem: storing 1 in location 1160
 106 run: jump-unless top-of-screen?, 
9999 mem: location 1502 is 0
9998 run: jumping to instruction 32
 106 run: previous-character:character <- get *before-cursor, value:offset
9999 mem: location 1496 is 1205
9999 mem: skipping refcount at 1205
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1206 is 10
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1496 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1206
9998 run: its type is character
9999 mem: location 1206 is 10
9999 mem: storing 10 in location 1506
 106 run: previous-character-is-newline?:boolean <- equal previous-character, 10/newline
9999 mem: location 1506 is 10
9999 mem: storing 1 in location 1507
 106 run: jump-unless previous-character-is-newline?, 
9999 mem: location 1507 is 1
9998 run: jump-unless fell through
 106 run: trace 10, [app], [switching to previous line]
  10 app: switching to previous line 
 106 run: d:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1495 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1402
9999 mem: location 1164 is 0
9999 mem: location 1495 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1153
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1153 is 1174
9999 mem: storing 1174 in location 1508
9999 mem: incrementing refcount of 1174: 15 -> 16
 106 run: end-of-line:number <- previous-line-length before-cursor, d
9999 mem: location 1496 is 1205
9999 mem: location 1508 is 1174
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: curr:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1168
9999 mem: incrementing refcount of 1205: 21 -> 22
 107 run: start:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1174 in location 1169
9999 mem: incrementing refcount of 1174: 16 -> 17
 107 run: result:number <- copy 0
9999 mem: storing 0 in location 1170
 107 run: jump-if curr, 1:offset
9999 mem: location 1168 is 1205
9998 run: jumping to instruction 6
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1168 is 1205
9999 mem: location 1169 is 1174
9999 mem: storing 0 in location 1171
 107 run: jump-unless at-start?, 1:offset
9999 mem: location 1171 is 0
9998 run: jumping to instruction 9
 107 run: curr <- prev_2 curr
9999 mem: location 1168 is 1205
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1195
9999 mem: incrementing refcount of 1205: 22 -> 23
 108 run: jump-if in, 1:offset
9999 mem: location 1195 is 1205
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1195 is 1205
9999 mem: skipping refcount at 1205
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1206 is 10
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1195 is 1205
9999 mem: skipping refcount at 1205
9999 type: type deduced to be character$
9998 run: address to copy is 1208
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1208 is 1201
9999 mem: storing 1201 in location 1196
9999 mem: incrementing refcount of 1201: 20 -> 21
 108 run: reply result
9999 mem: location 1196 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1205: 23 -> 22
9999 mem: storing 1201 in location 1168
9999 mem: incrementing refcount of 1201: 21 -> 22
 107 run: jump-unless curr, 
9999 mem: location 1168 is 1201
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1168 is 1201
9999 mem: location 1169 is 1174
9999 mem: storing 0 in location 1171
 107 run: jump-if at-start?, 
9999 mem: location 1171 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1168 is 1201
9999 mem: skipping refcount at 1201
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1202 is 99
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1197
9999 mem: location 1168 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1202
9998 run: its type is character
9999 mem: location 1202 is 99
9999 mem: storing 99 in location 1172
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1172 is 99
9999 mem: storing 0 in location 1173
 107 run: jump-if at-newline?, 
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 107 run: result <- add result, 1
9999 mem: location 1170 is 0
9999 mem: storing 1 in location 1170
 107 run: jump 
9998 run: jumping to instruction 10
 107 run: curr <- prev_2 curr
9999 mem: location 1168 is 1201
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1195
9999 mem: incrementing refcount of 1201: 22 -> 23
 108 run: jump-if in, 1:offset
9999 mem: location 1195 is 1201
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1195 is 1201
9999 mem: skipping refcount at 1201
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1202 is 99
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1197
9999 mem: location 1195 is 1201
9999 mem: skipping refcount at 1201
9999 type: type deduced to be character$
9998 run: address to copy is 1204
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1204 is 1197
9999 mem: storing 1197 in location 1196
9999 mem: incrementing refcount of 1197: 18 -> 19
 108 run: reply result
9999 mem: location 1196 is 1197
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1197
9999 mem: decrementing refcount of 1201: 23 -> 22
9999 mem: storing 1197 in location 1168
9999 mem: incrementing refcount of 1197: 19 -> 20
 107 run: jump-unless curr, 
9999 mem: location 1168 is 1197
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1168 is 1197
9999 mem: location 1169 is 1174
9999 mem: storing 0 in location 1171
 107 run: jump-if at-start?, 
9999 mem: location 1171 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1168 is 1197
9999 mem: skipping refcount at 1197
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1198 is 98
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1188
9999 mem: location 1168 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1198
9998 run: its type is character
9999 mem: location 1198 is 98
9999 mem: storing 98 in location 1172
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1172 is 98
9999 mem: storing 0 in location 1173
 107 run: jump-if at-newline?, 
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 107 run: result <- add result, 1
9999 mem: location 1170 is 1
9999 mem: storing 2 in location 1170
 107 run: jump 
9998 run: jumping to instruction 10
 107 run: curr <- prev_2 curr
9999 mem: location 1168 is 1197
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1197 in location 1195
9999 mem: incrementing refcount of 1197: 20 -> 21
 108 run: jump-if in, 1:offset
9999 mem: location 1195 is 1197
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1195 is 1197
9999 mem: skipping refcount at 1197
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1198 is 98
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1188
9999 mem: location 1195 is 1197
9999 mem: skipping refcount at 1197
9999 type: type deduced to be character$
9998 run: address to copy is 1200
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1200 is 1188
9999 mem: storing 1188 in location 1196
9999 mem: incrementing refcount of 1188: 18 -> 19
 108 run: reply result
9999 mem: location 1196 is 1188
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1188
9999 mem: decrementing refcount of 1197: 21 -> 20
9999 mem: storing 1188 in location 1168
9999 mem: incrementing refcount of 1188: 19 -> 20
 107 run: jump-unless curr, 
9999 mem: location 1168 is 1188
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1168 is 1188
9999 mem: location 1169 is 1174
9999 mem: storing 0 in location 1171
 107 run: jump-if at-start?, 
9999 mem: location 1171 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1168 is 1188
9999 mem: skipping refcount at 1188
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1189 is 97
9999 mem: location 1190 is 1197
9999 mem: location 1191 is 1174
9999 mem: location 1168 is 1188
9999 mem: skipping refcount at 1188
9998 run: address to copy is 1189
9998 run: its type is character
9999 mem: location 1189 is 97
9999 mem: storing 97 in location 1172
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1172 is 97
9999 mem: storing 0 in location 1173
 107 run: jump-if at-newline?, 
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 107 run: result <- add result, 1
9999 mem: location 1170 is 2
9999 mem: storing 3 in location 1170
 107 run: jump 
9998 run: jumping to instruction 10
 107 run: curr <- prev_2 curr
9999 mem: location 1168 is 1188
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1188 in location 1195
9999 mem: incrementing refcount of 1188: 20 -> 21
 108 run: jump-if in, 1:offset
9999 mem: location 1195 is 1188
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1195 is 1188
9999 mem: skipping refcount at 1188
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1189 is 97
9999 mem: location 1190 is 1197
9999 mem: location 1191 is 1174
9999 mem: location 1195 is 1188
9999 mem: skipping refcount at 1188
9999 type: type deduced to be character$
9998 run: address to copy is 1191
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1191 is 1174
9999 mem: storing 1174 in location 1196
9999 mem: incrementing refcount of 1174: 17 -> 18
 108 run: reply result
9999 mem: location 1196 is 1174
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1174
9999 mem: decrementing refcount of 1188: 21 -> 20
9999 mem: storing 1174 in location 1168
9999 mem: incrementing refcount of 1174: 18 -> 19
 107 run: jump-unless curr, 
9999 mem: location 1168 is 1174
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1168 is 1174
9999 mem: location 1169 is 1174
9999 mem: storing 1 in location 1171
 107 run: jump-if at-start?, 
9999 mem: location 1171 is 1
9998 run: jumping to instruction 19
 107 run: reply result:number
9999 mem: location 1170 is 3
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 3
9999 mem: storing 3 in location 1509
 106 run: *cursor-column <- add left, end-of-line
9999 mem: location 1499 is 0
9999 mem: location 1509 is 3
9999 mem: location 1498 is 1161
9999 mem: storing 3 in location 1161
 106 run: reply editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1495 is 1152
9999 mem: location 1501 is 0
9999 abandon: saving in free-list of size 19
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1152
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1152: 12 -> 11
9999 mem: storing 1152 in location 1409
9999 mem: incrementing refcount of 1152: 11 -> 12
9999 mem: storing 0 in location 1414
 105 run: *before-cursor <- copy prev
9999 mem: location 1482 is 1201
9999 mem: location 1419 is 1156
9999 mem: decrementing refcount of 1205: 22 -> 21
9999 mem: storing 1201 in location 1156
9999 mem: incrementing refcount of 1201: 22 -> 23
 105 run: undo-coalesce-tag:number <- copy 1/left-arrow
9999 mem: storing 1 in location 1447
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1409 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1201
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1402
9999 mem: location 1164 is 0
9999 mem: location 1409 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1448
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1409 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1201
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1402
9999 mem: location 1164 is 0
9999 mem: location 1409 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is number
9999 mem: location 1161 is 3
9999 mem: storing 3 in location 1449
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1409 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1201
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1402
9999 mem: location 1164 is 0
9999 mem: location 1409 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1154 is 1174
9999 mem: storing 1174 in location 1450
9999 mem: incrementing refcount of 1174: 19 -> 20
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1447 is 1
9998 run: jump-unless fell through
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1409 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1201
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1402
9999 mem: location 1164 is 0
9999 mem: location 1409 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1428
 105 run: jump-unless *undo, 
9999 mem: location 1428 is 1163
9999 mem: location 1163 is 1402
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1428 is 1163
9999 mem: location 1163 is 1402
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1402 in location 1195
9999 mem: incrementing refcount of 1402: 2 -> 3
 106 run: result <- get *in, value:offset
9999 mem: location 1195 is 1402
9999 mem: skipping refcount at 1402
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1403 is 1000
9999 mem: location 1404 is 0
9999 mem: location 1195 is 1402
9999 mem: skipping refcount at 1402
9998 run: address to copy is 1403
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1403 is 1000
9999 mem: storing 1000 in location 1196
9999 mem: incrementing refcount of 1000: 4 -> 5
 106 run: reply result:_elem
9999 mem: location 1196 is 1000
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1427
9999 mem: incrementing refcount of 1000: 5 -> 6
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1427 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1174
9999 mem: location 1005 is 2
9999 mem: location 1006 is 0
9999 mem: location 1007 is 1174
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1427 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1002 in location 1433
 105 run: jump-unless move, 
9999 mem: location 1433 is 1002
9998 run: jump-unless fell through
 105 run: previous-coalesce-tag:number <- get *move, tag:offset
9999 mem: location 1433 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1174
9999 mem: location 1005 is 2
9999 mem: location 1006 is 0
9999 mem: location 1007 is 1174
9999 mem: location 1008 is 0
9999 mem: location 1433 is 1002
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1451
 105 run: coalesce?:boolean <- equal undo-coalesce-tag, previous-coalesce-tag
9999 mem: location 1447 is 1
9999 mem: location 1451 is 0
9999 mem: storing 0 in location 1452
 105 run: jump-unless coalesce?, 
9999 mem: location 1452 is 0
9998 run: jumping to instruction 709
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: decrementing refcount of 1000: 6 -> 5
9999 mem: storing 1120 in location 1427
9999 mem: incrementing refcount of 1120: 0 -> 1
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1444 is 2
9999 mem: location 1445 is 0
9999 mem: location 1446 is 1174
9999 mem: location 1448 is 1
9999 mem: location 1449 is 3
9999 mem: location 1450 is 1174
9999 mem: location 1447 is 1
9999 mem: location 1427 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1427 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 1 in location 1121
9999 mem: storing 2 in location 1122
9999 mem: storing 0 in location 1123
9999 mem: storing 1174 in location 1124
9999 mem: storing 1 in location 1125
9999 mem: storing 3 in location 1126
9999 mem: storing 1174 in location 1127
9999 mem: storing 1 in location 1128
 105 run: editor <- add-operation editor, op
9999 mem: location 1409 is 1152
9999 mem: location 1427 is 1120
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1398
9999 mem: incrementing refcount of 1152: 12 -> 13
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1399
9999 mem: incrementing refcount of 1120: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1398 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1201
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1402
9999 mem: location 1164 is 0
9999 mem: location 1398 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1400
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1399 is 1120
9999 mem: location 1400 is 1163
9999 mem: location 1163 is 1402
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1246
9999 mem: incrementing refcount of 1120: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1402 in location 1247
9999 mem: incrementing refcount of 1402: 3 -> 4
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1511
9999 mem: storing 1511 in location 1248
9999 mem: incrementing refcount of 1511: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1248 is 1511
9999 mem: skipping refcount at 1511
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1512 is 0
9999 mem: location 1513 is 0
9999 mem: location 1248 is 1511
9999 mem: skipping refcount at 1511
9998 run: address to copy is 1512
9999 mem: storing 1512 in location 1249
 107 run: *val <- copy x
9999 mem: location 1246 is 1120
9999 mem: location 1249 is 1512
9999 mem: storing 1120 in location 1512
9999 mem: incrementing refcount of 1120: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1248 is 1511
9999 mem: skipping refcount at 1511
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1512 is 1120
9999 mem: location 1513 is 0
9999 mem: location 1248 is 1511
9999 mem: skipping refcount at 1511
9999 type: type deduced to be address$
9998 run: address to copy is 1513
9999 mem: storing 1513 in location 1250
 107 run: *next <- copy in
9999 mem: location 1247 is 1402
9999 mem: location 1250 is 1513
9999 mem: storing 1402 in location 1513
9999 mem: incrementing refcount of 1402: 4 -> 5
 107 run: reply result
9999 mem: location 1248 is 1511
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1511
9999 mem: location 1400 is 1163
9999 mem: decrementing refcount of 1402: 5 -> 4
9999 mem: storing 1511 in location 1163
9999 mem: incrementing refcount of 1511: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1398 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1201
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1511
9999 mem: location 1164 is 0
9999 mem: location 1398 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1401
 106 run: *redo <- copy 0
9999 mem: location 1401 is 1164
9999 mem: storing 0 in location 1164
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1398 is 1152
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1152
9999 mem: decrementing refcount of 1152: 13 -> 12
9999 mem: storing 1152 in location 1409
9999 mem: incrementing refcount of 1152: 12 -> 13
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1408 is 1012
9999 mem: location 1409 is 1152
9999 mem: location 1414 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1152
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 84 -> 83
9999 mem: storing 1012 in location 1325
9999 mem: incrementing refcount of 1012: 83 -> 84
9999 mem: decrementing refcount of 1152: 13 -> 12
9999 mem: storing 1152 in location 1327
9999 mem: incrementing refcount of 1152: 12 -> 13
9999 mem: storing 0 in location 1337
 104 run: jump-unless go-render?, 
9999 mem: location 1337 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1327 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1201
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1511
9999 mem: location 1164 is 0
9999 mem: location 1327 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1328
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1327 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1201
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1511
9999 mem: location 1164 is 0
9999 mem: location 1327 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is number
9999 mem: location 1161 is 3
9999 mem: storing 3 in location 1329
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1325 is 1012
9999 mem: location 1328 is 1
9999 mem: location 1329 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1246
9999 mem: incrementing refcount of 1012: 84 -> 85
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1247
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1248
 105 run: jump-unless screen, 
9999 mem: location 1246 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1246 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1246 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1249
 105 run: *row <- copy new-row
9999 mem: location 1247 is 1
9999 mem: location 1249 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1246 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1246 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1250
 105 run: *column <- copy new-column
9999 mem: location 1248 is 3
9999 mem: location 1250 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1246 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 85 -> 84
9999 mem: storing 1012 in location 1325
9999 mem: incrementing refcount of 1012: 84 -> 85
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1326 is 1319
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1319 in location 1281
9999 mem: incrementing refcount of 1319: 3 -> 4
 105 run: jump-unless console, 
9999 mem: location 1281 is 1319
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1281 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 2
9999 mem: location 1321 is 1309
9999 mem: location 1281 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1320
9999 mem: storing 1320 in location 1282
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1281 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 2
9999 mem: location 1321 is 1309
9999 mem: location 1281 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1321
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1321 is 1309
9999 mem: storing 1309 in location 1283
9999 mem: incrementing refcount of 1309: 2 -> 3
 105 run: max:number <- length *buf
9999 mem: location 1283 is 1309
9999 mem: skipping refcount at 1309
9999 mem: storing 2 in location 1284
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1282 is 1320
9999 mem: location 1320 is 2
9999 mem: location 1284 is 2
9999 mem: storing 1 in location 1285
 105 run: jump-unless done?, 
9999 mem: location 1285 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1192 in location 1286
9999 mem: incrementing refcount of 1192: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1286 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 0
9999 mem: location 1194 is 0
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1281 is 1319
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1319
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1330
9999 mem: storing 0 in location 1331
9999 mem: storing 0 in location 1332
9999 mem: storing 0 in location 1333
9999 mem: decrementing refcount of 1319: 4 -> 3
9999 mem: storing 1319 in location 1326
9999 mem: incrementing refcount of 1319: 3 -> 4
9999 mem: storing 1 in location 1334
9999 mem: storing 1 in location 1335
 104 run: jump-unless found?, 
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1335 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1325 is 1012
9999 mem: location 1326 is 1319
9999 mem: location 1327 is 1152
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9999 mem: location 2 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1201
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1511
9999 mem: location 1164 is 0
9999 mem: location 2 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 3
 103 run: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 mem: location 2 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 1174
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1201
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1511
9999 mem: location 1164 is 0
9999 mem: location 2 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is number
9999 mem: location 1161 is 3
9999 mem: storing 3 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain [
    3 <- 1
    4 <- 3
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label 0, [print-character]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
