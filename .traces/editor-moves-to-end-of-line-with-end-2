 102 run: assume-console [
    left-click 2, 1
    press end
  ]
9999 parse: instruction: left-click
9999 parse:   ingredient: {"2": "literal"}
9999 parse:   ingredient: {"1": "literal"}
9999 parse: instruction: press
9999 parse:   ingredient: {"end": <>}
 102 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
    3:number <- get *2:address:editor-data, cursor-row:offset
    4:number <- get *2:address:editor-data, cursor-column:offset
  ]
9999 parse: instruction: editor-event-loop
9999 parse:   ingredient: {"screen": "address"}
9999 parse:   ingredient: {"console": "address"}
9999 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>}
9999 parse: instruction: get
9999 parse:   ingredient: {"*2": <"address" : <"editor-data" : <>>>, "lookup": <>}
9999 parse:   ingredient: {"cursor-row": "offset"}
9999 parse:   product: {"3": "number"}
9999 parse: instruction: get
9999 parse:   ingredient: {"*2": <"address" : <"editor-data" : <>>>, "lookup": <>}
9999 parse:   ingredient: {"cursor-column": "offset"}
9999 parse:   product: {"4": "number"}
9999 name: element cursor-row of type editor-data is at offset 6
9999 name: element cursor-column of type editor-data is at offset 7
9999 after-brace: recipe run1001
9999 after-brace: editor-event-loop ...
9999 after-brace: get ...
9999 after-brace: get ...
9999 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1296
9999 mem: location 2 is 1115
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1298
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1300
 104 run: console:address <- next-ingredient 
9999 mem: storing 1296 in location 1301
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1302
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1302 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1302 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1303
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1302 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1302 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1304
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1300 is 1009
9999 mem: location 1303 is 1
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1212
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1213
 105 run: break-unless sc, 
9999 mem: location 1211 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 105 run: *row <- copy new-row
9999 mem: location 1212 is 1
9999 mem: location 1214 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 105 run: *column <- copy new-column
9999 mem: location 1213 is 0
9999 mem: location 1215 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1300
 104 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1296
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1296 in location 1261
 105 run: break-unless x, 
9999 mem: location 1261 is 1296
9999 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1261 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1297 is 1287
9999 mem: location 1261 is 1296
9999 run: address to copy is 1296
9999 mem: storing 1296 in location 1262
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1261 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1297 is 1287
9999 mem: location 1261 is 1296
9999 run: address to copy is 1297
9999 run: its type is address
9999 mem: location 1297 is 1287
9999 mem: storing 1287 in location 1263
 105 run: max:number <- length *buf
9999 mem: location 1263 is 1287
9999 mem: storing 2 in location 1264
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1262 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1264 is 2
9999 mem: storing 0 in location 1265
 105 run: break-unless done?, 
9999 mem: location 1265 is 0
9999 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1263 is 1287
9999 mem: location 1262 is 1296
9999 mem: location 1296 is 0
9999 run: address to copy is 1288
9999 run: its type is event
9999 mem: location 1288 is 2
9999 mem: location 1289 is 65513
9999 mem: location 1290 is 2
9999 mem: location 1291 is 1
9999 mem: storing 2 in location 1267
9999 mem: storing 65513 in location 1268
9999 mem: storing 2 in location 1269
9999 mem: storing 1 in location 1270
 105 run: *idx <- add *idx, 1
9999 mem: location 1262 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1262 is 1296
9999 mem: storing 1 in location 1296
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1267 is 2
9999 mem: location 1268 is 65513
9999 mem: location 1269 is 2
9999 mem: location 1270 is 1
9999 mem: location 1261 is 1296
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is [2, 65513, 2, 1]
9999 run: result 1 is 1296
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 2 in location 1305
9999 mem: storing 65513 in location 1306
9999 mem: storing 2 in location 1307
9999 mem: storing 1 in location 1308
9999 mem: storing 1296 in location 1301
9999 mem: storing 1 in location 1309
9999 mem: storing 0 in location 1310
 104 run: loop-unless found?, 
9999 mem: location 1309 is 1
9999 run: jump-unless fell through
 104 run: break-if quit?, 
9999 mem: location 1310 is 0
9999 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1305 is 2
9999 mem: location 1306 is 65513
9999 mem: location 1307 is 2
9999 mem: location 1308 is 1
9999 mem: storing 1306 in location 1311
 104 run: break-unless t, 
9999 mem: location 1311 is 1306
9999 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1300 is 1009
9999 mem: location 1302 is 1115
9999 mem: location 1311 is 1306
9999 mem: location 1306 is 65513
9999 mem: location 1307 is 2
9999 mem: location 1308 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: new alloc: 1313
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1315
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1316
 105 run: t:touch-event <- next-ingredient 
9999 mem: storing 65513 in location 1317
9999 mem: storing 2 in location 1318
9999 mem: storing 1 in location 1319
 105 run: jump-if editor, 1:offset
9999 mem: location 1316 is 1115
9999 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1317 is 65513
9999 mem: location 1318 is 2
9999 mem: location 1319 is 1
9999 run: address to copy is 1318
9999 run: its type is number
9999 mem: location 1318 is 2
9999 mem: storing 2 in location 1320
 105 run: jump-if click-row, 1:offset
9999 mem: location 1320 is 2
9999 run: jumping to instruction 9
 105 run: click-column:number <- get t, column:offset
9999 mem: location 1317 is 65513
9999 mem: location 1318 is 2
9999 mem: location 1319 is 1
9999 run: address to copy is 1319
9999 run: its type is number
9999 mem: location 1319 is 1
9999 mem: storing 1 in location 1321
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1316 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1316 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1322
 105 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1321 is 1
9999 mem: location 1322 is 0
9999 mem: storing 0 in location 1323
 105 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1323 is 0
9999 run: jumping to instruction 14
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1316 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1316 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1324
 105 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1321 is 1
9999 mem: location 1324 is 9
9999 mem: storing 0 in location 1325
 105 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1325 is 0
9999 run: jumping to instruction 18
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1316 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1316 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1326
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1316 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1316 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1327
 105 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1316 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1316 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1154
9999 mem: storing 1154 in location 1328
 105 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1315 is 1009
9999 mem: location 1316 is 1115
9999 mem: location 1320 is 2
9999 mem: location 1321 is 1
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1184
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1185
 106 run: target-row:number <- next-ingredient 
9999 mem: storing 2 in location 1186
 106 run: target-column:number <- next-ingredient 
9999 mem: storing 1 in location 1187
 106 run: jump-if editor, 1:offset
9999 mem: location 1185 is 1115
9999 run: jumping to instruction 7
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1185 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1185 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1188
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1185 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1185 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1189
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1184 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1162
 107 run: break-unless sc, 
9999 mem: location 1162 is 1009
9999 run: jump-unless fell through
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1162 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1163
 107 run: reply height
9999 mem: location 1163 is 5
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 5
9999 mem: storing 5 in location 1190
 106 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1185 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1185 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1154
9999 mem: storing 1154 in location 1191
 106 run: prev:address:duplex-list <- copy curr
9999 mem: location 1191 is 1154
9999 mem: storing 1154 in location 1192
 106 run: curr <- next-duplex curr
9999 mem: location 1191 is 1154
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1154 in location 1162
 107 run: jump-if in, 1:offset
9999 mem: location 1162 is 1154
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1154
9999 mem: location 1154 is 167
9999 mem: location 1155 is 1157
9999 mem: location 1156 is 0
9999 mem: location 1162 is 1154
9999 run: address to copy is 1155
9999 run: its type is address
9999 mem: location 1155 is 1157
9999 mem: storing 1157 in location 1163
 107 run: reply result
9999 mem: location 1163 is 1157
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1157
9999 mem: storing 1157 in location 1191
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1193
 106 run: column:number <- copy left
9999 mem: location 1188 is 0
9999 mem: storing 0 in location 1194
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1185 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1185 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1195
 106 run: *cursor-row <- copy target-row
9999 mem: location 1186 is 2
9999 mem: location 1195 is 1121
9999 mem: storing 2 in location 1121
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1185 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1185 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1196
 106 run: *cursor-column <- copy target-column
9999 mem: location 1187 is 1
9999 mem: location 1196 is 1122
9999 mem: storing 1 in location 1122
 106 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1185 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1185 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1197
 106 run: break-unless curr, 
9999 mem: location 1191 is 1157
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 1
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 106 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 1
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1199
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 0
9999 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1157
9999 mem: location 1157 is 49
9999 mem: location 1158 is 1164
9999 mem: location 1159 is 1154
9999 mem: location 1191 is 1157
9999 run: address to copy is 1157
9999 run: its type is character
9999 mem: location 1157 is 49
9999 mem: storing 49 in location 1201
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 49
9999 mem: storing 0 in location 1202
 106 run: break-unless newline?, 
9999 mem: location 1202 is 0
9999 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1194 is 0
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1204
 106 run: break-unless at-right?, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 56
 106 run: curr <- next-duplex curr
9999 mem: location 1191 is 1157
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1157 in location 1162
 107 run: jump-if in, 1:offset
9999 mem: location 1162 is 1157
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1157
9999 mem: location 1157 is 49
9999 mem: location 1158 is 1164
9999 mem: location 1159 is 1154
9999 mem: location 1162 is 1157
9999 run: address to copy is 1158
9999 run: its type is address
9999 mem: location 1158 is 1164
9999 mem: storing 1164 in location 1163
 107 run: reply result
9999 mem: location 1163 is 1164
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1164
9999 mem: storing 1164 in location 1191
 106 run: prev <- next-duplex prev
9999 mem: location 1192 is 1154
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1154 in location 1162
 107 run: jump-if in, 1:offset
9999 mem: location 1162 is 1154
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1154
9999 mem: location 1154 is 167
9999 mem: location 1155 is 1157
9999 mem: location 1156 is 0
9999 mem: location 1162 is 1154
9999 run: address to copy is 1155
9999 run: its type is address
9999 mem: location 1155 is 1157
9999 mem: storing 1157 in location 1163
 107 run: reply result
9999 mem: location 1163 is 1157
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1157
9999 mem: storing 1157 in location 1192
 106 run: column <- add column, 1
9999 mem: location 1194 is 0
9999 mem: storing 1 in location 1194
 106 run: loop 
9999 run: jumping to instruction 21
 106 run: break-unless curr, 
9999 mem: location 1191 is 1164
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 1
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 106 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 1
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1199
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 0
9999 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1164
9999 mem: location 1164 is 50
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1157
9999 mem: location 1191 is 1164
9999 run: address to copy is 1164
9999 run: its type is character
9999 mem: location 1164 is 50
9999 mem: storing 50 in location 1201
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 50
9999 mem: storing 0 in location 1202
 106 run: break-unless newline?, 
9999 mem: location 1202 is 0
9999 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1194 is 1
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1204
 106 run: break-unless at-right?, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 56
 106 run: curr <- next-duplex curr
9999 mem: location 1191 is 1164
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1164 in location 1162
 107 run: jump-if in, 1:offset
9999 mem: location 1162 is 1164
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1164
9999 mem: location 1164 is 50
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1157
9999 mem: location 1162 is 1164
9999 run: address to copy is 1165
9999 run: its type is address
9999 mem: location 1165 is 1167
9999 mem: storing 1167 in location 1163
 107 run: reply result
9999 mem: location 1163 is 1167
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1167
9999 mem: storing 1167 in location 1191
 106 run: prev <- next-duplex prev
9999 mem: location 1192 is 1157
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1157 in location 1162
 107 run: jump-if in, 1:offset
9999 mem: location 1162 is 1157
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1157
9999 mem: location 1157 is 49
9999 mem: location 1158 is 1164
9999 mem: location 1159 is 1154
9999 mem: location 1162 is 1157
9999 run: address to copy is 1158
9999 run: its type is address
9999 mem: location 1158 is 1164
9999 mem: storing 1164 in location 1163
 107 run: reply result
9999 mem: location 1163 is 1164
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1164
9999 mem: storing 1164 in location 1192
 106 run: column <- add column, 1
9999 mem: location 1194 is 1
9999 mem: storing 2 in location 1194
 106 run: loop 
9999 run: jumping to instruction 21
 106 run: break-unless curr, 
9999 mem: location 1191 is 1167
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 1
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 106 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 1
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1199
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 0
9999 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1167
9999 mem: location 1167 is 51
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1191 is 1167
9999 run: address to copy is 1167
9999 run: its type is character
9999 mem: location 1167 is 51
9999 mem: storing 51 in location 1201
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 51
9999 mem: storing 0 in location 1202
 106 run: break-unless newline?, 
9999 mem: location 1202 is 0
9999 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1194 is 2
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1204
 106 run: break-unless at-right?, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 56
 106 run: curr <- next-duplex curr
9999 mem: location 1191 is 1167
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1167 in location 1162
 107 run: jump-if in, 1:offset
9999 mem: location 1162 is 1167
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1167
9999 mem: location 1167 is 51
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1162 is 1167
9999 run: address to copy is 1168
9999 run: its type is address
9999 mem: location 1168 is 1170
9999 mem: storing 1170 in location 1163
 107 run: reply result
9999 mem: location 1163 is 1170
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1170
9999 mem: storing 1170 in location 1191
 106 run: prev <- next-duplex prev
9999 mem: location 1192 is 1164
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1164 in location 1162
 107 run: jump-if in, 1:offset
9999 mem: location 1162 is 1164
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1164
9999 mem: location 1164 is 50
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1157
9999 mem: location 1162 is 1164
9999 run: address to copy is 1165
9999 run: its type is address
9999 mem: location 1165 is 1167
9999 mem: storing 1167 in location 1163
 107 run: reply result
9999 mem: location 1163 is 1167
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1167
9999 mem: storing 1167 in location 1192
 106 run: column <- add column, 1
9999 mem: location 1194 is 2
9999 mem: storing 3 in location 1194
 106 run: loop 
9999 run: jumping to instruction 21
 106 run: break-unless curr, 
9999 mem: location 1191 is 1170
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 1
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 106 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 1
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1199
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 0
9999 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1170
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1191 is 1170
9999 run: address to copy is 1170
9999 run: its type is character
9999 mem: location 1170 is 10
9999 mem: storing 10 in location 1201
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 10
9999 mem: storing 1 in location 1202
 106 run: break-unless newline?, 
9999 mem: location 1202 is 1
9999 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 1
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1199
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 0
9999 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1193 is 1
9999 mem: storing 2 in location 1193
 106 run: column <- copy left
9999 mem: location 1188 is 0
9999 mem: storing 0 in location 1194
 106 run: curr <- next-duplex curr
9999 mem: location 1191 is 1170
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1170 in location 1162
 107 run: jump-if in, 1:offset
9999 mem: location 1162 is 1170
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1170
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1162 is 1170
9999 run: address to copy is 1171
9999 run: its type is address
9999 mem: location 1171 is 1173
9999 mem: storing 1173 in location 1163
 107 run: reply result
9999 mem: location 1163 is 1173
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1191
 106 run: prev <- next-duplex prev
9999 mem: location 1192 is 1167
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1167 in location 1162
 107 run: jump-if in, 1:offset
9999 mem: location 1162 is 1167
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1167
9999 mem: location 1167 is 51
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1162 is 1167
9999 run: address to copy is 1168
9999 run: its type is address
9999 mem: location 1168 is 1170
9999 mem: storing 1170 in location 1163
 107 run: reply result
9999 mem: location 1163 is 1170
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1170
9999 mem: storing 1170 in location 1192
 106 run: loop +next-character:label
9999 run: jumping to instruction 22
 106 run: break-unless curr, 
9999 mem: location 1191 is 1173
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 2
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 106 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 2
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1199
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1194 is 0
9999 mem: location 1196 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1200
 106 run: break-unless at-cursor?, 
9999 mem: location 1200 is 0
9999 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1173
9999 mem: location 1173 is 52
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1191 is 1173
9999 run: address to copy is 1173
9999 run: its type is character
9999 mem: location 1173 is 52
9999 mem: storing 52 in location 1201
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 52
9999 mem: storing 0 in location 1202
 106 run: break-unless newline?, 
9999 mem: location 1202 is 0
9999 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1194 is 0
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1204
 106 run: break-unless at-right?, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 56
 106 run: curr <- next-duplex curr
9999 mem: location 1191 is 1173
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1162
 107 run: jump-if in, 1:offset
9999 mem: location 1162 is 1173
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1173
9999 mem: location 1173 is 52
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1162 is 1173
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1163
 107 run: reply result
9999 mem: location 1163 is 1176
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1191
 106 run: prev <- next-duplex prev
9999 mem: location 1192 is 1170
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1170 in location 1162
 107 run: jump-if in, 1:offset
9999 mem: location 1162 is 1170
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1170
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1162 is 1170
9999 run: address to copy is 1171
9999 run: its type is address
9999 mem: location 1171 is 1173
9999 mem: storing 1173 in location 1163
 107 run: reply result
9999 mem: location 1163 is 1173
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1192
 106 run: column <- add column, 1
9999 mem: location 1194 is 0
9999 mem: storing 1 in location 1194
 106 run: loop 
9999 run: jumping to instruction 21
9999 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run1001/scenario-editor-moves-to-end-of-line-with-end-2
 106 run: break-unless curr, 
9999 mem: location 1191 is 1176
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 2
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 106 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 2
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1199
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1200
 106 run: break-unless at-cursor?, 
9999 mem: location 1200 is 1
9999 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1192 is 1173
9999 mem: location 1197 is 1118
9999 mem: storing 1173 in location 1118
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1176
9999 mem: location 1176 is 53
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1191 is 1176
9999 run: address to copy is 1176
9999 run: its type is character
9999 mem: location 1176 is 53
9999 mem: storing 53 in location 1201
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 53
9999 mem: storing 0 in location 1202
 106 run: break-unless newline?, 
9999 mem: location 1202 is 0
9999 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1194 is 1
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1204
 106 run: break-unless at-right?, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 56
 106 run: curr <- next-duplex curr
9999 mem: location 1191 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1162
 107 run: jump-if in, 1:offset
9999 mem: location 1162 is 1176
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1176
9999 mem: location 1176 is 53
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1162 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1163
 107 run: reply result
9999 mem: location 1163 is 1179
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1191
 106 run: prev <- next-duplex prev
9999 mem: location 1192 is 1173
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1162
 107 run: jump-if in, 1:offset
9999 mem: location 1162 is 1173
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1173
9999 mem: location 1173 is 52
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1162 is 1173
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1163
 107 run: reply result
9999 mem: location 1163 is 1176
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1192
 106 run: column <- add column, 1
9999 mem: location 1194 is 1
9999 mem: storing 2 in location 1194
 106 run: loop 
9999 run: jumping to instruction 21
 106 run: break-unless curr, 
9999 mem: location 1191 is 1179
9999 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 2
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 106 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 2
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1199
 106 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 1
9999 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1194 is 2
9999 mem: location 1196 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1200
 106 run: break-unless at-cursor?, 
9999 mem: location 1200 is 0
9999 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1179
9999 mem: location 1179 is 54
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1176
9999 mem: location 1191 is 1179
9999 run: address to copy is 1179
9999 run: its type is character
9999 mem: location 1179 is 54
9999 mem: storing 54 in location 1201
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 54
9999 mem: storing 0 in location 1202
 106 run: break-unless newline?, 
9999 mem: location 1202 is 0
9999 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1194 is 2
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1204
 106 run: break-unless at-right?, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 56
 106 run: curr <- next-duplex curr
9999 mem: location 1191 is 1179
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1162
 107 run: jump-if in, 1:offset
9999 mem: location 1162 is 1179
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1179
9999 mem: location 1179 is 54
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1176
9999 mem: location 1162 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1163
 107 run: reply result
9999 mem: location 1163 is 0
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 0
9999 mem: storing 0 in location 1191
 106 run: prev <- next-duplex prev
9999 mem: location 1192 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1162
 107 run: jump-if in, 1:offset
9999 mem: location 1162 is 1176
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1176
9999 mem: location 1176 is 53
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1162 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1163
 107 run: reply result
9999 mem: location 1163 is 1179
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1192
 106 run: column <- add column, 1
9999 mem: location 1194 is 2
9999 mem: storing 3 in location 1194
 106 run: loop 
9999 run: jumping to instruction 21
 106 run: break-unless curr, 
9999 mem: location 1191 is 0
9999 run: jumping to instruction 61
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 2
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1199
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1194 is 3
9999 mem: location 1196 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1205
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1199 is 1
9999 mem: location 1205 is 0
9999 mem: storing 0 in location 1206
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1193 is 2
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1207
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1206 is 0
9999 mem: location 1207 is 0
9999 mem: storing 0 in location 1208
 106 run: break-unless before-cursor?, 
9999 mem: location 1208 is 0
9999 run: jumping to instruction 72
 106 run: reply editor/same-as-ingredient:1
9999 mem: location 1185 is 1115
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1316
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1329
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1316 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1316 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1330
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1316 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1316 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1331
 105 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1316 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1316 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1154
9999 mem: storing 1154 in location 1332
 105 run: break-unless undo-coalesce-tag, 
9999 mem: location 1329 is 0
9999 run: jumping to instruction 44
 105 run: op:address:operation <- new operation:type
9999 mem: storing 1216 in location 1334
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1326 is 1
9999 mem: location 1327 is 0
9999 mem: location 1328 is 1154
9999 mem: location 1330 is 2
9999 mem: location 1331 is 1
9999 mem: location 1332 is 1154
9999 mem: location 1329 is 0
9999 mem: location 1334 is 1216
9999 mem: location 1334 is 1216
9999 mem: storing 1 in location 1216
9999 mem: storing 1 in location 1217
9999 mem: storing 0 in location 1218
9999 mem: storing 1154 in location 1219
9999 mem: storing 2 in location 1220
9999 mem: storing 1 in location 1221
9999 mem: storing 1154 in location 1222
9999 mem: storing 0 in location 1223
 105 run: editor <- add-operation editor, op
9999 mem: location 1316 is 1115
9999 mem: location 1334 is 1216
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1255
 106 run: op:address:operation <- next-ingredient 
9999 mem: storing 1216 in location 1256
 106 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1255 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1255 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1257
 106 run: *undo/skiptypecheck <- push op, *undo
9999 mem: location 1256 is 1216
9999 mem: location 1257 is 1124
9999 mem: location 1124 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:location <- next-ingredient 
9999 mem: storing 1216 in location 1211
 107 run: in:address:list <- next-ingredient 
9999 mem: storing 0 in location 1212
 107 run: result:address:list <- new list:type
9999 mem: new alloc: 1341
9999 mem: storing 1341 in location 1213
 107 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1213 is 1341
9999 mem: location 1341 is 0
9999 mem: location 1342 is 0
9999 mem: location 1213 is 1341
9999 run: address to copy is 1341
9999 mem: storing 1341 in location 1214
 107 run: *val <- copy x
9999 mem: location 1211 is 1216
9999 mem: location 1214 is 1341
9999 mem: storing 1216 in location 1341
 107 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1213 is 1341
9999 mem: location 1341 is 1216
9999 mem: location 1342 is 0
9999 mem: location 1213 is 1341
9999 run: address to copy is 1342
9999 mem: storing 1342 in location 1215
 107 run: *next <- copy in
9999 mem: location 1212 is 0
9999 mem: location 1215 is 1342
9999 mem: storing 0 in location 1342
 107 run: reply result
9999 mem: location 1213 is 1341
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1341
9999 mem: location 1257 is 1124
9999 mem: storing 1341 in location 1124
 106 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1255 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1341
9999 mem: location 1125 is 0
9999 mem: location 1255 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1258
 106 run: *redo <- copy 0
9999 mem: location 1258 is 1125
9999 mem: storing 0 in location 1125
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1255 is 1115
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1316
 105 run: reply 1/true
9999 trace: reply: decrementing callstack depth from 4
 104 run: loop +next-event:label
9999 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1302 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1341
9999 mem: location 1125 is 0
9999 mem: location 1302 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1303
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1302 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1341
9999 mem: location 1125 is 0
9999 mem: location 1302 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1304
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1300 is 1009
9999 mem: location 1303 is 2
9999 mem: location 1304 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1212
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1213
 105 run: break-unless sc, 
9999 mem: location 1211 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 105 run: *row <- copy new-row
9999 mem: location 1212 is 2
9999 mem: location 1214 is 1011
9999 mem: storing 2 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 105 run: *column <- copy new-column
9999 mem: location 1213 is 1
9999 mem: location 1215 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1300
 104 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1296
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1296 in location 1261
 105 run: break-unless x, 
9999 mem: location 1261 is 1296
9999 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1261 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1297 is 1287
9999 mem: location 1261 is 1296
9999 run: address to copy is 1296
9999 mem: storing 1296 in location 1262
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1261 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1297 is 1287
9999 mem: location 1261 is 1296
9999 run: address to copy is 1297
9999 run: its type is address
9999 mem: location 1297 is 1287
9999 mem: storing 1287 in location 1263
 105 run: max:number <- length *buf
9999 mem: location 1263 is 1287
9999 mem: storing 2 in location 1264
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1262 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1264 is 2
9999 mem: storing 0 in location 1265
 105 run: break-unless done?, 
9999 mem: location 1265 is 0
9999 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1263 is 1287
9999 mem: location 1262 is 1296
9999 mem: location 1296 is 1
9999 run: address to copy is 1292
9999 run: its type is event
9999 mem: location 1292 is 1
9999 mem: location 1293 is 65520
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: storing 1 in location 1267
9999 mem: storing 65520 in location 1268
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: *idx <- add *idx, 1
9999 mem: location 1262 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1262 is 1296
9999 mem: storing 2 in location 1296
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1267 is 1
9999 mem: location 1268 is 65520
9999 mem: location 1269 is 0
9999 mem: location 1270 is 0
9999 mem: location 1261 is 1296
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is [1, 65520, 0, 0]
9999 run: result 1 is 1296
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1305
9999 mem: storing 65520 in location 1306
9999 mem: storing 0 in location 1307
9999 mem: storing 0 in location 1308
9999 mem: storing 1296 in location 1301
9999 mem: storing 1 in location 1309
9999 mem: storing 0 in location 1310
 104 run: loop-unless found?, 
9999 mem: location 1309 is 1
9999 run: jump-unless fell through
 104 run: break-if quit?, 
9999 mem: location 1310 is 0
9999 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1305 is 1
9999 mem: location 1306 is 65520
9999 mem: location 1307 is 0
9999 mem: location 1308 is 0
9999 mem: storing 0 in location 1311
 104 run: break-unless t, 
9999 mem: location 1311 is 0
9999 run: jumping to instruction 18
 104 run: break-if t, 
9999 mem: location 1311 is 0
9999 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1300 is 1009
9999 mem: location 1302 is 1115
9999 mem: location 1305 is 1
9999 mem: location 1306 is 65520
9999 mem: location 1307 is 0
9999 mem: location 1308 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: new alloc: 1343
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1345
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1346
 105 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1347
9999 mem: storing 65520 in location 1348
9999 mem: storing 0 in location 1349
9999 mem: storing 0 in location 1350
 105 run: jump-if editor, 1:offset
9999 mem: location 1346 is 1115
9999 run: jumping to instruction 6
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1345 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1162
 106 run: break-unless sc, 
9999 mem: location 1162 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1162 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1163
 106 run: reply width
9999 mem: location 1163 is 10
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 10
9999 mem: storing 10 in location 1351
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1345 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1162
 106 run: break-unless sc, 
9999 mem: location 1162 is 1009
9999 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1162 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1163
 106 run: reply height
9999 mem: location 1163 is 5
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1352
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1346 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1341
9999 mem: location 1125 is 0
9999 mem: location 1346 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1353
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1346 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1341
9999 mem: location 1125 is 0
9999 mem: location 1346 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1354
 105 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1346 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1341
9999 mem: location 1125 is 0
9999 mem: location 1346 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1355
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1346 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1341
9999 mem: location 1125 is 0
9999 mem: location 1346 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1356
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1346 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1341
9999 mem: location 1125 is 0
9999 mem: location 1346 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1357
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1356 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1358
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1357 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1359
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1347 is 1
9999 mem: location 1348 is 65520
9999 mem: location 1349 is 0
9999 mem: location 1350 is 0
9999 mem: storing 0 in location 1360
 105 run: break-unless c, 
9999 mem: location 1360 is 0
9999 run: jumping to instruction 432
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1347 is 1
9999 mem: location 1348 is 65520
9999 mem: location 1349 is 0
9999 mem: location 1350 is 0
9999 mem: storing 1348 in location 1415
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1415 is 1348
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1415 is 1348
9999 mem: location 1348 is 65520
9999 mem: storing 0 in location 1377
 105 run: break-unless page-up?, 
9999 mem: location 1377 is 0
9999 run: jumping to instruction 477
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1415 is 1348
9999 mem: location 1348 is 65520
9999 mem: storing 0 in location 1393
 105 run: break-unless page-down?, 
9999 mem: location 1393 is 0
9999 run: jumping to instruction 519
 105 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1415 is 1348
9999 mem: location 1348 is 65520
9999 mem: storing 1 in location 1400
 105 run: break-unless move-to-end-of-line?, 
9999 mem: location 1400 is 1
9999 run: jump-unless fell through
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1346 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1341
9999 mem: location 1125 is 0
9999 mem: location 1346 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1380
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1346 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1341
9999 mem: location 1125 is 0
9999 mem: location 1346 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1381
 105 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1346 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1341
9999 mem: location 1125 is 0
9999 mem: location 1346 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1154
9999 mem: storing 1154 in location 1382
 105 run: move-to-end-of-line editor
9999 mem: location 1346 is 1115
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1148
 106 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1148 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1341
9999 mem: location 1125 is 0
9999 mem: location 1148 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1149
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1148 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1341
9999 mem: location 1125 is 0
9999 mem: location 1148 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1150
 106 run: next:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1149 is 1118
9999 mem: location 1118 is 1173
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1162
 107 run: jump-if in, 1:offset
9999 mem: location 1162 is 1173
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1173
9999 mem: location 1173 is 52
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1162 is 1173
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1163
 107 run: reply result
9999 mem: location 1163 is 1176
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1151
 106 run: break-unless next, 
9999 mem: location 1151 is 1176
9999 run: jump-unless fell through
 106 run: nextc:character <- get *next, value:offset
9999 mem: location 1151 is 1176
9999 mem: location 1176 is 53
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1151 is 1176
9999 run: address to copy is 1176
9999 run: its type is character
9999 mem: location 1176 is 53
9999 mem: storing 53 in location 1152
 106 run: at-end-of-line?:boolean <- equal nextc, 10/newline
9999 mem: location 1152 is 53
9999 mem: storing 0 in location 1153
 106 run: break-if at-end-of-line?, 
9999 mem: location 1153 is 0
9999 run: jump-if fell through
 106 run: *before-cursor <- copy next
9999 mem: location 1151 is 1176
9999 mem: location 1149 is 1118
9999 mem: storing 1176 in location 1118
 106 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1150 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1150 is 1122
9999 mem: storing 2 in location 1122
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: next:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1149 is 1118
9999 mem: location 1118 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1162
 107 run: jump-if in, 1:offset
9999 mem: location 1162 is 1176
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1176
9999 mem: location 1176 is 53
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1162 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1163
 107 run: reply result
9999 mem: location 1163 is 1179
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1151
 106 run: break-unless next, 
9999 mem: location 1151 is 1179
9999 run: jump-unless fell through
 106 run: nextc:character <- get *next, value:offset
9999 mem: location 1151 is 1179
9999 mem: location 1179 is 54
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1176
9999 mem: location 1151 is 1179
9999 run: address to copy is 1179
9999 run: its type is character
9999 mem: location 1179 is 54
9999 mem: storing 54 in location 1152
 106 run: at-end-of-line?:boolean <- equal nextc, 10/newline
9999 mem: location 1152 is 54
9999 mem: storing 0 in location 1153
 106 run: break-if at-end-of-line?, 
9999 mem: location 1153 is 0
9999 run: jump-if fell through
 106 run: *before-cursor <- copy next
9999 mem: location 1151 is 1179
9999 mem: location 1149 is 1118
9999 mem: storing 1179 in location 1118
 106 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1150 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1150 is 1122
9999 mem: storing 3 in location 1122
 106 run: loop 
9999 run: jumping to instruction 5
 106 run: next:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1149 is 1118
9999 mem: location 1118 is 1179
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1162
 107 run: jump-if in, 1:offset
9999 mem: location 1162 is 1179
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1179
9999 mem: location 1179 is 54
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1176
9999 mem: location 1162 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1163
 107 run: reply result
9999 mem: location 1163 is 0
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 0
9999 mem: storing 0 in location 1151
 106 run: break-unless next, 
9999 mem: location 1151 is 0
9999 run: jumping to instruction 13
9999 trace: fall-through: exiting move-to-end-of-line; decrementing callstack depth from 5
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1383
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1346 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1341
9999 mem: location 1125 is 0
9999 mem: location 1346 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1384
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1346 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1341
9999 mem: location 1125 is 0
9999 mem: location 1346 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1385
 105 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1346 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1341
9999 mem: location 1125 is 0
9999 mem: location 1346 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1154
9999 mem: storing 1154 in location 1386
 105 run: break-unless undo-coalesce-tag, 
9999 mem: location 1383 is 0
9999 run: jumping to instruction 549
 105 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1429
9999 mem: storing 1429 in location 1363
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1380 is 2
9999 mem: location 1381 is 1
9999 mem: location 1382 is 1154
9999 mem: location 1384 is 2
9999 mem: location 1385 is 3
9999 mem: location 1386 is 1154
9999 mem: location 1383 is 0
9999 mem: location 1363 is 1429
9999 mem: location 1363 is 1429
9999 mem: storing 1 in location 1429
9999 mem: storing 2 in location 1430
9999 mem: storing 1 in location 1431
9999 mem: storing 1154 in location 1432
9999 mem: storing 2 in location 1433
9999 mem: storing 3 in location 1434
9999 mem: storing 1154 in location 1435
9999 mem: storing 0 in location 1436
 105 run: editor <- add-operation editor, op
9999 mem: location 1346 is 1115
9999 mem: location 1363 is 1429
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1255
 106 run: op:address:operation <- next-ingredient 
9999 mem: storing 1429 in location 1256
 106 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1255 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1341
9999 mem: location 1125 is 0
9999 mem: location 1255 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1257
 106 run: *undo/skiptypecheck <- push op, *undo
9999 mem: location 1256 is 1429
9999 mem: location 1257 is 1124
9999 mem: location 1124 is 1341
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:location <- next-ingredient 
9999 mem: storing 1429 in location 1211
 107 run: in:address:list <- next-ingredient 
9999 mem: storing 1341 in location 1212
 107 run: result:address:list <- new list:type
9999 mem: new alloc: 1440
9999 mem: storing 1440 in location 1213
 107 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1213 is 1440
9999 mem: location 1440 is 0
9999 mem: location 1441 is 0
9999 mem: location 1213 is 1440
9999 run: address to copy is 1440
9999 mem: storing 1440 in location 1214
 107 run: *val <- copy x
9999 mem: location 1211 is 1429
9999 mem: location 1214 is 1440
9999 mem: storing 1429 in location 1440
 107 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1213 is 1440
9999 mem: location 1440 is 1429
9999 mem: location 1441 is 0
9999 mem: location 1213 is 1440
9999 run: address to copy is 1441
9999 mem: storing 1441 in location 1215
 107 run: *next <- copy in
9999 mem: location 1212 is 1341
9999 mem: location 1215 is 1441
9999 mem: storing 1341 in location 1441
 107 run: reply result
9999 mem: location 1213 is 1440
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1440
9999 mem: location 1257 is 1124
9999 mem: storing 1440 in location 1124
 106 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1255 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1440
9999 mem: location 1125 is 0
9999 mem: location 1255 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1258
 106 run: *redo <- copy 0
9999 mem: location 1258 is 1125
9999 mem: storing 0 in location 1125
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1255 is 1115
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1346
 105 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, 0/no-more-render
9999 mem: location 1345 is 1009
9999 mem: location 1346 is 1115
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1300
9999 mem: storing 1115 in location 1302
9999 mem: storing 0 in location 1312
 104 run: break-unless go-render?, 
9999 mem: location 1312 is 0
9999 run: jumping to instruction 25
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1302 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1440
9999 mem: location 1125 is 0
9999 mem: location 1302 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1303
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1302 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1440
9999 mem: location 1125 is 0
9999 mem: location 1302 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1304
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1300 is 1009
9999 mem: location 1303 is 2
9999 mem: location 1304 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1212
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 3 in location 1213
 105 run: break-unless sc, 
9999 mem: location 1211 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 105 run: *row <- copy new-row
9999 mem: location 1212 is 2
9999 mem: location 1214 is 1011
9999 mem: storing 2 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 105 run: *column <- copy new-column
9999 mem: location 1213 is 3
9999 mem: location 1215 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1300
 104 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1296
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1296 in location 1261
 105 run: break-unless x, 
9999 mem: location 1261 is 1296
9999 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1261 is 1296
9999 mem: location 1296 is 2
9999 mem: location 1297 is 1287
9999 mem: location 1261 is 1296
9999 run: address to copy is 1296
9999 mem: storing 1296 in location 1262
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1261 is 1296
9999 mem: location 1296 is 2
9999 mem: location 1297 is 1287
9999 mem: location 1261 is 1296
9999 run: address to copy is 1297
9999 run: its type is address
9999 mem: location 1297 is 1287
9999 mem: storing 1287 in location 1263
 105 run: max:number <- length *buf
9999 mem: location 1263 is 1287
9999 mem: storing 2 in location 1264
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1262 is 1296
9999 mem: location 1296 is 2
9999 mem: location 1264 is 2
9999 mem: storing 1 in location 1265
 105 run: break-unless done?, 
9999 mem: location 1265 is 1
9999 run: jump-unless fell through
 105 run: dummy:address:event <- new event:type
9999 mem: storing 1160 in location 1266
 105 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1266 is 1160
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1261 is 1296
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1296
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 0 in location 1307
9999 mem: storing 0 in location 1308
9999 mem: storing 1296 in location 1301
9999 mem: storing 1 in location 1309
9999 mem: storing 1 in location 1310
 104 run: loop-unless found?, 
9999 mem: location 1309 is 1
9999 run: jump-unless fell through
 104 run: break-if quit?, 
9999 mem: location 1310 is 1
9999 run: jumping to instruction 28
9999 trace: fall-through: exiting editor-event-loop; decrementing callstack depth from 3
 103 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1440
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 3
 103 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1440
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 4
9999 trace: fall-through: exiting run1001; decrementing callstack depth from 2
 102 run: memory-should-contain [
    3 <- 2
    4 <- 3
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label 0, [print-character]
9999 trace: fall-through: exiting scenario-editor-moves-to-end-of-line-with-end-2; decrementing callstack depth from 1
