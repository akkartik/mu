parse: instruction: run
parse:   ingredient: {name: "\n    default-space:address:array:location <- new location:type, 30\n    x:address:array:character <- new [abc]\n    y:address:array:character <- new [abcd]\n    3:boolean/raw <- string-equal x, y\n  ", properties: [_: "literal-string"]}
parse: instruction: memory-should-contain
parse:   ingredient: {name: "\n    3 <- 0  # abc != abcd\n  ", properties: [_: "literal-string"]}
parse: instruction: trace-should-contain
parse:   ingredient: {name: "\n    string-equal: comparing lengths\n  ", properties: [_: "literal-string"]}
parse: instruction: trace-should-not-contain
parse:   ingredient: {name: "\n    string-equal: comparing characters\n  ", properties: [_: "literal-string"]}
after-brace: recipe scenario-string-equal-distinct-lengths
after-brace: run ...
after-brace: memory-should-contain ...
after-brace: trace-should-contain ...
after-brace: trace-should-not-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: scenario-string-equal-distinct-lengths
 101 run: run [
    default-space:address:array:location <- new location:type, 30
    x:address:array:character <- new [abc]
    y:address:array:character <- new [abcd]
    3:boolean/raw <- string-equal x, y
  ]
parse: instruction: new
parse:   ingredient: {name: "location", properties: ["location": "type"]}
parse:   ingredient: {name: "30", properties: ["30": "literal"]}
parse:   product: {name: "default-space", properties: ["default-space": "address":"array":"location"]}
parse: instruction: new
parse:   ingredient: {name: "abc", properties: [_: "literal-string"]}
parse:   product: {name: "x", properties: ["x": "address":"array":"character"]}
parse: instruction: new
parse:   ingredient: {name: "abcd", properties: [_: "literal-string"]}
parse:   product: {name: "y", properties: ["y": "address":"array":"character"]}
parse: instruction: string-equal
parse:   ingredient: {name: "x", properties: ["x": ]}
parse:   ingredient: {name: "y", properties: ["y": ]}
parse:   product: {name: "3", properties: ["3": "boolean", "raw": ]}
9999 new: location -> location
name: assign x 1
name: assign y 2
after-brace: recipe run1001
after-brace: new ...
after-brace: new ...
after-brace: new ...
after-brace: string-equal ...
 101 run: default-space:address:array:location <- new location:type, 30
9999 mem: array size is 30
9999 mem: new alloc: 1000
 101 run: x:address:array:character <- new [abc]
9999 mem: storing 1031 in location 1002
 101 run: y:address:array:character <- new [abcd]
9999 mem: storing 1035 in location 1003
 101 run: 3:boolean/raw <- string-equal x, y
9999 mem: location 1002 is 1031
9999 mem: location 1003 is 1035
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: new alloc: 1040
 102 run: a:address:array:character <- next-ingredient 
9999 mem: storing 1031 in location 1042
 102 run: a-len:number <- length *a
9999 mem: location 1042 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 97
9999 mem: location 1033 is 98
9999 mem: location 1034 is 99
9999 mem: location 1042 is 1031
9999 mem: storing 3 in location 1043
 102 run: b:address:array:character <- next-ingredient 
9999 mem: storing 1035 in location 1044
 102 run: b-len:number <- length *b
9999 mem: location 1044 is 1035
9999 mem: location 1035 is 4
9999 mem: location 1036 is 97
9999 mem: location 1037 is 98
9999 mem: location 1038 is 99
9999 mem: location 1039 is 100
9999 mem: location 1044 is 1035
9999 mem: storing 4 in location 1045
 102 run: trace [string-equal], [comparing lengths]
   1 string-equal: comparing lengths
 102 run: length-equal?:boolean <- equal a-len, b-len
9999 mem: location 1043 is 3
9999 mem: location 1045 is 4
9999 mem: storing 0 in location 1046
 102 run: break-if length-equal?, 
9999 mem: location 1046 is 0
9999 run: jump-if fell through
 102 run: reply 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 3
 100 run: memory-should-contain [
    3 <- 0  # abc != abcd
  ]
9999 run: checking location 3
 100 run: trace-should-contain [
    string-equal: comparing lengths
  ]
 100 run: trace-should-not-contain [
    string-equal: comparing characters
  ]
