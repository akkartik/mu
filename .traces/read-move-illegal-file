parse: instruction: assume-screen
parse:   ingredient: {name: "20", properties: ["20": "literal", "width": ]}
parse:   ingredient: {name: "2", properties: ["2": "literal", "height": ]}
parse: instruction: run
parse:   ingredient: {name: "\n    1:address:channel <- init-channel 2:literal\n    2:number/routine <- start-running read-move:recipe, 1:address:channel, screen:address\n    # 'read-move' is waiting for input\n    wait-for-routine 2:number\n    3:number <- routine-state 2:number/id\n    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting\n    assert 4:boolean/waiting?, [\nF read-move-file: routine failed to pause after coming up (before any keys were pressed)]\n    1:address:channel <- write 1:address:channel, 50:literal  # '2'\n    restart 2:number/routine\n    wait-for-routine 2:number\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .file too low: 2     .\n    .                    .\n  ", properties: [_: "literal-string"]}
after-brace: recipe read-move-illegal-file
after-brace: assume-screen ...
after-brace: run ...
after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: read-move-illegal-file
 101 run: screen:address <- assume-screen 20:literal/width, 2:literal/height
 102 run: default-space:address:array:location <- new location:type, 30:literal/capacity
9999 mem: array size is 30
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1031
9999 mem: storing 1031 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1032
9999 mem: storing 20 in location 1032
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1031
9999 mem: storing 2 in location 1031
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1033
9999 mem: storing 0 in location 1033
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1034
9999 mem: storing 0 in location 1034
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1032
9999 mem: location 1032 is 20
9999 mem: location 1004 is 1031
9999 mem: location 1031 is 2
9999 mem: storing 40 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 40
9999 mem: array size is 40
9999 mem: new alloc: 1036
9999 mem: location 1008 is 1035
9999 mem: storing 1036 in location 1035
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1117
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1119
 103 run: break-unless x:address:screen, 
9999 mem: location 1119 is 1031
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1119 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1119 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1120
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1120 is 1036
9999 mem: storing 40 in location 1121
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1122
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 0
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 0
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 0
9999 mem: storing 1037 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1124 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1124 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 1
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 1
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 1
9999 mem: storing 1039 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1124 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1124 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 1
9999 mem: storing 2 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 2
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 2
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 2
9999 mem: storing 1041 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1124 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1124 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 2
9999 mem: storing 3 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 3
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 3
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 3
9999 mem: storing 1043 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1124 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1124 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 3
9999 mem: storing 4 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 4
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 4
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 4
9999 mem: storing 1045 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1124 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1124 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 4
9999 mem: storing 5 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 5
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 5
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 5
9999 mem: storing 1047 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1124 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1124 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 5
9999 mem: storing 6 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 6
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 6
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 6
9999 mem: storing 1049 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1124 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1124 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 6
9999 mem: storing 7 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 7
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 7
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 7
9999 mem: storing 1051 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1124 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1124 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 7
9999 mem: storing 8 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 8
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 8
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 8
9999 mem: storing 1053 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1124 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1124 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 8
9999 mem: storing 9 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 9
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 9
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 9
9999 mem: storing 1055 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1124 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1124 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 9
9999 mem: storing 10 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 10
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 10
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 10
9999 mem: storing 1057 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1124 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1124 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 10
9999 mem: storing 11 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 11
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 11
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 11
9999 mem: storing 1059 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1124 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1124 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 11
9999 mem: storing 12 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 12
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 12
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 12
9999 mem: storing 1061 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1124 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1124 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 12
9999 mem: storing 13 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 13
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 13
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 13
9999 mem: storing 1063 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1124 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1124 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 13
9999 mem: storing 14 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 14
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 14
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 14
9999 mem: storing 1065 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1124 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1124 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1066
9999 mem: storing 7 in location 1066
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 14
9999 mem: storing 15 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 15
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 15
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 15
9999 mem: storing 1067 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1124 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1067
9999 mem: storing 0 in location 1067
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1124 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1068
9999 mem: storing 7 in location 1068
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 15
9999 mem: storing 16 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 16
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 16
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 16
9999 mem: storing 1069 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1124 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1069
9999 mem: storing 0 in location 1069
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1124 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1070
9999 mem: storing 7 in location 1070
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 16
9999 mem: storing 17 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 17
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 17
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 17
9999 mem: storing 1071 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1124 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1071
9999 mem: storing 0 in location 1071
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1124 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1072
9999 mem: storing 7 in location 1072
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 17
9999 mem: storing 18 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 18
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 18
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 18
9999 mem: storing 1073 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1124 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1073
9999 mem: storing 0 in location 1073
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1124 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1074
9999 mem: storing 7 in location 1074
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 18
9999 mem: storing 19 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 19
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 19
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 19
9999 mem: storing 1075 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1124 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1075
9999 mem: storing 0 in location 1075
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1124 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1076
9999 mem: storing 7 in location 1076
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 19
9999 mem: storing 20 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 20
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 20
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 20
9999 mem: storing 1077 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1124 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1077
9999 mem: storing 0 in location 1077
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1124 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1078
9999 mem: storing 7 in location 1078
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 20
9999 mem: storing 21 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 21
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 21
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 21
9999 mem: storing 1079 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1124 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1079
9999 mem: storing 0 in location 1079
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1124 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1080
9999 mem: storing 7 in location 1080
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 21
9999 mem: storing 22 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 22
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 22
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 22
9999 mem: storing 1081 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1124 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1081
9999 mem: storing 0 in location 1081
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1124 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1082
9999 mem: storing 7 in location 1082
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 22
9999 mem: storing 23 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 23
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 23
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 23
9999 mem: storing 1083 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1124 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1083
9999 mem: storing 0 in location 1083
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1124 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1084
9999 mem: storing 7 in location 1084
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 23
9999 mem: storing 24 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 24
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 24
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 24
9999 mem: storing 1085 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1124 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1085
9999 mem: storing 0 in location 1085
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1124 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1086
9999 mem: storing 7 in location 1086
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 24
9999 mem: storing 25 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 25
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 25
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 25
9999 mem: storing 1087 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1124 is 1087
9999 run: address to copy is 1087
9999 mem: storing 1087 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1087
9999 mem: storing 0 in location 1087
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1124 is 1087
9999 run: address to copy is 1088
9999 mem: storing 1088 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1088
9999 mem: storing 7 in location 1088
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 25
9999 mem: storing 26 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 26
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 26
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 26
9999 mem: storing 1089 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1124 is 1089
9999 run: address to copy is 1089
9999 mem: storing 1089 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1089
9999 mem: storing 0 in location 1089
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1124 is 1089
9999 run: address to copy is 1090
9999 mem: storing 1090 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1090
9999 mem: storing 7 in location 1090
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 26
9999 mem: storing 27 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 27
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 27
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 27
9999 mem: storing 1091 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1124 is 1091
9999 run: address to copy is 1091
9999 mem: storing 1091 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1091
9999 mem: storing 0 in location 1091
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1124 is 1091
9999 run: address to copy is 1092
9999 mem: storing 1092 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1092
9999 mem: storing 7 in location 1092
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 27
9999 mem: storing 28 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 28
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 28
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 28
9999 mem: storing 1093 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1124 is 1093
9999 run: address to copy is 1093
9999 mem: storing 1093 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1093
9999 mem: storing 0 in location 1093
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1124 is 1093
9999 run: address to copy is 1094
9999 mem: storing 1094 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1094
9999 mem: storing 7 in location 1094
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 28
9999 mem: storing 29 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 29
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 29
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 29
9999 mem: storing 1095 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1124 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1095
9999 mem: storing 0 in location 1095
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1124 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1096
9999 mem: storing 7 in location 1096
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 29
9999 mem: storing 30 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 30
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 30
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 30
9999 mem: storing 1097 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1124 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1097
9999 mem: storing 0 in location 1097
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1124 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1098
9999 mem: storing 7 in location 1098
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 30
9999 mem: storing 31 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 31
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 31
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 31
9999 mem: storing 1099 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1124 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1099
9999 mem: storing 0 in location 1099
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1124 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1100
9999 mem: storing 7 in location 1100
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 31
9999 mem: storing 32 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 32
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 32
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 32
9999 mem: storing 1101 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1124 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1101
9999 mem: storing 0 in location 1101
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1124 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1102
9999 mem: storing 7 in location 1102
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 32
9999 mem: storing 33 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 33
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 33
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 33
9999 mem: storing 1103 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1124 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1103
9999 mem: storing 0 in location 1103
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1124 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1104
9999 mem: storing 7 in location 1104
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 33
9999 mem: storing 34 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 34
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 34
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 34
9999 mem: storing 1105 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1105
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1124 is 1105
9999 run: address to copy is 1105
9999 mem: storing 1105 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1105
9999 mem: storing 0 in location 1105
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1105
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1124 is 1105
9999 run: address to copy is 1106
9999 mem: storing 1106 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1106
9999 mem: storing 7 in location 1106
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 34
9999 mem: storing 35 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 35
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 35
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 35
9999 mem: storing 1107 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1107
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1124 is 1107
9999 run: address to copy is 1107
9999 mem: storing 1107 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1107
9999 mem: storing 0 in location 1107
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1107
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1124 is 1107
9999 run: address to copy is 1108
9999 mem: storing 1108 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1108
9999 mem: storing 7 in location 1108
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 35
9999 mem: storing 36 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 36
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 36
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 36
9999 mem: storing 1109 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1109
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1124 is 1109
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1109
9999 mem: storing 0 in location 1109
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1109
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1124 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1110
9999 mem: storing 7 in location 1110
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 36
9999 mem: storing 37 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 37
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 37
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 37
9999 mem: storing 1111 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1124 is 1111
9999 run: address to copy is 1111
9999 mem: storing 1111 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1111
9999 mem: storing 0 in location 1111
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1124 is 1111
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1112
9999 mem: storing 7 in location 1112
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 37
9999 mem: storing 38 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 38
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 38
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 38
9999 mem: storing 1113 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1124 is 1113
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1113
9999 mem: storing 0 in location 1113
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1124 is 1113
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1114
9999 mem: storing 7 in location 1114
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 38
9999 mem: storing 39 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 39
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 39
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 39
9999 mem: storing 1115 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1115
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1124 is 1115
9999 run: address to copy is 1115
9999 mem: storing 1115 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1115
9999 mem: storing 0 in location 1115
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1115
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1124 is 1115
9999 run: address to copy is 1116
9999 mem: storing 1116 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1116
9999 mem: storing 7 in location 1116
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 39
9999 mem: storing 40 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 40
9999 mem: location 1121 is 40
9999 mem: storing 1 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1119 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1119 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1127
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1127 is 1033
9999 mem: storing 0 in location 1033
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1119 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1119 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1127
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1127 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1119 is 1031
 102 run: reply result:address:screen
9999 mem: location 1002 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 101 run: run [
    1:address:channel <- init-channel 2:literal
    2:number/routine <- start-running read-move:recipe, 1:address:channel, screen:address
    # 'read-move' is waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number/id
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-file: routine failed to pause after coming up (before any keys were pressed)]
    1:address:channel <- write 1:address:channel, 50:literal  # '2'
    restart 2:number/routine
    wait-for-routine 2:number
  ]
parse: instruction: init-channel
parse:   ingredient: {name: "2", properties: ["2": "literal"]}
parse:   product: {name: "1", properties: ["1": "address":"channel"]}
parse: instruction: start-running
parse:   ingredient: {name: "read-move", properties: ["read-move": "recipe"]}
parse:   ingredient: {name: "1", properties: ["1": "address":"channel"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   product: {name: "2", properties: ["2": "number", "routine": ]}
parse: instruction: wait-for-routine
parse:   ingredient: {name: "2", properties: ["2": "number"]}
parse: instruction: routine-state
parse:   ingredient: {name: "2", properties: ["2": "number", "id": ]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: equal
parse:   ingredient: {name: "3", properties: ["3": "number", "routine-state": ]}
parse:   ingredient: {name: "2", properties: ["2": "literal", "waiting": ]}
parse:   product: {name: "4", properties: ["4": "boolean", "waiting?": ]}
parse: instruction: assert
parse:   ingredient: {name: "4", properties: ["4": "boolean", "waiting?": ]}
parse:   ingredient: {name: "\nF read-move-file: routine failed to pause after coming up (before any keys were pressed)", properties: [_: "literal-string"]}
parse: instruction: write
parse:   ingredient: {name: "1", properties: ["1": "address":"channel"]}
parse:   ingredient: {name: "50", properties: ["50": "literal"]}
parse:   product: {name: "1", properties: ["1": "address":"channel"]}
parse: instruction: restart
parse:   ingredient: {name: "2", properties: ["2": "number", "routine": ]}
parse: instruction: wait-for-routine
parse:   ingredient: {name: "2", properties: ["2": "number"]}
after-brace: recipe run1001
after-brace: init-channel ...
after-brace: start-running ...
after-brace: wait-for-routine ...
after-brace: routine-state ...
after-brace: equal ...
after-brace: assert ...
after-brace: write ...
after-brace: restart ...
after-brace: wait-for-routine ...
 101 run: 1:address:channel <- init-channel 2:literal
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1148
 102 run: result:address:channel <- new channel:type
9999 mem: new alloc: 1179
9999 mem: storing 1179 in location 1150
 102 run: full:address:number <- get-address result:address:channel/deref, first-full:offset
9999 mem: location 1150 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1150 is 1179
9999 run: address to copy is 1179
9999 mem: storing 1179 in location 1151
 102 run: full:address:number/deref <- copy 0:literal
9999 mem: location 1151 is 1179
9999 mem: storing 0 in location 1179
 102 run: free:address:number <- get-address result:address:channel/deref, first-free:offset
9999 mem: location 1150 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1150 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 1152
 102 run: free:address:number/deref <- copy 0:literal
9999 mem: location 1152 is 1180
9999 mem: storing 0 in location 1180
 102 run: capacity:number <- next-ingredient 
9999 mem: storing 2 in location 1153
 102 run: capacity:number <- add capacity:number, 1:literal
9999 mem: location 1153 is 2
9999 mem: storing 3 in location 1153
 102 run: dest:address:address:array:location <- get-address result:address:channel/deref, data:offset
9999 mem: location 1150 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1150 is 1179
9999 run: address to copy is 1181
9999 mem: storing 1181 in location 1154
 102 run: dest:address:address:array:location/deref <- new location:type, capacity:number
9999 mem: location 1153 is 3
9999 mem: array size is 3
9999 mem: new alloc: 1182
9999 mem: location 1154 is 1181
9999 mem: storing 1182 in location 1181
 102 run: reply result:address:channel
9999 mem: location 1150 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1
 101 run: 2:number/routine <- start-running read-move:recipe, 1:address:channel, screen:address
9999 mem: location 1 is 1179
9999 mem: location 900 is 1031
9999 new: routine allocated memory from 101000 to 201000
9999 mem: storing 2 in location 2
 101 run: wait-for-routine 2:number
9999 mem: location 2 is 2
9999 run: waiting for routine 2
schedule: read-move
 101 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101000
 101 run: stdin:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101002
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 101003
 101 run: from-file:number, quit?:boolean, error?:boolean <- read-file stdin:address:channel, screen:address
9999 mem: location 101002 is 1179
9999 mem: location 101003 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101031
 102 run: stdin:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101033
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 101034
 102 run: c:character, stdin:address:channel <- read stdin:address:channel
9999 mem: location 101033 is 1179
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101062
 103 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101064
 103 run: empty:boolean <- channel-empty? chan:address:channel
9999 mem: location 101064 is 1179
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101093
 104 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101095
 104 run: full:number <- get chan:address:channel/deref, first-full:offset
9999 mem: location 101095 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 101095 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 0
9999 mem: storing 0 in location 101096
 104 run: free:number <- get chan:address:channel/deref, first-free:offset
9999 mem: location 101095 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 101095 is 1179
9999 run: address to copy is 1180
9999 run: its type is number
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 101097
 104 run: result:boolean <- equal full:number, free:number
9999 mem: location 101096 is 0
9999 mem: location 101097 is 0
9999 mem: storing 1 in location 101098
 104 run: reply result:boolean
9999 mem: location 101098 is 1
9999 run: result 0 is 1
9999 mem: storing 1 in location 101065
 103 run: break-unless empty:boolean, 
9999 mem: location 101065 is 1
9999 run: jump-unless fell through
 103 run: free-address:address:number <- get-address chan:address:channel/deref, first-free:offset
9999 mem: location 101064 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 101064 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 101066
 103 run: wait-for-location free-address:address:number/deref
9999 mem: location 101066 is 1180
9999 mem: location 1180 is 0
9999 mem: location 101066 is 1180
9999 run: waiting for location 1180 to change from 0
schedule: waking up routine 1
schedule: run1001/read-move-illegal-file
 103 run: 3:number <- routine-state 2:number/id
9999 mem: location 2 is 2
9999 mem: storing 2 in location 3
 103 run: 4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
9999 mem: location 3 is 2
9999 mem: storing 1 in location 4
 103 run: assert 4:boolean/waiting?, [
F read-move-file: routine failed to pause after coming up (before any keys were pressed)]
9999 mem: location 4 is 1
 103 run: 1:address:channel <- write 1:address:channel, 50:literal
9999 mem: location 1 is 1179
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1186
 104 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1188
 104 run: val:location <- next-ingredient 
9999 mem: storing 50 in location 1189
 104 run: full:boolean <- channel-full? chan:address:channel
9999 mem: location 1188 is 1179
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1217
 105 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1219
 105 run: tmp:number <- get chan:address:channel/deref, first-free:offset
9999 mem: location 1219 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 1219 is 1179
9999 run: address to copy is 1180
9999 run: its type is number
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1220
 105 run: tmp:number <- add tmp:number, 1:literal
9999 mem: location 1220 is 0
9999 mem: storing 1 in location 1220
 105 run: len:number <- channel-capacity chan:address:channel
9999 mem: location 1219 is 1179
 106 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1248
 106 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1250
 106 run: q:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 1250 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 1250 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 1251
 106 run: result:number <- length q:address:array:location/deref
9999 mem: location 1251 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 0
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1251 is 1182
9999 mem: storing 3 in location 1252
 106 run: reply result:number
9999 mem: location 1252 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1221
 105 run: at-end?:boolean <- greater-or-equal tmp:number, len:number
9999 mem: location 1220 is 1
9999 mem: location 1221 is 3
9999 mem: storing 0 in location 1222
 105 run: break-unless at-end?:boolean, 
9999 mem: location 1222 is 0
9999 run: jumping to instruction 9
 105 run: full:number <- get chan:address:channel/deref, first-full:offset
9999 mem: location 1219 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 1219 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 0
9999 mem: storing 0 in location 1223
 105 run: result:boolean <- equal full:number, tmp:number
9999 mem: location 1223 is 0
9999 mem: location 1220 is 1
9999 mem: storing 0 in location 1224
 105 run: reply result:boolean
9999 mem: location 1224 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1190
 104 run: break-unless full:boolean, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 8
 104 run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 1188 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 1188 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 1192
 104 run: free:address:number <- get-address chan:address:channel/deref, first-free:offset
9999 mem: location 1188 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 1188 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 1193
 104 run: dest:address:location <- index-address circular-buffer:address:array:location/deref, free:address:number/deref
9999 mem: location 1192 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 0
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1193 is 1180
9999 mem: location 1180 is 0
9999 mem: location 1192 is 1182
9999 mem: location 1193 is 1180
9999 mem: location 1180 is 0
9999 mem: storing 1183 in location 1194
 104 run: dest:address:location/deref <- copy val:location
9999 mem: location 1189 is 50
9999 mem: location 1194 is 1183
9999 mem: storing 50 in location 1183
 104 run: free:address:number/deref <- add free:address:number/deref, 1:literal
9999 mem: location 1193 is 1180
9999 mem: location 1180 is 0
9999 mem: location 1193 is 1180
9999 mem: storing 1 in location 1180
 104 run: len:number <- length circular-buffer:address:array:location/deref
9999 mem: location 1192 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 50
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1192 is 1182
9999 mem: storing 3 in location 1195
 104 run: at-end?:boolean <- greater-or-equal free:address:number/deref, len:number
9999 mem: location 1193 is 1180
9999 mem: location 1180 is 1
9999 mem: location 1195 is 3
9999 mem: storing 0 in location 1196
 104 run: break-unless at-end?:boolean, 
9999 mem: location 1196 is 0
9999 run: jumping to instruction 19
 104 run: reply chan:address:channel/same-as-ingredient:0
9999 mem: location 1188 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1
 103 run: restart 2:number/routine
9999 mem: location 2 is 2
 103 run: wait-for-routine 2:number
9999 mem: location 2 is 2
9999 run: waiting for routine 2
schedule: read/read-file/read-move
 103 run: full:address:number <- get-address chan:address:channel/deref, first-full:offset
9999 mem: location 101064 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 101064 is 1179
9999 run: address to copy is 1179
9999 mem: storing 1179 in location 101067
 103 run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 101064 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 101064 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 101068
 103 run: result:location <- index circular-buffer:address:array:location/deref, full:address:number/deref
9999 mem: location 101068 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 50
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 101067 is 1179
9999 mem: location 1179 is 0
9999 mem: location 101068 is 1182
9999 mem: location 101067 is 1179
9999 mem: location 1179 is 0
9999 run: address to copy is 1183
9999 run: its type is number
9999 mem: location 1183 is 50
9999 mem: storing 50 in location 101069
 103 run: full:address:number/deref <- add full:address:number/deref, 1:literal
9999 mem: location 101067 is 1179
9999 mem: location 1179 is 0
9999 mem: location 101067 is 1179
9999 mem: storing 1 in location 1179
 103 run: len:number <- length circular-buffer:address:array:location/deref
9999 mem: location 101068 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 50
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 101068 is 1182
9999 mem: storing 3 in location 101070
 103 run: at-end?:boolean <- greater-or-equal full:address:number/deref, len:number
9999 mem: location 101067 is 1179
9999 mem: location 1179 is 1
9999 mem: location 101070 is 3
9999 mem: storing 0 in location 101071
 103 run: break-unless at-end?:boolean, 
9999 mem: location 101071 is 0
9999 run: jumping to instruction 17
 103 run: reply result:location, chan:address:channel/same-as-ingredient:0
9999 mem: location 101069 is 50
9999 mem: location 101064 is 1179
9999 run: result 0 is 50
9999 run: result 1 is 1179
9999 mem: storing 50 in location 101035
9999 mem: storing 1179 in location 101033
 102 run: q-pressed?:boolean <- equal c:character, 81:literal
9999 mem: location 101035 is 50
9999 mem: storing 0 in location 101036
 102 run: break-unless q-pressed?:boolean, 
9999 mem: location 101036 is 0
9999 run: jumping to instruction 8
 102 run: q-pressed?:boolean <- equal c:character, 113:literal
9999 mem: location 101035 is 50
9999 mem: storing 0 in location 101036
 102 run: break-unless q-pressed?:boolean, 
9999 mem: location 101036 is 0
9999 run: jumping to instruction 13
 102 run: empty-fake-keyboard?:boolean <- equal c:character, 0:literal/eof
9999 mem: location 101035 is 50
9999 mem: storing 0 in location 101037
 102 run: break-unless empty-fake-keyboard?:boolean, 
9999 mem: location 101037 is 0
9999 run: jumping to instruction 18
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101035 is 50
9999 mem: storing 0 in location 101038
 102 run: break-unless newline?:boolean, 
9999 mem: location 101038 is 0
9999 run: jumping to instruction 25
 102 run: file:number <- subtract c:character, 97:literal
9999 mem: location 101035 is 50
9999 mem: storing -47 in location 101040
 102 run: above-min:boolean <- greater-or-equal file:number, 0:literal
9999 mem: location 101040 is -47
9999 mem: storing 0 in location 101041
 102 run: break-if above-min:boolean, 
9999 mem: location 101041 is 0
9999 run: jump-if fell through
 102 run: error-message:address:array:character <- new [file too low: ]
9999 mem: storing 101124 in location 101039
 102 run: print-string screen:address, error-message:address:array:character
9999 mem: location 101034 is 1031
9999 mem: location 101039 is 101124
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101139
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101141
 103 run: s:address:array:character <- next-ingredient 
9999 mem: storing 101124 in location 101142
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 101143
9999 mem: storing 0 in location 101144
 103 run: break-if color-found?:boolean, 
9999 mem: location 101144 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 101143
 103 run: len:number <- length s:address:array:character/deref
9999 mem: location 101142 is 101124
9999 mem: location 101124 is 14
9999 mem: location 101125 is 102
9999 mem: location 101126 is 105
9999 mem: location 101127 is 108
9999 mem: location 101128 is 101
9999 mem: location 101129 is 32
9999 mem: location 101130 is 116
9999 mem: location 101131 is 111
9999 mem: location 101132 is 111
9999 mem: location 101133 is 32
9999 mem: location 101134 is 108
9999 mem: location 101135 is 111
9999 mem: location 101136 is 119
9999 mem: location 101137 is 58
9999 mem: location 101138 is 32
9999 mem: location 101142 is 101124
9999 mem: storing 14 in location 101145
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 101146
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101146 is 0
9999 mem: location 101145 is 14
9999 mem: storing 0 in location 101147
 103 run: break-if done?:boolean, 
9999 mem: location 101147 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101142 is 101124
9999 mem: location 101124 is 14
9999 mem: location 101125 is 102
9999 mem: location 101126 is 105
9999 mem: location 101127 is 108
9999 mem: location 101128 is 101
9999 mem: location 101129 is 32
9999 mem: location 101130 is 116
9999 mem: location 101131 is 111
9999 mem: location 101132 is 111
9999 mem: location 101133 is 32
9999 mem: location 101134 is 108
9999 mem: location 101135 is 111
9999 mem: location 101136 is 119
9999 mem: location 101137 is 58
9999 mem: location 101138 is 32
9999 mem: location 101146 is 0
9999 mem: location 101142 is 101124
9999 mem: location 101146 is 0
9999 run: address to copy is 101125
9999 run: its type is character
9999 mem: location 101125 is 102
9999 mem: storing 102 in location 101148
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101141 is 1031
9999 mem: location 101148 is 102
9999 mem: location 101143 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101170
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101172
 104 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 101173
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101174
9999 mem: storing 1 in location 101175
 104 run: break-if color-found?:boolean, 
9999 mem: location 101175 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101172 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101172 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 101172 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101176
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101172 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 101172 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101177
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101172 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 101172 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101178
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101172 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 101172 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101179
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101173 is 102
9999 mem: storing 0 in location 101180
 104 run: break-unless newline?:boolean, 
9999 mem: location 101180 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101176 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101178 is 20
9999 mem: storing 0 in location 101183
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101183 is 0
9999 mem: location 101177 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 0 in location 101183
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101172 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 101172 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101184
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101173 is 102
9999 mem: storing 0 in location 101185
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101185 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101184 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101183 is 0
9999 mem: location 101184 is 1036
9999 mem: location 101183 is 0
9999 mem: storing 1037 in location 101187
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101187 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 101187 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 101188
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101187 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 101187 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 101189
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101173 is 102
9999 mem: location 101188 is 1037
9999 mem: storing 102 in location 1037
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101174 is 7
9999 mem: location 101189 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101178 is 20
9999 mem: storing 19 in location 101190
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101177 is 1034
9999 mem: location 1034 is 0
9999 mem: location 101190 is 19
9999 mem: storing 0 in location 101191
 104 run: break-if at-right?:boolean, 
9999 mem: location 101191 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101177 is 1034
9999 mem: location 1034 is 0
9999 mem: location 101177 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101172 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101146 is 0
9999 mem: storing 1 in location 101146
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101146 is 1
9999 mem: location 101145 is 14
9999 mem: storing 0 in location 101147
 103 run: break-if done?:boolean, 
9999 mem: location 101147 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101142 is 101124
9999 mem: location 101124 is 14
9999 mem: location 101125 is 102
9999 mem: location 101126 is 105
9999 mem: location 101127 is 108
9999 mem: location 101128 is 101
9999 mem: location 101129 is 32
9999 mem: location 101130 is 116
9999 mem: location 101131 is 111
9999 mem: location 101132 is 111
9999 mem: location 101133 is 32
9999 mem: location 101134 is 108
9999 mem: location 101135 is 111
9999 mem: location 101136 is 119
9999 mem: location 101137 is 58
9999 mem: location 101138 is 32
9999 mem: location 101146 is 1
9999 mem: location 101142 is 101124
9999 mem: location 101146 is 1
9999 run: address to copy is 101126
9999 run: its type is character
9999 mem: location 101126 is 105
9999 mem: storing 105 in location 101148
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101141 is 1031
9999 mem: location 101148 is 105
9999 mem: location 101143 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101201
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101203
 104 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 101204
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101205
9999 mem: storing 1 in location 101206
 104 run: break-if color-found?:boolean, 
9999 mem: location 101206 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101203 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101203 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 101203 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101207
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101203 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 101203 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101208
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101203 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 101203 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101209
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101203 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 101203 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101210
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101204 is 105
9999 mem: storing 0 in location 101211
 104 run: break-unless newline?:boolean, 
9999 mem: location 101211 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101207 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101209 is 20
9999 mem: storing 0 in location 101214
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101214 is 0
9999 mem: location 101208 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 1 in location 101214
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101203 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 101203 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101215
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101204 is 105
9999 mem: storing 0 in location 101216
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101216 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101215 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101214 is 1
9999 mem: location 101215 is 1036
9999 mem: location 101214 is 1
9999 mem: storing 1039 in location 101218
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101218 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 101218 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 101219
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101218 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 101218 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 101220
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101204 is 105
9999 mem: location 101219 is 1039
9999 mem: storing 105 in location 1039
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101205 is 7
9999 mem: location 101220 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101209 is 20
9999 mem: storing 19 in location 101221
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101208 is 1034
9999 mem: location 1034 is 1
9999 mem: location 101221 is 19
9999 mem: storing 0 in location 101222
 104 run: break-if at-right?:boolean, 
9999 mem: location 101222 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101208 is 1034
9999 mem: location 1034 is 1
9999 mem: location 101208 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101203 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101146 is 1
9999 mem: storing 2 in location 101146
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101146 is 2
9999 mem: location 101145 is 14
9999 mem: storing 0 in location 101147
 103 run: break-if done?:boolean, 
9999 mem: location 101147 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101142 is 101124
9999 mem: location 101124 is 14
9999 mem: location 101125 is 102
9999 mem: location 101126 is 105
9999 mem: location 101127 is 108
9999 mem: location 101128 is 101
9999 mem: location 101129 is 32
9999 mem: location 101130 is 116
9999 mem: location 101131 is 111
9999 mem: location 101132 is 111
9999 mem: location 101133 is 32
9999 mem: location 101134 is 108
9999 mem: location 101135 is 111
9999 mem: location 101136 is 119
9999 mem: location 101137 is 58
9999 mem: location 101138 is 32
9999 mem: location 101146 is 2
9999 mem: location 101142 is 101124
9999 mem: location 101146 is 2
9999 run: address to copy is 101127
9999 run: its type is character
9999 mem: location 101127 is 108
9999 mem: storing 108 in location 101148
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101141 is 1031
9999 mem: location 101148 is 108
9999 mem: location 101143 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101232
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101234
 104 run: c:character <- next-ingredient 
9999 mem: storing 108 in location 101235
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101236
9999 mem: storing 1 in location 101237
 104 run: break-if color-found?:boolean, 
9999 mem: location 101237 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101234 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101234 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 101234 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101238
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101234 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 101234 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101239
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101234 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 101234 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101240
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101234 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 101234 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101241
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101235 is 108
9999 mem: storing 0 in location 101242
 104 run: break-unless newline?:boolean, 
9999 mem: location 101242 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101238 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101240 is 20
9999 mem: storing 0 in location 101245
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101245 is 0
9999 mem: location 101239 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 2 in location 101245
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101234 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 101234 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101246
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101235 is 108
9999 mem: storing 0 in location 101247
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101247 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101246 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 105
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101245 is 2
9999 mem: location 101246 is 1036
9999 mem: location 101245 is 2
9999 mem: storing 1041 in location 101249
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101249 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 101249 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 101250
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101249 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 101249 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 101251
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101235 is 108
9999 mem: location 101250 is 1041
9999 mem: storing 108 in location 1041
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101236 is 7
9999 mem: location 101251 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101240 is 20
9999 mem: storing 19 in location 101252
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101239 is 1034
9999 mem: location 1034 is 2
9999 mem: location 101252 is 19
9999 mem: storing 0 in location 101253
 104 run: break-if at-right?:boolean, 
9999 mem: location 101253 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101239 is 1034
9999 mem: location 1034 is 2
9999 mem: location 101239 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101234 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101146 is 2
9999 mem: storing 3 in location 101146
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101146 is 3
9999 mem: location 101145 is 14
9999 mem: storing 0 in location 101147
 103 run: break-if done?:boolean, 
9999 mem: location 101147 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101142 is 101124
9999 mem: location 101124 is 14
9999 mem: location 101125 is 102
9999 mem: location 101126 is 105
9999 mem: location 101127 is 108
9999 mem: location 101128 is 101
9999 mem: location 101129 is 32
9999 mem: location 101130 is 116
9999 mem: location 101131 is 111
9999 mem: location 101132 is 111
9999 mem: location 101133 is 32
9999 mem: location 101134 is 108
9999 mem: location 101135 is 111
9999 mem: location 101136 is 119
9999 mem: location 101137 is 58
9999 mem: location 101138 is 32
9999 mem: location 101146 is 3
9999 mem: location 101142 is 101124
9999 mem: location 101146 is 3
9999 run: address to copy is 101128
9999 run: its type is character
9999 mem: location 101128 is 101
9999 mem: storing 101 in location 101148
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101141 is 1031
9999 mem: location 101148 is 101
9999 mem: location 101143 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101263
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101265
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 101266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101267
9999 mem: storing 1 in location 101268
 104 run: break-if color-found?:boolean, 
9999 mem: location 101268 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101265 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101265 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 101265 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101269
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101265 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 101265 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101270
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101265 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 101265 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101271
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101265 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 101265 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101272
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101266 is 101
9999 mem: storing 0 in location 101273
 104 run: break-unless newline?:boolean, 
9999 mem: location 101273 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101269 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101271 is 20
9999 mem: storing 0 in location 101276
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101276 is 0
9999 mem: location 101270 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 3 in location 101276
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101265 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 101265 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101277
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101266 is 101
9999 mem: storing 0 in location 101278
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101278 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101277 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 105
9999 mem: location 1040 is 7
9999 mem: location 1041 is 108
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101276 is 3
9999 mem: location 101277 is 1036
9999 mem: location 101276 is 3
9999 mem: storing 1043 in location 101280
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101280 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 101280 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 101281
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101280 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 101280 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 101282
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101266 is 101
9999 mem: location 101281 is 1043
9999 mem: storing 101 in location 1043
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101267 is 7
9999 mem: location 101282 is 1044
9999 mem: storing 7 in location 1044
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101271 is 20
9999 mem: storing 19 in location 101283
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101270 is 1034
9999 mem: location 1034 is 3
9999 mem: location 101283 is 19
9999 mem: storing 0 in location 101284
 104 run: break-if at-right?:boolean, 
9999 mem: location 101284 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101270 is 1034
9999 mem: location 1034 is 3
9999 mem: location 101270 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101265 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101146 is 3
9999 mem: storing 4 in location 101146
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101146 is 4
9999 mem: location 101145 is 14
9999 mem: storing 0 in location 101147
 103 run: break-if done?:boolean, 
9999 mem: location 101147 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101142 is 101124
9999 mem: location 101124 is 14
9999 mem: location 101125 is 102
9999 mem: location 101126 is 105
9999 mem: location 101127 is 108
9999 mem: location 101128 is 101
9999 mem: location 101129 is 32
9999 mem: location 101130 is 116
9999 mem: location 101131 is 111
9999 mem: location 101132 is 111
9999 mem: location 101133 is 32
9999 mem: location 101134 is 108
9999 mem: location 101135 is 111
9999 mem: location 101136 is 119
9999 mem: location 101137 is 58
9999 mem: location 101138 is 32
9999 mem: location 101146 is 4
9999 mem: location 101142 is 101124
9999 mem: location 101146 is 4
9999 run: address to copy is 101129
9999 run: its type is character
9999 mem: location 101129 is 32
9999 mem: storing 32 in location 101148
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101141 is 1031
9999 mem: location 101148 is 32
9999 mem: location 101143 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101294
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101296
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 101297
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101298
9999 mem: storing 1 in location 101299
 104 run: break-if color-found?:boolean, 
9999 mem: location 101299 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101296 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101296 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 101296 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101300
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101296 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 101296 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101301
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101296 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 101296 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101302
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101296 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 101296 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101303
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101297 is 32
9999 mem: storing 0 in location 101304
 104 run: break-unless newline?:boolean, 
9999 mem: location 101304 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101300 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101302 is 20
9999 mem: storing 0 in location 101307
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101307 is 0
9999 mem: location 101301 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 4 in location 101307
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101296 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 101296 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101308
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101297 is 32
9999 mem: storing 0 in location 101309
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101309 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101308 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 105
9999 mem: location 1040 is 7
9999 mem: location 1041 is 108
9999 mem: location 1042 is 7
9999 mem: location 1043 is 101
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101307 is 4
9999 mem: location 101308 is 1036
9999 mem: location 101307 is 4
9999 mem: storing 1045 in location 101311
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101311 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 101311 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 101312
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101311 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 101311 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 101313
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101297 is 32
9999 mem: location 101312 is 1045
9999 mem: storing 32 in location 1045
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101298 is 7
9999 mem: location 101313 is 1046
9999 mem: storing 7 in location 1046
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101302 is 20
9999 mem: storing 19 in location 101314
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101301 is 1034
9999 mem: location 1034 is 4
9999 mem: location 101314 is 19
9999 mem: storing 0 in location 101315
 104 run: break-if at-right?:boolean, 
9999 mem: location 101315 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101301 is 1034
9999 mem: location 1034 is 4
9999 mem: location 101301 is 1034
9999 mem: storing 5 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101296 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101146 is 4
9999 mem: storing 5 in location 101146
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101146 is 5
9999 mem: location 101145 is 14
9999 mem: storing 0 in location 101147
 103 run: break-if done?:boolean, 
9999 mem: location 101147 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101142 is 101124
9999 mem: location 101124 is 14
9999 mem: location 101125 is 102
9999 mem: location 101126 is 105
9999 mem: location 101127 is 108
9999 mem: location 101128 is 101
9999 mem: location 101129 is 32
9999 mem: location 101130 is 116
9999 mem: location 101131 is 111
9999 mem: location 101132 is 111
9999 mem: location 101133 is 32
9999 mem: location 101134 is 108
9999 mem: location 101135 is 111
9999 mem: location 101136 is 119
9999 mem: location 101137 is 58
9999 mem: location 101138 is 32
9999 mem: location 101146 is 5
9999 mem: location 101142 is 101124
9999 mem: location 101146 is 5
9999 run: address to copy is 101130
9999 run: its type is character
9999 mem: location 101130 is 116
9999 mem: storing 116 in location 101148
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101141 is 1031
9999 mem: location 101148 is 116
9999 mem: location 101143 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101325
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101327
 104 run: c:character <- next-ingredient 
9999 mem: storing 116 in location 101328
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101329
9999 mem: storing 1 in location 101330
 104 run: break-if color-found?:boolean, 
9999 mem: location 101330 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101327 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101327 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 5
9999 mem: location 1035 is 1036
9999 mem: location 101327 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101331
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101327 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 5
9999 mem: location 1035 is 1036
9999 mem: location 101327 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101332
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101327 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 5
9999 mem: location 1035 is 1036
9999 mem: location 101327 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101333
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101327 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 5
9999 mem: location 1035 is 1036
9999 mem: location 101327 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101334
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101328 is 116
9999 mem: storing 0 in location 101335
 104 run: break-unless newline?:boolean, 
9999 mem: location 101335 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101331 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101333 is 20
9999 mem: storing 0 in location 101338
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101338 is 0
9999 mem: location 101332 is 1034
9999 mem: location 1034 is 5
9999 mem: storing 5 in location 101338
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101327 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 5
9999 mem: location 1035 is 1036
9999 mem: location 101327 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101339
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101328 is 116
9999 mem: storing 0 in location 101340
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101340 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101339 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 105
9999 mem: location 1040 is 7
9999 mem: location 1041 is 108
9999 mem: location 1042 is 7
9999 mem: location 1043 is 101
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101338 is 5
9999 mem: location 101339 is 1036
9999 mem: location 101338 is 5
9999 mem: storing 1047 in location 101342
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101342 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 101342 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 101343
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101342 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 101342 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 101344
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101328 is 116
9999 mem: location 101343 is 1047
9999 mem: storing 116 in location 1047
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101329 is 7
9999 mem: location 101344 is 1048
9999 mem: storing 7 in location 1048
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101333 is 20
9999 mem: storing 19 in location 101345
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101332 is 1034
9999 mem: location 1034 is 5
9999 mem: location 101345 is 19
9999 mem: storing 0 in location 101346
 104 run: break-if at-right?:boolean, 
9999 mem: location 101346 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101332 is 1034
9999 mem: location 1034 is 5
9999 mem: location 101332 is 1034
9999 mem: storing 6 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101327 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101146 is 5
9999 mem: storing 6 in location 101146
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101146 is 6
9999 mem: location 101145 is 14
9999 mem: storing 0 in location 101147
 103 run: break-if done?:boolean, 
9999 mem: location 101147 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101142 is 101124
9999 mem: location 101124 is 14
9999 mem: location 101125 is 102
9999 mem: location 101126 is 105
9999 mem: location 101127 is 108
9999 mem: location 101128 is 101
9999 mem: location 101129 is 32
9999 mem: location 101130 is 116
9999 mem: location 101131 is 111
9999 mem: location 101132 is 111
9999 mem: location 101133 is 32
9999 mem: location 101134 is 108
9999 mem: location 101135 is 111
9999 mem: location 101136 is 119
9999 mem: location 101137 is 58
9999 mem: location 101138 is 32
9999 mem: location 101146 is 6
9999 mem: location 101142 is 101124
9999 mem: location 101146 is 6
9999 run: address to copy is 101131
9999 run: its type is character
9999 mem: location 101131 is 111
9999 mem: storing 111 in location 101148
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101141 is 1031
9999 mem: location 101148 is 111
9999 mem: location 101143 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101356
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101358
 104 run: c:character <- next-ingredient 
9999 mem: storing 111 in location 101359
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101360
9999 mem: storing 1 in location 101361
 104 run: break-if color-found?:boolean, 
9999 mem: location 101361 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101358 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101358 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 6
9999 mem: location 1035 is 1036
9999 mem: location 101358 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101362
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101358 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 6
9999 mem: location 1035 is 1036
9999 mem: location 101358 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101363
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101358 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 6
9999 mem: location 1035 is 1036
9999 mem: location 101358 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101364
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101358 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 6
9999 mem: location 1035 is 1036
9999 mem: location 101358 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101365
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101359 is 111
9999 mem: storing 0 in location 101366
 104 run: break-unless newline?:boolean, 
9999 mem: location 101366 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101362 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101364 is 20
9999 mem: storing 0 in location 101369
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101369 is 0
9999 mem: location 101363 is 1034
9999 mem: location 1034 is 6
9999 mem: storing 6 in location 101369
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101358 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 6
9999 mem: location 1035 is 1036
9999 mem: location 101358 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101370
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101359 is 111
9999 mem: storing 0 in location 101371
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101371 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101370 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 105
9999 mem: location 1040 is 7
9999 mem: location 1041 is 108
9999 mem: location 1042 is 7
9999 mem: location 1043 is 101
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 116
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101369 is 6
9999 mem: location 101370 is 1036
9999 mem: location 101369 is 6
9999 mem: storing 1049 in location 101373
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101373 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 101373 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 101374
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101373 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 101373 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 101375
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101359 is 111
9999 mem: location 101374 is 1049
9999 mem: storing 111 in location 1049
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101360 is 7
9999 mem: location 101375 is 1050
9999 mem: storing 7 in location 1050
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101364 is 20
9999 mem: storing 19 in location 101376
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101363 is 1034
9999 mem: location 1034 is 6
9999 mem: location 101376 is 19
9999 mem: storing 0 in location 101377
 104 run: break-if at-right?:boolean, 
9999 mem: location 101377 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101363 is 1034
9999 mem: location 1034 is 6
9999 mem: location 101363 is 1034
9999 mem: storing 7 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101358 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101146 is 6
9999 mem: storing 7 in location 101146
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101146 is 7
9999 mem: location 101145 is 14
9999 mem: storing 0 in location 101147
 103 run: break-if done?:boolean, 
9999 mem: location 101147 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101142 is 101124
9999 mem: location 101124 is 14
9999 mem: location 101125 is 102
9999 mem: location 101126 is 105
9999 mem: location 101127 is 108
9999 mem: location 101128 is 101
9999 mem: location 101129 is 32
9999 mem: location 101130 is 116
9999 mem: location 101131 is 111
9999 mem: location 101132 is 111
9999 mem: location 101133 is 32
9999 mem: location 101134 is 108
9999 mem: location 101135 is 111
9999 mem: location 101136 is 119
9999 mem: location 101137 is 58
9999 mem: location 101138 is 32
9999 mem: location 101146 is 7
9999 mem: location 101142 is 101124
9999 mem: location 101146 is 7
9999 run: address to copy is 101132
9999 run: its type is character
9999 mem: location 101132 is 111
9999 mem: storing 111 in location 101148
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101141 is 1031
9999 mem: location 101148 is 111
9999 mem: location 101143 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101387
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101389
 104 run: c:character <- next-ingredient 
9999 mem: storing 111 in location 101390
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101391
9999 mem: storing 1 in location 101392
 104 run: break-if color-found?:boolean, 
9999 mem: location 101392 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101389 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101389 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 1036
9999 mem: location 101389 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101393
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101389 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 1036
9999 mem: location 101389 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101394
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101389 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 1036
9999 mem: location 101389 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101395
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101389 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 1036
9999 mem: location 101389 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101396
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101390 is 111
9999 mem: storing 0 in location 101397
 104 run: break-unless newline?:boolean, 
9999 mem: location 101397 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101393 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101395 is 20
9999 mem: storing 0 in location 101400
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101400 is 0
9999 mem: location 101394 is 1034
9999 mem: location 1034 is 7
9999 mem: storing 7 in location 101400
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101389 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 1036
9999 mem: location 101389 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101401
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101390 is 111
9999 mem: storing 0 in location 101402
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101402 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101401 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 105
9999 mem: location 1040 is 7
9999 mem: location 1041 is 108
9999 mem: location 1042 is 7
9999 mem: location 1043 is 101
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 116
9999 mem: location 1048 is 7
9999 mem: location 1049 is 111
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101400 is 7
9999 mem: location 101401 is 1036
9999 mem: location 101400 is 7
9999 mem: storing 1051 in location 101404
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101404 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 101404 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 101405
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101404 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 101404 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 101406
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101390 is 111
9999 mem: location 101405 is 1051
9999 mem: storing 111 in location 1051
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101391 is 7
9999 mem: location 101406 is 1052
9999 mem: storing 7 in location 1052
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101395 is 20
9999 mem: storing 19 in location 101407
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101394 is 1034
9999 mem: location 1034 is 7
9999 mem: location 101407 is 19
9999 mem: storing 0 in location 101408
 104 run: break-if at-right?:boolean, 
9999 mem: location 101408 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101394 is 1034
9999 mem: location 1034 is 7
9999 mem: location 101394 is 1034
9999 mem: storing 8 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101389 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101146 is 7
9999 mem: storing 8 in location 101146
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101146 is 8
9999 mem: location 101145 is 14
9999 mem: storing 0 in location 101147
 103 run: break-if done?:boolean, 
9999 mem: location 101147 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101142 is 101124
9999 mem: location 101124 is 14
9999 mem: location 101125 is 102
9999 mem: location 101126 is 105
9999 mem: location 101127 is 108
9999 mem: location 101128 is 101
9999 mem: location 101129 is 32
9999 mem: location 101130 is 116
9999 mem: location 101131 is 111
9999 mem: location 101132 is 111
9999 mem: location 101133 is 32
9999 mem: location 101134 is 108
9999 mem: location 101135 is 111
9999 mem: location 101136 is 119
9999 mem: location 101137 is 58
9999 mem: location 101138 is 32
9999 mem: location 101146 is 8
9999 mem: location 101142 is 101124
9999 mem: location 101146 is 8
9999 run: address to copy is 101133
9999 run: its type is character
9999 mem: location 101133 is 32
9999 mem: storing 32 in location 101148
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101141 is 1031
9999 mem: location 101148 is 32
9999 mem: location 101143 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101418
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101420
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 101421
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101422
9999 mem: storing 1 in location 101423
 104 run: break-if color-found?:boolean, 
9999 mem: location 101423 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101420 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101420 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 8
9999 mem: location 1035 is 1036
9999 mem: location 101420 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101424
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101420 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 8
9999 mem: location 1035 is 1036
9999 mem: location 101420 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101425
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101420 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 8
9999 mem: location 1035 is 1036
9999 mem: location 101420 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101426
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101420 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 8
9999 mem: location 1035 is 1036
9999 mem: location 101420 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101427
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101421 is 32
9999 mem: storing 0 in location 101428
 104 run: break-unless newline?:boolean, 
9999 mem: location 101428 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101424 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101426 is 20
9999 mem: storing 0 in location 101431
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101431 is 0
9999 mem: location 101425 is 1034
9999 mem: location 1034 is 8
9999 mem: storing 8 in location 101431
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101420 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 8
9999 mem: location 1035 is 1036
9999 mem: location 101420 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101432
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101421 is 32
9999 mem: storing 0 in location 101433
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101433 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101432 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 105
9999 mem: location 1040 is 7
9999 mem: location 1041 is 108
9999 mem: location 1042 is 7
9999 mem: location 1043 is 101
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 116
9999 mem: location 1048 is 7
9999 mem: location 1049 is 111
9999 mem: location 1050 is 7
9999 mem: location 1051 is 111
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101431 is 8
9999 mem: location 101432 is 1036
9999 mem: location 101431 is 8
9999 mem: storing 1053 in location 101435
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101435 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 101435 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 101436
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101435 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 101435 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 101437
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101421 is 32
9999 mem: location 101436 is 1053
9999 mem: storing 32 in location 1053
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101422 is 7
9999 mem: location 101437 is 1054
9999 mem: storing 7 in location 1054
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101426 is 20
9999 mem: storing 19 in location 101438
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101425 is 1034
9999 mem: location 1034 is 8
9999 mem: location 101438 is 19
9999 mem: storing 0 in location 101439
 104 run: break-if at-right?:boolean, 
9999 mem: location 101439 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101425 is 1034
9999 mem: location 1034 is 8
9999 mem: location 101425 is 1034
9999 mem: storing 9 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101420 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101146 is 8
9999 mem: storing 9 in location 101146
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101146 is 9
9999 mem: location 101145 is 14
9999 mem: storing 0 in location 101147
 103 run: break-if done?:boolean, 
9999 mem: location 101147 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101142 is 101124
9999 mem: location 101124 is 14
9999 mem: location 101125 is 102
9999 mem: location 101126 is 105
9999 mem: location 101127 is 108
9999 mem: location 101128 is 101
9999 mem: location 101129 is 32
9999 mem: location 101130 is 116
9999 mem: location 101131 is 111
9999 mem: location 101132 is 111
9999 mem: location 101133 is 32
9999 mem: location 101134 is 108
9999 mem: location 101135 is 111
9999 mem: location 101136 is 119
9999 mem: location 101137 is 58
9999 mem: location 101138 is 32
9999 mem: location 101146 is 9
9999 mem: location 101142 is 101124
9999 mem: location 101146 is 9
9999 run: address to copy is 101134
9999 run: its type is character
9999 mem: location 101134 is 108
9999 mem: storing 108 in location 101148
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101141 is 1031
9999 mem: location 101148 is 108
9999 mem: location 101143 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101449
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101451
 104 run: c:character <- next-ingredient 
9999 mem: storing 108 in location 101452
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101453
9999 mem: storing 1 in location 101454
 104 run: break-if color-found?:boolean, 
9999 mem: location 101454 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101451 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101451 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 9
9999 mem: location 1035 is 1036
9999 mem: location 101451 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101455
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101451 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 9
9999 mem: location 1035 is 1036
9999 mem: location 101451 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101456
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101451 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 9
9999 mem: location 1035 is 1036
9999 mem: location 101451 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101457
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101451 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 9
9999 mem: location 1035 is 1036
9999 mem: location 101451 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101458
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101452 is 108
9999 mem: storing 0 in location 101459
 104 run: break-unless newline?:boolean, 
9999 mem: location 101459 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101455 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101457 is 20
9999 mem: storing 0 in location 101462
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101462 is 0
9999 mem: location 101456 is 1034
9999 mem: location 1034 is 9
9999 mem: storing 9 in location 101462
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101451 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 9
9999 mem: location 1035 is 1036
9999 mem: location 101451 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101463
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101452 is 108
9999 mem: storing 0 in location 101464
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101464 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101463 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 105
9999 mem: location 1040 is 7
9999 mem: location 1041 is 108
9999 mem: location 1042 is 7
9999 mem: location 1043 is 101
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 116
9999 mem: location 1048 is 7
9999 mem: location 1049 is 111
9999 mem: location 1050 is 7
9999 mem: location 1051 is 111
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101462 is 9
9999 mem: location 101463 is 1036
9999 mem: location 101462 is 9
9999 mem: storing 1055 in location 101466
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101466 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 101466 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 101467
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101466 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 101466 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 101468
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101452 is 108
9999 mem: location 101467 is 1055
9999 mem: storing 108 in location 1055
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101453 is 7
9999 mem: location 101468 is 1056
9999 mem: storing 7 in location 1056
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101457 is 20
9999 mem: storing 19 in location 101469
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101456 is 1034
9999 mem: location 1034 is 9
9999 mem: location 101469 is 19
9999 mem: storing 0 in location 101470
 104 run: break-if at-right?:boolean, 
9999 mem: location 101470 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101456 is 1034
9999 mem: location 1034 is 9
9999 mem: location 101456 is 1034
9999 mem: storing 10 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101451 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101146 is 9
9999 mem: storing 10 in location 101146
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101146 is 10
9999 mem: location 101145 is 14
9999 mem: storing 0 in location 101147
 103 run: break-if done?:boolean, 
9999 mem: location 101147 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101142 is 101124
9999 mem: location 101124 is 14
9999 mem: location 101125 is 102
9999 mem: location 101126 is 105
9999 mem: location 101127 is 108
9999 mem: location 101128 is 101
9999 mem: location 101129 is 32
9999 mem: location 101130 is 116
9999 mem: location 101131 is 111
9999 mem: location 101132 is 111
9999 mem: location 101133 is 32
9999 mem: location 101134 is 108
9999 mem: location 101135 is 111
9999 mem: location 101136 is 119
9999 mem: location 101137 is 58
9999 mem: location 101138 is 32
9999 mem: location 101146 is 10
9999 mem: location 101142 is 101124
9999 mem: location 101146 is 10
9999 run: address to copy is 101135
9999 run: its type is character
9999 mem: location 101135 is 111
9999 mem: storing 111 in location 101148
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101141 is 1031
9999 mem: location 101148 is 111
9999 mem: location 101143 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101480
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101482
 104 run: c:character <- next-ingredient 
9999 mem: storing 111 in location 101483
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101484
9999 mem: storing 1 in location 101485
 104 run: break-if color-found?:boolean, 
9999 mem: location 101485 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101482 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101482 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 10
9999 mem: location 1035 is 1036
9999 mem: location 101482 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101486
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101482 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 10
9999 mem: location 1035 is 1036
9999 mem: location 101482 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101487
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101482 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 10
9999 mem: location 1035 is 1036
9999 mem: location 101482 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101488
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101482 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 10
9999 mem: location 1035 is 1036
9999 mem: location 101482 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101489
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101483 is 111
9999 mem: storing 0 in location 101490
 104 run: break-unless newline?:boolean, 
9999 mem: location 101490 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101486 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101488 is 20
9999 mem: storing 0 in location 101493
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101493 is 0
9999 mem: location 101487 is 1034
9999 mem: location 1034 is 10
9999 mem: storing 10 in location 101493
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101482 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 10
9999 mem: location 1035 is 1036
9999 mem: location 101482 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101494
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101483 is 111
9999 mem: storing 0 in location 101495
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101495 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101494 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 105
9999 mem: location 1040 is 7
9999 mem: location 1041 is 108
9999 mem: location 1042 is 7
9999 mem: location 1043 is 101
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 116
9999 mem: location 1048 is 7
9999 mem: location 1049 is 111
9999 mem: location 1050 is 7
9999 mem: location 1051 is 111
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101493 is 10
9999 mem: location 101494 is 1036
9999 mem: location 101493 is 10
9999 mem: storing 1057 in location 101497
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101497 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 101497 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 101498
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101497 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 101497 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 101499
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101483 is 111
9999 mem: location 101498 is 1057
9999 mem: storing 111 in location 1057
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101484 is 7
9999 mem: location 101499 is 1058
9999 mem: storing 7 in location 1058
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101488 is 20
9999 mem: storing 19 in location 101500
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101487 is 1034
9999 mem: location 1034 is 10
9999 mem: location 101500 is 19
9999 mem: storing 0 in location 101501
schedule: print-character/print-string/read-file/read-move
 104 run: break-if at-right?:boolean, 
9999 mem: location 101501 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101487 is 1034
9999 mem: location 1034 is 10
9999 mem: location 101487 is 1034
9999 mem: storing 11 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101482 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101146 is 10
9999 mem: storing 11 in location 101146
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101146 is 11
9999 mem: location 101145 is 14
9999 mem: storing 0 in location 101147
 103 run: break-if done?:boolean, 
9999 mem: location 101147 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101142 is 101124
9999 mem: location 101124 is 14
9999 mem: location 101125 is 102
9999 mem: location 101126 is 105
9999 mem: location 101127 is 108
9999 mem: location 101128 is 101
9999 mem: location 101129 is 32
9999 mem: location 101130 is 116
9999 mem: location 101131 is 111
9999 mem: location 101132 is 111
9999 mem: location 101133 is 32
9999 mem: location 101134 is 108
9999 mem: location 101135 is 111
9999 mem: location 101136 is 119
9999 mem: location 101137 is 58
9999 mem: location 101138 is 32
9999 mem: location 101146 is 11
9999 mem: location 101142 is 101124
9999 mem: location 101146 is 11
9999 run: address to copy is 101136
9999 run: its type is character
9999 mem: location 101136 is 119
9999 mem: storing 119 in location 101148
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101141 is 1031
9999 mem: location 101148 is 119
9999 mem: location 101143 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101511
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101513
 104 run: c:character <- next-ingredient 
9999 mem: storing 119 in location 101514
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101515
9999 mem: storing 1 in location 101516
 104 run: break-if color-found?:boolean, 
9999 mem: location 101516 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101513 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101513 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 11
9999 mem: location 1035 is 1036
9999 mem: location 101513 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101517
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101513 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 11
9999 mem: location 1035 is 1036
9999 mem: location 101513 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101518
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101513 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 11
9999 mem: location 1035 is 1036
9999 mem: location 101513 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101519
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101513 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 11
9999 mem: location 1035 is 1036
9999 mem: location 101513 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101520
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101514 is 119
9999 mem: storing 0 in location 101521
 104 run: break-unless newline?:boolean, 
9999 mem: location 101521 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101517 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101519 is 20
9999 mem: storing 0 in location 101524
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101524 is 0
9999 mem: location 101518 is 1034
9999 mem: location 1034 is 11
9999 mem: storing 11 in location 101524
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101513 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 11
9999 mem: location 1035 is 1036
9999 mem: location 101513 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101525
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101514 is 119
9999 mem: storing 0 in location 101526
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101526 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101525 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 105
9999 mem: location 1040 is 7
9999 mem: location 1041 is 108
9999 mem: location 1042 is 7
9999 mem: location 1043 is 101
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 116
9999 mem: location 1048 is 7
9999 mem: location 1049 is 111
9999 mem: location 1050 is 7
9999 mem: location 1051 is 111
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 111
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101524 is 11
9999 mem: location 101525 is 1036
9999 mem: location 101524 is 11
9999 mem: storing 1059 in location 101528
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101528 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 101528 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 101529
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101528 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 101528 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 101530
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101514 is 119
9999 mem: location 101529 is 1059
9999 mem: storing 119 in location 1059
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101515 is 7
9999 mem: location 101530 is 1060
9999 mem: storing 7 in location 1060
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101519 is 20
9999 mem: storing 19 in location 101531
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101518 is 1034
9999 mem: location 1034 is 11
9999 mem: location 101531 is 19
9999 mem: storing 0 in location 101532
 104 run: break-if at-right?:boolean, 
9999 mem: location 101532 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101518 is 1034
9999 mem: location 1034 is 11
9999 mem: location 101518 is 1034
9999 mem: storing 12 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101513 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101146 is 11
9999 mem: storing 12 in location 101146
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101146 is 12
9999 mem: location 101145 is 14
9999 mem: storing 0 in location 101147
 103 run: break-if done?:boolean, 
9999 mem: location 101147 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101142 is 101124
9999 mem: location 101124 is 14
9999 mem: location 101125 is 102
9999 mem: location 101126 is 105
9999 mem: location 101127 is 108
9999 mem: location 101128 is 101
9999 mem: location 101129 is 32
9999 mem: location 101130 is 116
9999 mem: location 101131 is 111
9999 mem: location 101132 is 111
9999 mem: location 101133 is 32
9999 mem: location 101134 is 108
9999 mem: location 101135 is 111
9999 mem: location 101136 is 119
9999 mem: location 101137 is 58
9999 mem: location 101138 is 32
9999 mem: location 101146 is 12
9999 mem: location 101142 is 101124
9999 mem: location 101146 is 12
9999 run: address to copy is 101137
9999 run: its type is character
9999 mem: location 101137 is 58
9999 mem: storing 58 in location 101148
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101141 is 1031
9999 mem: location 101148 is 58
9999 mem: location 101143 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101542
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101544
 104 run: c:character <- next-ingredient 
9999 mem: storing 58 in location 101545
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101546
9999 mem: storing 1 in location 101547
 104 run: break-if color-found?:boolean, 
9999 mem: location 101547 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101544 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101544 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 12
9999 mem: location 1035 is 1036
9999 mem: location 101544 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101548
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101544 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 12
9999 mem: location 1035 is 1036
9999 mem: location 101544 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101549
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101544 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 12
9999 mem: location 1035 is 1036
9999 mem: location 101544 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101550
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101544 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 12
9999 mem: location 1035 is 1036
9999 mem: location 101544 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101551
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101545 is 58
9999 mem: storing 0 in location 101552
 104 run: break-unless newline?:boolean, 
9999 mem: location 101552 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101548 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101550 is 20
9999 mem: storing 0 in location 101555
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101555 is 0
9999 mem: location 101549 is 1034
9999 mem: location 1034 is 12
9999 mem: storing 12 in location 101555
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101544 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 12
9999 mem: location 1035 is 1036
9999 mem: location 101544 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101556
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101545 is 58
9999 mem: storing 0 in location 101557
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101557 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101556 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 105
9999 mem: location 1040 is 7
9999 mem: location 1041 is 108
9999 mem: location 1042 is 7
9999 mem: location 1043 is 101
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 116
9999 mem: location 1048 is 7
9999 mem: location 1049 is 111
9999 mem: location 1050 is 7
9999 mem: location 1051 is 111
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 111
9999 mem: location 1058 is 7
9999 mem: location 1059 is 119
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101555 is 12
9999 mem: location 101556 is 1036
9999 mem: location 101555 is 12
9999 mem: storing 1061 in location 101559
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101559 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 101559 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 101560
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101559 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 101559 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 101561
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101545 is 58
9999 mem: location 101560 is 1061
9999 mem: storing 58 in location 1061
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101546 is 7
9999 mem: location 101561 is 1062
9999 mem: storing 7 in location 1062
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101550 is 20
9999 mem: storing 19 in location 101562
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101549 is 1034
9999 mem: location 1034 is 12
9999 mem: location 101562 is 19
9999 mem: storing 0 in location 101563
 104 run: break-if at-right?:boolean, 
9999 mem: location 101563 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101549 is 1034
9999 mem: location 1034 is 12
9999 mem: location 101549 is 1034
9999 mem: storing 13 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101544 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101146 is 12
9999 mem: storing 13 in location 101146
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101146 is 13
9999 mem: location 101145 is 14
9999 mem: storing 0 in location 101147
 103 run: break-if done?:boolean, 
9999 mem: location 101147 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101142 is 101124
9999 mem: location 101124 is 14
9999 mem: location 101125 is 102
9999 mem: location 101126 is 105
9999 mem: location 101127 is 108
9999 mem: location 101128 is 101
9999 mem: location 101129 is 32
9999 mem: location 101130 is 116
9999 mem: location 101131 is 111
9999 mem: location 101132 is 111
9999 mem: location 101133 is 32
9999 mem: location 101134 is 108
9999 mem: location 101135 is 111
9999 mem: location 101136 is 119
9999 mem: location 101137 is 58
9999 mem: location 101138 is 32
9999 mem: location 101146 is 13
9999 mem: location 101142 is 101124
9999 mem: location 101146 is 13
9999 run: address to copy is 101138
9999 run: its type is character
9999 mem: location 101138 is 32
9999 mem: storing 32 in location 101148
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101141 is 1031
9999 mem: location 101148 is 32
9999 mem: location 101143 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101573
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101575
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 101576
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101577
9999 mem: storing 1 in location 101578
 104 run: break-if color-found?:boolean, 
9999 mem: location 101578 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101575 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101575 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 13
9999 mem: location 1035 is 1036
9999 mem: location 101575 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101579
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101575 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 13
9999 mem: location 1035 is 1036
9999 mem: location 101575 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101580
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101575 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 13
9999 mem: location 1035 is 1036
9999 mem: location 101575 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101581
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101575 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 13
9999 mem: location 1035 is 1036
9999 mem: location 101575 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101582
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101576 is 32
9999 mem: storing 0 in location 101583
 104 run: break-unless newline?:boolean, 
9999 mem: location 101583 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101579 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101581 is 20
9999 mem: storing 0 in location 101586
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101586 is 0
9999 mem: location 101580 is 1034
9999 mem: location 1034 is 13
9999 mem: storing 13 in location 101586
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101575 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 13
9999 mem: location 1035 is 1036
9999 mem: location 101575 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101587
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101576 is 32
9999 mem: storing 0 in location 101588
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101588 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101587 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 105
9999 mem: location 1040 is 7
9999 mem: location 1041 is 108
9999 mem: location 1042 is 7
9999 mem: location 1043 is 101
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 116
9999 mem: location 1048 is 7
9999 mem: location 1049 is 111
9999 mem: location 1050 is 7
9999 mem: location 1051 is 111
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 111
9999 mem: location 1058 is 7
9999 mem: location 1059 is 119
9999 mem: location 1060 is 7
9999 mem: location 1061 is 58
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101586 is 13
9999 mem: location 101587 is 1036
9999 mem: location 101586 is 13
9999 mem: storing 1063 in location 101590
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101590 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 101590 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 101591
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101590 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 101590 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 101592
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101576 is 32
9999 mem: location 101591 is 1063
9999 mem: storing 32 in location 1063
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101577 is 7
9999 mem: location 101592 is 1064
9999 mem: storing 7 in location 1064
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101581 is 20
9999 mem: storing 19 in location 101593
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101580 is 1034
9999 mem: location 1034 is 13
9999 mem: location 101593 is 19
9999 mem: storing 0 in location 101594
 104 run: break-if at-right?:boolean, 
9999 mem: location 101594 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101580 is 1034
9999 mem: location 1034 is 13
9999 mem: location 101580 is 1034
9999 mem: storing 14 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101575 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101146 is 13
9999 mem: storing 14 in location 101146
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101146 is 14
9999 mem: location 101145 is 14
9999 mem: storing 1 in location 101147
 103 run: break-if done?:boolean, 
9999 mem: location 101147 is 1
9999 run: jumping to instruction 17
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101141 is 1031
 102 run: print-character screen:address, c:character
9999 mem: location 101034 is 1031
9999 mem: location 101035 is 50
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101604
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101606
 103 run: c:character <- next-ingredient 
9999 mem: storing 50 in location 101607
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 101608
9999 mem: storing 0 in location 101609
 103 run: break-if color-found?:boolean, 
9999 mem: location 101609 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 101608
 103 run: break-unless x:address:screen, 
9999 mem: location 101606 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101606 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 14
9999 mem: location 1035 is 1036
9999 mem: location 101606 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101610
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101606 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 14
9999 mem: location 1035 is 1036
9999 mem: location 101606 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101611
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101606 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 14
9999 mem: location 1035 is 1036
9999 mem: location 101606 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101612
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101606 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 14
9999 mem: location 1035 is 1036
9999 mem: location 101606 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101613
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101607 is 50
9999 mem: storing 0 in location 101614
 103 run: break-unless newline?:boolean, 
9999 mem: location 101614 is 0
9999 run: jumping to instruction 25
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101610 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101612 is 20
9999 mem: storing 0 in location 101617
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101617 is 0
9999 mem: location 101611 is 1034
9999 mem: location 1034 is 14
9999 mem: storing 14 in location 101617
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101606 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 14
9999 mem: location 1035 is 1036
9999 mem: location 101606 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101618
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101607 is 50
9999 mem: storing 0 in location 101619
 103 run: break-unless backspace?:boolean, 
9999 mem: location 101619 is 0
9999 run: jumping to instruction 44
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101618 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 105
9999 mem: location 1040 is 7
9999 mem: location 1041 is 108
9999 mem: location 1042 is 7
9999 mem: location 1043 is 101
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 116
9999 mem: location 1048 is 7
9999 mem: location 1049 is 111
9999 mem: location 1050 is 7
9999 mem: location 1051 is 111
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 111
9999 mem: location 1058 is 7
9999 mem: location 1059 is 119
9999 mem: location 1060 is 7
9999 mem: location 1061 is 58
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101617 is 14
9999 mem: location 101618 is 1036
9999 mem: location 101617 is 14
9999 mem: storing 1065 in location 101621
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101621 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 101621 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 101622
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101621 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 101621 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 101623
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101607 is 50
9999 mem: location 101622 is 1065
9999 mem: storing 50 in location 1065
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101608 is 7
9999 mem: location 101623 is 1066
9999 mem: storing 7 in location 1066
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101612 is 20
9999 mem: storing 19 in location 101624
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101611 is 1034
9999 mem: location 1034 is 14
9999 mem: location 101624 is 19
9999 mem: storing 0 in location 101625
 103 run: break-if at-right?:boolean, 
9999 mem: location 101625 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101611 is 1034
9999 mem: location 1034 is 14
9999 mem: location 101611 is 1034
9999 mem: storing 15 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101606 is 1031
 102 run: cursor-to-next-line screen:address
9999 mem: location 101034 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101635
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101637
 103 run: x:address:screen <- cursor-down x:address:screen
9999 mem: location 101637 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101666
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101668
 104 run: break-unless x:address:screen, 
9999 mem: location 101668 is 1031
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101668 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 15
9999 mem: location 1035 is 1036
9999 mem: location 101668 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101669
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101668 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 15
9999 mem: location 1035 is 1036
9999 mem: location 101668 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101670
 104 run: at-bottom?:boolean <- greater-or-equal row:address:number/deref, height:number
9999 mem: location 101670 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101669 is 2
9999 mem: storing 0 in location 101671
 104 run: break-if at-bottom?:boolean, 
9999 mem: location 101671 is 0
9999 run: jump-if fell through
 104 run: row:address:number/deref <- add row:address:number/deref, 1:literal
9999 mem: location 101670 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101670 is 1033
9999 mem: storing 1 in location 1033
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101668 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 101637
 103 run: x:address:screen <- cursor-to-start-of-line x:address:screen
9999 mem: location 101637 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101697
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101699
 104 run: row:number, _, x:address:screen <- cursor-position x:address:screen
9999 mem: location 101699 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101728
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101730
 105 run: break-unless x:address:screen, 
9999 mem: location 101730 is 1031
9999 run: jump-unless fell through
 105 run: row:number <- get x:address:screen/deref, cursor-row:offset
9999 mem: location 101730 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 1
9999 mem: location 1034 is 15
9999 mem: location 1035 is 1036
9999 mem: location 101730 is 1031
9999 run: address to copy is 1033
9999 run: its type is number
9999 mem: location 1033 is 1
9999 mem: storing 1 in location 101731
 105 run: column:number <- get x:address:screen/deref, cursor-column:offset
9999 mem: location 101730 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 1
9999 mem: location 1034 is 15
9999 mem: location 1035 is 1036
9999 mem: location 101730 is 1031
9999 run: address to copy is 1034
9999 run: its type is number
9999 mem: location 1034 is 15
9999 mem: storing 15 in location 101732
 105 run: reply row:number, column:number, x:address:screen/same-as-ingredient:0
9999 mem: location 101731 is 1
9999 mem: location 101732 is 15
9999 mem: location 101730 is 1031
9999 run: result 0 is 1
9999 run: result 1 is 15
9999 run: result 2 is 1031
9999 mem: storing 1 in location 101700
9999 mem: storing 1031 in location 101699
 104 run: column:number <- copy 0:literal
9999 mem: storing 0 in location 101701
 104 run: x:address:screen <- move-cursor x:address:screen, row:number, column:number
9999 mem: location 101699 is 1031
9999 mem: location 101700 is 1
9999 mem: location 101701 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101759
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101761
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 101762
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 101763
 105 run: break-unless x:address:screen, 
9999 mem: location 101761 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101761 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 1
9999 mem: location 1034 is 15
9999 mem: location 1035 is 1036
9999 mem: location 101761 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101764
 105 run: row:address:number/deref <- copy new-row:number
9999 mem: location 101762 is 1
9999 mem: location 101764 is 1033
9999 mem: storing 1 in location 1033
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101761 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 1
9999 mem: location 1034 is 15
9999 mem: location 1035 is 1036
9999 mem: location 101761 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101765
 105 run: column:address:number/deref <- copy new-column:number
9999 mem: location 101763 is 0
9999 mem: location 101765 is 1034
9999 mem: storing 0 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101761 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 101699
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101699 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 101637
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101637 is 1031
 102 run: reply 0:literal/dummy, 0:literal/quit, 1:literal/error
9999 run: result 0 is 0
9999 run: result 1 is 0
9999 run: result 2 is 1
9999 mem: storing 0 in location 101004
9999 mem: storing 0 in location 101005
9999 mem: storing 1 in location 101006
 101 run: reply-if quit?:boolean, 1:offset
9999 mem: location 101005 is 0
9999 run: jumping to instruction 6
 101 run: reply-if error?:boolean, 1:offset
9999 mem: location 101006 is 1
9999 run: jump-unless fell through
 101 run: reply-if 0:literal/dummy, quit?:boolean, error?:boolean
9999 mem: location 101005 is 0
9999 mem: location 101006 is 1
schedule: waking up routine 1
schedule: run1001/read-move-illegal-file
  99 run: screen-should-contain [
    .file too low: 2     .
    .                    .
  ]
