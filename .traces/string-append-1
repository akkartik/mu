parse: instruction: run
parse:   ingredient: {name: "
    1:address:array:character/raw <- new [hello,]
    2:address:array:character/raw <- new [ world!]
    3:address:array:character/raw <- string-append 1:address:array:character/raw, 2:address:array:character/raw
    4:array:character/raw <- copy 3:address:array:character/raw/deref
  ", properties: [_: "literal-string"]}
parse: instruction: memory-should-contain
parse:   ingredient: {name: "
    4:string <- [hello, world!]
  ", properties: [_: "literal-string"]}
after-brace: recipe string-append-1
after-brace: run ...
after-brace: memory-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: string-append-1
 101 run: run [
    1:address:array:character/raw <- new [hello,]
    2:address:array:character/raw <- new [ world!]
    3:address:array:character/raw <- string-append 1:address:array:character/raw, 2:address:array:character/raw
    4:array:character/raw <- copy 3:address:array:character/raw/deref
  ]
parse: instruction: new
parse:   ingredient: {name: "hello,", properties: [_: "literal-string"]}
parse:   product: {name: "1", properties: ["1": "address":"array":"character", "raw": ]}
parse: instruction: new
parse:   ingredient: {name: " world!", properties: [_: "literal-string"]}
parse:   product: {name: "2", properties: ["2": "address":"array":"character", "raw": ]}
parse: instruction: string-append
parse:   ingredient: {name: "1", properties: ["1": "address":"array":"character", "raw": ]}
parse:   ingredient: {name: "2", properties: ["2": "address":"array":"character", "raw": ]}
parse:   product: {name: "3", properties: ["3": "address":"array":"character", "raw": ]}
parse: instruction: copy
parse:   ingredient: {name: "3", properties: ["3": "address":"array":"character", "raw": , "deref": ]}
parse:   product: {name: "4", properties: ["4": "array":"character", "raw": ]}
after-brace: recipe run1001
after-brace: new ...
after-brace: new ...
after-brace: string-append ...
after-brace: copy ...
 101 run: 1:address:array:character/raw <- new [hello,]
9999 mem: storing 1000 in location 1
 101 run: 2:address:array:character/raw <- new [ world!]
9999 mem: storing 1007 in location 2
 101 run: 3:address:array:character/raw <- string-append 1:address:array:character/raw, 2:address:array:character/raw
9999 mem: location 1 is 1000
9999 mem: location 2 is 1007
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1015
 102 run: a:address:array:character <- next-ingredient 
9999 mem: storing 1000 in location 1017
 102 run: a-len:number <- length a:address:array:character/deref
9999 mem: location 1017 is 1000
9999 mem: location 1000 is 6
9999 mem: location 1001 is 104
9999 mem: location 1002 is 101
9999 mem: location 1003 is 108
9999 mem: location 1004 is 108
9999 mem: location 1005 is 111
9999 mem: location 1006 is 44
9999 mem: location 1017 is 1000
9999 mem: storing 6 in location 1018
 102 run: b:address:array:character <- next-ingredient 
9999 mem: storing 1007 in location 1019
 102 run: b-len:number <- length b:address:array:character/deref
9999 mem: location 1019 is 1007
9999 mem: location 1007 is 7
9999 mem: location 1008 is 32
9999 mem: location 1009 is 119
9999 mem: location 1010 is 111
9999 mem: location 1011 is 114
9999 mem: location 1012 is 108
9999 mem: location 1013 is 100
9999 mem: location 1014 is 33
9999 mem: location 1019 is 1007
9999 mem: storing 7 in location 1020
 102 run: result-len:number <- add a-len:number, b-len:number
9999 mem: location 1018 is 6
9999 mem: location 1020 is 7
9999 mem: storing 13 in location 1021
 102 run: result:address:array:character <- new character:type, result-len:number
9999 mem: location 1021 is 13
9999 mem: array size is 13
9999 mem: new alloc: 1046
9999 mem: storing 1046 in location 1022
 102 run: result-idx:number <- copy 0:literal
9999 mem: storing 0 in location 1023
 102 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1024
 102 run: a-done?:boolean <- greater-or-equal i:number, a-len:number
9999 mem: location 1024 is 0
9999 mem: location 1018 is 6
9999 mem: storing 0 in location 1025
 102 run: break-if a-done?:boolean, 
9999 mem: location 1025 is 0
9999 run: jump-if fell through
 102 run: out:address:character <- index-address result:address:array:character/deref, result-idx:number
9999 mem: location 1022 is 1046
9999 mem: location 1046 is 13
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1023 is 0
9999 mem: location 1022 is 1046
9999 mem: location 1023 is 0
9999 mem: storing 1047 in location 1026
 102 run: in:character <- index a:address:array:character/deref, i:number
9999 mem: location 1017 is 1000
9999 mem: location 1000 is 6
9999 mem: location 1001 is 104
9999 mem: location 1002 is 101
9999 mem: location 1003 is 108
9999 mem: location 1004 is 108
9999 mem: location 1005 is 111
9999 mem: location 1006 is 44
9999 mem: location 1024 is 0
9999 mem: location 1017 is 1000
9999 mem: location 1024 is 0
9999 run: address to copy is 1001
9999 run: its type is 4
9999 mem: location 1001 is 104
9999 mem: storing 104 in location 1027
 102 run: out:address:character/deref <- copy in:character
9999 mem: location 1027 is 104
9999 mem: location 1026 is 1047
9999 mem: storing 104 in location 1047
 102 run: i:number <- add i:number, 1:literal
9999 mem: location 1024 is 0
9999 mem: storing 1 in location 1024
 102 run: result-idx:number <- add result-idx:number, 1:literal
9999 mem: location 1023 is 0
9999 mem: storing 1 in location 1023
 102 run: loop 
9999 run: jumping to instruction 10
 102 run: a-done?:boolean <- greater-or-equal i:number, a-len:number
9999 mem: location 1024 is 1
9999 mem: location 1018 is 6
9999 mem: storing 0 in location 1025
 102 run: break-if a-done?:boolean, 
9999 mem: location 1025 is 0
9999 run: jump-if fell through
 102 run: out:address:character <- index-address result:address:array:character/deref, result-idx:number
9999 mem: location 1022 is 1046
9999 mem: location 1046 is 13
9999 mem: location 1047 is 104
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1023 is 1
9999 mem: location 1022 is 1046
9999 mem: location 1023 is 1
9999 mem: storing 1048 in location 1026
 102 run: in:character <- index a:address:array:character/deref, i:number
9999 mem: location 1017 is 1000
9999 mem: location 1000 is 6
9999 mem: location 1001 is 104
9999 mem: location 1002 is 101
9999 mem: location 1003 is 108
9999 mem: location 1004 is 108
9999 mem: location 1005 is 111
9999 mem: location 1006 is 44
9999 mem: location 1024 is 1
9999 mem: location 1017 is 1000
9999 mem: location 1024 is 1
9999 run: address to copy is 1002
9999 run: its type is 4
9999 mem: location 1002 is 101
9999 mem: storing 101 in location 1027
 102 run: out:address:character/deref <- copy in:character
9999 mem: location 1027 is 101
9999 mem: location 1026 is 1048
9999 mem: storing 101 in location 1048
 102 run: i:number <- add i:number, 1:literal
9999 mem: location 1024 is 1
9999 mem: storing 2 in location 1024
 102 run: result-idx:number <- add result-idx:number, 1:literal
9999 mem: location 1023 is 1
9999 mem: storing 2 in location 1023
 102 run: loop 
9999 run: jumping to instruction 10
 102 run: a-done?:boolean <- greater-or-equal i:number, a-len:number
9999 mem: location 1024 is 2
9999 mem: location 1018 is 6
9999 mem: storing 0 in location 1025
 102 run: break-if a-done?:boolean, 
9999 mem: location 1025 is 0
9999 run: jump-if fell through
 102 run: out:address:character <- index-address result:address:array:character/deref, result-idx:number
9999 mem: location 1022 is 1046
9999 mem: location 1046 is 13
9999 mem: location 1047 is 104
9999 mem: location 1048 is 101
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1023 is 2
9999 mem: location 1022 is 1046
9999 mem: location 1023 is 2
9999 mem: storing 1049 in location 1026
 102 run: in:character <- index a:address:array:character/deref, i:number
9999 mem: location 1017 is 1000
9999 mem: location 1000 is 6
9999 mem: location 1001 is 104
9999 mem: location 1002 is 101
9999 mem: location 1003 is 108
9999 mem: location 1004 is 108
9999 mem: location 1005 is 111
9999 mem: location 1006 is 44
9999 mem: location 1024 is 2
9999 mem: location 1017 is 1000
9999 mem: location 1024 is 2
9999 run: address to copy is 1003
9999 run: its type is 4
9999 mem: location 1003 is 108
9999 mem: storing 108 in location 1027
 102 run: out:address:character/deref <- copy in:character
9999 mem: location 1027 is 108
9999 mem: location 1026 is 1049
9999 mem: storing 108 in location 1049
 102 run: i:number <- add i:number, 1:literal
9999 mem: location 1024 is 2
9999 mem: storing 3 in location 1024
 102 run: result-idx:number <- add result-idx:number, 1:literal
9999 mem: location 1023 is 2
9999 mem: storing 3 in location 1023
 102 run: loop 
9999 run: jumping to instruction 10
 102 run: a-done?:boolean <- greater-or-equal i:number, a-len:number
9999 mem: location 1024 is 3
9999 mem: location 1018 is 6
9999 mem: storing 0 in location 1025
 102 run: break-if a-done?:boolean, 
9999 mem: location 1025 is 0
9999 run: jump-if fell through
 102 run: out:address:character <- index-address result:address:array:character/deref, result-idx:number
9999 mem: location 1022 is 1046
9999 mem: location 1046 is 13
9999 mem: location 1047 is 104
9999 mem: location 1048 is 101
9999 mem: location 1049 is 108
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1023 is 3
9999 mem: location 1022 is 1046
9999 mem: location 1023 is 3
9999 mem: storing 1050 in location 1026
 102 run: in:character <- index a:address:array:character/deref, i:number
9999 mem: location 1017 is 1000
9999 mem: location 1000 is 6
9999 mem: location 1001 is 104
9999 mem: location 1002 is 101
9999 mem: location 1003 is 108
9999 mem: location 1004 is 108
9999 mem: location 1005 is 111
9999 mem: location 1006 is 44
9999 mem: location 1024 is 3
9999 mem: location 1017 is 1000
9999 mem: location 1024 is 3
9999 run: address to copy is 1004
9999 run: its type is 4
9999 mem: location 1004 is 108
9999 mem: storing 108 in location 1027
 102 run: out:address:character/deref <- copy in:character
9999 mem: location 1027 is 108
9999 mem: location 1026 is 1050
9999 mem: storing 108 in location 1050
 102 run: i:number <- add i:number, 1:literal
9999 mem: location 1024 is 3
9999 mem: storing 4 in location 1024
 102 run: result-idx:number <- add result-idx:number, 1:literal
9999 mem: location 1023 is 3
9999 mem: storing 4 in location 1023
 102 run: loop 
9999 run: jumping to instruction 10
 102 run: a-done?:boolean <- greater-or-equal i:number, a-len:number
9999 mem: location 1024 is 4
9999 mem: location 1018 is 6
9999 mem: storing 0 in location 1025
 102 run: break-if a-done?:boolean, 
9999 mem: location 1025 is 0
9999 run: jump-if fell through
 102 run: out:address:character <- index-address result:address:array:character/deref, result-idx:number
9999 mem: location 1022 is 1046
9999 mem: location 1046 is 13
9999 mem: location 1047 is 104
9999 mem: location 1048 is 101
9999 mem: location 1049 is 108
9999 mem: location 1050 is 108
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1023 is 4
9999 mem: location 1022 is 1046
9999 mem: location 1023 is 4
9999 mem: storing 1051 in location 1026
 102 run: in:character <- index a:address:array:character/deref, i:number
9999 mem: location 1017 is 1000
9999 mem: location 1000 is 6
9999 mem: location 1001 is 104
9999 mem: location 1002 is 101
9999 mem: location 1003 is 108
9999 mem: location 1004 is 108
9999 mem: location 1005 is 111
9999 mem: location 1006 is 44
9999 mem: location 1024 is 4
9999 mem: location 1017 is 1000
9999 mem: location 1024 is 4
9999 run: address to copy is 1005
9999 run: its type is 4
9999 mem: location 1005 is 111
9999 mem: storing 111 in location 1027
 102 run: out:address:character/deref <- copy in:character
9999 mem: location 1027 is 111
9999 mem: location 1026 is 1051
9999 mem: storing 111 in location 1051
 102 run: i:number <- add i:number, 1:literal
9999 mem: location 1024 is 4
9999 mem: storing 5 in location 1024
 102 run: result-idx:number <- add result-idx:number, 1:literal
9999 mem: location 1023 is 4
9999 mem: storing 5 in location 1023
 102 run: loop 
9999 run: jumping to instruction 10
 102 run: a-done?:boolean <- greater-or-equal i:number, a-len:number
9999 mem: location 1024 is 5
9999 mem: location 1018 is 6
9999 mem: storing 0 in location 1025
 102 run: break-if a-done?:boolean, 
9999 mem: location 1025 is 0
9999 run: jump-if fell through
 102 run: out:address:character <- index-address result:address:array:character/deref, result-idx:number
9999 mem: location 1022 is 1046
9999 mem: location 1046 is 13
9999 mem: location 1047 is 104
9999 mem: location 1048 is 101
9999 mem: location 1049 is 108
9999 mem: location 1050 is 108
9999 mem: location 1051 is 111
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1023 is 5
9999 mem: location 1022 is 1046
9999 mem: location 1023 is 5
9999 mem: storing 1052 in location 1026
 102 run: in:character <- index a:address:array:character/deref, i:number
9999 mem: location 1017 is 1000
9999 mem: location 1000 is 6
9999 mem: location 1001 is 104
9999 mem: location 1002 is 101
9999 mem: location 1003 is 108
9999 mem: location 1004 is 108
9999 mem: location 1005 is 111
9999 mem: location 1006 is 44
9999 mem: location 1024 is 5
9999 mem: location 1017 is 1000
9999 mem: location 1024 is 5
9999 run: address to copy is 1006
9999 run: its type is 4
9999 mem: location 1006 is 44
9999 mem: storing 44 in location 1027
 102 run: out:address:character/deref <- copy in:character
9999 mem: location 1027 is 44
9999 mem: location 1026 is 1052
9999 mem: storing 44 in location 1052
 102 run: i:number <- add i:number, 1:literal
9999 mem: location 1024 is 5
9999 mem: storing 6 in location 1024
 102 run: result-idx:number <- add result-idx:number, 1:literal
9999 mem: location 1023 is 5
9999 mem: storing 6 in location 1023
 102 run: loop 
9999 run: jumping to instruction 10
 102 run: a-done?:boolean <- greater-or-equal i:number, a-len:number
9999 mem: location 1024 is 6
9999 mem: location 1018 is 6
9999 mem: storing 1 in location 1025
 102 run: break-if a-done?:boolean, 
9999 mem: location 1025 is 1
9999 run: jumping to instruction 18
 102 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1024
 102 run: b-done?:boolean <- greater-or-equal i:number, b-len:number
9999 mem: location 1024 is 0
9999 mem: location 1020 is 7
9999 mem: storing 0 in location 1028
 102 run: break-if b-done?:boolean, 
9999 mem: location 1028 is 0
9999 run: jump-if fell through
 102 run: out:address:character <- index-address result:address:array:character/deref, result-idx:number
9999 mem: location 1022 is 1046
9999 mem: location 1046 is 13
9999 mem: location 1047 is 104
9999 mem: location 1048 is 101
9999 mem: location 1049 is 108
9999 mem: location 1050 is 108
9999 mem: location 1051 is 111
9999 mem: location 1052 is 44
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1023 is 6
9999 mem: location 1022 is 1046
9999 mem: location 1023 is 6
9999 mem: storing 1053 in location 1026
 102 run: in:character <- index b:address:array:character/deref, i:number
9999 mem: location 1019 is 1007
9999 mem: location 1007 is 7
9999 mem: location 1008 is 32
9999 mem: location 1009 is 119
9999 mem: location 1010 is 111
9999 mem: location 1011 is 114
9999 mem: location 1012 is 108
9999 mem: location 1013 is 100
9999 mem: location 1014 is 33
9999 mem: location 1024 is 0
9999 mem: location 1019 is 1007
9999 mem: location 1024 is 0
9999 run: address to copy is 1008
9999 run: its type is 4
9999 mem: location 1008 is 32
9999 mem: storing 32 in location 1027
 102 run: out:address:character/deref <- copy in:character
9999 mem: location 1027 is 32
9999 mem: location 1026 is 1053
9999 mem: storing 32 in location 1053
 102 run: i:number <- add i:number, 1:literal
9999 mem: location 1024 is 0
9999 mem: storing 1 in location 1024
 102 run: result-idx:number <- add result-idx:number, 1:literal
9999 mem: location 1023 is 6
9999 mem: storing 7 in location 1023
 102 run: loop 
9999 run: jumping to instruction 21
 102 run: b-done?:boolean <- greater-or-equal i:number, b-len:number
9999 mem: location 1024 is 1
9999 mem: location 1020 is 7
9999 mem: storing 0 in location 1028
 102 run: break-if b-done?:boolean, 
9999 mem: location 1028 is 0
9999 run: jump-if fell through
 102 run: out:address:character <- index-address result:address:array:character/deref, result-idx:number
9999 mem: location 1022 is 1046
9999 mem: location 1046 is 13
9999 mem: location 1047 is 104
9999 mem: location 1048 is 101
9999 mem: location 1049 is 108
9999 mem: location 1050 is 108
9999 mem: location 1051 is 111
9999 mem: location 1052 is 44
9999 mem: location 1053 is 32
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1023 is 7
9999 mem: location 1022 is 1046
9999 mem: location 1023 is 7
9999 mem: storing 1054 in location 1026
 102 run: in:character <- index b:address:array:character/deref, i:number
9999 mem: location 1019 is 1007
9999 mem: location 1007 is 7
9999 mem: location 1008 is 32
9999 mem: location 1009 is 119
9999 mem: location 1010 is 111
9999 mem: location 1011 is 114
9999 mem: location 1012 is 108
9999 mem: location 1013 is 100
9999 mem: location 1014 is 33
9999 mem: location 1024 is 1
9999 mem: location 1019 is 1007
9999 mem: location 1024 is 1
9999 run: address to copy is 1009
9999 run: its type is 4
9999 mem: location 1009 is 119
9999 mem: storing 119 in location 1027
 102 run: out:address:character/deref <- copy in:character
9999 mem: location 1027 is 119
9999 mem: location 1026 is 1054
9999 mem: storing 119 in location 1054
 102 run: i:number <- add i:number, 1:literal
9999 mem: location 1024 is 1
9999 mem: storing 2 in location 1024
 102 run: result-idx:number <- add result-idx:number, 1:literal
9999 mem: location 1023 is 7
9999 mem: storing 8 in location 1023
 102 run: loop 
9999 run: jumping to instruction 21
 102 run: b-done?:boolean <- greater-or-equal i:number, b-len:number
9999 mem: location 1024 is 2
9999 mem: location 1020 is 7
9999 mem: storing 0 in location 1028
 102 run: break-if b-done?:boolean, 
9999 mem: location 1028 is 0
9999 run: jump-if fell through
 102 run: out:address:character <- index-address result:address:array:character/deref, result-idx:number
9999 mem: location 1022 is 1046
9999 mem: location 1046 is 13
9999 mem: location 1047 is 104
9999 mem: location 1048 is 101
9999 mem: location 1049 is 108
9999 mem: location 1050 is 108
9999 mem: location 1051 is 111
9999 mem: location 1052 is 44
9999 mem: location 1053 is 32
9999 mem: location 1054 is 119
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1023 is 8
9999 mem: location 1022 is 1046
9999 mem: location 1023 is 8
9999 mem: storing 1055 in location 1026
 102 run: in:character <- index b:address:array:character/deref, i:number
9999 mem: location 1019 is 1007
9999 mem: location 1007 is 7
9999 mem: location 1008 is 32
9999 mem: location 1009 is 119
9999 mem: location 1010 is 111
9999 mem: location 1011 is 114
9999 mem: location 1012 is 108
9999 mem: location 1013 is 100
9999 mem: location 1014 is 33
9999 mem: location 1024 is 2
9999 mem: location 1019 is 1007
9999 mem: location 1024 is 2
9999 run: address to copy is 1010
9999 run: its type is 4
9999 mem: location 1010 is 111
9999 mem: storing 111 in location 1027
 102 run: out:address:character/deref <- copy in:character
9999 mem: location 1027 is 111
9999 mem: location 1026 is 1055
9999 mem: storing 111 in location 1055
 102 run: i:number <- add i:number, 1:literal
9999 mem: location 1024 is 2
9999 mem: storing 3 in location 1024
 102 run: result-idx:number <- add result-idx:number, 1:literal
9999 mem: location 1023 is 8
9999 mem: storing 9 in location 1023
 102 run: loop 
9999 run: jumping to instruction 21
 102 run: b-done?:boolean <- greater-or-equal i:number, b-len:number
9999 mem: location 1024 is 3
9999 mem: location 1020 is 7
9999 mem: storing 0 in location 1028
 102 run: break-if b-done?:boolean, 
9999 mem: location 1028 is 0
9999 run: jump-if fell through
 102 run: out:address:character <- index-address result:address:array:character/deref, result-idx:number
9999 mem: location 1022 is 1046
9999 mem: location 1046 is 13
9999 mem: location 1047 is 104
9999 mem: location 1048 is 101
9999 mem: location 1049 is 108
9999 mem: location 1050 is 108
9999 mem: location 1051 is 111
9999 mem: location 1052 is 44
9999 mem: location 1053 is 32
9999 mem: location 1054 is 119
9999 mem: location 1055 is 111
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1023 is 9
9999 mem: location 1022 is 1046
9999 mem: location 1023 is 9
9999 mem: storing 1056 in location 1026
 102 run: in:character <- index b:address:array:character/deref, i:number
9999 mem: location 1019 is 1007
9999 mem: location 1007 is 7
9999 mem: location 1008 is 32
9999 mem: location 1009 is 119
9999 mem: location 1010 is 111
9999 mem: location 1011 is 114
9999 mem: location 1012 is 108
9999 mem: location 1013 is 100
9999 mem: location 1014 is 33
9999 mem: location 1024 is 3
9999 mem: location 1019 is 1007
9999 mem: location 1024 is 3
9999 run: address to copy is 1011
9999 run: its type is 4
9999 mem: location 1011 is 114
9999 mem: storing 114 in location 1027
 102 run: out:address:character/deref <- copy in:character
9999 mem: location 1027 is 114
9999 mem: location 1026 is 1056
9999 mem: storing 114 in location 1056
 102 run: i:number <- add i:number, 1:literal
9999 mem: location 1024 is 3
9999 mem: storing 4 in location 1024
 102 run: result-idx:number <- add result-idx:number, 1:literal
9999 mem: location 1023 is 9
9999 mem: storing 10 in location 1023
 102 run: loop 
9999 run: jumping to instruction 21
 102 run: b-done?:boolean <- greater-or-equal i:number, b-len:number
9999 mem: location 1024 is 4
9999 mem: location 1020 is 7
9999 mem: storing 0 in location 1028
 102 run: break-if b-done?:boolean, 
9999 mem: location 1028 is 0
9999 run: jump-if fell through
 102 run: out:address:character <- index-address result:address:array:character/deref, result-idx:number
9999 mem: location 1022 is 1046
9999 mem: location 1046 is 13
9999 mem: location 1047 is 104
9999 mem: location 1048 is 101
9999 mem: location 1049 is 108
9999 mem: location 1050 is 108
9999 mem: location 1051 is 111
9999 mem: location 1052 is 44
9999 mem: location 1053 is 32
9999 mem: location 1054 is 119
9999 mem: location 1055 is 111
9999 mem: location 1056 is 114
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1023 is 10
9999 mem: location 1022 is 1046
9999 mem: location 1023 is 10
9999 mem: storing 1057 in location 1026
 102 run: in:character <- index b:address:array:character/deref, i:number
9999 mem: location 1019 is 1007
9999 mem: location 1007 is 7
9999 mem: location 1008 is 32
9999 mem: location 1009 is 119
9999 mem: location 1010 is 111
9999 mem: location 1011 is 114
9999 mem: location 1012 is 108
9999 mem: location 1013 is 100
9999 mem: location 1014 is 33
9999 mem: location 1024 is 4
9999 mem: location 1019 is 1007
9999 mem: location 1024 is 4
9999 run: address to copy is 1012
9999 run: its type is 4
9999 mem: location 1012 is 108
9999 mem: storing 108 in location 1027
 102 run: out:address:character/deref <- copy in:character
9999 mem: location 1027 is 108
9999 mem: location 1026 is 1057
9999 mem: storing 108 in location 1057
 102 run: i:number <- add i:number, 1:literal
9999 mem: location 1024 is 4
9999 mem: storing 5 in location 1024
 102 run: result-idx:number <- add result-idx:number, 1:literal
9999 mem: location 1023 is 10
9999 mem: storing 11 in location 1023
 102 run: loop 
9999 run: jumping to instruction 21
 102 run: b-done?:boolean <- greater-or-equal i:number, b-len:number
9999 mem: location 1024 is 5
9999 mem: location 1020 is 7
9999 mem: storing 0 in location 1028
 102 run: break-if b-done?:boolean, 
9999 mem: location 1028 is 0
9999 run: jump-if fell through
 102 run: out:address:character <- index-address result:address:array:character/deref, result-idx:number
9999 mem: location 1022 is 1046
9999 mem: location 1046 is 13
9999 mem: location 1047 is 104
9999 mem: location 1048 is 101
9999 mem: location 1049 is 108
9999 mem: location 1050 is 108
9999 mem: location 1051 is 111
9999 mem: location 1052 is 44
9999 mem: location 1053 is 32
9999 mem: location 1054 is 119
9999 mem: location 1055 is 111
9999 mem: location 1056 is 114
9999 mem: location 1057 is 108
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1023 is 11
9999 mem: location 1022 is 1046
9999 mem: location 1023 is 11
9999 mem: storing 1058 in location 1026
 102 run: in:character <- index b:address:array:character/deref, i:number
9999 mem: location 1019 is 1007
9999 mem: location 1007 is 7
9999 mem: location 1008 is 32
9999 mem: location 1009 is 119
9999 mem: location 1010 is 111
9999 mem: location 1011 is 114
9999 mem: location 1012 is 108
9999 mem: location 1013 is 100
9999 mem: location 1014 is 33
9999 mem: location 1024 is 5
9999 mem: location 1019 is 1007
9999 mem: location 1024 is 5
9999 run: address to copy is 1013
9999 run: its type is 4
9999 mem: location 1013 is 100
9999 mem: storing 100 in location 1027
 102 run: out:address:character/deref <- copy in:character
9999 mem: location 1027 is 100
9999 mem: location 1026 is 1058
9999 mem: storing 100 in location 1058
 102 run: i:number <- add i:number, 1:literal
9999 mem: location 1024 is 5
9999 mem: storing 6 in location 1024
 102 run: result-idx:number <- add result-idx:number, 1:literal
9999 mem: location 1023 is 11
9999 mem: storing 12 in location 1023
 102 run: loop 
9999 run: jumping to instruction 21
 102 run: b-done?:boolean <- greater-or-equal i:number, b-len:number
9999 mem: location 1024 is 6
9999 mem: location 1020 is 7
9999 mem: storing 0 in location 1028
 102 run: break-if b-done?:boolean, 
9999 mem: location 1028 is 0
9999 run: jump-if fell through
 102 run: out:address:character <- index-address result:address:array:character/deref, result-idx:number
9999 mem: location 1022 is 1046
9999 mem: location 1046 is 13
9999 mem: location 1047 is 104
9999 mem: location 1048 is 101
9999 mem: location 1049 is 108
9999 mem: location 1050 is 108
9999 mem: location 1051 is 111
9999 mem: location 1052 is 44
9999 mem: location 1053 is 32
9999 mem: location 1054 is 119
9999 mem: location 1055 is 111
9999 mem: location 1056 is 114
9999 mem: location 1057 is 108
9999 mem: location 1058 is 100
9999 mem: location 1059 is 0
9999 mem: location 1023 is 12
9999 mem: location 1022 is 1046
9999 mem: location 1023 is 12
9999 mem: storing 1059 in location 1026
 102 run: in:character <- index b:address:array:character/deref, i:number
9999 mem: location 1019 is 1007
9999 mem: location 1007 is 7
9999 mem: location 1008 is 32
9999 mem: location 1009 is 119
9999 mem: location 1010 is 111
9999 mem: location 1011 is 114
9999 mem: location 1012 is 108
9999 mem: location 1013 is 100
9999 mem: location 1014 is 33
9999 mem: location 1024 is 6
9999 mem: location 1019 is 1007
9999 mem: location 1024 is 6
9999 run: address to copy is 1014
9999 run: its type is 4
9999 mem: location 1014 is 33
9999 mem: storing 33 in location 1027
 102 run: out:address:character/deref <- copy in:character
9999 mem: location 1027 is 33
9999 mem: location 1026 is 1059
9999 mem: storing 33 in location 1059
 102 run: i:number <- add i:number, 1:literal
9999 mem: location 1024 is 6
9999 mem: storing 7 in location 1024
 102 run: result-idx:number <- add result-idx:number, 1:literal
9999 mem: location 1023 is 12
9999 mem: storing 13 in location 1023
 102 run: loop 
9999 run: jumping to instruction 21
 102 run: b-done?:boolean <- greater-or-equal i:number, b-len:number
9999 mem: location 1024 is 7
9999 mem: location 1020 is 7
9999 mem: storing 1 in location 1028
 102 run: break-if b-done?:boolean, 
9999 mem: location 1028 is 1
9999 run: jumping to instruction 29
 102 run: reply result:address:array:character
9999 mem: location 1022 is 1046
9999 run: result 0 is 1046
9999 mem: storing 1046 in location 3
 101 run: 4:array:character/raw <- copy 3:address:array:character/raw/deref
9999 mem: location 3 is 1046
9999 mem: location 1046 is 13
9999 mem: location 1047 is 104
9999 mem: location 1048 is 101
9999 mem: location 1049 is 108
9999 mem: location 1050 is 108
9999 mem: location 1051 is 111
9999 mem: location 1052 is 44
9999 mem: location 1053 is 32
9999 mem: location 1054 is 119
9999 mem: location 1055 is 111
9999 mem: location 1056 is 114
9999 mem: location 1057 is 108
9999 mem: location 1058 is 100
9999 mem: location 1059 is 33
9999 mem: storing 13 in location 4
9999 mem: storing 104 in location 5
9999 mem: storing 101 in location 6
9999 mem: storing 108 in location 7
9999 mem: storing 108 in location 8
9999 mem: storing 111 in location 9
9999 mem: storing 44 in location 10
9999 mem: storing 32 in location 11
9999 mem: storing 119 in location 12
9999 mem: storing 111 in location 13
9999 mem: storing 114 in location 14
9999 mem: storing 108 in location 15
9999 mem: storing 100 in location 16
9999 mem: storing 33 in location 17
 100 run: memory-should-contain [
    4:string <- [hello, world!]
  ]
9999 run: checking string length at 4
9999 run: checking location 5
9999 run: checking location 6
9999 run: checking location 7
9999 run: checking location 8
9999 run: checking location 9
9999 run: checking location 10
9999 run: checking location 11
9999 run: checking location 12
9999 run: checking location 13
9999 run: checking location 14
9999 run: checking location 15
9999 run: checking location 16
9999 run: checking location 17
