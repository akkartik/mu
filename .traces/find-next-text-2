9991 parse: --- defining scenario-find-next-text-2
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    1:address:array:character <- new [abcd]\n    2:address:array:character <- new [bc]\n    3:number <- find-next 1:address:array:character, 2:address:array:character, 1\n  ": "literal-string"}
9992 load: after rewriting: run [
    1:address:array:character <- new [abcd]
    2:address:array:character <- new [bc]
    3:number <- find-next 1:address:array:character, 2:address:array:character, 1
  ]
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 1\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain [
    3 <- 1
  ]
9999 parse: recipe scenario-find-next-text-2 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe scenario-find-next-text-2
9991 transform: --- transform braces for recipe scenario-find-next-text-2
9992 transform: run ...
9992 transform: memory-should-contain ...
9992 transform:  ...
9991 transform: --- deduce types for recipe scenario-find-next-text-2
9991 transform: --- resolve ambiguous calls for recipe scenario-find-next-text-2
9991 transform: --- collect surrounding spaces for recipe scenario-find-next-text-2
9991 transform: --- transform names for recipe scenario-find-next-text-2
9991 transform: --- compute instruction operations for recipe scenario-find-next-text-2
9991 transform: --- perform checks for recipe scenario-find-next-text-2
9991 transform: --- convert 'new' to 'allocate' for recipe scenario-find-next-text-2
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario-find-next-text-2
 102 run: run [
    1:address:array:character <- new [abcd]
    2:address:array:character <- new [bc]
    3:number <- find-next 1:address:array:character, 2:address:array:character, 1
  ]
9991 parse: --- defining run1001
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"abcd": "literal-string"}
9993 parse:   product: {"1": <"address" : <"array" : <"character" : <>>>>}
9992 load: after rewriting: 1:address:array:character <- new [abcd]
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"bc": "literal-string"}
9993 parse:   product: {"2": <"address" : <"array" : <"character" : <>>>>}
9992 load: after rewriting: 2:address:array:character <- new [bc]
9993 parse: instruction: find-next
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"1": <"address" : <"array" : <"character" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"array" : <"character" : <>>>>}
9993 parse:   ingredient: {"1": "literal"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- find-next 1:address:array:character, 2:address:array:character, 1
9999 parse: recipe run1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1001
9991 transform: --- transform braces for recipe run1001
9992 transform: new ...
9992 transform: new ...
9992 transform: find-next ...
9992 transform:  ...
9991 transform: --- deduce types for recipe run1001
9991 transform: --- resolve ambiguous calls for recipe run1001
9992 transform: instruction find-next
9993 transform: strict match: ingredient 0
9993 transform: mismatch: ingredient 1
9993 transform: strict match: ingredient 0
9993 transform: mismatch: ingredient 1
9992 transform: checking variant 0: -1
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9993 transform: strict match: ingredient 0
9992 transform: checking variant 1: 100
9991 transform: --- collect surrounding spaces for recipe run1001
9991 transform: --- transform names for recipe run1001
9991 transform: --- compute instruction operations for recipe run1001
9991 transform: --- perform checks for recipe run1001
9991 transform: --- convert 'new' to 'allocate' for recipe run1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: 1:address:array:character <- new [abcd]
9999 mem: storing 1000 in location 1
 103 run: 2:address:array:character <- new [bc]
9999 mem: storing 1005 in location 2
 103 run: 3:number <- find-next_2 1:address:array:character, 2:address:array:character, 1
9999 mem: location 1 is 1000
9999 mem: location 2 is 1005
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: new alloc: 1008
 104 run: text:address:array:character <- next-ingredient 
9999 mem: storing 1000 in location 1010
 104 run: pattern:address:array:character <- next-ingredient 
9999 mem: storing 1005 in location 1011
 104 run: idx:number <- next-ingredient 
9999 mem: storing 1 in location 1012
 104 run: first:character <- index *pattern, 0
9999 mem: location 1011 is 1005
9998 run: address to copy is 1006
9998 run: its type is character
9999 mem: location 1006 is 98
9999 mem: storing 98 in location 1013
 104 run: len:number <- length *text
9999 mem: location 1010 is 1000
9999 mem: storing 4 in location 1014
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1012 is 1
9999 mem: location 1014 is 4
9999 mem: storing 0 in location 1015
 104 run: jump-if done?, 
9999 mem: location 1015 is 0
9998 run: jump-if fell through
 104 run: found?:boolean <- match-at text, pattern, idx
9999 mem: location 1010 is 1000
9999 mem: location 1011 is 1005
9999 mem: location 1012 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1017
 105 run: text:address:array:character <- next-ingredient 
9999 mem: storing 1000 in location 1019
 105 run: pattern:address:array:character <- next-ingredient 
9999 mem: storing 1005 in location 1020
 105 run: idx:number <- next-ingredient 
9999 mem: storing 1 in location 1021
 105 run: pattern-len:number <- length *pattern
9999 mem: location 1020 is 1005
9999 mem: storing 2 in location 1022
 105 run: x:number <- length *text
9999 mem: location 1019 is 1000
9999 mem: storing 4 in location 1023
 105 run: x <- subtract x, pattern-len
9999 mem: location 1023 is 4
9999 mem: location 1022 is 2
9999 mem: storing 2 in location 1023
 105 run: enough-room?:boolean <- lesser-or-equal idx, x
9999 mem: location 1021 is 1
9999 mem: location 1023 is 2
9999 mem: storing 1 in location 1024
 105 run: jump-if enough-room?, 
9999 mem: location 1024 is 1
9998 run: jumping to instruction 11
 105 run: pattern-idx:number <- copy 0
9999 mem: storing 0 in location 1025
 105 run: done?:boolean <- greater-or-equal pattern-idx, pattern-len
9999 mem: location 1025 is 0
9999 mem: location 1022 is 2
9999 mem: storing 0 in location 1026
 105 run: jump-if done?, 
9999 mem: location 1026 is 0
9998 run: jump-if fell through
 105 run: c:character <- index *text, idx
9999 mem: location 1019 is 1000
9999 mem: location 1021 is 1
9998 run: address to copy is 1002
9998 run: its type is character
9999 mem: location 1002 is 98
9999 mem: storing 98 in location 1027
 105 run: exp:character <- index *pattern, pattern-idx
9999 mem: location 1020 is 1005
9999 mem: location 1025 is 0
9998 run: address to copy is 1006
9998 run: its type is character
9999 mem: location 1006 is 98
9999 mem: storing 98 in location 1028
 105 run: match?:boolean <- equal c, exp
9999 mem: location 1027 is 98
9999 mem: location 1028 is 98
9999 mem: storing 1 in location 1029
 105 run: jump-if match?, 
9999 mem: location 1029 is 1
9998 run: jumping to instruction 22
 105 run: idx <- add idx, 1
9999 mem: location 1021 is 1
9999 mem: storing 2 in location 1021
 105 run: pattern-idx <- add pattern-idx, 1
9999 mem: location 1025 is 0
9999 mem: storing 1 in location 1025
 105 run: jump 
9998 run: jumping to instruction 14
 105 run: done?:boolean <- greater-or-equal pattern-idx, pattern-len
9999 mem: location 1025 is 1
9999 mem: location 1022 is 2
9999 mem: storing 0 in location 1026
 105 run: jump-if done?, 
9999 mem: location 1026 is 0
9998 run: jump-if fell through
 105 run: c:character <- index *text, idx
9999 mem: location 1019 is 1000
9999 mem: location 1021 is 2
9998 run: address to copy is 1003
9998 run: its type is character
9999 mem: location 1003 is 99
9999 mem: storing 99 in location 1027
 105 run: exp:character <- index *pattern, pattern-idx
9999 mem: location 1020 is 1005
9999 mem: location 1025 is 1
9998 run: address to copy is 1007
9998 run: its type is character
9999 mem: location 1007 is 99
9999 mem: storing 99 in location 1028
 105 run: match?:boolean <- equal c, exp
9999 mem: location 1027 is 99
9999 mem: location 1028 is 99
9999 mem: storing 1 in location 1029
 105 run: jump-if match?, 
9999 mem: location 1029 is 1
9998 run: jumping to instruction 22
 105 run: idx <- add idx, 1
9999 mem: location 1021 is 2
9999 mem: storing 3 in location 1021
 105 run: pattern-idx <- add pattern-idx, 1
9999 mem: location 1025 is 1
9999 mem: storing 2 in location 1025
 105 run: jump 
9998 run: jumping to instruction 14
 105 run: done?:boolean <- greater-or-equal pattern-idx, pattern-len
9999 mem: location 1025 is 2
9999 mem: location 1022 is 2
9999 mem: storing 1 in location 1026
 105 run: jump-if done?, 
9999 mem: location 1026 is 1
9998 run: jumping to instruction 26
 105 run: reply 1/found
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1
9999 mem: storing 1 in location 1016
 104 run: jump-if found?, 
9999 mem: location 1016 is 1
9998 run: jumping to instruction 14
 104 run: reply idx
9999 mem: location 1012 is 1
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1
9999 mem: storing 1 in location 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain [
    3 <- 1
  ]
9999 run: checking location 3
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
