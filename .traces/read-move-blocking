parse/0: instruction: assume-screen
parse/0:   ingredient: {name: "20", value: 0, type: 0, properties: ["20": "literal", "width": ]}
parse/0:   ingredient: {name: "2", value: 0, type: 0, properties: ["2": "literal", "height": ]}
parse/0: instruction: run
parse/0:   ingredient: {name: "
#?     $start-tracing #? 1
    1:address:channel <- init-channel 2:literal
#?     $print [aaa channel address: ], 1:address:channel, [ 
#? ] #? 1
    2:number/routine <- start-running read-move:recipe, 1:address:channel, screen:address
    # 'read-move' is waiting for input
    wait-for-routine 2:number
#?     $print [bbb channel address: ], 1:address:channel, [ 
#? ] #? 1
    3:number <- routine-state 2:number/id
#?     $print [I: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after coming up (before any keys were pressed)]
    # press 'a'
#?     $print [ccc channel address: ], 1:address:channel, [ 
#? ] #? 1
#?     $exit #? 1
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number/id
#?     $print [II: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after rank 'a']
    # press '2'
    1:address:channel <- write 1:address:channel, 50:literal  # '2'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number/id
#?     $print [III: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after file 'a2']
    # press '-'
    1:address:channel <- write 1:address:channel, 45:literal  # '-'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number
#?     $print [IV: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?/routine-state, [
F read-move-blocking: routine failed to pause after hyphen 'a2-']
    # press 'a'
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number
#?     $print [V: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?/routine-state, [
F read-move-blocking: routine failed to pause after rank 'a2-a']
    # press '4'
    1:address:channel <- write 1:address:channel, 52:literal  # '4'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number
#?     $print [VI: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after file 'a2-a4']
    # press 'newline'
    1:address:channel <- write 1:address:channel, 10:literal  # newline
    restart 2:number/routine
    # 'read-move' now completes
    wait-for-routine 2:number
    3:number <- routine-state 2:number
#?     $print [VII: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/completed? <- equal 3:number/routine-state, 1:literal/completed
    assert 4:boolean/completed?, [
F read-move-blocking: routine failed to terminate on newline]
    trace [test], [reached end]
  ", value: 0, type: 0, properties: ["
#?     $start-tracing #? 1
    1:address:channel <- init-channel 2:literal
#?     $print [aaa channel address: ], 1:address:channel, [ 
#? ] #? 1
    2:number/routine <- start-running read-move:recipe, 1:address:channel, screen:address
    # 'read-move' is waiting for input
    wait-for-routine 2:number
#?     $print [bbb channel address: ], 1:address:channel, [ 
#? ] #? 1
    3:number <- routine-state 2:number/id
#?     $print [I: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after coming up (before any keys were pressed)]
    # press 'a'
#?     $print [ccc channel address: ], 1:address:channel, [ 
#? ] #? 1
#?     $exit #? 1
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number/id
#?     $print [II: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after rank 'a']
    # press '2'
    1:address:channel <- write 1:address:channel, 50:literal  # '2'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number/id
#?     $print [III: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after file 'a2']
    # press '-'
    1:address:channel <- write 1:address:channel, 45:literal  # '-'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number
#?     $print [IV: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?/routine-state, [
F read-move-blocking: routine failed to pause after hyphen 'a2-']
    # press 'a'
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number
#?     $print [V: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?/routine-state, [
F read-move-blocking: routine failed to pause after rank 'a2-a']
    # press '4'
    1:address:channel <- write 1:address:channel, 52:literal  # '4'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number
#?     $print [VI: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after file 'a2-a4']
    # press 'newline'
    1:address:channel <- write 1:address:channel, 10:literal  # newline
    restart 2:number/routine
    # 'read-move' now completes
    wait-for-routine 2:number
    3:number <- routine-state 2:number
#?     $print [VII: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/completed? <- equal 3:number/routine-state, 1:literal/completed
    assert 4:boolean/completed?, [
F read-move-blocking: routine failed to terminate on newline]
    trace [test], [reached end]
  ": "literal-string"]}
parse/0: instruction: trace-should-contain
parse/0:   ingredient: {name: "
    test: reached end
  ", value: 0, type: 0, properties: ["
    test: reached end
  ": "literal-string"]}
after-brace/0: recipe read-move-blocking
after-brace/0: assume-screen ...
after-brace/0: run ...
after-brace/0: trace-should-contain ...
new/0: routine allocated memory from 1000 to 101000
schedule/0: read-move-blocking
run/0: instruction read-move-blocking/0
run/0: {name: "screen", value: 900, type: 2, properties: ["screen": "address"]} <- assume-screen/117 {name: "20", value: 20, type: 0, properties: ["20": "literal", "width": ]}, {name: "2", value: 2, type: 0, properties: ["2": "literal", "height": ]}
run/0: ingredient 0 is 20
run/0: ingredient 1 is 2
run/0: instruction init-fake-screen/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal", "capacity": ]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1000
run/0: product 0 is default-space
run/0: instruction init-fake-screen/1
run/0: {name: "result", value: 1, type: 2-11, properties: ["result": "address":"screen"]} <- new/51 {name: "screen", value: 11, type: 0, properties: ["screen": "type"]}
run/0: ingredient 0 is screen
mem/0: new alloc: 1031
run/0: product 0 is result
mem/0: storing 1031 in location 1002
run/0: instruction init-fake-screen/2
run/0: {name: "width", value: 2, type: 2-1, properties: ["width": "address":"number"]} <- get-address/28 {name: "result", value: 1, type: 2-11, properties: ["result": "address":"screen", "deref": ]}, {name: "num-columns", value: 1, type: 0, properties: ["num-columns": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1002 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 0
mem/0: location 1033 is 0
mem/0: location 1034 is 0
mem/0: location 1035 is 0
run/0: ingredient 1 is num-columns
mem/0: location 1002 is 1031
run/0: address to copy is 1032
run/0: product 0 is width
mem/0: storing 1032 in location 1003
run/0: instruction init-fake-screen/3
run/0: {name: "width", value: 2, type: 2-1, properties: ["width": "address":"number", "deref": ]} <- next-ingredient/33 
run/0: product 0 is width
mem/0: location 1003 is 1032
mem/0: storing 20 in location 1032
run/0: instruction init-fake-screen/4
run/0: {name: "height", value: 3, type: 2-1, properties: ["height": "address":"number"]} <- get-address/28 {name: "result", value: 1, type: 2-11, properties: ["result": "address":"screen", "deref": ]}, {name: "num-rows", value: 0, type: 0, properties: ["num-rows": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1002 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 20
mem/0: location 1033 is 0
mem/0: location 1034 is 0
mem/0: location 1035 is 0
run/0: ingredient 1 is num-rows
mem/0: location 1002 is 1031
run/0: address to copy is 1031
run/0: product 0 is height
mem/0: storing 1031 in location 1004
run/0: instruction init-fake-screen/5
run/0: {name: "height", value: 3, type: 2-1, properties: ["height": "address":"number", "deref": ]} <- next-ingredient/33 
run/0: product 0 is height
mem/0: location 1004 is 1031
mem/0: storing 2 in location 1031
run/0: instruction init-fake-screen/6
run/0: {name: "row", value: 4, type: 2-1, properties: ["row": "address":"number"]} <- get-address/28 {name: "result", value: 1, type: 2-11, properties: ["result": "address":"screen", "deref": ]}, {name: "cursor-row", value: 2, type: 0, properties: ["cursor-row": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1002 is 1031
mem/0: location 1031 is 2
mem/0: location 1032 is 20
mem/0: location 1033 is 0
mem/0: location 1034 is 0
mem/0: location 1035 is 0
run/0: ingredient 1 is cursor-row
mem/0: location 1002 is 1031
run/0: address to copy is 1033
run/0: product 0 is row
mem/0: storing 1033 in location 1005
run/0: instruction init-fake-screen/7
run/0: {name: "row", value: 4, type: 2-1, properties: ["row": "address":"number", "deref": ]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
run/0: product 0 is row
mem/0: location 1005 is 1033
mem/0: storing 0 in location 1033
run/0: instruction init-fake-screen/8
run/0: {name: "column", value: 5, type: 2-1, properties: ["column": "address":"number"]} <- get-address/28 {name: "result", value: 1, type: 2-11, properties: ["result": "address":"screen", "deref": ]}, {name: "cursor-column", value: 3, type: 0, properties: ["cursor-column": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1002 is 1031
mem/0: location 1031 is 2
mem/0: location 1032 is 20
mem/0: location 1033 is 0
mem/0: location 1034 is 0
mem/0: location 1035 is 0
run/0: ingredient 1 is cursor-column
mem/0: location 1002 is 1031
run/0: address to copy is 1034
run/0: product 0 is column
mem/0: storing 1034 in location 1006
run/0: instruction init-fake-screen/9
run/0: {name: "column", value: 5, type: 2-1, properties: ["column": "address":"number", "deref": ]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
run/0: product 0 is column
mem/0: location 1006 is 1034
mem/0: storing 0 in location 1034
run/0: instruction init-fake-screen/10
run/0: {name: "bufsize", value: 6, type: 1, properties: ["bufsize": "number"]} <- multiply/4 {name: "width", value: 2, type: 2-1, properties: ["width": "address":"number", "deref": ]}, {name: "height", value: 3, type: 2-1, properties: ["height": "address":"number", "deref": ]}
run/0: ingredient 0 is width
mem/0: location 1003 is 1032
mem/0: location 1032 is 20
run/0: ingredient 1 is height
mem/0: location 1004 is 1031
mem/0: location 1031 is 2
run/0: product 0 is bufsize
mem/0: storing 40 in location 1007
run/0: instruction init-fake-screen/11
run/0: {name: "buf", value: 7, type: 2-2-5-4, properties: ["buf": "address":"address":"array":"character"]} <- get-address/28 {name: "result", value: 1, type: 2-11, properties: ["result": "address":"screen", "deref": ]}, {name: "data", value: 4, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1002 is 1031
mem/0: location 1031 is 2
mem/0: location 1032 is 20
mem/0: location 1033 is 0
mem/0: location 1034 is 0
mem/0: location 1035 is 0
run/0: ingredient 1 is data
mem/0: location 1002 is 1031
run/0: address to copy is 1035
run/0: product 0 is buf
mem/0: storing 1035 in location 1008
run/0: instruction init-fake-screen/12
run/0: {name: "buf", value: 7, type: 2-2-5-4, properties: ["buf": "address":"address":"array":"character", "deref": ]} <- new/51 {name: "character", value: 0, type: 0, properties: ["character": "literal"]}, {name: "bufsize", value: 6, type: 1, properties: ["bufsize": "number"]}
run/0: ingredient 0 is character
run/0: ingredient 1 is bufsize
mem/0: location 1007 is 40
mem/0: array size is 40
mem/0: new alloc: 1036
run/0: product 0 is buf
mem/0: location 1008 is 1035
mem/0: storing 1036 in location 1035
run/0: instruction init-fake-screen/13
run/0: clear-screen/118 {name: "result", value: 1, type: 2-11, properties: ["result": "address":"screen"]}
run/0: ingredient 0 is result
mem/0: location 1002 is 1031
run/0: instruction clear-screen/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1077
run/0: product 0 is default-space
run/0: instruction clear-screen/1
run/0: {name: "x", value: 1, type: 2-11, properties: ["x": "address":"screen"]} <- next-ingredient/33 
run/0: product 0 is x
mem/0: storing 1031 in location 1079
run/0: instruction clear-screen/3
run/0: break-unless/12 {name: "x", value: 1, type: 2-11, properties: ["x": "address":"screen"]}, {name: "", value: 16, type: 0, properties: ["": ]}
run/0: ingredient 0 is x
mem/0: location 1079 is 1031
run/0: ingredient 1 is 
run/0: jump-unless fell through
run/0: instruction clear-screen/4
run/0: {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character"]} <- get/27 {name: "x", value: 1, type: 2-11, properties: ["x": "address":"screen", "deref": ]}, {name: "data", value: 4, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is x
mem/0: location 1079 is 1031
mem/0: location 1031 is 2
mem/0: location 1032 is 20
mem/0: location 1033 is 0
mem/0: location 1034 is 0
mem/0: location 1035 is 1036
run/0: ingredient 1 is data
mem/0: location 1079 is 1031
run/0: address to copy is 1035
run/0: its type is 2
mem/0: location 1035 is 1036
run/0: product 0 is buf
mem/0: storing 1036 in location 1080
run/0: instruction clear-screen/5
run/0: {name: "max", value: 3, type: 1, properties: ["max": "number"]} <- length/31 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
mem/0: location 1080 is 1036
run/0: product 0 is max
mem/0: storing 40 in location 1081
run/0: instruction clear-screen/6
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
run/0: product 0 is i
mem/0: storing 0 in location 1082
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 0
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 0
mem/0: location 1080 is 1036
mem/0: location 1082 is 0
run/0: product 0 is c
mem/0: storing 1037 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1037
mem/0: storing 0 in location 1037
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 0
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 1 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 1
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 1
mem/0: location 1080 is 1036
mem/0: location 1082 is 1
run/0: product 0 is c
mem/0: storing 1038 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1038
mem/0: storing 0 in location 1038
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 1
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 2 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 2
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 2
mem/0: location 1080 is 1036
mem/0: location 1082 is 2
run/0: product 0 is c
mem/0: storing 1039 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1039
mem/0: storing 0 in location 1039
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 2
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 3 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 3
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 3
mem/0: location 1080 is 1036
mem/0: location 1082 is 3
run/0: product 0 is c
mem/0: storing 1040 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1040
mem/0: storing 0 in location 1040
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 3
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 4 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 4
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 4
mem/0: location 1080 is 1036
mem/0: location 1082 is 4
run/0: product 0 is c
mem/0: storing 1041 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1041
mem/0: storing 0 in location 1041
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 4
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 5 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 5
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 5
mem/0: location 1080 is 1036
mem/0: location 1082 is 5
run/0: product 0 is c
mem/0: storing 1042 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1042
mem/0: storing 0 in location 1042
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 5
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 6 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 6
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 6
mem/0: location 1080 is 1036
mem/0: location 1082 is 6
run/0: product 0 is c
mem/0: storing 1043 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1043
mem/0: storing 0 in location 1043
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 6
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 7 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 7
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 7
mem/0: location 1080 is 1036
mem/0: location 1082 is 7
run/0: product 0 is c
mem/0: storing 1044 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1044
mem/0: storing 0 in location 1044
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 7
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 8 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 8
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 8
mem/0: location 1080 is 1036
mem/0: location 1082 is 8
run/0: product 0 is c
mem/0: storing 1045 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1045
mem/0: storing 0 in location 1045
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 8
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 9 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 9
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 9
mem/0: location 1080 is 1036
mem/0: location 1082 is 9
run/0: product 0 is c
mem/0: storing 1046 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1046
mem/0: storing 0 in location 1046
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 9
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 10 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 10
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 10
mem/0: location 1080 is 1036
mem/0: location 1082 is 10
run/0: product 0 is c
mem/0: storing 1047 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1047
mem/0: storing 0 in location 1047
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 10
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 11 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 11
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 11
mem/0: location 1080 is 1036
mem/0: location 1082 is 11
run/0: product 0 is c
mem/0: storing 1048 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1048
mem/0: storing 0 in location 1048
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 11
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 12 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 12
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 12
mem/0: location 1080 is 1036
mem/0: location 1082 is 12
run/0: product 0 is c
mem/0: storing 1049 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1049
mem/0: storing 0 in location 1049
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 12
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 13 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 13
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 13
mem/0: location 1080 is 1036
mem/0: location 1082 is 13
run/0: product 0 is c
mem/0: storing 1050 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1050
mem/0: storing 0 in location 1050
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 13
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 14 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 14
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 14
mem/0: location 1080 is 1036
mem/0: location 1082 is 14
run/0: product 0 is c
mem/0: storing 1051 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1051
mem/0: storing 0 in location 1051
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 14
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 15 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 15
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 15
mem/0: location 1080 is 1036
mem/0: location 1082 is 15
run/0: product 0 is c
mem/0: storing 1052 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1052
mem/0: storing 0 in location 1052
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 15
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 16 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 16
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 16
mem/0: location 1080 is 1036
mem/0: location 1082 is 16
run/0: product 0 is c
mem/0: storing 1053 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1053
mem/0: storing 0 in location 1053
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 16
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 17 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 17
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 17
mem/0: location 1080 is 1036
mem/0: location 1082 is 17
run/0: product 0 is c
mem/0: storing 1054 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1054
mem/0: storing 0 in location 1054
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 17
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 18 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 18
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 18
mem/0: location 1080 is 1036
mem/0: location 1082 is 18
run/0: product 0 is c
mem/0: storing 1055 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1055
mem/0: storing 0 in location 1055
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 18
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 19 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 19
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 19
mem/0: location 1080 is 1036
mem/0: location 1082 is 19
run/0: product 0 is c
mem/0: storing 1056 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1056
mem/0: storing 0 in location 1056
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 19
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 20 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 20
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 20
mem/0: location 1080 is 1036
mem/0: location 1082 is 20
run/0: product 0 is c
mem/0: storing 1057 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1057
mem/0: storing 0 in location 1057
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 20
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 21 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 21
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 21
mem/0: location 1080 is 1036
mem/0: location 1082 is 21
run/0: product 0 is c
mem/0: storing 1058 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1058
mem/0: storing 0 in location 1058
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 21
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 22 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 22
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 22
mem/0: location 1080 is 1036
mem/0: location 1082 is 22
run/0: product 0 is c
mem/0: storing 1059 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1059
mem/0: storing 0 in location 1059
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 22
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 23 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 23
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 23
mem/0: location 1080 is 1036
mem/0: location 1082 is 23
run/0: product 0 is c
mem/0: storing 1060 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1060
mem/0: storing 0 in location 1060
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 23
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 24 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 24
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 24
mem/0: location 1080 is 1036
mem/0: location 1082 is 24
run/0: product 0 is c
mem/0: storing 1061 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1061
mem/0: storing 0 in location 1061
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 24
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 25 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 25
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 25
mem/0: location 1080 is 1036
mem/0: location 1082 is 25
run/0: product 0 is c
mem/0: storing 1062 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1062
mem/0: storing 0 in location 1062
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 25
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 26 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 26
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 26
mem/0: location 1080 is 1036
mem/0: location 1082 is 26
run/0: product 0 is c
mem/0: storing 1063 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1063
mem/0: storing 0 in location 1063
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 26
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 27 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 27
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 27
mem/0: location 1080 is 1036
mem/0: location 1082 is 27
run/0: product 0 is c
mem/0: storing 1064 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1064
mem/0: storing 0 in location 1064
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 27
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 28 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 28
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 28
mem/0: location 1080 is 1036
mem/0: location 1082 is 28
run/0: product 0 is c
mem/0: storing 1065 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1065
mem/0: storing 0 in location 1065
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 28
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 29 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 29
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 29
mem/0: location 1080 is 1036
mem/0: location 1082 is 29
run/0: product 0 is c
mem/0: storing 1066 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1066
mem/0: storing 0 in location 1066
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 29
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 30 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 30
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 30
mem/0: location 1080 is 1036
mem/0: location 1082 is 30
run/0: product 0 is c
mem/0: storing 1067 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1067
mem/0: storing 0 in location 1067
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 30
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 31 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 31
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 31
mem/0: location 1080 is 1036
mem/0: location 1082 is 31
run/0: product 0 is c
mem/0: storing 1068 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1068
mem/0: storing 0 in location 1068
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 31
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 32 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 32
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 32
mem/0: location 1080 is 1036
mem/0: location 1082 is 32
run/0: product 0 is c
mem/0: storing 1069 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1069
mem/0: storing 0 in location 1069
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 32
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 33 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 33
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 33
mem/0: location 1080 is 1036
mem/0: location 1082 is 33
run/0: product 0 is c
mem/0: storing 1070 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1070
mem/0: storing 0 in location 1070
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 33
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 34 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 34
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 34
mem/0: location 1080 is 1036
mem/0: location 1082 is 34
run/0: product 0 is c
mem/0: storing 1071 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1071
mem/0: storing 0 in location 1071
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 34
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 35 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 35
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 35
mem/0: location 1080 is 1036
mem/0: location 1082 is 35
run/0: product 0 is c
mem/0: storing 1072 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1072
mem/0: storing 0 in location 1072
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 35
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 36 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 36
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 36
mem/0: location 1080 is 1036
mem/0: location 1082 is 36
run/0: product 0 is c
mem/0: storing 1073 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1073
mem/0: storing 0 in location 1073
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 36
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 37 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 37
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 37
mem/0: location 1080 is 1036
mem/0: location 1082 is 37
run/0: product 0 is c
mem/0: storing 1074 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1074
mem/0: storing 0 in location 1074
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 37
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 38 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 38
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 38
mem/0: location 1080 is 1036
mem/0: location 1082 is 38
run/0: product 0 is c
mem/0: storing 1075 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1075
mem/0: storing 0 in location 1075
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 38
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 39 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 39
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 0 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction clear-screen/10
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character"]} <- index-address/30 {name: "buf", value: 2, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 4, type: 1, properties: ["i": "number"]}
run/0: ingredient 0 is buf
mem/0: location 1080 is 1036
mem/0: location 1036 is 40
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1046 is 0
mem/0: location 1047 is 0
mem/0: location 1048 is 0
mem/0: location 1049 is 0
mem/0: location 1050 is 0
mem/0: location 1051 is 0
mem/0: location 1052 is 0
mem/0: location 1053 is 0
mem/0: location 1054 is 0
mem/0: location 1055 is 0
mem/0: location 1056 is 0
mem/0: location 1057 is 0
mem/0: location 1058 is 0
mem/0: location 1059 is 0
mem/0: location 1060 is 0
mem/0: location 1061 is 0
mem/0: location 1062 is 0
mem/0: location 1063 is 0
mem/0: location 1064 is 0
mem/0: location 1065 is 0
mem/0: location 1066 is 0
mem/0: location 1067 is 0
mem/0: location 1068 is 0
mem/0: location 1069 is 0
mem/0: location 1070 is 0
mem/0: location 1071 is 0
mem/0: location 1072 is 0
mem/0: location 1073 is 0
mem/0: location 1074 is 0
mem/0: location 1075 is 0
mem/0: location 1076 is 0
run/0: ingredient 1 is i
mem/0: location 1082 is 39
mem/0: location 1080 is 1036
mem/0: location 1082 is 39
run/0: product 0 is c
mem/0: storing 1076 in location 1084
run/0: instruction clear-screen/11
run/0: {name: "c", value: 6, type: 2-4, properties: ["c": "address":"character", "deref": ]} <- copy/1 {name: " ", value: 0, type: 0, properties: [" ": "literal-string"]}
run/0: ingredient 0 is  
run/0: product 0 is c
mem/0: location 1084 is 1076
mem/0: storing 0 in location 1076
run/0: instruction clear-screen/12
run/0: {name: "i", value: 4, type: 1, properties: ["i": "number"]} <- add/2 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 39
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 40 in location 1082
run/0: instruction clear-screen/13
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 8
run/0: instruction clear-screen/8
run/0: {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 4, type: 1, properties: ["i": "number"]}, {name: "max", value: 3, type: 1, properties: ["max": "number"]}
run/0: ingredient 0 is i
mem/0: location 1082 is 40
run/0: ingredient 1 is max
mem/0: location 1081 is 40
run/0: product 0 is done?
mem/0: storing 1 in location 1083
run/0: instruction clear-screen/9
run/0: break-if/11 {name: "done?", value: 5, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 1083 is 1
run/0: ingredient 1 is 
run/0: jumping to instruction 14
run/0: instruction clear-screen/15
run/0: {name: "cur", value: 7, type: 2-1, properties: ["cur": "address":"number"]} <- get-address/28 {name: "x", value: 1, type: 2-11, properties: ["x": "address":"screen", "deref": ]}, {name: "cursor-row", value: 2, type: 0, properties: ["cursor-row": "offset"]}
run/0: ingredient 0 is x
mem/0: location 1079 is 1031
mem/0: location 1031 is 2
mem/0: location 1032 is 20
mem/0: location 1033 is 0
mem/0: location 1034 is 0
mem/0: location 1035 is 1036
run/0: ingredient 1 is cursor-row
mem/0: location 1079 is 1031
run/0: address to copy is 1033
run/0: product 0 is cur
mem/0: storing 1033 in location 1085
run/0: instruction clear-screen/16
run/0: {name: "cur", value: 7, type: 2-1, properties: ["cur": "address":"number", "deref": ]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
run/0: product 0 is cur
mem/0: location 1085 is 1033
mem/0: storing 0 in location 1033
run/0: instruction clear-screen/17
run/0: {name: "cur", value: 7, type: 2-1, properties: ["cur": "address":"number"]} <- get-address/28 {name: "x", value: 1, type: 2-11, properties: ["x": "address":"screen", "deref": ]}, {name: "cursor-column", value: 3, type: 0, properties: ["cursor-column": "offset"]}
run/0: ingredient 0 is x
mem/0: location 1079 is 1031
mem/0: location 1031 is 2
mem/0: location 1032 is 20
mem/0: location 1033 is 0
mem/0: location 1034 is 0
mem/0: location 1035 is 1036
run/0: ingredient 1 is cursor-column
mem/0: location 1079 is 1031
run/0: address to copy is 1034
run/0: product 0 is cur
mem/0: storing 1034 in location 1085
run/0: instruction clear-screen/18
run/0: {name: "cur", value: 7, type: 2-1, properties: ["cur": "address":"number", "deref": ]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
run/0: product 0 is cur
mem/0: location 1085 is 1034
mem/0: storing 0 in location 1034
run/0: instruction clear-screen/19
run/0: reply/36 {name: "x", value: 1, type: 2-11, properties: ["x": "address":"screen", "same-as-ingredient": "0"]}
run/0: ingredient 0 is x
mem/0: location 1079 is 1031
run/0: instruction init-fake-screen/14
run/0: reply/36 {name: "result", value: 1, type: 2-11, properties: ["result": "address":"screen"]}
run/0: ingredient 0 is result
mem/0: location 1002 is 1031
run/0: result 0 is 1031
run/0: product 0 is screen
mem/0: storing 1031 in location 900
run/0: instruction read-move-blocking/1
run/0: run/52 {name: "
#?     $start-tracing #? 1
    1:address:channel <- init-channel 2:literal
#?     $print [aaa channel address: ], 1:address:channel, [ 
#? ] #? 1
    2:number/routine <- start-running read-move:recipe, 1:address:channel, screen:address
    # 'read-move' is waiting for input
    wait-for-routine 2:number
#?     $print [bbb channel address: ], 1:address:channel, [ 
#? ] #? 1
    3:number <- routine-state 2:number/id
#?     $print [I: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after coming up (before any keys were pressed)]
    # press 'a'
#?     $print [ccc channel address: ], 1:address:channel, [ 
#? ] #? 1
#?     $exit #? 1
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number/id
#?     $print [II: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after rank 'a']
    # press '2'
    1:address:channel <- write 1:address:channel, 50:literal  # '2'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number/id
#?     $print [III: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after file 'a2']
    # press '-'
    1:address:channel <- write 1:address:channel, 45:literal  # '-'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number
#?     $print [IV: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?/routine-state, [
F read-move-blocking: routine failed to pause after hyphen 'a2-']
    # press 'a'
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number
#?     $print [V: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?/routine-state, [
F read-move-blocking: routine failed to pause after rank 'a2-a']
    # press '4'
    1:address:channel <- write 1:address:channel, 52:literal  # '4'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number
#?     $print [VI: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after file 'a2-a4']
    # press 'newline'
    1:address:channel <- write 1:address:channel, 10:literal  # newline
    restart 2:number/routine
    # 'read-move' now completes
    wait-for-routine 2:number
    3:number <- routine-state 2:number
#?     $print [VII: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/completed? <- equal 3:number/routine-state, 1:literal/completed
    assert 4:boolean/completed?, [
F read-move-blocking: routine failed to terminate on newline]
    trace [test], [reached end]
  ", value: 0, type: 0, properties: ["
#?     $start-tracing #? 1
    1:address:channel <- init-channel 2:literal
#?     $print [aaa channel address: ], 1:address:channel, [ 
#? ] #? 1
    2:number/routine <- start-running read-move:recipe, 1:address:channel, screen:address
    # 'read-move' is waiting for input
    wait-for-routine 2:number
#?     $print [bbb channel address: ], 1:address:channel, [ 
#? ] #? 1
    3:number <- routine-state 2:number/id
#?     $print [I: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after coming up (before any keys were pressed)]
    # press 'a'
#?     $print [ccc channel address: ], 1:address:channel, [ 
#? ] #? 1
#?     $exit #? 1
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number/id
#?     $print [II: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after rank 'a']
    # press '2'
    1:address:channel <- write 1:address:channel, 50:literal  # '2'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number/id
#?     $print [III: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after file 'a2']
    # press '-'
    1:address:channel <- write 1:address:channel, 45:literal  # '-'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number
#?     $print [IV: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?/routine-state, [
F read-move-blocking: routine failed to pause after hyphen 'a2-']
    # press 'a'
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number
#?     $print [V: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?/routine-state, [
F read-move-blocking: routine failed to pause after rank 'a2-a']
    # press '4'
    1:address:channel <- write 1:address:channel, 52:literal  # '4'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number
#?     $print [VI: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after file 'a2-a4']
    # press 'newline'
    1:address:channel <- write 1:address:channel, 10:literal  # newline
    restart 2:number/routine
    # 'read-move' now completes
    wait-for-routine 2:number
    3:number <- routine-state 2:number
#?     $print [VII: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/completed? <- equal 3:number/routine-state, 1:literal/completed
    assert 4:boolean/completed?, [
F read-move-blocking: routine failed to terminate on newline]
    trace [test], [reached end]
  ": "literal-string"]}
run/0: ingredient 0 is 
#?     $start-tracing #? 1
    1:address:channel <- init-channel 2:literal
#?     $print [aaa channel address: ], 1:address:channel, [ 
#? ] #? 1
    2:number/routine <- start-running read-move:recipe, 1:address:channel, screen:address
    # 'read-move' is waiting for input
    wait-for-routine 2:number
#?     $print [bbb channel address: ], 1:address:channel, [ 
#? ] #? 1
    3:number <- routine-state 2:number/id
#?     $print [I: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after coming up (before any keys were pressed)]
    # press 'a'
#?     $print [ccc channel address: ], 1:address:channel, [ 
#? ] #? 1
#?     $exit #? 1
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number/id
#?     $print [II: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after rank 'a']
    # press '2'
    1:address:channel <- write 1:address:channel, 50:literal  # '2'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number/id
#?     $print [III: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after file 'a2']
    # press '-'
    1:address:channel <- write 1:address:channel, 45:literal  # '-'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number
#?     $print [IV: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?/routine-state, [
F read-move-blocking: routine failed to pause after hyphen 'a2-']
    # press 'a'
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number
#?     $print [V: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?/routine-state, [
F read-move-blocking: routine failed to pause after rank 'a2-a']
    # press '4'
    1:address:channel <- write 1:address:channel, 52:literal  # '4'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number
#?     $print [VI: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after file 'a2-a4']
    # press 'newline'
    1:address:channel <- write 1:address:channel, 10:literal  # newline
    restart 2:number/routine
    # 'read-move' now completes
    wait-for-routine 2:number
    3:number <- routine-state 2:number
#?     $print [VII: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/completed? <- equal 3:number/routine-state, 1:literal/completed
    assert 4:boolean/completed?, [
F read-move-blocking: routine failed to terminate on newline]
    trace [test], [reached end]
  
parse/0: instruction: init-channel
parse/0:   ingredient: {name: "2", value: 0, type: 0, properties: ["2": "literal"]}
parse/0:   product: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0: instruction: start-running
parse/0:   ingredient: {name: "read-move", value: 0, type: 0, properties: ["read-move": "recipe"]}
parse/0:   ingredient: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0:   ingredient: {name: "screen", value: 0, type: 2, properties: ["screen": "address"]}
parse/0:   product: {name: "2", value: 0, type: 1, properties: ["2": "number", "routine": ]}
parse/0: instruction: wait-for-routine
parse/0:   ingredient: {name: "2", value: 0, type: 1, properties: ["2": "number"]}
parse/0: instruction: routine-state
parse/0:   ingredient: {name: "2", value: 0, type: 1, properties: ["2": "number", "id": ]}
parse/0:   product: {name: "3", value: 0, type: 1, properties: ["3": "number"]}
parse/0: instruction: equal
parse/0:   ingredient: {name: "3", value: 0, type: 1, properties: ["3": "number", "routine-state": ]}
parse/0:   ingredient: {name: "2", value: 0, type: 0, properties: ["2": "literal", "waiting": ]}
parse/0:   product: {name: "4", value: 0, type: 3, properties: ["4": "boolean", "waiting?": ]}
parse/0: instruction: assert
parse/0:   ingredient: {name: "4", value: 0, type: 3, properties: ["4": "boolean", "waiting?": ]}
parse/0:   ingredient: {name: "
F read-move-blocking: routine failed to pause after coming up (before any keys were pressed)", value: 0, type: 0, properties: ["
F read-move-blocking: routine failed to pause after coming up (before any keys were pressed)": "literal-string"]}
parse/0: instruction: write
parse/0:   ingredient: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0:   ingredient: {name: "97", value: 0, type: 0, properties: ["97": "literal"]}
parse/0:   product: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0: instruction: restart
parse/0:   ingredient: {name: "2", value: 0, type: 1, properties: ["2": "number", "routine": ]}
parse/0: instruction: wait-for-routine
parse/0:   ingredient: {name: "2", value: 0, type: 1, properties: ["2": "number"]}
parse/0: instruction: routine-state
parse/0:   ingredient: {name: "2", value: 0, type: 1, properties: ["2": "number", "id": ]}
parse/0:   product: {name: "3", value: 0, type: 1, properties: ["3": "number"]}
parse/0: instruction: equal
parse/0:   ingredient: {name: "3", value: 0, type: 1, properties: ["3": "number", "routine-state": ]}
parse/0:   ingredient: {name: "2", value: 0, type: 0, properties: ["2": "literal", "waiting": ]}
parse/0:   product: {name: "4", value: 0, type: 3, properties: ["4": "boolean", "waiting?": ]}
parse/0: instruction: assert
parse/0:   ingredient: {name: "4", value: 0, type: 3, properties: ["4": "boolean", "waiting?": ]}
parse/0:   ingredient: {name: "
F read-move-blocking: routine failed to pause after rank 'a'", value: 0, type: 0, properties: ["
F read-move-blocking: routine failed to pause after rank 'a'": "literal-string"]}
parse/0: instruction: write
parse/0:   ingredient: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0:   ingredient: {name: "50", value: 0, type: 0, properties: ["50": "literal"]}
parse/0:   product: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0: instruction: restart
parse/0:   ingredient: {name: "2", value: 0, type: 1, properties: ["2": "number", "routine": ]}
parse/0: instruction: wait-for-routine
parse/0:   ingredient: {name: "2", value: 0, type: 1, properties: ["2": "number"]}
parse/0: instruction: routine-state
parse/0:   ingredient: {name: "2", value: 0, type: 1, properties: ["2": "number", "id": ]}
parse/0:   product: {name: "3", value: 0, type: 1, properties: ["3": "number"]}
parse/0: instruction: equal
parse/0:   ingredient: {name: "3", value: 0, type: 1, properties: ["3": "number", "routine-state": ]}
parse/0:   ingredient: {name: "2", value: 0, type: 0, properties: ["2": "literal", "waiting": ]}
parse/0:   product: {name: "4", value: 0, type: 3, properties: ["4": "boolean", "waiting?": ]}
parse/0: instruction: assert
parse/0:   ingredient: {name: "4", value: 0, type: 3, properties: ["4": "boolean", "waiting?": ]}
parse/0:   ingredient: {name: "
F read-move-blocking: routine failed to pause after file 'a2'", value: 0, type: 0, properties: ["
F read-move-blocking: routine failed to pause after file 'a2'": "literal-string"]}
parse/0: instruction: write
parse/0:   ingredient: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0:   ingredient: {name: "45", value: 0, type: 0, properties: ["45": "literal"]}
parse/0:   product: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0: instruction: restart
parse/0:   ingredient: {name: "2", value: 0, type: 1, properties: ["2": "number", "routine": ]}
parse/0: instruction: wait-for-routine
parse/0:   ingredient: {name: "2", value: 0, type: 1, properties: ["2": "number"]}
parse/0: instruction: routine-state
parse/0:   ingredient: {name: "2", value: 0, type: 1, properties: ["2": "number"]}
parse/0:   product: {name: "3", value: 0, type: 1, properties: ["3": "number"]}
parse/0: instruction: equal
parse/0:   ingredient: {name: "3", value: 0, type: 1, properties: ["3": "number", "routine-state": ]}
parse/0:   ingredient: {name: "2", value: 0, type: 0, properties: ["2": "literal", "waiting": ]}
parse/0:   product: {name: "4", value: 0, type: 3, properties: ["4": "boolean", "waiting?": ]}
parse/0: instruction: assert
parse/0:   ingredient: {name: "4", value: 0, type: 3, properties: ["4": "boolean", "waiting?": , "routine-state": ]}
parse/0:   ingredient: {name: "
F read-move-blocking: routine failed to pause after hyphen 'a2-'", value: 0, type: 0, properties: ["
F read-move-blocking: routine failed to pause after hyphen 'a2-'": "literal-string"]}
parse/0: instruction: write
parse/0:   ingredient: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0:   ingredient: {name: "97", value: 0, type: 0, properties: ["97": "literal"]}
parse/0:   product: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0: instruction: restart
parse/0:   ingredient: {name: "2", value: 0, type: 1, properties: ["2": "number", "routine": ]}
parse/0: instruction: wait-for-routine
parse/0:   ingredient: {name: "2", value: 0, type: 1, properties: ["2": "number"]}
parse/0: instruction: routine-state
parse/0:   ingredient: {name: "2", value: 0, type: 1, properties: ["2": "number"]}
parse/0:   product: {name: "3", value: 0, type: 1, properties: ["3": "number"]}
parse/0: instruction: equal
parse/0:   ingredient: {name: "3", value: 0, type: 1, properties: ["3": "number", "routine-state": ]}
parse/0:   ingredient: {name: "2", value: 0, type: 0, properties: ["2": "literal", "waiting": ]}
parse/0:   product: {name: "4", value: 0, type: 3, properties: ["4": "boolean", "waiting?": ]}
parse/0: instruction: assert
parse/0:   ingredient: {name: "4", value: 0, type: 3, properties: ["4": "boolean", "waiting?": , "routine-state": ]}
parse/0:   ingredient: {name: "
F read-move-blocking: routine failed to pause after rank 'a2-a'", value: 0, type: 0, properties: ["
F read-move-blocking: routine failed to pause after rank 'a2-a'": "literal-string"]}
parse/0: instruction: write
parse/0:   ingredient: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0:   ingredient: {name: "52", value: 0, type: 0, properties: ["52": "literal"]}
parse/0:   product: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0: instruction: restart
parse/0:   ingredient: {name: "2", value: 0, type: 1, properties: ["2": "number", "routine": ]}
parse/0: instruction: wait-for-routine
parse/0:   ingredient: {name: "2", value: 0, type: 1, properties: ["2": "number"]}
parse/0: instruction: routine-state
parse/0:   ingredient: {name: "2", value: 0, type: 1, properties: ["2": "number"]}
parse/0:   product: {name: "3", value: 0, type: 1, properties: ["3": "number"]}
parse/0: instruction: equal
parse/0:   ingredient: {name: "3", value: 0, type: 1, properties: ["3": "number", "routine-state": ]}
parse/0:   ingredient: {name: "2", value: 0, type: 0, properties: ["2": "literal", "waiting": ]}
parse/0:   product: {name: "4", value: 0, type: 3, properties: ["4": "boolean", "waiting?": ]}
parse/0: instruction: assert
parse/0:   ingredient: {name: "4", value: 0, type: 3, properties: ["4": "boolean", "waiting?": ]}
parse/0:   ingredient: {name: "
F read-move-blocking: routine failed to pause after file 'a2-a4'", value: 0, type: 0, properties: ["
F read-move-blocking: routine failed to pause after file 'a2-a4'": "literal-string"]}
parse/0: instruction: write
parse/0:   ingredient: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0:   ingredient: {name: "10", value: 0, type: 0, properties: ["10": "literal"]}
parse/0:   product: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0: instruction: restart
parse/0:   ingredient: {name: "2", value: 0, type: 1, properties: ["2": "number", "routine": ]}
parse/0: instruction: wait-for-routine
parse/0:   ingredient: {name: "2", value: 0, type: 1, properties: ["2": "number"]}
parse/0: instruction: routine-state
parse/0:   ingredient: {name: "2", value: 0, type: 1, properties: ["2": "number"]}
parse/0:   product: {name: "3", value: 0, type: 1, properties: ["3": "number"]}
parse/0: instruction: equal
parse/0:   ingredient: {name: "3", value: 0, type: 1, properties: ["3": "number", "routine-state": ]}
parse/0:   ingredient: {name: "1", value: 0, type: 0, properties: ["1": "literal", "completed": ]}
parse/0:   product: {name: "4", value: 0, type: 3, properties: ["4": "boolean", "completed?": ]}
parse/0: instruction: assert
parse/0:   ingredient: {name: "4", value: 0, type: 3, properties: ["4": "boolean", "completed?": ]}
parse/0:   ingredient: {name: "
F read-move-blocking: routine failed to terminate on newline", value: 0, type: 0, properties: ["
F read-move-blocking: routine failed to terminate on newline": "literal-string"]}
parse/0: instruction: trace
parse/0:   ingredient: {name: "test", value: 0, type: 0, properties: ["test": "literal-string"]}
parse/0:   ingredient: {name: "reached end", value: 0, type: 0, properties: ["reached end": "literal-string"]}
after-brace/0: recipe run1001
after-brace/0: init-channel ...
after-brace/0: start-running ...
after-brace/0: wait-for-routine ...
after-brace/0: routine-state ...
after-brace/0: equal ...
after-brace/0: assert ...
after-brace/0: write ...
after-brace/0: restart ...
after-brace/0: wait-for-routine ...
after-brace/0: routine-state ...
after-brace/0: equal ...
after-brace/0: assert ...
after-brace/0: write ...
after-brace/0: restart ...
after-brace/0: wait-for-routine ...
after-brace/0: routine-state ...
after-brace/0: equal ...
after-brace/0: assert ...
after-brace/0: write ...
after-brace/0: restart ...
after-brace/0: wait-for-routine ...
after-brace/0: routine-state ...
after-brace/0: equal ...
after-brace/0: assert ...
after-brace/0: write ...
after-brace/0: restart ...
after-brace/0: wait-for-routine ...
after-brace/0: routine-state ...
after-brace/0: equal ...
after-brace/0: assert ...
after-brace/0: write ...
after-brace/0: restart ...
after-brace/0: wait-for-routine ...
after-brace/0: routine-state ...
after-brace/0: equal ...
after-brace/0: assert ...
after-brace/0: write ...
after-brace/0: restart ...
after-brace/0: wait-for-routine ...
after-brace/0: routine-state ...
after-brace/0: equal ...
after-brace/0: assert ...
after-brace/0: trace ...
run/0: instruction run1001/0
run/0: {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]} <- init-channel/108 {name: "2", value: 2, type: 0, properties: ["2": "literal"]}
run/0: ingredient 0 is 2
run/0: instruction init-channel/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1108
run/0: product 0 is default-space
run/0: instruction init-channel/1
run/0: {name: "result", value: 1, type: 2-10, properties: ["result": "address":"channel"]} <- new/51 {name: "channel", value: 10, type: 0, properties: ["channel": "type"]}
run/0: ingredient 0 is channel
mem/0: new alloc: 1139
run/0: product 0 is result
mem/0: storing 1139 in location 1110
run/0: instruction init-channel/2
run/0: {name: "full", value: 2, type: 2-1, properties: ["full": "address":"number"]} <- get-address/28 {name: "result", value: 1, type: 2-10, properties: ["result": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1110 is 1139
mem/0: location 1139 is 0
mem/0: location 1140 is 0
mem/0: location 1141 is 0
run/0: ingredient 1 is first-full
mem/0: location 1110 is 1139
run/0: address to copy is 1139
run/0: product 0 is full
mem/0: storing 1139 in location 1111
run/0: instruction init-channel/3
run/0: {name: "full", value: 2, type: 2-1, properties: ["full": "address":"number", "deref": ]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
run/0: product 0 is full
mem/0: location 1111 is 1139
mem/0: storing 0 in location 1139
run/0: instruction init-channel/4
run/0: {name: "free", value: 3, type: 2-1, properties: ["free": "address":"number"]} <- get-address/28 {name: "result", value: 1, type: 2-10, properties: ["result": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1110 is 1139
mem/0: location 1139 is 0
mem/0: location 1140 is 0
mem/0: location 1141 is 0
run/0: ingredient 1 is first-free
mem/0: location 1110 is 1139
run/0: address to copy is 1140
run/0: product 0 is free
mem/0: storing 1140 in location 1112
run/0: instruction init-channel/5
run/0: {name: "free", value: 3, type: 2-1, properties: ["free": "address":"number", "deref": ]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
run/0: product 0 is free
mem/0: location 1112 is 1140
mem/0: storing 0 in location 1140
run/0: instruction init-channel/6
run/0: {name: "capacity", value: 4, type: 1, properties: ["capacity": "number"]} <- next-ingredient/33 
run/0: product 0 is capacity
mem/0: storing 2 in location 1113
run/0: instruction init-channel/7
run/0: {name: "capacity", value: 4, type: 1, properties: ["capacity": "number"]} <- add/2 {name: "capacity", value: 4, type: 1, properties: ["capacity": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is capacity
mem/0: location 1113 is 2
run/0: ingredient 1 is 1
run/0: product 0 is capacity
mem/0: storing 3 in location 1113
run/0: instruction init-channel/8
run/0: {name: "dest", value: 5, type: 2-2-5-1, properties: ["dest": "address":"address":"array":"location"]} <- get-address/28 {name: "result", value: 1, type: 2-10, properties: ["result": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1110 is 1139
mem/0: location 1139 is 0
mem/0: location 1140 is 0
mem/0: location 1141 is 0
run/0: ingredient 1 is data
mem/0: location 1110 is 1139
run/0: address to copy is 1141
run/0: product 0 is dest
mem/0: storing 1141 in location 1114
run/0: instruction init-channel/9
run/0: {name: "dest", value: 5, type: 2-2-5-1, properties: ["dest": "address":"address":"array":"location", "deref": ]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "capacity", value: 4, type: 1, properties: ["capacity": "number"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is capacity
mem/0: location 1113 is 3
mem/0: array size is 3
mem/0: new alloc: 1142
run/0: product 0 is dest
mem/0: location 1114 is 1141
mem/0: storing 1142 in location 1141
run/0: instruction init-channel/10
run/0: reply/36 {name: "result", value: 1, type: 2-10, properties: ["result": "address":"channel"]}
run/0: ingredient 0 is result
mem/0: location 1110 is 1139
run/0: result 0 is 1139
run/0: product 0 is 1
mem/0: storing 1139 in location 1
run/0: instruction run1001/1
run/0: {name: "2", value: 2, type: 1, properties: ["2": "number", "routine": ]} <- start-running/37 {name: "read-move", value: 0, type: 0, properties: ["read-move": "recipe"]}, {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]}, {name: "screen", value: 900, type: 2, properties: ["screen": "address"]}
run/0: ingredient 0 is read-move
run/0: ingredient 1 is 1
mem/0: location 1 is 1139
run/0: ingredient 2 is screen
mem/0: location 900 is 1031
new/0: routine allocated memory from 101000 to 201000
run/0: product 0 is 2
mem/0: storing 2 in location 2
run/0: instruction run1001/2
run/0: wait-for-routine/43 {name: "2", value: 2, type: 1, properties: ["2": "number"]}
run/0: ingredient 0 is 2
mem/0: location 2 is 2
run/0: waiting for routine 2
schedule/0: read-move
run/0: instruction read-move/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101000
run/0: product 0 is default-space
run/0: instruction read-move/1
run/0: {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is stdin
mem/0: storing 1139 in location 101002
run/0: instruction read-move/2
run/0: {name: "screen", value: 2, type: 2, properties: ["screen": "address"]} <- next-ingredient/33 
run/0: product 0 is screen
mem/0: storing 1031 in location 101003
run/0: instruction read-move/3
run/0: {name: "from-file", value: 3, type: 1, properties: ["from-file": "number"]}, {name: "quit?", value: 4, type: 3, properties: ["quit?": "boolean"]}, {name: "error?", value: 5, type: 3, properties: ["error?": "boolean"]} <- read-file/143 {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]}, {name: "screen", value: 2, type: 2, properties: ["screen": "address"]}
run/0: ingredient 0 is stdin
mem/0: location 101002 is 1139
run/0: ingredient 1 is screen
mem/0: location 101003 is 1031
run/0: instruction read-file/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101031
run/0: product 0 is default-space
run/0: instruction read-file/1
run/0: {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is stdin
mem/0: storing 1139 in location 101033
run/0: instruction read-file/2
run/0: {name: "screen", value: 2, type: 2, properties: ["screen": "address"]} <- next-ingredient/33 
run/0: product 0 is screen
mem/0: storing 1031 in location 101034
run/0: instruction read-file/3
run/0: {name: "c", value: 3, type: 4, properties: ["c": "character"]}, {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]} <- read/111 {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]}
run/0: ingredient 0 is stdin
mem/0: location 101033 is 1139
run/0: instruction read/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101062
run/0: product 0 is default-space
run/0: instruction read/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 101064
run/0: instruction read/3
run/0: {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]} <- channel-empty?/112 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 101064 is 1139
run/0: instruction channel-empty?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101093
run/0: product 0 is default-space
run/0: instruction channel-empty?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 101095
run/0: instruction channel-empty?/2
run/0: {name: "full", value: 2, type: 1, properties: ["full": "number"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101095 is 1139
mem/0: location 1139 is 0
mem/0: location 1140 is 0
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-full
mem/0: location 101095 is 1139
run/0: address to copy is 1139
run/0: its type is 1
mem/0: location 1139 is 0
run/0: product 0 is full
mem/0: storing 0 in location 101096
run/0: instruction channel-empty?/3
run/0: {name: "free", value: 3, type: 1, properties: ["free": "number"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101095 is 1139
mem/0: location 1139 is 0
mem/0: location 1140 is 0
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-free
mem/0: location 101095 is 1139
run/0: address to copy is 1140
run/0: its type is 1
mem/0: location 1140 is 0
run/0: product 0 is free
mem/0: storing 0 in location 101097
run/0: instruction channel-empty?/4
run/0: {name: "result", value: 4, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 2, type: 1, properties: ["full": "number"]}, {name: "free", value: 3, type: 1, properties: ["free": "number"]}
run/0: ingredient 0 is full
mem/0: location 101096 is 0
run/0: ingredient 1 is free
mem/0: location 101097 is 0
run/0: product 0 is result
mem/0: storing 1 in location 101098
run/0: instruction channel-empty?/5
run/0: reply/36 {name: "result", value: 4, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 101098 is 1
run/0: result 0 is 1
run/0: product 0 is empty
mem/0: storing 1 in location 101065
run/0: instruction read/4
run/0: break-unless/12 {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is empty
mem/0: location 101065 is 1
run/0: ingredient 1 is 
run/0: jump-unless fell through
run/0: instruction read/5
run/0: {name: "free-address", value: 3, type: 2-1, properties: ["free-address": "address":"number"]} <- get-address/28 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101064 is 1139
mem/0: location 1139 is 0
mem/0: location 1140 is 0
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-free
mem/0: location 101064 is 1139
run/0: address to copy is 1140
run/0: product 0 is free-address
mem/0: storing 1140 in location 101066
run/0: instruction read/6
run/0: wait-for-location/42 {name: "free-address", value: 3, type: 2-1, properties: ["free-address": "address":"number", "deref": ]}
run/0: ingredient 0 is free-address
mem/0: location 101066 is 1140
mem/0: location 1140 is 0
mem/0: location 101066 is 1140
run/0: waiting for location 1140 to change from 0
schedule/0: waking up routine 1
schedule/0: run1001/read-move-blocking
run/0: instruction run1001/3
run/0: {name: "3", value: 3, type: 1, properties: ["3": "number"]} <- routine-state/38 {name: "2", value: 2, type: 1, properties: ["2": "number", "id": ]}
run/0: ingredient 0 is 2
mem/0: location 2 is 2
run/0: product 0 is 3
mem/0: storing 2 in location 3
run/0: instruction run1001/4
run/0: {name: "4", value: 4, type: 3, properties: ["4": "boolean", "waiting?": ]} <- equal/13 {name: "3", value: 3, type: 1, properties: ["3": "number", "routine-state": ]}, {name: "2", value: 2, type: 0, properties: ["2": "literal", "waiting": ]}
run/0: ingredient 0 is 3
mem/0: location 3 is 2
run/0: ingredient 1 is 2
run/0: product 0 is 4
mem/0: storing 1 in location 4
run/0: instruction run1001/5
run/0: assert/20 {name: "4", value: 4, type: 3, properties: ["4": "boolean", "waiting?": ]}, {name: "
F read-move-blocking: routine failed to pause after coming up (before any keys were pressed)", value: 0, type: 0, properties: ["
F read-move-blocking: routine failed to pause after coming up (before any keys were pressed)": "literal-string"]}
run/0: ingredient 0 is 4
mem/0: location 4 is 1
run/0: ingredient 1 is 
F read-move-blocking: routine failed to pause after coming up (before any keys were pressed)
run/0: instruction run1001/6
run/0: {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]} <- write/109 {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]}, {name: "97", value: 97, type: 0, properties: ["97": "literal"]}
run/0: ingredient 0 is 1
mem/0: location 1 is 1139
run/0: ingredient 1 is 97
run/0: instruction write/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1146
run/0: product 0 is default-space
run/0: instruction write/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 1148
run/0: instruction write/2
run/0: {name: "val", value: 2, type: 1, properties: ["val": "location"]} <- next-ingredient/33 
run/0: product 0 is val
mem/0: storing 97 in location 1149
run/0: instruction write/4
run/0: {name: "full", value: 3, type: 3, properties: ["full": "boolean"]} <- channel-full?/110 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 1148 is 1139
run/0: instruction channel-full?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1177
run/0: product 0 is default-space
run/0: instruction channel-full?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 1179
run/0: instruction channel-full?/2
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1179 is 1139
mem/0: location 1139 is 0
mem/0: location 1140 is 0
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-free
mem/0: location 1179 is 1139
run/0: address to copy is 1140
run/0: its type is 1
mem/0: location 1140 is 0
run/0: product 0 is tmp
mem/0: storing 0 in location 1180
run/0: instruction channel-full?/3
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]} <- add/2 {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is tmp
mem/0: location 1180 is 0
run/0: ingredient 1 is 1
run/0: product 0 is tmp
mem/0: storing 1 in location 1180
run/0: instruction channel-full?/5
run/0: {name: "len", value: 3, type: 1, properties: ["len": "number"]} <- channel-capacity/114 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 1179 is 1139
run/0: instruction channel-capacity/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1208
run/0: product 0 is default-space
run/0: instruction channel-capacity/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 1210
run/0: instruction channel-capacity/2
run/0: {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1210 is 1139
mem/0: location 1139 is 0
mem/0: location 1140 is 0
mem/0: location 1141 is 1142
run/0: ingredient 1 is data
mem/0: location 1210 is 1139
run/0: address to copy is 1141
run/0: its type is 2
mem/0: location 1141 is 1142
run/0: product 0 is q
mem/0: storing 1142 in location 1211
run/0: instruction channel-capacity/3
run/0: {name: "result", value: 3, type: 1, properties: ["result": "number"]} <- length/31 {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is q
mem/0: location 1211 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 0
mem/0: location 1144 is 0
mem/0: location 1145 is 0
mem/0: location 1211 is 1142
run/0: product 0 is result
mem/0: storing 3 in location 1212
run/0: instruction channel-capacity/4
run/0: reply/36 {name: "result", value: 3, type: 1, properties: ["result": "number"]}
run/0: ingredient 0 is result
mem/0: location 1212 is 3
run/0: result 0 is 3
run/0: product 0 is len
mem/0: storing 3 in location 1181
run/0: instruction channel-full?/6
run/0: {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]}, {name: "len", value: 3, type: 1, properties: ["len": "number"]}
run/0: ingredient 0 is tmp
mem/0: location 1180 is 1
run/0: ingredient 1 is len
mem/0: location 1181 is 3
run/0: product 0 is at-end?
mem/0: storing 0 in location 1182
run/0: instruction channel-full?/7
run/0: break-unless/12 {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 1182 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 9
run/0: instruction channel-full?/10
run/0: {name: "full", value: 5, type: 1, properties: ["full": "number"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1179 is 1139
mem/0: location 1139 is 0
mem/0: location 1140 is 0
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-full
mem/0: location 1179 is 1139
run/0: address to copy is 1139
run/0: its type is 1
mem/0: location 1139 is 0
run/0: product 0 is full
mem/0: storing 0 in location 1183
run/0: instruction channel-full?/11
run/0: {name: "result", value: 6, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 5, type: 1, properties: ["full": "number"]}, {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]}
run/0: ingredient 0 is full
mem/0: location 1183 is 0
run/0: ingredient 1 is tmp
mem/0: location 1180 is 1
run/0: product 0 is result
mem/0: storing 0 in location 1184
run/0: instruction channel-full?/12
run/0: reply/36 {name: "result", value: 6, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 1184 is 0
run/0: result 0 is 0
run/0: product 0 is full
mem/0: storing 0 in location 1150
run/0: instruction write/5
run/0: break-unless/12 {name: "full", value: 3, type: 3, properties: ["full": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is full
mem/0: location 1150 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 8
run/0: instruction write/9
run/0: {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1148 is 1139
mem/0: location 1139 is 0
mem/0: location 1140 is 0
mem/0: location 1141 is 1142
run/0: ingredient 1 is data
mem/0: location 1148 is 1139
run/0: address to copy is 1141
run/0: its type is 2
mem/0: location 1141 is 1142
run/0: product 0 is circular-buffer
mem/0: storing 1142 in location 1152
run/0: instruction write/10
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number"]} <- get-address/28 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1148 is 1139
mem/0: location 1139 is 0
mem/0: location 1140 is 0
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-free
mem/0: location 1148 is 1139
run/0: address to copy is 1140
run/0: product 0 is free
mem/0: storing 1140 in location 1153
run/0: instruction write/11
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location"]} <- index-address/30 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}, {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 1152 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 0
mem/0: location 1144 is 0
mem/0: location 1145 is 0
run/0: ingredient 1 is free
mem/0: location 1153 is 1140
mem/0: location 1140 is 0
mem/0: location 1152 is 1142
mem/0: location 1153 is 1140
mem/0: location 1140 is 0
run/0: product 0 is dest
mem/0: storing 1143 in location 1154
run/0: instruction write/12
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location", "deref": ]} <- copy/1 {name: "val", value: 2, type: 1, properties: ["val": "location"]}
run/0: ingredient 0 is val
mem/0: location 1149 is 97
run/0: product 0 is dest
mem/0: location 1154 is 1143
mem/0: storing 97 in location 1143
run/0: instruction write/13
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]} <- add/2 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is free
mem/0: location 1153 is 1140
mem/0: location 1140 is 0
run/0: ingredient 1 is 1
run/0: product 0 is free
mem/0: location 1153 is 1140
mem/0: storing 1 in location 1140
run/0: instruction write/15
run/0: {name: "len", value: 8, type: 1, properties: ["len": "number"]} <- length/31 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 1152 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 0
mem/0: location 1145 is 0
mem/0: location 1152 is 1142
run/0: product 0 is len
mem/0: storing 3 in location 1155
run/0: instruction write/16
run/0: {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]}, {name: "len", value: 8, type: 1, properties: ["len": "number"]}
run/0: ingredient 0 is free
mem/0: location 1153 is 1140
mem/0: location 1140 is 1
run/0: ingredient 1 is len
mem/0: location 1155 is 3
run/0: product 0 is at-end?
mem/0: storing 0 in location 1156
run/0: instruction write/17
run/0: break-unless/12 {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 1156 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 19
run/0: instruction write/20
run/0: reply/36 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "same-as-ingredient": "0"]}
run/0: ingredient 0 is chan
mem/0: location 1148 is 1139
run/0: result 0 is 1139
run/0: product 0 is 1
mem/0: storing 1139 in location 1
run/0: instruction run1001/7
run/0: restart/39 {name: "2", value: 2, type: 1, properties: ["2": "number", "routine": ]}
run/0: ingredient 0 is 2
mem/0: location 2 is 2
run/0: instruction run1001/8
run/0: wait-for-routine/43 {name: "2", value: 2, type: 1, properties: ["2": "number"]}
run/0: ingredient 0 is 2
mem/0: location 2 is 2
run/0: waiting for routine 2
schedule/0: read/read-file/read-move
run/0: instruction read/8
run/0: {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number"]} <- get-address/28 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101064 is 1139
mem/0: location 1139 is 0
mem/0: location 1140 is 1
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-full
mem/0: location 101064 is 1139
run/0: address to copy is 1139
run/0: product 0 is full
mem/0: storing 1139 in location 101067
run/0: instruction read/9
run/0: {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101064 is 1139
mem/0: location 1139 is 0
mem/0: location 1140 is 1
mem/0: location 1141 is 1142
run/0: ingredient 1 is data
mem/0: location 101064 is 1139
run/0: address to copy is 1141
run/0: its type is 2
mem/0: location 1141 is 1142
run/0: product 0 is circular-buffer
mem/0: storing 1142 in location 101068
run/0: instruction read/10
run/0: {name: "result", value: 6, type: 1, properties: ["result": "location"]} <- index/29 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}, {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101068 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 0
mem/0: location 1145 is 0
run/0: ingredient 1 is full
mem/0: location 101067 is 1139
mem/0: location 1139 is 0
mem/0: location 101068 is 1142
mem/0: location 101067 is 1139
mem/0: location 1139 is 0
run/0: address to copy is 1143
run/0: its type is 1
mem/0: location 1143 is 97
run/0: product 0 is result
mem/0: storing 97 in location 101069
run/0: instruction read/11
run/0: {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]} <- add/2 {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is full
mem/0: location 101067 is 1139
mem/0: location 1139 is 0
run/0: ingredient 1 is 1
run/0: product 0 is full
mem/0: location 101067 is 1139
mem/0: storing 1 in location 1139
run/0: instruction read/13
run/0: {name: "len", value: 7, type: 1, properties: ["len": "number"]} <- length/31 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101068 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 0
mem/0: location 1145 is 0
mem/0: location 101068 is 1142
run/0: product 0 is len
mem/0: storing 3 in location 101070
run/0: instruction read/14
run/0: {name: "at-end?", value: 8, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]}, {name: "len", value: 7, type: 1, properties: ["len": "number"]}
run/0: ingredient 0 is full
mem/0: location 101067 is 1139
mem/0: location 1139 is 1
run/0: ingredient 1 is len
mem/0: location 101070 is 3
run/0: product 0 is at-end?
mem/0: storing 0 in location 101071
run/0: instruction read/15
run/0: break-unless/12 {name: "at-end?", value: 8, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 101071 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 17
run/0: instruction read/18
run/0: reply/36 {name: "result", value: 6, type: 1, properties: ["result": "location"]}, {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "same-as-ingredient": "0"]}
run/0: ingredient 0 is result
mem/0: location 101069 is 97
run/0: ingredient 1 is chan
mem/0: location 101064 is 1139
run/0: result 0 is 97
run/0: result 1 is 1139
run/0: product 0 is c
mem/0: storing 97 in location 101035
run/0: product 1 is stdin
mem/0: storing 1139 in location 101033
run/0: instruction read-file/5
run/0: {name: "q-pressed?", value: 4, type: 3, properties: ["q-pressed?": "boolean"]} <- equal/13 {name: "c", value: 3, type: 4, properties: ["c": "character"]}, {name: "81", value: 81, type: 0, properties: ["81": "literal"]}
run/0: ingredient 0 is c
mem/0: location 101035 is 97
run/0: ingredient 1 is 81
run/0: product 0 is q-pressed?
mem/0: storing 0 in location 101036
run/0: instruction read-file/6
run/0: break-unless/12 {name: "q-pressed?", value: 4, type: 3, properties: ["q-pressed?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is q-pressed?
mem/0: location 101036 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 8
run/0: instruction read-file/10
run/0: {name: "q-pressed?", value: 4, type: 3, properties: ["q-pressed?": "boolean"]} <- equal/13 {name: "c", value: 3, type: 4, properties: ["c": "character"]}, {name: "113", value: 113, type: 0, properties: ["113": "literal"]}
run/0: ingredient 0 is c
mem/0: location 101035 is 97
run/0: ingredient 1 is 113
run/0: product 0 is q-pressed?
mem/0: storing 0 in location 101036
run/0: instruction read-file/11
run/0: break-unless/12 {name: "q-pressed?", value: 4, type: 3, properties: ["q-pressed?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is q-pressed?
mem/0: location 101036 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 13
run/0: instruction read-file/15
run/0: {name: "empty-fake-keyboard?", value: 5, type: 3, properties: ["empty-fake-keyboard?": "boolean"]} <- equal/13 {name: "c", value: 3, type: 4, properties: ["c": "character"]}, {name: "0", value: 0, type: 0, properties: ["0": "literal", "eof": ]}
run/0: ingredient 0 is c
mem/0: location 101035 is 97
run/0: ingredient 1 is 0
run/0: product 0 is empty-fake-keyboard?
mem/0: storing 0 in location 101037
run/0: instruction read-file/16
run/0: break-unless/12 {name: "empty-fake-keyboard?", value: 5, type: 3, properties: ["empty-fake-keyboard?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is empty-fake-keyboard?
mem/0: location 101037 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 18
run/0: instruction read-file/20
run/0: {name: "newline?", value: 6, type: 3, properties: ["newline?": "boolean"]} <- equal/13 {name: "c", value: 3, type: 4, properties: ["c": "character"]}, {name: "10", value: 10, type: 0, properties: ["10": "literal", "newline": ]}
run/0: ingredient 0 is c
mem/0: location 101035 is 97
run/0: ingredient 1 is 10
run/0: product 0 is newline?
mem/0: storing 0 in location 101038
run/0: instruction read-file/21
run/0: break-unless/12 {name: "newline?", value: 6, type: 3, properties: ["newline?": "boolean"]}, {name: "", value: 3, type: 0, properties: ["": ]}
run/0: ingredient 0 is newline?
mem/0: location 101038 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 25
run/0: instruction read-file/26
run/0: {name: "file", value: 8, type: 1, properties: ["file": "number"]} <- subtract/3 {name: "c", value: 3, type: 4, properties: ["c": "character"]}, {name: "97", value: 97, type: 0, properties: ["97": "literal"]}
run/0: ingredient 0 is c
mem/0: location 101035 is 97
run/0: ingredient 1 is 97
run/0: product 0 is file
mem/0: storing 0 in location 101040
run/0: instruction read-file/28
run/0: {name: "above-min", value: 9, type: 3, properties: ["above-min": "boolean"]} <- greater-or-equal/16 {name: "file", value: 8, type: 1, properties: ["file": "number"]}, {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is file
mem/0: location 101040 is 0
run/0: ingredient 1 is 0
run/0: product 0 is above-min
mem/0: storing 1 in location 101041
run/0: instruction read-file/29
run/0: break-if/11 {name: "above-min", value: 9, type: 3, properties: ["above-min": "boolean"]}, {name: "", value: 5, type: 0, properties: ["": ]}
run/0: ingredient 0 is above-min
mem/0: location 101041 is 1
run/0: ingredient 1 is 
run/0: jumping to instruction 35
run/0: instruction read-file/37
run/0: {name: "below-max", value: 10, type: 3, properties: ["below-max": "boolean"]} <- lesser-than/15 {name: "file", value: 8, type: 1, properties: ["file": "number"]}, {name: "8", value: 8, type: 0, properties: ["8": "literal"]}
run/0: ingredient 0 is file
mem/0: location 101040 is 0
run/0: ingredient 1 is 8
run/0: product 0 is below-max
mem/0: storing 1 in location 101042
run/0: instruction read-file/38
run/0: break-if/11 {name: "below-max", value: 10, type: 3, properties: ["below-max": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is below-max
mem/0: location 101042 is 1
run/0: ingredient 1 is 
run/0: jumping to instruction 43
run/0: instruction read-file/44
run/0: reply/36 {name: "file", value: 8, type: 1, properties: ["file": "number"]}, {name: "0", value: 0, type: 0, properties: ["0": "literal", "quit": ]}, {name: "0", value: 0, type: 0, properties: ["0": "literal", "error": ]}
run/0: ingredient 0 is file
mem/0: location 101040 is 0
run/0: ingredient 1 is 0
run/0: ingredient 2 is 0
run/0: result 0 is 0
run/0: result 1 is 0
run/0: result 2 is 0
run/0: product 0 is from-file
mem/0: storing 0 in location 101004
run/0: product 1 is quit?
mem/0: storing 0 in location 101005
run/0: product 2 is error?
mem/0: storing 0 in location 101006
run/0: instruction read-move/4
run/0: reply-if/12 {name: "quit?", value: 4, type: 3, properties: ["quit?": "boolean"]}, {name: "1", value: 1, type: 0, properties: ["1": "offset"]}
run/0: ingredient 0 is quit?
mem/0: location 101005 is 0
run/0: ingredient 1 is 1
run/0: jumping to instruction 6
run/0: instruction read-move/6
run/0: reply-if/12 {name: "error?", value: 5, type: 3, properties: ["error?": "boolean"]}, {name: "1", value: 1, type: 0, properties: ["1": "offset"]}
run/0: ingredient 0 is error?
mem/0: location 101006 is 0
run/0: ingredient 1 is 1
run/0: jumping to instruction 8
run/0: instruction read-move/8
run/0: {name: "result", value: 6, type: 2-13, properties: ["result": "address":"move"]} <- new/51 {name: "move", value: 0, type: 0, properties: ["move": "literal"]}
run/0: ingredient 0 is move
mem/0: new alloc: 101124
run/0: product 0 is result
mem/0: storing 101124 in location 101007
run/0: instruction read-move/9
run/0: {name: "x", value: 7, type: 2-1, properties: ["x": "address":"number"]} <- get-address/28 {name: "result", value: 6, type: 2-13, properties: ["result": "address":"move", "deref": ]}, {name: "from-file", value: 0, type: 0, properties: ["from-file": "offset"]}
run/0: ingredient 0 is result
mem/0: location 101007 is 101124
mem/0: location 101124 is 0
mem/0: location 101125 is 0
mem/0: location 101126 is 0
mem/0: location 101127 is 0
run/0: ingredient 1 is from-file
mem/0: location 101007 is 101124
run/0: address to copy is 101124
run/0: product 0 is x
mem/0: storing 101124 in location 101008
run/0: instruction read-move/10
run/0: {name: "x", value: 7, type: 2-1, properties: ["x": "address":"number", "deref": ]} <- copy/1 {name: "from-file", value: 3, type: 1, properties: ["from-file": "number"]}
run/0: ingredient 0 is from-file
mem/0: location 101004 is 0
run/0: product 0 is x
mem/0: location 101008 is 101124
mem/0: storing 0 in location 101124
run/0: instruction read-move/11
run/0: {name: "x", value: 7, type: 2-1, properties: ["x": "address":"number"]} <- get-address/28 {name: "result", value: 6, type: 2-13, properties: ["result": "address":"move", "deref": ]}, {name: "from-rank", value: 1, type: 0, properties: ["from-rank": "offset"]}
run/0: ingredient 0 is result
mem/0: location 101007 is 101124
mem/0: location 101124 is 0
mem/0: location 101125 is 0
mem/0: location 101126 is 0
mem/0: location 101127 is 0
run/0: ingredient 1 is from-rank
mem/0: location 101007 is 101124
run/0: address to copy is 101125
run/0: product 0 is x
mem/0: storing 101125 in location 101008
run/0: instruction read-move/12
run/0: {name: "x", value: 7, type: 2-1, properties: ["x": "address":"number", "deref": ]}, {name: "quit?", value: 4, type: 3, properties: ["quit?": "boolean"]}, {name: "error?", value: 5, type: 3, properties: ["error?": "boolean"]} <- read-rank/145 {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]}, {name: "screen", value: 2, type: 2, properties: ["screen": "address"]}
run/0: ingredient 0 is stdin
mem/0: location 101002 is 1139
run/0: ingredient 1 is screen
mem/0: location 101003 is 1031
run/0: instruction read-rank/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101125
run/0: product 0 is default-space
run/0: instruction read-rank/1
run/0: {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is stdin
mem/0: storing 1139 in location 101127
run/0: instruction read-rank/2
run/0: {name: "screen", value: 2, type: 2, properties: ["screen": "address"]} <- next-ingredient/33 
run/0: product 0 is screen
mem/0: storing 1031 in location 101128
run/0: instruction read-rank/3
run/0: {name: "c", value: 3, type: 4, properties: ["c": "character"]}, {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]} <- read/111 {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]}
run/0: ingredient 0 is stdin
mem/0: location 101127 is 1139
run/0: instruction read/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101156
run/0: product 0 is default-space
run/0: instruction read/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 101158
run/0: instruction read/3
run/0: {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]} <- channel-empty?/112 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 101158 is 1139
run/0: instruction channel-empty?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101187
run/0: product 0 is default-space
run/0: instruction channel-empty?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 101189
run/0: instruction channel-empty?/2
run/0: {name: "full", value: 2, type: 1, properties: ["full": "number"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101189 is 1139
mem/0: location 1139 is 1
mem/0: location 1140 is 1
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-full
mem/0: location 101189 is 1139
run/0: address to copy is 1139
run/0: its type is 1
mem/0: location 1139 is 1
run/0: product 0 is full
mem/0: storing 1 in location 101190
run/0: instruction channel-empty?/3
run/0: {name: "free", value: 3, type: 1, properties: ["free": "number"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101189 is 1139
mem/0: location 1139 is 1
mem/0: location 1140 is 1
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-free
mem/0: location 101189 is 1139
run/0: address to copy is 1140
run/0: its type is 1
mem/0: location 1140 is 1
run/0: product 0 is free
mem/0: storing 1 in location 101191
run/0: instruction channel-empty?/4
run/0: {name: "result", value: 4, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 2, type: 1, properties: ["full": "number"]}, {name: "free", value: 3, type: 1, properties: ["free": "number"]}
run/0: ingredient 0 is full
mem/0: location 101190 is 1
run/0: ingredient 1 is free
mem/0: location 101191 is 1
run/0: product 0 is result
mem/0: storing 1 in location 101192
run/0: instruction channel-empty?/5
run/0: reply/36 {name: "result", value: 4, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 101192 is 1
run/0: result 0 is 1
run/0: product 0 is empty
mem/0: storing 1 in location 101159
run/0: instruction read/4
run/0: break-unless/12 {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is empty
mem/0: location 101159 is 1
run/0: ingredient 1 is 
run/0: jump-unless fell through
run/0: instruction read/5
run/0: {name: "free-address", value: 3, type: 2-1, properties: ["free-address": "address":"number"]} <- get-address/28 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101158 is 1139
mem/0: location 1139 is 1
mem/0: location 1140 is 1
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-free
mem/0: location 101158 is 1139
run/0: address to copy is 1140
run/0: product 0 is free-address
mem/0: storing 1140 in location 101160
run/0: instruction read/6
run/0: wait-for-location/42 {name: "free-address", value: 3, type: 2-1, properties: ["free-address": "address":"number", "deref": ]}
run/0: ingredient 0 is free-address
mem/0: location 101160 is 1140
mem/0: location 1140 is 1
mem/0: location 101160 is 1140
run/0: waiting for location 1140 to change from 1
schedule/0: waking up routine 1
schedule/0: run1001/read-move-blocking
run/0: instruction run1001/9
run/0: {name: "3", value: 3, type: 1, properties: ["3": "number"]} <- routine-state/38 {name: "2", value: 2, type: 1, properties: ["2": "number", "id": ]}
run/0: ingredient 0 is 2
mem/0: location 2 is 2
run/0: product 0 is 3
mem/0: storing 2 in location 3
run/0: instruction run1001/10
run/0: {name: "4", value: 4, type: 3, properties: ["4": "boolean", "waiting?": ]} <- equal/13 {name: "3", value: 3, type: 1, properties: ["3": "number", "routine-state": ]}, {name: "2", value: 2, type: 0, properties: ["2": "literal", "waiting": ]}
run/0: ingredient 0 is 3
mem/0: location 3 is 2
run/0: ingredient 1 is 2
run/0: product 0 is 4
mem/0: storing 1 in location 4
run/0: instruction run1001/11
run/0: assert/20 {name: "4", value: 4, type: 3, properties: ["4": "boolean", "waiting?": ]}, {name: "
F read-move-blocking: routine failed to pause after rank 'a'", value: 0, type: 0, properties: ["
F read-move-blocking: routine failed to pause after rank 'a'": "literal-string"]}
run/0: ingredient 0 is 4
mem/0: location 4 is 1
run/0: ingredient 1 is 
F read-move-blocking: routine failed to pause after rank 'a'
run/0: instruction run1001/12
run/0: {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]} <- write/109 {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]}, {name: "50", value: 50, type: 0, properties: ["50": "literal"]}
run/0: ingredient 0 is 1
mem/0: location 1 is 1139
run/0: ingredient 1 is 50
run/0: instruction write/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1239
run/0: product 0 is default-space
run/0: instruction write/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 1241
run/0: instruction write/2
run/0: {name: "val", value: 2, type: 1, properties: ["val": "location"]} <- next-ingredient/33 
run/0: product 0 is val
mem/0: storing 50 in location 1242
run/0: instruction write/4
run/0: {name: "full", value: 3, type: 3, properties: ["full": "boolean"]} <- channel-full?/110 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 1241 is 1139
run/0: instruction channel-full?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1270
run/0: product 0 is default-space
run/0: instruction channel-full?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 1272
run/0: instruction channel-full?/2
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1272 is 1139
mem/0: location 1139 is 1
mem/0: location 1140 is 1
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-free
mem/0: location 1272 is 1139
run/0: address to copy is 1140
run/0: its type is 1
mem/0: location 1140 is 1
run/0: product 0 is tmp
mem/0: storing 1 in location 1273
run/0: instruction channel-full?/3
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]} <- add/2 {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is tmp
mem/0: location 1273 is 1
run/0: ingredient 1 is 1
run/0: product 0 is tmp
mem/0: storing 2 in location 1273
run/0: instruction channel-full?/5
run/0: {name: "len", value: 3, type: 1, properties: ["len": "number"]} <- channel-capacity/114 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 1272 is 1139
run/0: instruction channel-capacity/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1301
run/0: product 0 is default-space
run/0: instruction channel-capacity/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 1303
run/0: instruction channel-capacity/2
run/0: {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1303 is 1139
mem/0: location 1139 is 1
mem/0: location 1140 is 1
mem/0: location 1141 is 1142
run/0: ingredient 1 is data
mem/0: location 1303 is 1139
run/0: address to copy is 1141
run/0: its type is 2
mem/0: location 1141 is 1142
run/0: product 0 is q
mem/0: storing 1142 in location 1304
run/0: instruction channel-capacity/3
run/0: {name: "result", value: 3, type: 1, properties: ["result": "number"]} <- length/31 {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is q
mem/0: location 1304 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 0
mem/0: location 1145 is 0
mem/0: location 1304 is 1142
run/0: product 0 is result
mem/0: storing 3 in location 1305
run/0: instruction channel-capacity/4
run/0: reply/36 {name: "result", value: 3, type: 1, properties: ["result": "number"]}
run/0: ingredient 0 is result
mem/0: location 1305 is 3
run/0: result 0 is 3
run/0: product 0 is len
mem/0: storing 3 in location 1274
run/0: instruction channel-full?/6
run/0: {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]}, {name: "len", value: 3, type: 1, properties: ["len": "number"]}
run/0: ingredient 0 is tmp
mem/0: location 1273 is 2
run/0: ingredient 1 is len
mem/0: location 1274 is 3
run/0: product 0 is at-end?
mem/0: storing 0 in location 1275
run/0: instruction channel-full?/7
run/0: break-unless/12 {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 1275 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 9
run/0: instruction channel-full?/10
run/0: {name: "full", value: 5, type: 1, properties: ["full": "number"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1272 is 1139
mem/0: location 1139 is 1
mem/0: location 1140 is 1
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-full
mem/0: location 1272 is 1139
run/0: address to copy is 1139
run/0: its type is 1
mem/0: location 1139 is 1
run/0: product 0 is full
mem/0: storing 1 in location 1276
run/0: instruction channel-full?/11
run/0: {name: "result", value: 6, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 5, type: 1, properties: ["full": "number"]}, {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]}
run/0: ingredient 0 is full
mem/0: location 1276 is 1
run/0: ingredient 1 is tmp
mem/0: location 1273 is 2
run/0: product 0 is result
mem/0: storing 0 in location 1277
run/0: instruction channel-full?/12
run/0: reply/36 {name: "result", value: 6, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 1277 is 0
run/0: result 0 is 0
run/0: product 0 is full
mem/0: storing 0 in location 1243
run/0: instruction write/5
run/0: break-unless/12 {name: "full", value: 3, type: 3, properties: ["full": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is full
mem/0: location 1243 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 8
run/0: instruction write/9
run/0: {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1241 is 1139
mem/0: location 1139 is 1
mem/0: location 1140 is 1
mem/0: location 1141 is 1142
run/0: ingredient 1 is data
mem/0: location 1241 is 1139
run/0: address to copy is 1141
run/0: its type is 2
mem/0: location 1141 is 1142
run/0: product 0 is circular-buffer
mem/0: storing 1142 in location 1245
run/0: instruction write/10
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number"]} <- get-address/28 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1241 is 1139
mem/0: location 1139 is 1
mem/0: location 1140 is 1
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-free
mem/0: location 1241 is 1139
run/0: address to copy is 1140
run/0: product 0 is free
mem/0: storing 1140 in location 1246
run/0: instruction write/11
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location"]} <- index-address/30 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}, {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 1245 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 0
mem/0: location 1145 is 0
run/0: ingredient 1 is free
mem/0: location 1246 is 1140
mem/0: location 1140 is 1
mem/0: location 1245 is 1142
mem/0: location 1246 is 1140
mem/0: location 1140 is 1
run/0: product 0 is dest
mem/0: storing 1144 in location 1247
run/0: instruction write/12
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location", "deref": ]} <- copy/1 {name: "val", value: 2, type: 1, properties: ["val": "location"]}
run/0: ingredient 0 is val
mem/0: location 1242 is 50
run/0: product 0 is dest
mem/0: location 1247 is 1144
mem/0: storing 50 in location 1144
run/0: instruction write/13
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]} <- add/2 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is free
mem/0: location 1246 is 1140
mem/0: location 1140 is 1
run/0: ingredient 1 is 1
run/0: product 0 is free
mem/0: location 1246 is 1140
mem/0: storing 2 in location 1140
run/0: instruction write/15
run/0: {name: "len", value: 8, type: 1, properties: ["len": "number"]} <- length/31 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 1245 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 50
mem/0: location 1145 is 0
mem/0: location 1245 is 1142
run/0: product 0 is len
mem/0: storing 3 in location 1248
run/0: instruction write/16
run/0: {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]}, {name: "len", value: 8, type: 1, properties: ["len": "number"]}
run/0: ingredient 0 is free
mem/0: location 1246 is 1140
mem/0: location 1140 is 2
run/0: ingredient 1 is len
mem/0: location 1248 is 3
run/0: product 0 is at-end?
mem/0: storing 0 in location 1249
run/0: instruction write/17
run/0: break-unless/12 {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 1249 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 19
run/0: instruction write/20
run/0: reply/36 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "same-as-ingredient": "0"]}
run/0: ingredient 0 is chan
mem/0: location 1241 is 1139
run/0: result 0 is 1139
run/0: product 0 is 1
mem/0: storing 1139 in location 1
run/0: instruction run1001/13
run/0: restart/39 {name: "2", value: 2, type: 1, properties: ["2": "number", "routine": ]}
run/0: ingredient 0 is 2
mem/0: location 2 is 2
run/0: instruction run1001/14
run/0: wait-for-routine/43 {name: "2", value: 2, type: 1, properties: ["2": "number"]}
run/0: ingredient 0 is 2
mem/0: location 2 is 2
run/0: waiting for routine 2
schedule/0: read/read-rank/read-move
run/0: instruction read/8
run/0: {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number"]} <- get-address/28 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101158 is 1139
mem/0: location 1139 is 1
mem/0: location 1140 is 2
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-full
mem/0: location 101158 is 1139
run/0: address to copy is 1139
run/0: product 0 is full
mem/0: storing 1139 in location 101161
run/0: instruction read/9
run/0: {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101158 is 1139
mem/0: location 1139 is 1
mem/0: location 1140 is 2
mem/0: location 1141 is 1142
run/0: ingredient 1 is data
mem/0: location 101158 is 1139
run/0: address to copy is 1141
run/0: its type is 2
mem/0: location 1141 is 1142
run/0: product 0 is circular-buffer
mem/0: storing 1142 in location 101162
run/0: instruction read/10
run/0: {name: "result", value: 6, type: 1, properties: ["result": "location"]} <- index/29 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}, {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101162 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 50
mem/0: location 1145 is 0
run/0: ingredient 1 is full
mem/0: location 101161 is 1139
mem/0: location 1139 is 1
mem/0: location 101162 is 1142
mem/0: location 101161 is 1139
mem/0: location 1139 is 1
run/0: address to copy is 1144
run/0: its type is 1
mem/0: location 1144 is 50
run/0: product 0 is result
mem/0: storing 50 in location 101163
run/0: instruction read/11
run/0: {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]} <- add/2 {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is full
mem/0: location 101161 is 1139
mem/0: location 1139 is 1
run/0: ingredient 1 is 1
run/0: product 0 is full
mem/0: location 101161 is 1139
mem/0: storing 2 in location 1139
run/0: instruction read/13
run/0: {name: "len", value: 7, type: 1, properties: ["len": "number"]} <- length/31 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101162 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 50
mem/0: location 1145 is 0
mem/0: location 101162 is 1142
run/0: product 0 is len
mem/0: storing 3 in location 101164
run/0: instruction read/14
run/0: {name: "at-end?", value: 8, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]}, {name: "len", value: 7, type: 1, properties: ["len": "number"]}
run/0: ingredient 0 is full
mem/0: location 101161 is 1139
mem/0: location 1139 is 2
run/0: ingredient 1 is len
mem/0: location 101164 is 3
run/0: product 0 is at-end?
mem/0: storing 0 in location 101165
run/0: instruction read/15
run/0: break-unless/12 {name: "at-end?", value: 8, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 101165 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 17
run/0: instruction read/18
run/0: reply/36 {name: "result", value: 6, type: 1, properties: ["result": "location"]}, {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "same-as-ingredient": "0"]}
run/0: ingredient 0 is result
mem/0: location 101163 is 50
run/0: ingredient 1 is chan
mem/0: location 101158 is 1139
run/0: result 0 is 50
run/0: result 1 is 1139
run/0: product 0 is c
mem/0: storing 50 in location 101129
run/0: product 1 is stdin
mem/0: storing 1139 in location 101127
run/0: instruction read-rank/5
run/0: {name: "q-pressed?", value: 4, type: 3, properties: ["q-pressed?": "boolean"]} <- equal/13 {name: "c", value: 3, type: 4, properties: ["c": "character"]}, {name: "81", value: 81, type: 0, properties: ["81": "literal"]}
run/0: ingredient 0 is c
mem/0: location 101129 is 50
run/0: ingredient 1 is 81
run/0: product 0 is q-pressed?
mem/0: storing 0 in location 101130
run/0: instruction read-rank/6
run/0: break-unless/12 {name: "q-pressed?", value: 4, type: 3, properties: ["q-pressed?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is q-pressed?
mem/0: location 101130 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 8
run/0: instruction read-rank/10
run/0: {name: "q-pressed?", value: 4, type: 3, properties: ["q-pressed?": "boolean"]} <- equal/13 {name: "c", value: 3, type: 4, properties: ["c": "character"]}, {name: "113", value: 113, type: 0, properties: ["113": "literal"]}
run/0: ingredient 0 is c
mem/0: location 101129 is 50
run/0: ingredient 1 is 113
run/0: product 0 is q-pressed?
mem/0: storing 0 in location 101130
run/0: instruction read-rank/11
run/0: break-unless/12 {name: "q-pressed?", value: 4, type: 3, properties: ["q-pressed?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is q-pressed?
mem/0: location 101130 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 13
run/0: instruction read-rank/15
run/0: {name: "newline?", value: 5, type: 3, properties: ["newline?": "boolean"]} <- equal/13 {name: "c", value: 3, type: 4, properties: ["c": "character"]}, {name: "10", value: 10, type: 0, properties: ["10": "literal"]}
run/0: ingredient 0 is c
mem/0: location 101129 is 50
run/0: ingredient 1 is 10
run/0: product 0 is newline?
mem/0: storing 0 in location 101131
run/0: instruction read-rank/16
run/0: break-unless/12 {name: "newline?", value: 5, type: 3, properties: ["newline?": "boolean"]}, {name: "", value: 3, type: 0, properties: ["": ]}
run/0: ingredient 0 is newline?
mem/0: location 101131 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 20
run/0: instruction read-rank/21
run/0: {name: "rank", value: 7, type: 1, properties: ["rank": "number"]} <- subtract/3 {name: "c", value: 3, type: 4, properties: ["c": "character"]}, {name: "49", value: 49, type: 0, properties: ["49": "literal"]}
run/0: ingredient 0 is c
mem/0: location 101129 is 50
run/0: ingredient 1 is 49
run/0: product 0 is rank
mem/0: storing 1 in location 101133
run/0: instruction read-rank/23
run/0: {name: "above-min", value: 8, type: 3, properties: ["above-min": "boolean"]} <- greater-or-equal/16 {name: "rank", value: 7, type: 1, properties: ["rank": "number"]}, {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is rank
mem/0: location 101133 is 1
run/0: ingredient 1 is 0
run/0: product 0 is above-min
mem/0: storing 1 in location 101134
run/0: instruction read-rank/24
run/0: break-if/11 {name: "above-min", value: 8, type: 3, properties: ["above-min": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is above-min
mem/0: location 101134 is 1
run/0: ingredient 1 is 
run/0: jumping to instruction 29
run/0: instruction read-rank/31
run/0: {name: "below-max", value: 9, type: 3, properties: ["below-max": "boolean"]} <- lesser-or-equal/17 {name: "rank", value: 7, type: 1, properties: ["rank": "number"]}, {name: "7", value: 7, type: 0, properties: ["7": "literal"]}
run/0: ingredient 0 is rank
mem/0: location 101133 is 1
run/0: ingredient 1 is 7
run/0: product 0 is below-max
mem/0: storing 1 in location 101135
run/0: instruction read-rank/32
run/0: break-if/11 {name: "below-max", value: 9, type: 3, properties: ["below-max": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is below-max
mem/0: location 101135 is 1
run/0: ingredient 1 is 
run/0: jumping to instruction 37
run/0: instruction read-rank/38
run/0: reply/36 {name: "rank", value: 7, type: 1, properties: ["rank": "number"]}, {name: "0", value: 0, type: 0, properties: ["0": "literal", "quit": ]}, {name: "0", value: 0, type: 0, properties: ["0": "literal", "error": ]}
run/0: ingredient 0 is rank
mem/0: location 101133 is 1
run/0: ingredient 1 is 0
run/0: ingredient 2 is 0
run/0: result 0 is 1
run/0: result 1 is 0
run/0: result 2 is 0
run/0: product 0 is x
mem/0: location 101008 is 101125
mem/0: storing 1 in location 101125
run/0: product 1 is quit?
mem/0: storing 0 in location 101005
run/0: product 2 is error?
mem/0: storing 0 in location 101006
run/0: instruction read-move/13
run/0: reply-if/12 {name: "quit?", value: 4, type: 3, properties: ["quit?": "boolean"]}, {name: "1", value: 1, type: 0, properties: ["1": "offset"]}
run/0: ingredient 0 is quit?
mem/0: location 101005 is 0
run/0: ingredient 1 is 1
run/0: jumping to instruction 15
run/0: instruction read-move/15
run/0: reply-if/12 {name: "error?", value: 5, type: 3, properties: ["error?": "boolean"]}, {name: "1", value: 1, type: 0, properties: ["1": "offset"]}
run/0: ingredient 0 is error?
mem/0: location 101006 is 0
run/0: ingredient 1 is 1
run/0: jumping to instruction 17
run/0: instruction read-move/17
run/0: {name: "error?", value: 5, type: 3, properties: ["error?": "boolean"]} <- expect-from-channel/146 {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]}, {name: "45", value: 45, type: 0, properties: ["45": "literal", "dash": ]}, {name: "screen", value: 2, type: 2, properties: ["screen": "address"]}
run/0: ingredient 0 is stdin
mem/0: location 101002 is 1139
run/0: ingredient 1 is 45
run/0: ingredient 2 is screen
mem/0: location 101003 is 1031
run/0: instruction expect-from-channel/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101218
run/0: product 0 is default-space
run/0: instruction expect-from-channel/1
run/0: {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is stdin
mem/0: storing 1139 in location 101220
run/0: instruction expect-from-channel/2
run/0: {name: "expected", value: 2, type: 4, properties: ["expected": "character"]} <- next-ingredient/33 
run/0: product 0 is expected
mem/0: storing 45 in location 101221
run/0: instruction expect-from-channel/3
run/0: {name: "screen", value: 3, type: 2, properties: ["screen": "address"]} <- next-ingredient/33 
run/0: product 0 is screen
mem/0: storing 1031 in location 101222
run/0: instruction expect-from-channel/4
run/0: {name: "c", value: 4, type: 4, properties: ["c": "character"]}, {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]} <- read/111 {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]}
run/0: ingredient 0 is stdin
mem/0: location 101220 is 1139
run/0: instruction read/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101249
run/0: product 0 is default-space
run/0: instruction read/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 101251
run/0: instruction read/3
run/0: {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]} <- channel-empty?/112 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 101251 is 1139
run/0: instruction channel-empty?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101280
run/0: product 0 is default-space
run/0: instruction channel-empty?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 101282
run/0: instruction channel-empty?/2
run/0: {name: "full", value: 2, type: 1, properties: ["full": "number"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101282 is 1139
mem/0: location 1139 is 2
mem/0: location 1140 is 2
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-full
mem/0: location 101282 is 1139
run/0: address to copy is 1139
run/0: its type is 1
mem/0: location 1139 is 2
run/0: product 0 is full
mem/0: storing 2 in location 101283
run/0: instruction channel-empty?/3
run/0: {name: "free", value: 3, type: 1, properties: ["free": "number"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101282 is 1139
mem/0: location 1139 is 2
mem/0: location 1140 is 2
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-free
mem/0: location 101282 is 1139
run/0: address to copy is 1140
run/0: its type is 1
mem/0: location 1140 is 2
run/0: product 0 is free
mem/0: storing 2 in location 101284
run/0: instruction channel-empty?/4
run/0: {name: "result", value: 4, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 2, type: 1, properties: ["full": "number"]}, {name: "free", value: 3, type: 1, properties: ["free": "number"]}
run/0: ingredient 0 is full
mem/0: location 101283 is 2
run/0: ingredient 1 is free
mem/0: location 101284 is 2
run/0: product 0 is result
mem/0: storing 1 in location 101285
run/0: instruction channel-empty?/5
run/0: reply/36 {name: "result", value: 4, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 101285 is 1
run/0: result 0 is 1
run/0: product 0 is empty
mem/0: storing 1 in location 101252
run/0: instruction read/4
run/0: break-unless/12 {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is empty
mem/0: location 101252 is 1
run/0: ingredient 1 is 
run/0: jump-unless fell through
run/0: instruction read/5
run/0: {name: "free-address", value: 3, type: 2-1, properties: ["free-address": "address":"number"]} <- get-address/28 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101251 is 1139
mem/0: location 1139 is 2
mem/0: location 1140 is 2
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-free
mem/0: location 101251 is 1139
run/0: address to copy is 1140
run/0: product 0 is free-address
mem/0: storing 1140 in location 101253
run/0: instruction read/6
run/0: wait-for-location/42 {name: "free-address", value: 3, type: 2-1, properties: ["free-address": "address":"number", "deref": ]}
run/0: ingredient 0 is free-address
mem/0: location 101253 is 1140
mem/0: location 1140 is 2
mem/0: location 101253 is 1140
run/0: waiting for location 1140 to change from 2
schedule/0: waking up routine 1
schedule/0: run1001/read-move-blocking
run/0: instruction run1001/15
run/0: {name: "3", value: 3, type: 1, properties: ["3": "number"]} <- routine-state/38 {name: "2", value: 2, type: 1, properties: ["2": "number", "id": ]}
run/0: ingredient 0 is 2
mem/0: location 2 is 2
run/0: product 0 is 3
mem/0: storing 2 in location 3
run/0: instruction run1001/16
run/0: {name: "4", value: 4, type: 3, properties: ["4": "boolean", "waiting?": ]} <- equal/13 {name: "3", value: 3, type: 1, properties: ["3": "number", "routine-state": ]}, {name: "2", value: 2, type: 0, properties: ["2": "literal", "waiting": ]}
run/0: ingredient 0 is 3
mem/0: location 3 is 2
run/0: ingredient 1 is 2
run/0: product 0 is 4
mem/0: storing 1 in location 4
run/0: instruction run1001/17
run/0: assert/20 {name: "4", value: 4, type: 3, properties: ["4": "boolean", "waiting?": ]}, {name: "
F read-move-blocking: routine failed to pause after file 'a2'", value: 0, type: 0, properties: ["
F read-move-blocking: routine failed to pause after file 'a2'": "literal-string"]}
run/0: ingredient 0 is 4
mem/0: location 4 is 1
run/0: ingredient 1 is 
F read-move-blocking: routine failed to pause after file 'a2'
run/0: instruction run1001/18
run/0: {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]} <- write/109 {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]}, {name: "45", value: 45, type: 0, properties: ["45": "literal"]}
run/0: ingredient 0 is 1
mem/0: location 1 is 1139
run/0: ingredient 1 is 45
run/0: instruction write/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1332
run/0: product 0 is default-space
run/0: instruction write/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 1334
run/0: instruction write/2
run/0: {name: "val", value: 2, type: 1, properties: ["val": "location"]} <- next-ingredient/33 
run/0: product 0 is val
mem/0: storing 45 in location 1335
run/0: instruction write/4
run/0: {name: "full", value: 3, type: 3, properties: ["full": "boolean"]} <- channel-full?/110 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 1334 is 1139
run/0: instruction channel-full?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1363
run/0: product 0 is default-space
run/0: instruction channel-full?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 1365
run/0: instruction channel-full?/2
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1365 is 1139
mem/0: location 1139 is 2
mem/0: location 1140 is 2
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-free
mem/0: location 1365 is 1139
run/0: address to copy is 1140
run/0: its type is 1
mem/0: location 1140 is 2
run/0: product 0 is tmp
mem/0: storing 2 in location 1366
run/0: instruction channel-full?/3
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]} <- add/2 {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is tmp
mem/0: location 1366 is 2
run/0: ingredient 1 is 1
run/0: product 0 is tmp
mem/0: storing 3 in location 1366
run/0: instruction channel-full?/5
run/0: {name: "len", value: 3, type: 1, properties: ["len": "number"]} <- channel-capacity/114 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 1365 is 1139
run/0: instruction channel-capacity/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1394
run/0: product 0 is default-space
run/0: instruction channel-capacity/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 1396
run/0: instruction channel-capacity/2
run/0: {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1396 is 1139
mem/0: location 1139 is 2
mem/0: location 1140 is 2
mem/0: location 1141 is 1142
run/0: ingredient 1 is data
mem/0: location 1396 is 1139
run/0: address to copy is 1141
run/0: its type is 2
mem/0: location 1141 is 1142
run/0: product 0 is q
mem/0: storing 1142 in location 1397
run/0: instruction channel-capacity/3
run/0: {name: "result", value: 3, type: 1, properties: ["result": "number"]} <- length/31 {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is q
mem/0: location 1397 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 50
mem/0: location 1145 is 0
mem/0: location 1397 is 1142
run/0: product 0 is result
mem/0: storing 3 in location 1398
run/0: instruction channel-capacity/4
run/0: reply/36 {name: "result", value: 3, type: 1, properties: ["result": "number"]}
run/0: ingredient 0 is result
mem/0: location 1398 is 3
run/0: result 0 is 3
run/0: product 0 is len
mem/0: storing 3 in location 1367
run/0: instruction channel-full?/6
run/0: {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]}, {name: "len", value: 3, type: 1, properties: ["len": "number"]}
run/0: ingredient 0 is tmp
mem/0: location 1366 is 3
run/0: ingredient 1 is len
mem/0: location 1367 is 3
run/0: product 0 is at-end?
mem/0: storing 1 in location 1368
run/0: instruction channel-full?/7
run/0: break-unless/12 {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 1368 is 1
run/0: ingredient 1 is 
run/0: jump-unless fell through
run/0: instruction channel-full?/8
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
run/0: product 0 is tmp
mem/0: storing 0 in location 1366
run/0: instruction channel-full?/10
run/0: {name: "full", value: 5, type: 1, properties: ["full": "number"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1365 is 1139
mem/0: location 1139 is 2
mem/0: location 1140 is 2
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-full
mem/0: location 1365 is 1139
run/0: address to copy is 1139
run/0: its type is 1
mem/0: location 1139 is 2
run/0: product 0 is full
mem/0: storing 2 in location 1369
run/0: instruction channel-full?/11
run/0: {name: "result", value: 6, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 5, type: 1, properties: ["full": "number"]}, {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]}
run/0: ingredient 0 is full
mem/0: location 1369 is 2
run/0: ingredient 1 is tmp
mem/0: location 1366 is 0
run/0: product 0 is result
mem/0: storing 0 in location 1370
run/0: instruction channel-full?/12
run/0: reply/36 {name: "result", value: 6, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 1370 is 0
run/0: result 0 is 0
run/0: product 0 is full
mem/0: storing 0 in location 1336
run/0: instruction write/5
run/0: break-unless/12 {name: "full", value: 3, type: 3, properties: ["full": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is full
mem/0: location 1336 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 8
run/0: instruction write/9
run/0: {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1334 is 1139
mem/0: location 1139 is 2
mem/0: location 1140 is 2
mem/0: location 1141 is 1142
run/0: ingredient 1 is data
mem/0: location 1334 is 1139
run/0: address to copy is 1141
run/0: its type is 2
mem/0: location 1141 is 1142
run/0: product 0 is circular-buffer
mem/0: storing 1142 in location 1338
run/0: instruction write/10
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number"]} <- get-address/28 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1334 is 1139
mem/0: location 1139 is 2
mem/0: location 1140 is 2
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-free
mem/0: location 1334 is 1139
run/0: address to copy is 1140
run/0: product 0 is free
mem/0: storing 1140 in location 1339
run/0: instruction write/11
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location"]} <- index-address/30 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}, {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 1338 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 50
mem/0: location 1145 is 0
run/0: ingredient 1 is free
mem/0: location 1339 is 1140
mem/0: location 1140 is 2
mem/0: location 1338 is 1142
mem/0: location 1339 is 1140
mem/0: location 1140 is 2
run/0: product 0 is dest
mem/0: storing 1145 in location 1340
run/0: instruction write/12
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location", "deref": ]} <- copy/1 {name: "val", value: 2, type: 1, properties: ["val": "location"]}
run/0: ingredient 0 is val
mem/0: location 1335 is 45
run/0: product 0 is dest
mem/0: location 1340 is 1145
mem/0: storing 45 in location 1145
run/0: instruction write/13
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]} <- add/2 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is free
mem/0: location 1339 is 1140
mem/0: location 1140 is 2
run/0: ingredient 1 is 1
run/0: product 0 is free
mem/0: location 1339 is 1140
mem/0: storing 3 in location 1140
run/0: instruction write/15
run/0: {name: "len", value: 8, type: 1, properties: ["len": "number"]} <- length/31 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 1338 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 50
mem/0: location 1145 is 45
mem/0: location 1338 is 1142
run/0: product 0 is len
mem/0: storing 3 in location 1341
run/0: instruction write/16
run/0: {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]}, {name: "len", value: 8, type: 1, properties: ["len": "number"]}
run/0: ingredient 0 is free
mem/0: location 1339 is 1140
mem/0: location 1140 is 3
run/0: ingredient 1 is len
mem/0: location 1341 is 3
run/0: product 0 is at-end?
mem/0: storing 1 in location 1342
run/0: instruction write/17
run/0: break-unless/12 {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 1342 is 1
run/0: ingredient 1 is 
run/0: jump-unless fell through
run/0: instruction write/18
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
run/0: product 0 is free
mem/0: location 1339 is 1140
mem/0: storing 0 in location 1140
run/0: instruction write/20
run/0: reply/36 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "same-as-ingredient": "0"]}
run/0: ingredient 0 is chan
mem/0: location 1334 is 1139
run/0: result 0 is 1139
run/0: product 0 is 1
mem/0: storing 1139 in location 1
run/0: instruction run1001/19
run/0: restart/39 {name: "2", value: 2, type: 1, properties: ["2": "number", "routine": ]}
run/0: ingredient 0 is 2
mem/0: location 2 is 2
run/0: instruction run1001/20
run/0: wait-for-routine/43 {name: "2", value: 2, type: 1, properties: ["2": "number"]}
run/0: ingredient 0 is 2
mem/0: location 2 is 2
run/0: waiting for routine 2
schedule/0: read/expect-from-channel/read-move
run/0: instruction read/8
run/0: {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number"]} <- get-address/28 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101251 is 1139
mem/0: location 1139 is 2
mem/0: location 1140 is 0
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-full
mem/0: location 101251 is 1139
run/0: address to copy is 1139
run/0: product 0 is full
mem/0: storing 1139 in location 101254
run/0: instruction read/9
run/0: {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101251 is 1139
mem/0: location 1139 is 2
mem/0: location 1140 is 0
mem/0: location 1141 is 1142
run/0: ingredient 1 is data
mem/0: location 101251 is 1139
run/0: address to copy is 1141
run/0: its type is 2
mem/0: location 1141 is 1142
run/0: product 0 is circular-buffer
mem/0: storing 1142 in location 101255
run/0: instruction read/10
run/0: {name: "result", value: 6, type: 1, properties: ["result": "location"]} <- index/29 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}, {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101255 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 50
mem/0: location 1145 is 45
run/0: ingredient 1 is full
mem/0: location 101254 is 1139
mem/0: location 1139 is 2
mem/0: location 101255 is 1142
mem/0: location 101254 is 1139
mem/0: location 1139 is 2
run/0: address to copy is 1145
run/0: its type is 1
mem/0: location 1145 is 45
run/0: product 0 is result
mem/0: storing 45 in location 101256
run/0: instruction read/11
run/0: {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]} <- add/2 {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is full
mem/0: location 101254 is 1139
mem/0: location 1139 is 2
run/0: ingredient 1 is 1
run/0: product 0 is full
mem/0: location 101254 is 1139
mem/0: storing 3 in location 1139
run/0: instruction read/13
run/0: {name: "len", value: 7, type: 1, properties: ["len": "number"]} <- length/31 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101255 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 50
mem/0: location 1145 is 45
mem/0: location 101255 is 1142
run/0: product 0 is len
mem/0: storing 3 in location 101257
run/0: instruction read/14
run/0: {name: "at-end?", value: 8, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]}, {name: "len", value: 7, type: 1, properties: ["len": "number"]}
run/0: ingredient 0 is full
mem/0: location 101254 is 1139
mem/0: location 1139 is 3
run/0: ingredient 1 is len
mem/0: location 101257 is 3
run/0: product 0 is at-end?
mem/0: storing 1 in location 101258
run/0: instruction read/15
run/0: break-unless/12 {name: "at-end?", value: 8, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 101258 is 1
run/0: ingredient 1 is 
run/0: jump-unless fell through
run/0: instruction read/16
run/0: {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
run/0: product 0 is full
mem/0: location 101254 is 1139
mem/0: storing 0 in location 1139
run/0: instruction read/18
run/0: reply/36 {name: "result", value: 6, type: 1, properties: ["result": "location"]}, {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "same-as-ingredient": "0"]}
run/0: ingredient 0 is result
mem/0: location 101256 is 45
run/0: ingredient 1 is chan
mem/0: location 101251 is 1139
run/0: result 0 is 45
run/0: result 1 is 1139
run/0: product 0 is c
mem/0: storing 45 in location 101223
run/0: product 1 is stdin
mem/0: storing 1139 in location 101220
run/0: instruction expect-from-channel/5
run/0: {name: "match?", value: 5, type: 3, properties: ["match?": "boolean"]} <- equal/13 {name: "c", value: 4, type: 4, properties: ["c": "character"]}, {name: "expected", value: 2, type: 4, properties: ["expected": "character"]}
run/0: ingredient 0 is c
mem/0: location 101223 is 45
run/0: ingredient 1 is expected
mem/0: location 101221 is 45
run/0: product 0 is match?
mem/0: storing 1 in location 101224
run/0: instruction expect-from-channel/7
run/0: break-if/11 {name: "match?", value: 5, type: 3, properties: ["match?": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is match?
mem/0: location 101224 is 1
run/0: ingredient 1 is 
run/0: jumping to instruction 10
run/0: instruction expect-from-channel/11
run/0: {name: "result", value: 7, type: 3, properties: ["result": "boolean"]} <- not/9 {name: "match?", value: 5, type: 3, properties: ["match?": "boolean"]}
run/0: ingredient 0 is match?
mem/0: location 101224 is 1
run/0: product 0 is result
mem/0: storing 0 in location 101226
run/0: instruction expect-from-channel/12
run/0: reply/36 {name: "result", value: 7, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 101226 is 0
run/0: result 0 is 0
run/0: product 0 is error?
mem/0: storing 0 in location 101006
run/0: instruction read-move/18
run/0: reply-if/12 {name: "error?", value: 5, type: 3, properties: ["error?": "boolean"]}, {name: "1", value: 1, type: 0, properties: ["1": "offset"]}
run/0: ingredient 0 is error?
mem/0: location 101006 is 0
run/0: ingredient 1 is 1
run/0: jumping to instruction 20
run/0: instruction read-move/20
run/0: {name: "x", value: 7, type: 2-1, properties: ["x": "address":"number"]} <- get-address/28 {name: "result", value: 6, type: 2-13, properties: ["result": "address":"move", "deref": ]}, {name: "to-file", value: 2, type: 0, properties: ["to-file": "offset"]}
run/0: ingredient 0 is result
mem/0: location 101007 is 101124
mem/0: location 101124 is 0
mem/0: location 101125 is 1
mem/0: location 101126 is 0
mem/0: location 101127 is 1139
run/0: ingredient 1 is to-file
mem/0: location 101007 is 101124
run/0: address to copy is 101126
run/0: product 0 is x
mem/0: storing 101126 in location 101008
run/0: instruction read-move/21
run/0: {name: "x", value: 7, type: 2-1, properties: ["x": "address":"number", "deref": ]}, {name: "quit?", value: 4, type: 3, properties: ["quit?": "boolean"]}, {name: "error?", value: 5, type: 3, properties: ["error?": "boolean"]} <- read-file/143 {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]}, {name: "screen", value: 2, type: 2, properties: ["screen": "address"]}
run/0: ingredient 0 is stdin
mem/0: location 101002 is 1139
run/0: ingredient 1 is screen
mem/0: location 101003 is 1031
run/0: instruction read-file/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101311
run/0: product 0 is default-space
run/0: instruction read-file/1
run/0: {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is stdin
mem/0: storing 1139 in location 101313
run/0: instruction read-file/2
run/0: {name: "screen", value: 2, type: 2, properties: ["screen": "address"]} <- next-ingredient/33 
run/0: product 0 is screen
mem/0: storing 1031 in location 101314
run/0: instruction read-file/3
run/0: {name: "c", value: 3, type: 4, properties: ["c": "character"]}, {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]} <- read/111 {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]}
run/0: ingredient 0 is stdin
mem/0: location 101313 is 1139
run/0: instruction read/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101342
run/0: product 0 is default-space
run/0: instruction read/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 101344
run/0: instruction read/3
run/0: {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]} <- channel-empty?/112 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 101344 is 1139
run/0: instruction channel-empty?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101373
run/0: product 0 is default-space
run/0: instruction channel-empty?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 101375
run/0: instruction channel-empty?/2
run/0: {name: "full", value: 2, type: 1, properties: ["full": "number"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101375 is 1139
mem/0: location 1139 is 0
mem/0: location 1140 is 0
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-full
mem/0: location 101375 is 1139
run/0: address to copy is 1139
run/0: its type is 1
mem/0: location 1139 is 0
run/0: product 0 is full
mem/0: storing 0 in location 101376
run/0: instruction channel-empty?/3
run/0: {name: "free", value: 3, type: 1, properties: ["free": "number"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101375 is 1139
mem/0: location 1139 is 0
mem/0: location 1140 is 0
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-free
mem/0: location 101375 is 1139
run/0: address to copy is 1140
run/0: its type is 1
mem/0: location 1140 is 0
run/0: product 0 is free
mem/0: storing 0 in location 101377
run/0: instruction channel-empty?/4
run/0: {name: "result", value: 4, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 2, type: 1, properties: ["full": "number"]}, {name: "free", value: 3, type: 1, properties: ["free": "number"]}
run/0: ingredient 0 is full
mem/0: location 101376 is 0
run/0: ingredient 1 is free
mem/0: location 101377 is 0
run/0: product 0 is result
mem/0: storing 1 in location 101378
run/0: instruction channel-empty?/5
run/0: reply/36 {name: "result", value: 4, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 101378 is 1
run/0: result 0 is 1
run/0: product 0 is empty
mem/0: storing 1 in location 101345
run/0: instruction read/4
run/0: break-unless/12 {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is empty
mem/0: location 101345 is 1
run/0: ingredient 1 is 
run/0: jump-unless fell through
run/0: instruction read/5
run/0: {name: "free-address", value: 3, type: 2-1, properties: ["free-address": "address":"number"]} <- get-address/28 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101344 is 1139
mem/0: location 1139 is 0
mem/0: location 1140 is 0
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-free
mem/0: location 101344 is 1139
run/0: address to copy is 1140
run/0: product 0 is free-address
mem/0: storing 1140 in location 101346
run/0: instruction read/6
run/0: wait-for-location/42 {name: "free-address", value: 3, type: 2-1, properties: ["free-address": "address":"number", "deref": ]}
run/0: ingredient 0 is free-address
mem/0: location 101346 is 1140
mem/0: location 1140 is 0
mem/0: location 101346 is 1140
run/0: waiting for location 1140 to change from 0
schedule/0: waking up routine 1
schedule/0: run1001/read-move-blocking
run/0: instruction run1001/21
run/0: {name: "3", value: 3, type: 1, properties: ["3": "number"]} <- routine-state/38 {name: "2", value: 2, type: 1, properties: ["2": "number"]}
run/0: ingredient 0 is 2
mem/0: location 2 is 2
run/0: product 0 is 3
mem/0: storing 2 in location 3
run/0: instruction run1001/22
run/0: {name: "4", value: 4, type: 3, properties: ["4": "boolean", "waiting?": ]} <- equal/13 {name: "3", value: 3, type: 1, properties: ["3": "number", "routine-state": ]}, {name: "2", value: 2, type: 0, properties: ["2": "literal", "waiting": ]}
run/0: ingredient 0 is 3
mem/0: location 3 is 2
run/0: ingredient 1 is 2
run/0: product 0 is 4
mem/0: storing 1 in location 4
run/0: instruction run1001/23
run/0: assert/20 {name: "4", value: 4, type: 3, properties: ["4": "boolean", "waiting?": , "routine-state": ]}, {name: "
F read-move-blocking: routine failed to pause after hyphen 'a2-'", value: 0, type: 0, properties: ["
F read-move-blocking: routine failed to pause after hyphen 'a2-'": "literal-string"]}
run/0: ingredient 0 is 4
mem/0: location 4 is 1
run/0: ingredient 1 is 
F read-move-blocking: routine failed to pause after hyphen 'a2-'
run/0: instruction run1001/24
run/0: {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]} <- write/109 {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]}, {name: "97", value: 97, type: 0, properties: ["97": "literal"]}
run/0: ingredient 0 is 1
mem/0: location 1 is 1139
run/0: ingredient 1 is 97
run/0: instruction write/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1425
run/0: product 0 is default-space
run/0: instruction write/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 1427
run/0: instruction write/2
run/0: {name: "val", value: 2, type: 1, properties: ["val": "location"]} <- next-ingredient/33 
run/0: product 0 is val
mem/0: storing 97 in location 1428
run/0: instruction write/4
run/0: {name: "full", value: 3, type: 3, properties: ["full": "boolean"]} <- channel-full?/110 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 1427 is 1139
run/0: instruction channel-full?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1456
run/0: product 0 is default-space
run/0: instruction channel-full?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 1458
run/0: instruction channel-full?/2
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1458 is 1139
mem/0: location 1139 is 0
mem/0: location 1140 is 0
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-free
mem/0: location 1458 is 1139
run/0: address to copy is 1140
run/0: its type is 1
mem/0: location 1140 is 0
run/0: product 0 is tmp
mem/0: storing 0 in location 1459
run/0: instruction channel-full?/3
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]} <- add/2 {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is tmp
mem/0: location 1459 is 0
run/0: ingredient 1 is 1
run/0: product 0 is tmp
mem/0: storing 1 in location 1459
run/0: instruction channel-full?/5
run/0: {name: "len", value: 3, type: 1, properties: ["len": "number"]} <- channel-capacity/114 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 1458 is 1139
run/0: instruction channel-capacity/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1487
run/0: product 0 is default-space
run/0: instruction channel-capacity/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 1489
run/0: instruction channel-capacity/2
run/0: {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1489 is 1139
mem/0: location 1139 is 0
mem/0: location 1140 is 0
mem/0: location 1141 is 1142
run/0: ingredient 1 is data
mem/0: location 1489 is 1139
run/0: address to copy is 1141
run/0: its type is 2
mem/0: location 1141 is 1142
run/0: product 0 is q
mem/0: storing 1142 in location 1490
run/0: instruction channel-capacity/3
run/0: {name: "result", value: 3, type: 1, properties: ["result": "number"]} <- length/31 {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is q
mem/0: location 1490 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 50
mem/0: location 1145 is 45
mem/0: location 1490 is 1142
run/0: product 0 is result
mem/0: storing 3 in location 1491
run/0: instruction channel-capacity/4
run/0: reply/36 {name: "result", value: 3, type: 1, properties: ["result": "number"]}
run/0: ingredient 0 is result
mem/0: location 1491 is 3
run/0: result 0 is 3
run/0: product 0 is len
mem/0: storing 3 in location 1460
run/0: instruction channel-full?/6
run/0: {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]}, {name: "len", value: 3, type: 1, properties: ["len": "number"]}
run/0: ingredient 0 is tmp
mem/0: location 1459 is 1
run/0: ingredient 1 is len
mem/0: location 1460 is 3
run/0: product 0 is at-end?
mem/0: storing 0 in location 1461
run/0: instruction channel-full?/7
run/0: break-unless/12 {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 1461 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 9
run/0: instruction channel-full?/10
run/0: {name: "full", value: 5, type: 1, properties: ["full": "number"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1458 is 1139
mem/0: location 1139 is 0
mem/0: location 1140 is 0
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-full
mem/0: location 1458 is 1139
run/0: address to copy is 1139
run/0: its type is 1
mem/0: location 1139 is 0
run/0: product 0 is full
mem/0: storing 0 in location 1462
run/0: instruction channel-full?/11
run/0: {name: "result", value: 6, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 5, type: 1, properties: ["full": "number"]}, {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]}
run/0: ingredient 0 is full
mem/0: location 1462 is 0
run/0: ingredient 1 is tmp
mem/0: location 1459 is 1
run/0: product 0 is result
mem/0: storing 0 in location 1463
run/0: instruction channel-full?/12
run/0: reply/36 {name: "result", value: 6, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 1463 is 0
run/0: result 0 is 0
run/0: product 0 is full
mem/0: storing 0 in location 1429
run/0: instruction write/5
run/0: break-unless/12 {name: "full", value: 3, type: 3, properties: ["full": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is full
mem/0: location 1429 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 8
run/0: instruction write/9
run/0: {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1427 is 1139
mem/0: location 1139 is 0
mem/0: location 1140 is 0
mem/0: location 1141 is 1142
run/0: ingredient 1 is data
mem/0: location 1427 is 1139
run/0: address to copy is 1141
run/0: its type is 2
mem/0: location 1141 is 1142
run/0: product 0 is circular-buffer
mem/0: storing 1142 in location 1431
run/0: instruction write/10
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number"]} <- get-address/28 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1427 is 1139
mem/0: location 1139 is 0
mem/0: location 1140 is 0
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-free
mem/0: location 1427 is 1139
run/0: address to copy is 1140
run/0: product 0 is free
mem/0: storing 1140 in location 1432
run/0: instruction write/11
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location"]} <- index-address/30 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}, {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 1431 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 50
mem/0: location 1145 is 45
run/0: ingredient 1 is free
mem/0: location 1432 is 1140
mem/0: location 1140 is 0
mem/0: location 1431 is 1142
mem/0: location 1432 is 1140
mem/0: location 1140 is 0
run/0: product 0 is dest
mem/0: storing 1143 in location 1433
run/0: instruction write/12
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location", "deref": ]} <- copy/1 {name: "val", value: 2, type: 1, properties: ["val": "location"]}
run/0: ingredient 0 is val
mem/0: location 1428 is 97
run/0: product 0 is dest
mem/0: location 1433 is 1143
mem/0: storing 97 in location 1143
run/0: instruction write/13
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]} <- add/2 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is free
mem/0: location 1432 is 1140
mem/0: location 1140 is 0
run/0: ingredient 1 is 1
run/0: product 0 is free
mem/0: location 1432 is 1140
mem/0: storing 1 in location 1140
run/0: instruction write/15
run/0: {name: "len", value: 8, type: 1, properties: ["len": "number"]} <- length/31 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 1431 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 50
mem/0: location 1145 is 45
mem/0: location 1431 is 1142
run/0: product 0 is len
mem/0: storing 3 in location 1434
run/0: instruction write/16
run/0: {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]}, {name: "len", value: 8, type: 1, properties: ["len": "number"]}
run/0: ingredient 0 is free
mem/0: location 1432 is 1140
mem/0: location 1140 is 1
run/0: ingredient 1 is len
mem/0: location 1434 is 3
run/0: product 0 is at-end?
mem/0: storing 0 in location 1435
run/0: instruction write/17
run/0: break-unless/12 {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 1435 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 19
run/0: instruction write/20
run/0: reply/36 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "same-as-ingredient": "0"]}
run/0: ingredient 0 is chan
mem/0: location 1427 is 1139
run/0: result 0 is 1139
run/0: product 0 is 1
mem/0: storing 1139 in location 1
run/0: instruction run1001/25
run/0: restart/39 {name: "2", value: 2, type: 1, properties: ["2": "number", "routine": ]}
run/0: ingredient 0 is 2
mem/0: location 2 is 2
run/0: instruction run1001/26
run/0: wait-for-routine/43 {name: "2", value: 2, type: 1, properties: ["2": "number"]}
run/0: ingredient 0 is 2
mem/0: location 2 is 2
run/0: waiting for routine 2
schedule/0: read/read-file/read-move
run/0: instruction read/8
run/0: {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number"]} <- get-address/28 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101344 is 1139
mem/0: location 1139 is 0
mem/0: location 1140 is 1
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-full
mem/0: location 101344 is 1139
run/0: address to copy is 1139
run/0: product 0 is full
mem/0: storing 1139 in location 101347
run/0: instruction read/9
run/0: {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101344 is 1139
mem/0: location 1139 is 0
mem/0: location 1140 is 1
mem/0: location 1141 is 1142
run/0: ingredient 1 is data
mem/0: location 101344 is 1139
run/0: address to copy is 1141
run/0: its type is 2
mem/0: location 1141 is 1142
run/0: product 0 is circular-buffer
mem/0: storing 1142 in location 101348
run/0: instruction read/10
run/0: {name: "result", value: 6, type: 1, properties: ["result": "location"]} <- index/29 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}, {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101348 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 50
mem/0: location 1145 is 45
run/0: ingredient 1 is full
mem/0: location 101347 is 1139
mem/0: location 1139 is 0
mem/0: location 101348 is 1142
mem/0: location 101347 is 1139
mem/0: location 1139 is 0
run/0: address to copy is 1143
run/0: its type is 1
mem/0: location 1143 is 97
run/0: product 0 is result
mem/0: storing 97 in location 101349
run/0: instruction read/11
run/0: {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]} <- add/2 {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is full
mem/0: location 101347 is 1139
mem/0: location 1139 is 0
run/0: ingredient 1 is 1
run/0: product 0 is full
mem/0: location 101347 is 1139
mem/0: storing 1 in location 1139
run/0: instruction read/13
run/0: {name: "len", value: 7, type: 1, properties: ["len": "number"]} <- length/31 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101348 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 50
mem/0: location 1145 is 45
mem/0: location 101348 is 1142
run/0: product 0 is len
mem/0: storing 3 in location 101350
run/0: instruction read/14
run/0: {name: "at-end?", value: 8, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]}, {name: "len", value: 7, type: 1, properties: ["len": "number"]}
run/0: ingredient 0 is full
mem/0: location 101347 is 1139
mem/0: location 1139 is 1
run/0: ingredient 1 is len
mem/0: location 101350 is 3
run/0: product 0 is at-end?
mem/0: storing 0 in location 101351
run/0: instruction read/15
run/0: break-unless/12 {name: "at-end?", value: 8, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 101351 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 17
run/0: instruction read/18
run/0: reply/36 {name: "result", value: 6, type: 1, properties: ["result": "location"]}, {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "same-as-ingredient": "0"]}
run/0: ingredient 0 is result
mem/0: location 101349 is 97
run/0: ingredient 1 is chan
mem/0: location 101344 is 1139
run/0: result 0 is 97
run/0: result 1 is 1139
run/0: product 0 is c
mem/0: storing 97 in location 101315
run/0: product 1 is stdin
mem/0: storing 1139 in location 101313
run/0: instruction read-file/5
run/0: {name: "q-pressed?", value: 4, type: 3, properties: ["q-pressed?": "boolean"]} <- equal/13 {name: "c", value: 3, type: 4, properties: ["c": "character"]}, {name: "81", value: 81, type: 0, properties: ["81": "literal"]}
run/0: ingredient 0 is c
mem/0: location 101315 is 97
run/0: ingredient 1 is 81
run/0: product 0 is q-pressed?
mem/0: storing 0 in location 101316
run/0: instruction read-file/6
run/0: break-unless/12 {name: "q-pressed?", value: 4, type: 3, properties: ["q-pressed?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is q-pressed?
mem/0: location 101316 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 8
run/0: instruction read-file/10
run/0: {name: "q-pressed?", value: 4, type: 3, properties: ["q-pressed?": "boolean"]} <- equal/13 {name: "c", value: 3, type: 4, properties: ["c": "character"]}, {name: "113", value: 113, type: 0, properties: ["113": "literal"]}
run/0: ingredient 0 is c
mem/0: location 101315 is 97
run/0: ingredient 1 is 113
run/0: product 0 is q-pressed?
mem/0: storing 0 in location 101316
run/0: instruction read-file/11
run/0: break-unless/12 {name: "q-pressed?", value: 4, type: 3, properties: ["q-pressed?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is q-pressed?
mem/0: location 101316 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 13
run/0: instruction read-file/15
run/0: {name: "empty-fake-keyboard?", value: 5, type: 3, properties: ["empty-fake-keyboard?": "boolean"]} <- equal/13 {name: "c", value: 3, type: 4, properties: ["c": "character"]}, {name: "0", value: 0, type: 0, properties: ["0": "literal", "eof": ]}
run/0: ingredient 0 is c
mem/0: location 101315 is 97
run/0: ingredient 1 is 0
run/0: product 0 is empty-fake-keyboard?
mem/0: storing 0 in location 101317
run/0: instruction read-file/16
run/0: break-unless/12 {name: "empty-fake-keyboard?", value: 5, type: 3, properties: ["empty-fake-keyboard?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is empty-fake-keyboard?
mem/0: location 101317 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 18
run/0: instruction read-file/20
run/0: {name: "newline?", value: 6, type: 3, properties: ["newline?": "boolean"]} <- equal/13 {name: "c", value: 3, type: 4, properties: ["c": "character"]}, {name: "10", value: 10, type: 0, properties: ["10": "literal", "newline": ]}
run/0: ingredient 0 is c
mem/0: location 101315 is 97
run/0: ingredient 1 is 10
run/0: product 0 is newline?
mem/0: storing 0 in location 101318
run/0: instruction read-file/21
run/0: break-unless/12 {name: "newline?", value: 6, type: 3, properties: ["newline?": "boolean"]}, {name: "", value: 3, type: 0, properties: ["": ]}
run/0: ingredient 0 is newline?
mem/0: location 101318 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 25
run/0: instruction read-file/26
run/0: {name: "file", value: 8, type: 1, properties: ["file": "number"]} <- subtract/3 {name: "c", value: 3, type: 4, properties: ["c": "character"]}, {name: "97", value: 97, type: 0, properties: ["97": "literal"]}
run/0: ingredient 0 is c
mem/0: location 101315 is 97
run/0: ingredient 1 is 97
run/0: product 0 is file
mem/0: storing 0 in location 101320
run/0: instruction read-file/28
run/0: {name: "above-min", value: 9, type: 3, properties: ["above-min": "boolean"]} <- greater-or-equal/16 {name: "file", value: 8, type: 1, properties: ["file": "number"]}, {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is file
mem/0: location 101320 is 0
run/0: ingredient 1 is 0
run/0: product 0 is above-min
mem/0: storing 1 in location 101321
run/0: instruction read-file/29
run/0: break-if/11 {name: "above-min", value: 9, type: 3, properties: ["above-min": "boolean"]}, {name: "", value: 5, type: 0, properties: ["": ]}
run/0: ingredient 0 is above-min
mem/0: location 101321 is 1
run/0: ingredient 1 is 
run/0: jumping to instruction 35
run/0: instruction read-file/37
run/0: {name: "below-max", value: 10, type: 3, properties: ["below-max": "boolean"]} <- lesser-than/15 {name: "file", value: 8, type: 1, properties: ["file": "number"]}, {name: "8", value: 8, type: 0, properties: ["8": "literal"]}
run/0: ingredient 0 is file
mem/0: location 101320 is 0
run/0: ingredient 1 is 8
run/0: product 0 is below-max
mem/0: storing 1 in location 101322
run/0: instruction read-file/38
run/0: break-if/11 {name: "below-max", value: 10, type: 3, properties: ["below-max": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is below-max
mem/0: location 101322 is 1
run/0: ingredient 1 is 
run/0: jumping to instruction 43
run/0: instruction read-file/44
run/0: reply/36 {name: "file", value: 8, type: 1, properties: ["file": "number"]}, {name: "0", value: 0, type: 0, properties: ["0": "literal", "quit": ]}, {name: "0", value: 0, type: 0, properties: ["0": "literal", "error": ]}
run/0: ingredient 0 is file
mem/0: location 101320 is 0
run/0: ingredient 1 is 0
run/0: ingredient 2 is 0
run/0: result 0 is 0
run/0: result 1 is 0
run/0: result 2 is 0
run/0: product 0 is x
mem/0: location 101008 is 101126
mem/0: storing 0 in location 101126
run/0: product 1 is quit?
mem/0: storing 0 in location 101005
run/0: product 2 is error?
mem/0: storing 0 in location 101006
run/0: instruction read-move/22
run/0: reply-if/12 {name: "quit?", value: 4, type: 3, properties: ["quit?": "boolean"]}, {name: "1", value: 1, type: 0, properties: ["1": "offset"]}
run/0: ingredient 0 is quit?
mem/0: location 101005 is 0
run/0: ingredient 1 is 1
run/0: jumping to instruction 24
run/0: instruction read-move/24
run/0: reply-if/12 {name: "error?", value: 5, type: 3, properties: ["error?": "boolean"]}, {name: "1", value: 1, type: 0, properties: ["1": "offset"]}
run/0: ingredient 0 is error?
mem/0: location 101006 is 0
run/0: ingredient 1 is 1
run/0: jumping to instruction 26
run/0: instruction read-move/26
run/0: {name: "x", value: 7, type: 2-1, properties: ["x": "address":"number"]} <- get-address/28 {name: "result", value: 6, type: 2-13, properties: ["result": "address":"move", "deref": ]}, {name: "to-rank", value: 3, type: 0, properties: ["to-rank": "offset"]}
run/0: ingredient 0 is result
mem/0: location 101007 is 101124
mem/0: location 101124 is 0
mem/0: location 101125 is 1
mem/0: location 101126 is 0
mem/0: location 101127 is 1139
run/0: ingredient 1 is to-rank
mem/0: location 101007 is 101124
run/0: address to copy is 101127
run/0: product 0 is x
mem/0: storing 101127 in location 101008
run/0: instruction read-move/27
run/0: {name: "x", value: 7, type: 2-1, properties: ["x": "address":"number", "deref": ]}, {name: "quit?", value: 4, type: 3, properties: ["quit?": "boolean"]}, {name: "error?", value: 5, type: 3, properties: ["error?": "boolean"]} <- read-rank/145 {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]}, {name: "screen", value: 2, type: 2, properties: ["screen": "address"]}
run/0: ingredient 0 is stdin
mem/0: location 101002 is 1139
run/0: ingredient 1 is screen
mem/0: location 101003 is 1031
run/0: instruction read-rank/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101404
run/0: product 0 is default-space
run/0: instruction read-rank/1
run/0: {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is stdin
mem/0: storing 1139 in location 101406
run/0: instruction read-rank/2
run/0: {name: "screen", value: 2, type: 2, properties: ["screen": "address"]} <- next-ingredient/33 
run/0: product 0 is screen
mem/0: storing 1031 in location 101407
run/0: instruction read-rank/3
run/0: {name: "c", value: 3, type: 4, properties: ["c": "character"]}, {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]} <- read/111 {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]}
run/0: ingredient 0 is stdin
mem/0: location 101406 is 1139
run/0: instruction read/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101435
run/0: product 0 is default-space
run/0: instruction read/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 101437
run/0: instruction read/3
run/0: {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]} <- channel-empty?/112 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 101437 is 1139
run/0: instruction channel-empty?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101466
run/0: product 0 is default-space
run/0: instruction channel-empty?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 101468
run/0: instruction channel-empty?/2
run/0: {name: "full", value: 2, type: 1, properties: ["full": "number"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101468 is 1139
mem/0: location 1139 is 1
mem/0: location 1140 is 1
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-full
mem/0: location 101468 is 1139
run/0: address to copy is 1139
run/0: its type is 1
mem/0: location 1139 is 1
run/0: product 0 is full
mem/0: storing 1 in location 101469
run/0: instruction channel-empty?/3
run/0: {name: "free", value: 3, type: 1, properties: ["free": "number"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101468 is 1139
mem/0: location 1139 is 1
mem/0: location 1140 is 1
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-free
mem/0: location 101468 is 1139
run/0: address to copy is 1140
run/0: its type is 1
mem/0: location 1140 is 1
run/0: product 0 is free
mem/0: storing 1 in location 101470
run/0: instruction channel-empty?/4
run/0: {name: "result", value: 4, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 2, type: 1, properties: ["full": "number"]}, {name: "free", value: 3, type: 1, properties: ["free": "number"]}
run/0: ingredient 0 is full
mem/0: location 101469 is 1
run/0: ingredient 1 is free
mem/0: location 101470 is 1
run/0: product 0 is result
mem/0: storing 1 in location 101471
run/0: instruction channel-empty?/5
run/0: reply/36 {name: "result", value: 4, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 101471 is 1
run/0: result 0 is 1
run/0: product 0 is empty
mem/0: storing 1 in location 101438
run/0: instruction read/4
run/0: break-unless/12 {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is empty
mem/0: location 101438 is 1
run/0: ingredient 1 is 
run/0: jump-unless fell through
run/0: instruction read/5
run/0: {name: "free-address", value: 3, type: 2-1, properties: ["free-address": "address":"number"]} <- get-address/28 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101437 is 1139
mem/0: location 1139 is 1
mem/0: location 1140 is 1
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-free
mem/0: location 101437 is 1139
run/0: address to copy is 1140
run/0: product 0 is free-address
mem/0: storing 1140 in location 101439
run/0: instruction read/6
run/0: wait-for-location/42 {name: "free-address", value: 3, type: 2-1, properties: ["free-address": "address":"number", "deref": ]}
run/0: ingredient 0 is free-address
mem/0: location 101439 is 1140
mem/0: location 1140 is 1
mem/0: location 101439 is 1140
run/0: waiting for location 1140 to change from 1
schedule/0: waking up routine 1
schedule/0: run1001/read-move-blocking
run/0: instruction run1001/27
run/0: {name: "3", value: 3, type: 1, properties: ["3": "number"]} <- routine-state/38 {name: "2", value: 2, type: 1, properties: ["2": "number"]}
run/0: ingredient 0 is 2
mem/0: location 2 is 2
run/0: product 0 is 3
mem/0: storing 2 in location 3
run/0: instruction run1001/28
run/0: {name: "4", value: 4, type: 3, properties: ["4": "boolean", "waiting?": ]} <- equal/13 {name: "3", value: 3, type: 1, properties: ["3": "number", "routine-state": ]}, {name: "2", value: 2, type: 0, properties: ["2": "literal", "waiting": ]}
run/0: ingredient 0 is 3
mem/0: location 3 is 2
run/0: ingredient 1 is 2
run/0: product 0 is 4
mem/0: storing 1 in location 4
run/0: instruction run1001/29
run/0: assert/20 {name: "4", value: 4, type: 3, properties: ["4": "boolean", "waiting?": , "routine-state": ]}, {name: "
F read-move-blocking: routine failed to pause after rank 'a2-a'", value: 0, type: 0, properties: ["
F read-move-blocking: routine failed to pause after rank 'a2-a'": "literal-string"]}
run/0: ingredient 0 is 4
mem/0: location 4 is 1
run/0: ingredient 1 is 
F read-move-blocking: routine failed to pause after rank 'a2-a'
run/0: instruction run1001/30
run/0: {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]} <- write/109 {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]}, {name: "52", value: 52, type: 0, properties: ["52": "literal"]}
run/0: ingredient 0 is 1
mem/0: location 1 is 1139
run/0: ingredient 1 is 52
run/0: instruction write/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1518
run/0: product 0 is default-space
run/0: instruction write/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 1520
run/0: instruction write/2
run/0: {name: "val", value: 2, type: 1, properties: ["val": "location"]} <- next-ingredient/33 
run/0: product 0 is val
mem/0: storing 52 in location 1521
run/0: instruction write/4
run/0: {name: "full", value: 3, type: 3, properties: ["full": "boolean"]} <- channel-full?/110 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 1520 is 1139
run/0: instruction channel-full?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1549
run/0: product 0 is default-space
run/0: instruction channel-full?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 1551
run/0: instruction channel-full?/2
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1551 is 1139
mem/0: location 1139 is 1
mem/0: location 1140 is 1
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-free
mem/0: location 1551 is 1139
run/0: address to copy is 1140
run/0: its type is 1
mem/0: location 1140 is 1
run/0: product 0 is tmp
mem/0: storing 1 in location 1552
run/0: instruction channel-full?/3
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]} <- add/2 {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is tmp
mem/0: location 1552 is 1
run/0: ingredient 1 is 1
run/0: product 0 is tmp
mem/0: storing 2 in location 1552
run/0: instruction channel-full?/5
run/0: {name: "len", value: 3, type: 1, properties: ["len": "number"]} <- channel-capacity/114 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 1551 is 1139
run/0: instruction channel-capacity/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1580
run/0: product 0 is default-space
run/0: instruction channel-capacity/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 1582
run/0: instruction channel-capacity/2
run/0: {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1582 is 1139
mem/0: location 1139 is 1
mem/0: location 1140 is 1
mem/0: location 1141 is 1142
run/0: ingredient 1 is data
mem/0: location 1582 is 1139
run/0: address to copy is 1141
run/0: its type is 2
mem/0: location 1141 is 1142
run/0: product 0 is q
mem/0: storing 1142 in location 1583
run/0: instruction channel-capacity/3
run/0: {name: "result", value: 3, type: 1, properties: ["result": "number"]} <- length/31 {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is q
mem/0: location 1583 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 50
mem/0: location 1145 is 45
mem/0: location 1583 is 1142
run/0: product 0 is result
mem/0: storing 3 in location 1584
run/0: instruction channel-capacity/4
run/0: reply/36 {name: "result", value: 3, type: 1, properties: ["result": "number"]}
run/0: ingredient 0 is result
mem/0: location 1584 is 3
run/0: result 0 is 3
run/0: product 0 is len
mem/0: storing 3 in location 1553
run/0: instruction channel-full?/6
run/0: {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]}, {name: "len", value: 3, type: 1, properties: ["len": "number"]}
run/0: ingredient 0 is tmp
mem/0: location 1552 is 2
run/0: ingredient 1 is len
mem/0: location 1553 is 3
run/0: product 0 is at-end?
mem/0: storing 0 in location 1554
run/0: instruction channel-full?/7
run/0: break-unless/12 {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 1554 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 9
run/0: instruction channel-full?/10
run/0: {name: "full", value: 5, type: 1, properties: ["full": "number"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1551 is 1139
mem/0: location 1139 is 1
mem/0: location 1140 is 1
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-full
mem/0: location 1551 is 1139
run/0: address to copy is 1139
run/0: its type is 1
mem/0: location 1139 is 1
run/0: product 0 is full
mem/0: storing 1 in location 1555
run/0: instruction channel-full?/11
run/0: {name: "result", value: 6, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 5, type: 1, properties: ["full": "number"]}, {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]}
run/0: ingredient 0 is full
mem/0: location 1555 is 1
run/0: ingredient 1 is tmp
mem/0: location 1552 is 2
run/0: product 0 is result
mem/0: storing 0 in location 1556
run/0: instruction channel-full?/12
run/0: reply/36 {name: "result", value: 6, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 1556 is 0
run/0: result 0 is 0
run/0: product 0 is full
mem/0: storing 0 in location 1522
run/0: instruction write/5
run/0: break-unless/12 {name: "full", value: 3, type: 3, properties: ["full": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is full
mem/0: location 1522 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 8
run/0: instruction write/9
run/0: {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1520 is 1139
mem/0: location 1139 is 1
mem/0: location 1140 is 1
mem/0: location 1141 is 1142
run/0: ingredient 1 is data
mem/0: location 1520 is 1139
run/0: address to copy is 1141
run/0: its type is 2
mem/0: location 1141 is 1142
run/0: product 0 is circular-buffer
mem/0: storing 1142 in location 1524
run/0: instruction write/10
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number"]} <- get-address/28 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1520 is 1139
mem/0: location 1139 is 1
mem/0: location 1140 is 1
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-free
mem/0: location 1520 is 1139
run/0: address to copy is 1140
run/0: product 0 is free
mem/0: storing 1140 in location 1525
run/0: instruction write/11
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location"]} <- index-address/30 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}, {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 1524 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 50
mem/0: location 1145 is 45
run/0: ingredient 1 is free
mem/0: location 1525 is 1140
mem/0: location 1140 is 1
mem/0: location 1524 is 1142
mem/0: location 1525 is 1140
mem/0: location 1140 is 1
run/0: product 0 is dest
mem/0: storing 1144 in location 1526
run/0: instruction write/12
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location", "deref": ]} <- copy/1 {name: "val", value: 2, type: 1, properties: ["val": "location"]}
run/0: ingredient 0 is val
mem/0: location 1521 is 52
run/0: product 0 is dest
mem/0: location 1526 is 1144
mem/0: storing 52 in location 1144
run/0: instruction write/13
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]} <- add/2 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is free
mem/0: location 1525 is 1140
mem/0: location 1140 is 1
run/0: ingredient 1 is 1
run/0: product 0 is free
mem/0: location 1525 is 1140
mem/0: storing 2 in location 1140
run/0: instruction write/15
run/0: {name: "len", value: 8, type: 1, properties: ["len": "number"]} <- length/31 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 1524 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 52
mem/0: location 1145 is 45
mem/0: location 1524 is 1142
run/0: product 0 is len
mem/0: storing 3 in location 1527
run/0: instruction write/16
run/0: {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]}, {name: "len", value: 8, type: 1, properties: ["len": "number"]}
run/0: ingredient 0 is free
mem/0: location 1525 is 1140
mem/0: location 1140 is 2
run/0: ingredient 1 is len
mem/0: location 1527 is 3
run/0: product 0 is at-end?
mem/0: storing 0 in location 1528
run/0: instruction write/17
run/0: break-unless/12 {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 1528 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 19
run/0: instruction write/20
run/0: reply/36 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "same-as-ingredient": "0"]}
run/0: ingredient 0 is chan
mem/0: location 1520 is 1139
run/0: result 0 is 1139
run/0: product 0 is 1
mem/0: storing 1139 in location 1
run/0: instruction run1001/31
run/0: restart/39 {name: "2", value: 2, type: 1, properties: ["2": "number", "routine": ]}
run/0: ingredient 0 is 2
mem/0: location 2 is 2
run/0: instruction run1001/32
run/0: wait-for-routine/43 {name: "2", value: 2, type: 1, properties: ["2": "number"]}
run/0: ingredient 0 is 2
mem/0: location 2 is 2
run/0: waiting for routine 2
schedule/0: read/read-rank/read-move
run/0: instruction read/8
run/0: {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number"]} <- get-address/28 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101437 is 1139
mem/0: location 1139 is 1
mem/0: location 1140 is 2
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-full
mem/0: location 101437 is 1139
run/0: address to copy is 1139
run/0: product 0 is full
mem/0: storing 1139 in location 101440
run/0: instruction read/9
run/0: {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101437 is 1139
mem/0: location 1139 is 1
mem/0: location 1140 is 2
mem/0: location 1141 is 1142
run/0: ingredient 1 is data
mem/0: location 101437 is 1139
run/0: address to copy is 1141
run/0: its type is 2
mem/0: location 1141 is 1142
run/0: product 0 is circular-buffer
mem/0: storing 1142 in location 101441
run/0: instruction read/10
run/0: {name: "result", value: 6, type: 1, properties: ["result": "location"]} <- index/29 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}, {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101441 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 52
mem/0: location 1145 is 45
run/0: ingredient 1 is full
mem/0: location 101440 is 1139
mem/0: location 1139 is 1
mem/0: location 101441 is 1142
mem/0: location 101440 is 1139
mem/0: location 1139 is 1
run/0: address to copy is 1144
run/0: its type is 1
mem/0: location 1144 is 52
run/0: product 0 is result
mem/0: storing 52 in location 101442
run/0: instruction read/11
run/0: {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]} <- add/2 {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is full
mem/0: location 101440 is 1139
mem/0: location 1139 is 1
run/0: ingredient 1 is 1
run/0: product 0 is full
mem/0: location 101440 is 1139
mem/0: storing 2 in location 1139
run/0: instruction read/13
run/0: {name: "len", value: 7, type: 1, properties: ["len": "number"]} <- length/31 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101441 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 52
mem/0: location 1145 is 45
mem/0: location 101441 is 1142
run/0: product 0 is len
mem/0: storing 3 in location 101443
run/0: instruction read/14
run/0: {name: "at-end?", value: 8, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]}, {name: "len", value: 7, type: 1, properties: ["len": "number"]}
run/0: ingredient 0 is full
mem/0: location 101440 is 1139
mem/0: location 1139 is 2
run/0: ingredient 1 is len
mem/0: location 101443 is 3
run/0: product 0 is at-end?
mem/0: storing 0 in location 101444
run/0: instruction read/15
run/0: break-unless/12 {name: "at-end?", value: 8, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 101444 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 17
run/0: instruction read/18
run/0: reply/36 {name: "result", value: 6, type: 1, properties: ["result": "location"]}, {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "same-as-ingredient": "0"]}
run/0: ingredient 0 is result
mem/0: location 101442 is 52
run/0: ingredient 1 is chan
mem/0: location 101437 is 1139
run/0: result 0 is 52
run/0: result 1 is 1139
run/0: product 0 is c
mem/0: storing 52 in location 101408
run/0: product 1 is stdin
mem/0: storing 1139 in location 101406
run/0: instruction read-rank/5
run/0: {name: "q-pressed?", value: 4, type: 3, properties: ["q-pressed?": "boolean"]} <- equal/13 {name: "c", value: 3, type: 4, properties: ["c": "character"]}, {name: "81", value: 81, type: 0, properties: ["81": "literal"]}
run/0: ingredient 0 is c
mem/0: location 101408 is 52
run/0: ingredient 1 is 81
run/0: product 0 is q-pressed?
mem/0: storing 0 in location 101409
run/0: instruction read-rank/6
run/0: break-unless/12 {name: "q-pressed?", value: 4, type: 3, properties: ["q-pressed?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is q-pressed?
mem/0: location 101409 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 8
run/0: instruction read-rank/10
run/0: {name: "q-pressed?", value: 4, type: 3, properties: ["q-pressed?": "boolean"]} <- equal/13 {name: "c", value: 3, type: 4, properties: ["c": "character"]}, {name: "113", value: 113, type: 0, properties: ["113": "literal"]}
run/0: ingredient 0 is c
mem/0: location 101408 is 52
run/0: ingredient 1 is 113
run/0: product 0 is q-pressed?
mem/0: storing 0 in location 101409
run/0: instruction read-rank/11
run/0: break-unless/12 {name: "q-pressed?", value: 4, type: 3, properties: ["q-pressed?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is q-pressed?
mem/0: location 101409 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 13
run/0: instruction read-rank/15
run/0: {name: "newline?", value: 5, type: 3, properties: ["newline?": "boolean"]} <- equal/13 {name: "c", value: 3, type: 4, properties: ["c": "character"]}, {name: "10", value: 10, type: 0, properties: ["10": "literal"]}
run/0: ingredient 0 is c
mem/0: location 101408 is 52
run/0: ingredient 1 is 10
run/0: product 0 is newline?
mem/0: storing 0 in location 101410
run/0: instruction read-rank/16
run/0: break-unless/12 {name: "newline?", value: 5, type: 3, properties: ["newline?": "boolean"]}, {name: "", value: 3, type: 0, properties: ["": ]}
run/0: ingredient 0 is newline?
mem/0: location 101410 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 20
run/0: instruction read-rank/21
run/0: {name: "rank", value: 7, type: 1, properties: ["rank": "number"]} <- subtract/3 {name: "c", value: 3, type: 4, properties: ["c": "character"]}, {name: "49", value: 49, type: 0, properties: ["49": "literal"]}
run/0: ingredient 0 is c
mem/0: location 101408 is 52
run/0: ingredient 1 is 49
run/0: product 0 is rank
mem/0: storing 3 in location 101412
run/0: instruction read-rank/23
run/0: {name: "above-min", value: 8, type: 3, properties: ["above-min": "boolean"]} <- greater-or-equal/16 {name: "rank", value: 7, type: 1, properties: ["rank": "number"]}, {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is rank
mem/0: location 101412 is 3
run/0: ingredient 1 is 0
run/0: product 0 is above-min
mem/0: storing 1 in location 101413
run/0: instruction read-rank/24
run/0: break-if/11 {name: "above-min", value: 8, type: 3, properties: ["above-min": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is above-min
mem/0: location 101413 is 1
run/0: ingredient 1 is 
run/0: jumping to instruction 29
run/0: instruction read-rank/31
run/0: {name: "below-max", value: 9, type: 3, properties: ["below-max": "boolean"]} <- lesser-or-equal/17 {name: "rank", value: 7, type: 1, properties: ["rank": "number"]}, {name: "7", value: 7, type: 0, properties: ["7": "literal"]}
run/0: ingredient 0 is rank
mem/0: location 101412 is 3
run/0: ingredient 1 is 7
run/0: product 0 is below-max
mem/0: storing 1 in location 101414
run/0: instruction read-rank/32
run/0: break-if/11 {name: "below-max", value: 9, type: 3, properties: ["below-max": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is below-max
mem/0: location 101414 is 1
run/0: ingredient 1 is 
run/0: jumping to instruction 37
run/0: instruction read-rank/38
run/0: reply/36 {name: "rank", value: 7, type: 1, properties: ["rank": "number"]}, {name: "0", value: 0, type: 0, properties: ["0": "literal", "quit": ]}, {name: "0", value: 0, type: 0, properties: ["0": "literal", "error": ]}
run/0: ingredient 0 is rank
mem/0: location 101412 is 3
run/0: ingredient 1 is 0
run/0: ingredient 2 is 0
run/0: result 0 is 3
run/0: result 1 is 0
run/0: result 2 is 0
run/0: product 0 is x
mem/0: location 101008 is 101127
mem/0: storing 3 in location 101127
run/0: product 1 is quit?
mem/0: storing 0 in location 101005
run/0: product 2 is error?
mem/0: storing 0 in location 101006
run/0: instruction read-move/28
run/0: reply-if/12 {name: "quit?", value: 4, type: 3, properties: ["quit?": "boolean"]}, {name: "1", value: 1, type: 0, properties: ["1": "offset"]}
run/0: ingredient 0 is quit?
mem/0: location 101005 is 0
run/0: ingredient 1 is 1
run/0: jumping to instruction 30
run/0: instruction read-move/30
run/0: reply-if/12 {name: "error?", value: 5, type: 3, properties: ["error?": "boolean"]}, {name: "1", value: 1, type: 0, properties: ["1": "offset"]}
run/0: ingredient 0 is error?
mem/0: location 101006 is 0
run/0: ingredient 1 is 1
run/0: jumping to instruction 32
run/0: instruction read-move/32
run/0: {name: "error?", value: 5, type: 3, properties: ["error?": "boolean"]} <- expect-from-channel/146 {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]}, {name: "10", value: 10, type: 0, properties: ["10": "literal", "newline": ]}, {name: "screen", value: 2, type: 2, properties: ["screen": "address"]}
run/0: ingredient 0 is stdin
mem/0: location 101002 is 1139
run/0: ingredient 1 is 10
run/0: ingredient 2 is screen
mem/0: location 101003 is 1031
run/0: instruction expect-from-channel/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101497
run/0: product 0 is default-space
run/0: instruction expect-from-channel/1
run/0: {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is stdin
mem/0: storing 1139 in location 101499
run/0: instruction expect-from-channel/2
run/0: {name: "expected", value: 2, type: 4, properties: ["expected": "character"]} <- next-ingredient/33 
run/0: product 0 is expected
mem/0: storing 10 in location 101500
run/0: instruction expect-from-channel/3
run/0: {name: "screen", value: 3, type: 2, properties: ["screen": "address"]} <- next-ingredient/33 
run/0: product 0 is screen
mem/0: storing 1031 in location 101501
run/0: instruction expect-from-channel/4
run/0: {name: "c", value: 4, type: 4, properties: ["c": "character"]}, {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]} <- read/111 {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]}
run/0: ingredient 0 is stdin
mem/0: location 101499 is 1139
run/0: instruction read/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101528
run/0: product 0 is default-space
run/0: instruction read/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 101530
run/0: instruction read/3
run/0: {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]} <- channel-empty?/112 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 101530 is 1139
run/0: instruction channel-empty?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101559
run/0: product 0 is default-space
run/0: instruction channel-empty?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 101561
run/0: instruction channel-empty?/2
run/0: {name: "full", value: 2, type: 1, properties: ["full": "number"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101561 is 1139
mem/0: location 1139 is 2
mem/0: location 1140 is 2
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-full
mem/0: location 101561 is 1139
run/0: address to copy is 1139
run/0: its type is 1
mem/0: location 1139 is 2
run/0: product 0 is full
mem/0: storing 2 in location 101562
run/0: instruction channel-empty?/3
run/0: {name: "free", value: 3, type: 1, properties: ["free": "number"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101561 is 1139
mem/0: location 1139 is 2
mem/0: location 1140 is 2
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-free
mem/0: location 101561 is 1139
run/0: address to copy is 1140
run/0: its type is 1
mem/0: location 1140 is 2
run/0: product 0 is free
mem/0: storing 2 in location 101563
run/0: instruction channel-empty?/4
run/0: {name: "result", value: 4, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 2, type: 1, properties: ["full": "number"]}, {name: "free", value: 3, type: 1, properties: ["free": "number"]}
run/0: ingredient 0 is full
mem/0: location 101562 is 2
run/0: ingredient 1 is free
mem/0: location 101563 is 2
run/0: product 0 is result
mem/0: storing 1 in location 101564
run/0: instruction channel-empty?/5
run/0: reply/36 {name: "result", value: 4, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 101564 is 1
run/0: result 0 is 1
run/0: product 0 is empty
mem/0: storing 1 in location 101531
run/0: instruction read/4
run/0: break-unless/12 {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is empty
mem/0: location 101531 is 1
run/0: ingredient 1 is 
run/0: jump-unless fell through
run/0: instruction read/5
run/0: {name: "free-address", value: 3, type: 2-1, properties: ["free-address": "address":"number"]} <- get-address/28 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101530 is 1139
mem/0: location 1139 is 2
mem/0: location 1140 is 2
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-free
mem/0: location 101530 is 1139
run/0: address to copy is 1140
run/0: product 0 is free-address
mem/0: storing 1140 in location 101532
run/0: instruction read/6
run/0: wait-for-location/42 {name: "free-address", value: 3, type: 2-1, properties: ["free-address": "address":"number", "deref": ]}
run/0: ingredient 0 is free-address
mem/0: location 101532 is 1140
mem/0: location 1140 is 2
mem/0: location 101532 is 1140
run/0: waiting for location 1140 to change from 2
schedule/0: waking up routine 1
schedule/0: run1001/read-move-blocking
run/0: instruction run1001/33
run/0: {name: "3", value: 3, type: 1, properties: ["3": "number"]} <- routine-state/38 {name: "2", value: 2, type: 1, properties: ["2": "number"]}
run/0: ingredient 0 is 2
mem/0: location 2 is 2
run/0: product 0 is 3
mem/0: storing 2 in location 3
run/0: instruction run1001/34
run/0: {name: "4", value: 4, type: 3, properties: ["4": "boolean", "waiting?": ]} <- equal/13 {name: "3", value: 3, type: 1, properties: ["3": "number", "routine-state": ]}, {name: "2", value: 2, type: 0, properties: ["2": "literal", "waiting": ]}
run/0: ingredient 0 is 3
mem/0: location 3 is 2
run/0: ingredient 1 is 2
run/0: product 0 is 4
mem/0: storing 1 in location 4
run/0: instruction run1001/35
run/0: assert/20 {name: "4", value: 4, type: 3, properties: ["4": "boolean", "waiting?": ]}, {name: "
F read-move-blocking: routine failed to pause after file 'a2-a4'", value: 0, type: 0, properties: ["
F read-move-blocking: routine failed to pause after file 'a2-a4'": "literal-string"]}
run/0: ingredient 0 is 4
mem/0: location 4 is 1
run/0: ingredient 1 is 
F read-move-blocking: routine failed to pause after file 'a2-a4'
run/0: instruction run1001/36
run/0: {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]} <- write/109 {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]}, {name: "10", value: 10, type: 0, properties: ["10": "literal"]}
run/0: ingredient 0 is 1
mem/0: location 1 is 1139
run/0: ingredient 1 is 10
run/0: instruction write/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1611
run/0: product 0 is default-space
run/0: instruction write/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 1613
run/0: instruction write/2
run/0: {name: "val", value: 2, type: 1, properties: ["val": "location"]} <- next-ingredient/33 
run/0: product 0 is val
mem/0: storing 10 in location 1614
run/0: instruction write/4
run/0: {name: "full", value: 3, type: 3, properties: ["full": "boolean"]} <- channel-full?/110 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 1613 is 1139
run/0: instruction channel-full?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1642
run/0: product 0 is default-space
run/0: instruction channel-full?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 1644
run/0: instruction channel-full?/2
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1644 is 1139
mem/0: location 1139 is 2
mem/0: location 1140 is 2
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-free
mem/0: location 1644 is 1139
run/0: address to copy is 1140
run/0: its type is 1
mem/0: location 1140 is 2
run/0: product 0 is tmp
mem/0: storing 2 in location 1645
run/0: instruction channel-full?/3
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]} <- add/2 {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is tmp
mem/0: location 1645 is 2
run/0: ingredient 1 is 1
run/0: product 0 is tmp
mem/0: storing 3 in location 1645
run/0: instruction channel-full?/5
run/0: {name: "len", value: 3, type: 1, properties: ["len": "number"]} <- channel-capacity/114 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 1644 is 1139
run/0: instruction channel-capacity/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1673
run/0: product 0 is default-space
run/0: instruction channel-capacity/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1139 in location 1675
run/0: instruction channel-capacity/2
run/0: {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1675 is 1139
mem/0: location 1139 is 2
mem/0: location 1140 is 2
mem/0: location 1141 is 1142
run/0: ingredient 1 is data
mem/0: location 1675 is 1139
run/0: address to copy is 1141
run/0: its type is 2
mem/0: location 1141 is 1142
run/0: product 0 is q
mem/0: storing 1142 in location 1676
run/0: instruction channel-capacity/3
run/0: {name: "result", value: 3, type: 1, properties: ["result": "number"]} <- length/31 {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is q
mem/0: location 1676 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 52
mem/0: location 1145 is 45
mem/0: location 1676 is 1142
run/0: product 0 is result
mem/0: storing 3 in location 1677
run/0: instruction channel-capacity/4
run/0: reply/36 {name: "result", value: 3, type: 1, properties: ["result": "number"]}
run/0: ingredient 0 is result
mem/0: location 1677 is 3
run/0: result 0 is 3
run/0: product 0 is len
mem/0: storing 3 in location 1646
run/0: instruction channel-full?/6
run/0: {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]}, {name: "len", value: 3, type: 1, properties: ["len": "number"]}
run/0: ingredient 0 is tmp
mem/0: location 1645 is 3
run/0: ingredient 1 is len
mem/0: location 1646 is 3
run/0: product 0 is at-end?
mem/0: storing 1 in location 1647
run/0: instruction channel-full?/7
run/0: break-unless/12 {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 1647 is 1
run/0: ingredient 1 is 
run/0: jump-unless fell through
run/0: instruction channel-full?/8
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
run/0: product 0 is tmp
mem/0: storing 0 in location 1645
run/0: instruction channel-full?/10
run/0: {name: "full", value: 5, type: 1, properties: ["full": "number"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1644 is 1139
mem/0: location 1139 is 2
mem/0: location 1140 is 2
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-full
mem/0: location 1644 is 1139
run/0: address to copy is 1139
run/0: its type is 1
mem/0: location 1139 is 2
run/0: product 0 is full
mem/0: storing 2 in location 1648
run/0: instruction channel-full?/11
run/0: {name: "result", value: 6, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 5, type: 1, properties: ["full": "number"]}, {name: "tmp", value: 2, type: 1, properties: ["tmp": "number"]}
run/0: ingredient 0 is full
mem/0: location 1648 is 2
run/0: ingredient 1 is tmp
mem/0: location 1645 is 0
run/0: product 0 is result
mem/0: storing 0 in location 1649
run/0: instruction channel-full?/12
run/0: reply/36 {name: "result", value: 6, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 1649 is 0
run/0: result 0 is 0
run/0: product 0 is full
mem/0: storing 0 in location 1615
run/0: instruction write/5
run/0: break-unless/12 {name: "full", value: 3, type: 3, properties: ["full": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is full
mem/0: location 1615 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 8
run/0: instruction write/9
run/0: {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1613 is 1139
mem/0: location 1139 is 2
mem/0: location 1140 is 2
mem/0: location 1141 is 1142
run/0: ingredient 1 is data
mem/0: location 1613 is 1139
run/0: address to copy is 1141
run/0: its type is 2
mem/0: location 1141 is 1142
run/0: product 0 is circular-buffer
mem/0: storing 1142 in location 1617
run/0: instruction write/10
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number"]} <- get-address/28 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1613 is 1139
mem/0: location 1139 is 2
mem/0: location 1140 is 2
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-free
mem/0: location 1613 is 1139
run/0: address to copy is 1140
run/0: product 0 is free
mem/0: storing 1140 in location 1618
run/0: instruction write/11
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location"]} <- index-address/30 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}, {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 1617 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 52
mem/0: location 1145 is 45
run/0: ingredient 1 is free
mem/0: location 1618 is 1140
mem/0: location 1140 is 2
mem/0: location 1617 is 1142
mem/0: location 1618 is 1140
mem/0: location 1140 is 2
run/0: product 0 is dest
mem/0: storing 1145 in location 1619
run/0: instruction write/12
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location", "deref": ]} <- copy/1 {name: "val", value: 2, type: 1, properties: ["val": "location"]}
run/0: ingredient 0 is val
mem/0: location 1614 is 10
run/0: product 0 is dest
mem/0: location 1619 is 1145
mem/0: storing 10 in location 1145
run/0: instruction write/13
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]} <- add/2 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is free
mem/0: location 1618 is 1140
mem/0: location 1140 is 2
run/0: ingredient 1 is 1
run/0: product 0 is free
mem/0: location 1618 is 1140
mem/0: storing 3 in location 1140
run/0: instruction write/15
run/0: {name: "len", value: 8, type: 1, properties: ["len": "number"]} <- length/31 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 1617 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 52
mem/0: location 1145 is 10
mem/0: location 1617 is 1142
run/0: product 0 is len
mem/0: storing 3 in location 1620
run/0: instruction write/16
run/0: {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]}, {name: "len", value: 8, type: 1, properties: ["len": "number"]}
run/0: ingredient 0 is free
mem/0: location 1618 is 1140
mem/0: location 1140 is 3
run/0: ingredient 1 is len
mem/0: location 1620 is 3
run/0: product 0 is at-end?
mem/0: storing 1 in location 1621
run/0: instruction write/17
run/0: break-unless/12 {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 1621 is 1
run/0: ingredient 1 is 
run/0: jump-unless fell through
run/0: instruction write/18
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"number", "deref": ]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
run/0: product 0 is free
mem/0: location 1618 is 1140
mem/0: storing 0 in location 1140
run/0: instruction write/20
run/0: reply/36 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "same-as-ingredient": "0"]}
run/0: ingredient 0 is chan
mem/0: location 1613 is 1139
run/0: result 0 is 1139
run/0: product 0 is 1
mem/0: storing 1139 in location 1
run/0: instruction run1001/37
run/0: restart/39 {name: "2", value: 2, type: 1, properties: ["2": "number", "routine": ]}
run/0: ingredient 0 is 2
mem/0: location 2 is 2
run/0: instruction run1001/38
run/0: wait-for-routine/43 {name: "2", value: 2, type: 1, properties: ["2": "number"]}
run/0: ingredient 0 is 2
mem/0: location 2 is 2
run/0: waiting for routine 2
schedule/0: read/expect-from-channel/read-move
run/0: instruction read/8
run/0: {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number"]} <- get-address/28 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101530 is 1139
mem/0: location 1139 is 2
mem/0: location 1140 is 0
mem/0: location 1141 is 1142
run/0: ingredient 1 is first-full
mem/0: location 101530 is 1139
run/0: address to copy is 1139
run/0: product 0 is full
mem/0: storing 1139 in location 101533
run/0: instruction read/9
run/0: {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101530 is 1139
mem/0: location 1139 is 2
mem/0: location 1140 is 0
mem/0: location 1141 is 1142
run/0: ingredient 1 is data
mem/0: location 101530 is 1139
run/0: address to copy is 1141
run/0: its type is 2
mem/0: location 1141 is 1142
run/0: product 0 is circular-buffer
mem/0: storing 1142 in location 101534
run/0: instruction read/10
run/0: {name: "result", value: 6, type: 1, properties: ["result": "location"]} <- index/29 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}, {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101534 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 52
mem/0: location 1145 is 10
run/0: ingredient 1 is full
mem/0: location 101533 is 1139
mem/0: location 1139 is 2
mem/0: location 101534 is 1142
mem/0: location 101533 is 1139
mem/0: location 1139 is 2
run/0: address to copy is 1145
run/0: its type is 1
mem/0: location 1145 is 10
run/0: product 0 is result
mem/0: storing 10 in location 101535
run/0: instruction read/11
run/0: {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]} <- add/2 {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is full
mem/0: location 101533 is 1139
mem/0: location 1139 is 2
run/0: ingredient 1 is 1
run/0: product 0 is full
mem/0: location 101533 is 1139
mem/0: storing 3 in location 1139
run/0: instruction read/13
run/0: {name: "len", value: 7, type: 1, properties: ["len": "number"]} <- length/31 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101534 is 1142
mem/0: location 1142 is 3
mem/0: location 1143 is 97
mem/0: location 1144 is 52
mem/0: location 1145 is 10
mem/0: location 101534 is 1142
run/0: product 0 is len
mem/0: storing 3 in location 101536
run/0: instruction read/14
run/0: {name: "at-end?", value: 8, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]}, {name: "len", value: 7, type: 1, properties: ["len": "number"]}
run/0: ingredient 0 is full
mem/0: location 101533 is 1139
mem/0: location 1139 is 3
run/0: ingredient 1 is len
mem/0: location 101536 is 3
run/0: product 0 is at-end?
mem/0: storing 1 in location 101537
run/0: instruction read/15
run/0: break-unless/12 {name: "at-end?", value: 8, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 101537 is 1
run/0: ingredient 1 is 
run/0: jump-unless fell through
run/0: instruction read/16
run/0: {name: "full", value: 4, type: 2-1, properties: ["full": "address":"number", "deref": ]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
run/0: product 0 is full
mem/0: location 101533 is 1139
mem/0: storing 0 in location 1139
run/0: instruction read/18
run/0: reply/36 {name: "result", value: 6, type: 1, properties: ["result": "location"]}, {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "same-as-ingredient": "0"]}
run/0: ingredient 0 is result
mem/0: location 101535 is 10
run/0: ingredient 1 is chan
mem/0: location 101530 is 1139
run/0: result 0 is 10
run/0: result 1 is 1139
run/0: product 0 is c
mem/0: storing 10 in location 101502
run/0: product 1 is stdin
mem/0: storing 1139 in location 101499
run/0: instruction expect-from-channel/5
run/0: {name: "match?", value: 5, type: 3, properties: ["match?": "boolean"]} <- equal/13 {name: "c", value: 4, type: 4, properties: ["c": "character"]}, {name: "expected", value: 2, type: 4, properties: ["expected": "character"]}
run/0: ingredient 0 is c
mem/0: location 101502 is 10
run/0: ingredient 1 is expected
mem/0: location 101500 is 10
run/0: product 0 is match?
mem/0: storing 1 in location 101503
run/0: instruction expect-from-channel/7
run/0: break-if/11 {name: "match?", value: 5, type: 3, properties: ["match?": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is match?
mem/0: location 101503 is 1
run/0: ingredient 1 is 
run/0: jumping to instruction 10
run/0: instruction expect-from-channel/11
run/0: {name: "result", value: 7, type: 3, properties: ["result": "boolean"]} <- not/9 {name: "match?", value: 5, type: 3, properties: ["match?": "boolean"]}
run/0: ingredient 0 is match?
mem/0: location 101503 is 1
run/0: product 0 is result
mem/0: storing 0 in location 101505
run/0: instruction expect-from-channel/12
run/0: reply/36 {name: "result", value: 7, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 101505 is 0
run/0: result 0 is 0
run/0: product 0 is error?
mem/0: storing 0 in location 101006
run/0: instruction read-move/33
run/0: reply-if/12 {name: "error?", value: 5, type: 3, properties: ["error?": "boolean"]}, {name: "1", value: 1, type: 0, properties: ["1": "offset"]}
run/0: ingredient 0 is error?
mem/0: location 101006 is 0
run/0: ingredient 1 is 1
run/0: jumping to instruction 35
run/0: instruction read-move/35
run/0: reply/36 {name: "result", value: 6, type: 2-13, properties: ["result": "address":"move"]}, {name: "quit?", value: 4, type: 3, properties: ["quit?": "boolean"]}, {name: "error?", value: 5, type: 3, properties: ["error?": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 101007 is 101124
run/0: ingredient 1 is quit?
mem/0: location 101005 is 0
run/0: ingredient 2 is error?
mem/0: location 101006 is 0
schedule/0: waking up routine 1
schedule/0: run1001/read-move-blocking
run/0: instruction run1001/39
run/0: {name: "3", value: 3, type: 1, properties: ["3": "number"]} <- routine-state/38 {name: "2", value: 2, type: 1, properties: ["2": "number"]}
run/0: ingredient 0 is 2
mem/0: location 2 is 2
run/0: product 0 is 3
mem/0: storing 1 in location 3
run/0: instruction run1001/40
run/0: {name: "4", value: 4, type: 3, properties: ["4": "boolean", "completed?": ]} <- equal/13 {name: "3", value: 3, type: 1, properties: ["3": "number", "routine-state": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal", "completed": ]}
run/0: ingredient 0 is 3
mem/0: location 3 is 1
run/0: ingredient 1 is 1
run/0: product 0 is 4
mem/0: storing 1 in location 4
run/0: instruction run1001/41
run/0: assert/20 {name: "4", value: 4, type: 3, properties: ["4": "boolean", "completed?": ]}, {name: "
F read-move-blocking: routine failed to terminate on newline", value: 0, type: 0, properties: ["
F read-move-blocking: routine failed to terminate on newline": "literal-string"]}
run/0: ingredient 0 is 4
mem/0: location 4 is 1
run/0: ingredient 1 is 
F read-move-blocking: routine failed to terminate on newline
run/0: instruction run1001/42
run/0: trace/18 {name: "test", value: 0, type: 0, properties: ["test": "literal-string"]}, {name: "reached end", value: 0, type: 0, properties: ["reached end": "literal-string"]}
run/0: ingredient 0 is test
run/0: ingredient 1 is reached end
test/0: reached end
run/0: instruction read-move-blocking/2
run/0: trace-should-contain/54 {name: "
    test: reached end
  ", value: 0, type: 0, properties: ["
    test: reached end
  ": "literal-string"]}
run/0: ingredient 0 is 
    test: reached end
  
