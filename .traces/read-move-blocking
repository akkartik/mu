parse: instruction: assume-screen
parse:   ingredient: {name: "20", properties: ["20": "literal", "width": ]}
parse:   ingredient: {name: "2", properties: ["2": "literal", "height": ]}
parse: instruction: run
parse:   ingredient: {name: "\n#?     $start-tracing #? 1\n    1:address:channel <- new-channel 2:literal\n#?     $print [aaa channel address: ], 1:address:channel, [ \n#? ] #? 1\n    2:number/routine <- start-running read-move:recipe, 1:address:channel, screen:address\n    # 'read-move' is waiting for input\n    wait-for-routine 2:number\n#?     $print [bbb channel address: ], 1:address:channel, [ \n#? ] #? 1\n    3:number <- routine-state 2:number/id\n#?     $print [I: routine ], 2:number, [ state ], 3:number [ \n#? ] #? 1\n    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting\n    assert 4:boolean/waiting?, [\nF read-move-blocking: routine failed to pause after coming up (before any keys were pressed)]\n    # press 'a'\n#?     $print [ccc channel address: ], 1:address:channel, [ \n#? ] #? 1\n#?     $exit #? 1\n    1:address:channel <- write 1:address:channel, 97:literal  # 'a'\n    restart 2:number/routine\n    # 'read-move' still waiting for input\n    wait-for-routine 2:number\n    3:number <- routine-state 2:number/id\n#?     $print [II: routine ], 2:number, [ state ], 3:number [ \n#? ] #? 1\n    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting\n    assert 4:boolean/waiting?, [\nF read-move-blocking: routine failed to pause after rank 'a']\n    # press '2'\n    1:address:channel <- write 1:address:channel, 50:literal  # '2'\n    restart 2:number/routine\n    # 'read-move' still waiting for input\n    wait-for-routine 2:number\n    3:number <- routine-state 2:number/id\n#?     $print [III: routine ], 2:number, [ state ], 3:number [ \n#? ] #? 1\n    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting\n    assert 4:boolean/waiting?, [\nF read-move-blocking: routine failed to pause after file 'a2']\n    # press '-'\n    1:address:channel <- write 1:address:channel, 45:literal  # '-'\n    restart 2:number/routine\n    # 'read-move' still waiting for input\n    wait-for-routine 2:number\n    3:number <- routine-state 2:number\n#?     $print [IV: routine ], 2:number, [ state ], 3:number [ \n#? ] #? 1\n    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting\n    assert 4:boolean/waiting?/routine-state, [\nF read-move-blocking: routine failed to pause after hyphen 'a2-']\n    # press 'a'\n    1:address:channel <- write 1:address:channel, 97:literal  # 'a'\n    restart 2:number/routine\n    # 'read-move' still waiting for input\n    wait-for-routine 2:number\n    3:number <- routine-state 2:number\n#?     $print [V: routine ], 2:number, [ state ], 3:number [ \n#? ] #? 1\n    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting\n    assert 4:boolean/waiting?/routine-state, [\nF read-move-blocking: routine failed to pause after rank 'a2-a']\n    # press '4'\n    1:address:channel <- write 1:address:channel, 52:literal  # '4'\n    restart 2:number/routine\n    # 'read-move' still waiting for input\n    wait-for-routine 2:number\n    3:number <- routine-state 2:number\n#?     $print [VI: routine ], 2:number, [ state ], 3:number [ \n#? ] #? 1\n    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting\n    assert 4:boolean/waiting?, [\nF read-move-blocking: routine failed to pause after file 'a2-a4']\n    # press 'newline'\n    1:address:channel <- write 1:address:channel, 10:literal  # newline\n    restart 2:number/routine\n    # 'read-move' now completes\n    wait-for-routine 2:number\n    3:number <- routine-state 2:number\n#?     $print [VII: routine ], 2:number, [ state ], 3:number [ \n#? ] #? 1\n    4:boolean/completed? <- equal 3:number/routine-state, 1:literal/completed\n    assert 4:boolean/completed?, [\nF read-move-blocking: routine failed to terminate on newline]\n    trace [test], [reached end]\n  ", properties: [_: "literal-string"]}
parse: instruction: trace-should-contain
parse:   ingredient: {name: "\n    test: reached end\n  ", properties: [_: "literal-string"]}
after-brace: recipe read-move-blocking
after-brace: new-fake-screen ...
after-brace: run ...
after-brace: trace-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: read-move-blocking
 101 run: screen:address <- new-fake-screen 20:literal/width, 2:literal/height
 102 run: default-space:address:array:location <- new location:type, 30:literal/capacity
9999 mem: array size is 30
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1031
9999 mem: storing 1031 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1032
9999 mem: storing 20 in location 1032
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1031
9999 mem: storing 2 in location 1031
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1033
9999 mem: storing 0 in location 1033
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1034
9999 mem: storing 0 in location 1034
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1032
9999 mem: location 1032 is 20
9999 mem: location 1004 is 1031
9999 mem: location 1031 is 2
9999 mem: storing 40 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 40
9999 mem: array size is 40
9999 mem: new alloc: 1036
9999 mem: location 1008 is 1035
9999 mem: storing 1036 in location 1035
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1117
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1119
 103 run: break-unless x:address:screen, 
9999 mem: location 1119 is 1031
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1119 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1119 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1120
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1120 is 1036
9999 mem: storing 40 in location 1121
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1122
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 0
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 0
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 0
9999 mem: storing 1037 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1124 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1124 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 1
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 1
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 1
9999 mem: storing 1039 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1124 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1124 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 1
9999 mem: storing 2 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 2
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 2
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 2
9999 mem: storing 1041 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1124 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1124 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 2
9999 mem: storing 3 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 3
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 3
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 3
9999 mem: storing 1043 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1124 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1124 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 3
9999 mem: storing 4 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 4
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 4
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 4
9999 mem: storing 1045 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1124 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1124 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 4
9999 mem: storing 5 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 5
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 5
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 5
9999 mem: storing 1047 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1124 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1124 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 5
9999 mem: storing 6 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 6
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 6
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 6
9999 mem: storing 1049 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1124 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1124 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 6
9999 mem: storing 7 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 7
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 7
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 7
9999 mem: storing 1051 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1124 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1124 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 7
9999 mem: storing 8 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 8
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 8
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 8
9999 mem: storing 1053 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1124 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1124 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 8
9999 mem: storing 9 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 9
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 9
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 9
9999 mem: storing 1055 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1124 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1124 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 9
9999 mem: storing 10 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 10
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 10
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 10
9999 mem: storing 1057 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1124 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1124 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 10
9999 mem: storing 11 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 11
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 11
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 11
9999 mem: storing 1059 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1124 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1124 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 11
9999 mem: storing 12 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 12
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 12
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 12
9999 mem: storing 1061 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1124 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1124 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 12
9999 mem: storing 13 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 13
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 13
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 13
9999 mem: storing 1063 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1124 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1124 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 13
9999 mem: storing 14 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 14
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 14
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 14
9999 mem: storing 1065 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1124 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1124 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1066
9999 mem: storing 7 in location 1066
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 14
9999 mem: storing 15 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 15
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 15
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 15
9999 mem: storing 1067 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1124 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1067
9999 mem: storing 0 in location 1067
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1124 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1068
9999 mem: storing 7 in location 1068
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 15
9999 mem: storing 16 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 16
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 16
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 16
9999 mem: storing 1069 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1124 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1069
9999 mem: storing 0 in location 1069
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1124 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1070
9999 mem: storing 7 in location 1070
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 16
9999 mem: storing 17 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 17
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 17
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 17
9999 mem: storing 1071 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1124 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1071
9999 mem: storing 0 in location 1071
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1124 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1072
9999 mem: storing 7 in location 1072
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 17
9999 mem: storing 18 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 18
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 18
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 18
9999 mem: storing 1073 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1124 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1073
9999 mem: storing 0 in location 1073
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1124 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1074
9999 mem: storing 7 in location 1074
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 18
9999 mem: storing 19 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 19
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 19
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 19
9999 mem: storing 1075 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1124 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1075
9999 mem: storing 0 in location 1075
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1124 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1076
9999 mem: storing 7 in location 1076
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 19
9999 mem: storing 20 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 20
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 20
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 20
9999 mem: storing 1077 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1124 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1077
9999 mem: storing 0 in location 1077
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1124 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1078
9999 mem: storing 7 in location 1078
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 20
9999 mem: storing 21 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 21
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 21
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 21
9999 mem: storing 1079 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1124 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1079
9999 mem: storing 0 in location 1079
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1124 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1080
9999 mem: storing 7 in location 1080
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 21
9999 mem: storing 22 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 22
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 22
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 22
9999 mem: storing 1081 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1124 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1081
9999 mem: storing 0 in location 1081
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1124 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1082
9999 mem: storing 7 in location 1082
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 22
9999 mem: storing 23 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 23
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 23
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 23
9999 mem: storing 1083 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1124 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1083
9999 mem: storing 0 in location 1083
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1124 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1084
9999 mem: storing 7 in location 1084
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 23
9999 mem: storing 24 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 24
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 24
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 24
9999 mem: storing 1085 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1124 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1085
9999 mem: storing 0 in location 1085
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1124 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1086
9999 mem: storing 7 in location 1086
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 24
9999 mem: storing 25 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 25
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 25
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 25
9999 mem: storing 1087 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1124 is 1087
9999 run: address to copy is 1087
9999 mem: storing 1087 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1087
9999 mem: storing 0 in location 1087
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1124 is 1087
9999 run: address to copy is 1088
9999 mem: storing 1088 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1088
9999 mem: storing 7 in location 1088
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 25
9999 mem: storing 26 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 26
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 26
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 26
9999 mem: storing 1089 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1124 is 1089
9999 run: address to copy is 1089
9999 mem: storing 1089 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1089
9999 mem: storing 0 in location 1089
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1124 is 1089
9999 run: address to copy is 1090
9999 mem: storing 1090 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1090
9999 mem: storing 7 in location 1090
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 26
9999 mem: storing 27 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 27
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 27
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 27
9999 mem: storing 1091 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1124 is 1091
9999 run: address to copy is 1091
9999 mem: storing 1091 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1091
9999 mem: storing 0 in location 1091
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1124 is 1091
9999 run: address to copy is 1092
9999 mem: storing 1092 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1092
9999 mem: storing 7 in location 1092
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 27
9999 mem: storing 28 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 28
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 28
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 28
9999 mem: storing 1093 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1124 is 1093
9999 run: address to copy is 1093
9999 mem: storing 1093 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1093
9999 mem: storing 0 in location 1093
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1124 is 1093
9999 run: address to copy is 1094
9999 mem: storing 1094 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1094
9999 mem: storing 7 in location 1094
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 28
9999 mem: storing 29 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 29
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 29
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 29
9999 mem: storing 1095 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1124 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1095
9999 mem: storing 0 in location 1095
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1124 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1096
9999 mem: storing 7 in location 1096
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 29
9999 mem: storing 30 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 30
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 30
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 30
9999 mem: storing 1097 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1124 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1097
9999 mem: storing 0 in location 1097
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1124 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1098
9999 mem: storing 7 in location 1098
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 30
9999 mem: storing 31 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 31
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 31
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 31
9999 mem: storing 1099 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1124 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1099
9999 mem: storing 0 in location 1099
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1124 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1100
9999 mem: storing 7 in location 1100
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 31
9999 mem: storing 32 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 32
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 32
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 32
9999 mem: storing 1101 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1124 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1101
9999 mem: storing 0 in location 1101
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1124 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1102
9999 mem: storing 7 in location 1102
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 32
9999 mem: storing 33 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 33
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 33
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 33
9999 mem: storing 1103 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1124 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1103
9999 mem: storing 0 in location 1103
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1124 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1104
9999 mem: storing 7 in location 1104
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 33
9999 mem: storing 34 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 34
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 34
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 34
9999 mem: storing 1105 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1105
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1124 is 1105
9999 run: address to copy is 1105
9999 mem: storing 1105 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1105
9999 mem: storing 0 in location 1105
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1105
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1124 is 1105
9999 run: address to copy is 1106
9999 mem: storing 1106 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1106
9999 mem: storing 7 in location 1106
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 34
9999 mem: storing 35 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 35
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 35
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 35
9999 mem: storing 1107 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1107
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1124 is 1107
9999 run: address to copy is 1107
9999 mem: storing 1107 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1107
9999 mem: storing 0 in location 1107
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1107
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1124 is 1107
9999 run: address to copy is 1108
9999 mem: storing 1108 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1108
9999 mem: storing 7 in location 1108
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 35
9999 mem: storing 36 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 36
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 36
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 36
9999 mem: storing 1109 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1109
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1124 is 1109
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1109
9999 mem: storing 0 in location 1109
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1109
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1124 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1110
9999 mem: storing 7 in location 1110
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 36
9999 mem: storing 37 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 37
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 37
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 37
9999 mem: storing 1111 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1124 is 1111
9999 run: address to copy is 1111
9999 mem: storing 1111 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1111
9999 mem: storing 0 in location 1111
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1124 is 1111
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1112
9999 mem: storing 7 in location 1112
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 37
9999 mem: storing 38 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 38
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 38
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 38
9999 mem: storing 1113 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1124 is 1113
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1113
9999 mem: storing 0 in location 1113
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1124 is 1113
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1114
9999 mem: storing 7 in location 1114
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 38
9999 mem: storing 39 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 39
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 39
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 39
9999 mem: storing 1115 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1115
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1124 is 1115
9999 run: address to copy is 1115
9999 mem: storing 1115 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1115
9999 mem: storing 0 in location 1115
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1115
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1124 is 1115
9999 run: address to copy is 1116
9999 mem: storing 1116 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1116
9999 mem: storing 7 in location 1116
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 39
9999 mem: storing 40 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 40
9999 mem: location 1121 is 40
9999 mem: storing 1 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1119 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1119 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1127
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1127 is 1033
9999 mem: storing 0 in location 1033
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1119 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1119 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1127
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1127 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1119 is 1031
 102 run: reply result:address:screen
9999 mem: location 1002 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 101 run: run [
#?     $start-tracing #? 1
    1:address:channel <- new-channel 2:literal
#?     $print [aaa channel address: ], 1:address:channel, [ 
#? ] #? 1
    2:number/routine <- start-running read-move:recipe, 1:address:channel, screen:address
    # 'read-move' is waiting for input
    wait-for-routine 2:number
#?     $print [bbb channel address: ], 1:address:channel, [ 
#? ] #? 1
    3:number <- routine-state 2:number/id
#?     $print [I: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after coming up (before any keys were pressed)]
    # press 'a'
#?     $print [ccc channel address: ], 1:address:channel, [ 
#? ] #? 1
#?     $exit #? 1
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number/id
#?     $print [II: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after rank 'a']
    # press '2'
    1:address:channel <- write 1:address:channel, 50:literal  # '2'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number/id
#?     $print [III: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after file 'a2']
    # press '-'
    1:address:channel <- write 1:address:channel, 45:literal  # '-'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number
#?     $print [IV: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?/routine-state, [
F read-move-blocking: routine failed to pause after hyphen 'a2-']
    # press 'a'
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number
#?     $print [V: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?/routine-state, [
F read-move-blocking: routine failed to pause after rank 'a2-a']
    # press '4'
    1:address:channel <- write 1:address:channel, 52:literal  # '4'
    restart 2:number/routine
    # 'read-move' still waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number
#?     $print [VI: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after file 'a2-a4']
    # press 'newline'
    1:address:channel <- write 1:address:channel, 10:literal  # newline
    restart 2:number/routine
    # 'read-move' now completes
    wait-for-routine 2:number
    3:number <- routine-state 2:number
#?     $print [VII: routine ], 2:number, [ state ], 3:number [ 
#? ] #? 1
    4:boolean/completed? <- equal 3:number/routine-state, 1:literal/completed
    assert 4:boolean/completed?, [
F read-move-blocking: routine failed to terminate on newline]
    trace [test], [reached end]
  ]
parse: instruction: new-channel
parse:   ingredient: {name: "2", properties: ["2": "literal"]}
parse:   product: {name: "1", properties: ["1": "address":"channel"]}
parse: instruction: start-running
parse:   ingredient: {name: "read-move", properties: ["read-move": "recipe"]}
parse:   ingredient: {name: "1", properties: ["1": "address":"channel"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   product: {name: "2", properties: ["2": "number", "routine": ]}
parse: instruction: wait-for-routine
parse:   ingredient: {name: "2", properties: ["2": "number"]}
parse: instruction: routine-state
parse:   ingredient: {name: "2", properties: ["2": "number", "id": ]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: equal
parse:   ingredient: {name: "3", properties: ["3": "number", "routine-state": ]}
parse:   ingredient: {name: "2", properties: ["2": "literal", "waiting": ]}
parse:   product: {name: "4", properties: ["4": "boolean", "waiting?": ]}
parse: instruction: assert
parse:   ingredient: {name: "4", properties: ["4": "boolean", "waiting?": ]}
parse:   ingredient: {name: "\nF read-move-blocking: routine failed to pause after coming up (before any keys were pressed)", properties: [_: "literal-string"]}
parse: instruction: write
parse:   ingredient: {name: "1", properties: ["1": "address":"channel"]}
parse:   ingredient: {name: "97", properties: ["97": "literal"]}
parse:   product: {name: "1", properties: ["1": "address":"channel"]}
parse: instruction: restart
parse:   ingredient: {name: "2", properties: ["2": "number", "routine": ]}
parse: instruction: wait-for-routine
parse:   ingredient: {name: "2", properties: ["2": "number"]}
parse: instruction: routine-state
parse:   ingredient: {name: "2", properties: ["2": "number", "id": ]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: equal
parse:   ingredient: {name: "3", properties: ["3": "number", "routine-state": ]}
parse:   ingredient: {name: "2", properties: ["2": "literal", "waiting": ]}
parse:   product: {name: "4", properties: ["4": "boolean", "waiting?": ]}
parse: instruction: assert
parse:   ingredient: {name: "4", properties: ["4": "boolean", "waiting?": ]}
parse:   ingredient: {name: "\nF read-move-blocking: routine failed to pause after rank 'a'", properties: [_: "literal-string"]}
parse: instruction: write
parse:   ingredient: {name: "1", properties: ["1": "address":"channel"]}
parse:   ingredient: {name: "50", properties: ["50": "literal"]}
parse:   product: {name: "1", properties: ["1": "address":"channel"]}
parse: instruction: restart
parse:   ingredient: {name: "2", properties: ["2": "number", "routine": ]}
parse: instruction: wait-for-routine
parse:   ingredient: {name: "2", properties: ["2": "number"]}
parse: instruction: routine-state
parse:   ingredient: {name: "2", properties: ["2": "number", "id": ]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: equal
parse:   ingredient: {name: "3", properties: ["3": "number", "routine-state": ]}
parse:   ingredient: {name: "2", properties: ["2": "literal", "waiting": ]}
parse:   product: {name: "4", properties: ["4": "boolean", "waiting?": ]}
parse: instruction: assert
parse:   ingredient: {name: "4", properties: ["4": "boolean", "waiting?": ]}
parse:   ingredient: {name: "\nF read-move-blocking: routine failed to pause after file 'a2'", properties: [_: "literal-string"]}
parse: instruction: write
parse:   ingredient: {name: "1", properties: ["1": "address":"channel"]}
parse:   ingredient: {name: "45", properties: ["45": "literal"]}
parse:   product: {name: "1", properties: ["1": "address":"channel"]}
parse: instruction: restart
parse:   ingredient: {name: "2", properties: ["2": "number", "routine": ]}
parse: instruction: wait-for-routine
parse:   ingredient: {name: "2", properties: ["2": "number"]}
parse: instruction: routine-state
parse:   ingredient: {name: "2", properties: ["2": "number"]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: equal
parse:   ingredient: {name: "3", properties: ["3": "number", "routine-state": ]}
parse:   ingredient: {name: "2", properties: ["2": "literal", "waiting": ]}
parse:   product: {name: "4", properties: ["4": "boolean", "waiting?": ]}
parse: instruction: assert
parse:   ingredient: {name: "4", properties: ["4": "boolean", "waiting?": , "routine-state": ]}
parse:   ingredient: {name: "\nF read-move-blocking: routine failed to pause after hyphen 'a2-'", properties: [_: "literal-string"]}
parse: instruction: write
parse:   ingredient: {name: "1", properties: ["1": "address":"channel"]}
parse:   ingredient: {name: "97", properties: ["97": "literal"]}
parse:   product: {name: "1", properties: ["1": "address":"channel"]}
parse: instruction: restart
parse:   ingredient: {name: "2", properties: ["2": "number", "routine": ]}
parse: instruction: wait-for-routine
parse:   ingredient: {name: "2", properties: ["2": "number"]}
parse: instruction: routine-state
parse:   ingredient: {name: "2", properties: ["2": "number"]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: equal
parse:   ingredient: {name: "3", properties: ["3": "number", "routine-state": ]}
parse:   ingredient: {name: "2", properties: ["2": "literal", "waiting": ]}
parse:   product: {name: "4", properties: ["4": "boolean", "waiting?": ]}
parse: instruction: assert
parse:   ingredient: {name: "4", properties: ["4": "boolean", "waiting?": , "routine-state": ]}
parse:   ingredient: {name: "\nF read-move-blocking: routine failed to pause after rank 'a2-a'", properties: [_: "literal-string"]}
parse: instruction: write
parse:   ingredient: {name: "1", properties: ["1": "address":"channel"]}
parse:   ingredient: {name: "52", properties: ["52": "literal"]}
parse:   product: {name: "1", properties: ["1": "address":"channel"]}
parse: instruction: restart
parse:   ingredient: {name: "2", properties: ["2": "number", "routine": ]}
parse: instruction: wait-for-routine
parse:   ingredient: {name: "2", properties: ["2": "number"]}
parse: instruction: routine-state
parse:   ingredient: {name: "2", properties: ["2": "number"]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: equal
parse:   ingredient: {name: "3", properties: ["3": "number", "routine-state": ]}
parse:   ingredient: {name: "2", properties: ["2": "literal", "waiting": ]}
parse:   product: {name: "4", properties: ["4": "boolean", "waiting?": ]}
parse: instruction: assert
parse:   ingredient: {name: "4", properties: ["4": "boolean", "waiting?": ]}
parse:   ingredient: {name: "\nF read-move-blocking: routine failed to pause after file 'a2-a4'", properties: [_: "literal-string"]}
parse: instruction: write
parse:   ingredient: {name: "1", properties: ["1": "address":"channel"]}
parse:   ingredient: {name: "10", properties: ["10": "literal"]}
parse:   product: {name: "1", properties: ["1": "address":"channel"]}
parse: instruction: restart
parse:   ingredient: {name: "2", properties: ["2": "number", "routine": ]}
parse: instruction: wait-for-routine
parse:   ingredient: {name: "2", properties: ["2": "number"]}
parse: instruction: routine-state
parse:   ingredient: {name: "2", properties: ["2": "number"]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: equal
parse:   ingredient: {name: "3", properties: ["3": "number", "routine-state": ]}
parse:   ingredient: {name: "1", properties: ["1": "literal", "completed": ]}
parse:   product: {name: "4", properties: ["4": "boolean", "completed?": ]}
parse: instruction: assert
parse:   ingredient: {name: "4", properties: ["4": "boolean", "completed?": ]}
parse:   ingredient: {name: "\nF read-move-blocking: routine failed to terminate on newline", properties: [_: "literal-string"]}
parse: instruction: trace
parse:   ingredient: {name: "test", properties: [_: "literal-string"]}
parse:   ingredient: {name: "reached end", properties: [_: "literal-string"]}
after-brace: recipe run1001
after-brace: new-channel ...
after-brace: start-running ...
after-brace: wait-for-routine ...
after-brace: routine-state ...
after-brace: equal ...
after-brace: assert ...
after-brace: write ...
after-brace: restart ...
after-brace: wait-for-routine ...
after-brace: routine-state ...
after-brace: equal ...
after-brace: assert ...
after-brace: write ...
after-brace: restart ...
after-brace: wait-for-routine ...
after-brace: routine-state ...
after-brace: equal ...
after-brace: assert ...
after-brace: write ...
after-brace: restart ...
after-brace: wait-for-routine ...
after-brace: routine-state ...
after-brace: equal ...
after-brace: assert ...
after-brace: write ...
after-brace: restart ...
after-brace: wait-for-routine ...
after-brace: routine-state ...
after-brace: equal ...
after-brace: assert ...
after-brace: write ...
after-brace: restart ...
after-brace: wait-for-routine ...
after-brace: routine-state ...
after-brace: equal ...
after-brace: assert ...
after-brace: write ...
after-brace: restart ...
after-brace: wait-for-routine ...
after-brace: routine-state ...
after-brace: equal ...
after-brace: assert ...
after-brace: trace ...
 101 run: 1:address:channel <- new-channel 2:literal
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1148
 102 run: result:address:channel <- new channel:type
9999 mem: new alloc: 1179
9999 mem: storing 1179 in location 1150
 102 run: full:address:number <- get-address result:address:channel/deref, first-full:offset
9999 mem: location 1150 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1150 is 1179
9999 run: address to copy is 1179
9999 mem: storing 1179 in location 1151
 102 run: full:address:number/deref <- copy 0:literal
9999 mem: location 1151 is 1179
9999 mem: storing 0 in location 1179
 102 run: free:address:number <- get-address result:address:channel/deref, first-free:offset
9999 mem: location 1150 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1150 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 1152
 102 run: free:address:number/deref <- copy 0:literal
9999 mem: location 1152 is 1180
9999 mem: storing 0 in location 1180
 102 run: capacity:number <- next-ingredient 
9999 mem: storing 2 in location 1153
 102 run: capacity:number <- add capacity:number, 1:literal
9999 mem: location 1153 is 2
9999 mem: storing 3 in location 1153
 102 run: dest:address:address:array:location <- get-address result:address:channel/deref, data:offset
9999 mem: location 1150 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1150 is 1179
9999 run: address to copy is 1181
9999 mem: storing 1181 in location 1154
 102 run: dest:address:address:array:location/deref <- new location:type, capacity:number
9999 mem: location 1153 is 3
9999 mem: array size is 3
9999 mem: new alloc: 1182
9999 mem: location 1154 is 1181
9999 mem: storing 1182 in location 1181
 102 run: reply result:address:channel
9999 mem: location 1150 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1
 101 run: 2:number/routine <- start-running read-move:recipe, 1:address:channel, screen:address
9999 mem: location 1 is 1179
9999 mem: location 900 is 1031
9999 new: routine allocated memory from 101000 to 201000
9999 mem: storing 2 in location 2
 101 run: wait-for-routine 2:number
9999 mem: location 2 is 2
9999 run: waiting for routine 2
schedule: read-move
 101 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101000
 101 run: stdin:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101002
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 101003
 101 run: from-file:number, quit?:boolean, error?:boolean <- read-file stdin:address:channel, screen:address
9999 mem: location 101002 is 1179
9999 mem: location 101003 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101031
 102 run: stdin:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101033
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 101034
 102 run: c:character, stdin:address:channel <- read stdin:address:channel
9999 mem: location 101033 is 1179
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101062
 103 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101064
 103 run: empty:boolean <- channel-empty? chan:address:channel
9999 mem: location 101064 is 1179
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101093
 104 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101095
 104 run: full:number <- get chan:address:channel/deref, first-full:offset
9999 mem: location 101095 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 101095 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 0
9999 mem: storing 0 in location 101096
 104 run: free:number <- get chan:address:channel/deref, first-free:offset
9999 mem: location 101095 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 101095 is 1179
9999 run: address to copy is 1180
9999 run: its type is number
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 101097
 104 run: result:boolean <- equal full:number, free:number
9999 mem: location 101096 is 0
9999 mem: location 101097 is 0
9999 mem: storing 1 in location 101098
 104 run: reply result:boolean
9999 mem: location 101098 is 1
9999 run: result 0 is 1
9999 mem: storing 1 in location 101065
 103 run: break-unless empty:boolean, 
9999 mem: location 101065 is 1
9999 run: jump-unless fell through
 103 run: free-address:address:number <- get-address chan:address:channel/deref, first-free:offset
9999 mem: location 101064 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 101064 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 101066
 103 run: wait-for-location free-address:address:number/deref
9999 mem: location 101066 is 1180
9999 mem: location 1180 is 0
9999 mem: location 101066 is 1180
9999 run: waiting for location 1180 to change from 0
schedule: waking up routine 1
schedule: run1001/read-move-blocking
 103 run: 3:number <- routine-state 2:number/id
9999 mem: location 2 is 2
9999 mem: storing 2 in location 3
 103 run: 4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
9999 mem: location 3 is 2
9999 mem: storing 1 in location 4
 103 run: assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after coming up (before any keys were pressed)]
9999 mem: location 4 is 1
 103 run: 1:address:channel <- write 1:address:channel, 97:literal
9999 mem: location 1 is 1179
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1186
 104 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1188
 104 run: val:location <- next-ingredient 
9999 mem: storing 97 in location 1189
 104 run: full:boolean <- channel-full? chan:address:channel
9999 mem: location 1188 is 1179
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1217
 105 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1219
 105 run: tmp:number <- get chan:address:channel/deref, first-free:offset
9999 mem: location 1219 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 1219 is 1179
9999 run: address to copy is 1180
9999 run: its type is number
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1220
 105 run: tmp:number <- add tmp:number, 1:literal
9999 mem: location 1220 is 0
9999 mem: storing 1 in location 1220
 105 run: len:number <- channel-capacity chan:address:channel
9999 mem: location 1219 is 1179
 106 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1248
 106 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1250
 106 run: q:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 1250 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 1250 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 1251
 106 run: result:number <- length q:address:array:location/deref
9999 mem: location 1251 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 0
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1251 is 1182
9999 mem: storing 3 in location 1252
 106 run: reply result:number
9999 mem: location 1252 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1221
 105 run: at-end?:boolean <- greater-or-equal tmp:number, len:number
9999 mem: location 1220 is 1
9999 mem: location 1221 is 3
9999 mem: storing 0 in location 1222
 105 run: break-unless at-end?:boolean, 
9999 mem: location 1222 is 0
9999 run: jumping to instruction 9
 105 run: full:number <- get chan:address:channel/deref, first-full:offset
9999 mem: location 1219 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 1219 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 0
9999 mem: storing 0 in location 1223
 105 run: result:boolean <- equal full:number, tmp:number
9999 mem: location 1223 is 0
9999 mem: location 1220 is 1
9999 mem: storing 0 in location 1224
 105 run: reply result:boolean
9999 mem: location 1224 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1190
 104 run: break-unless full:boolean, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 8
 104 run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 1188 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 1188 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 1192
 104 run: free:address:number <- get-address chan:address:channel/deref, first-free:offset
9999 mem: location 1188 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 1188 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 1193
 104 run: dest:address:location <- index-address circular-buffer:address:array:location/deref, free:address:number/deref
9999 mem: location 1192 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 0
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1193 is 1180
9999 mem: location 1180 is 0
9999 mem: location 1192 is 1182
9999 mem: location 1193 is 1180
9999 mem: location 1180 is 0
9999 mem: storing 1183 in location 1194
 104 run: dest:address:location/deref <- copy val:location
9999 mem: location 1189 is 97
9999 mem: location 1194 is 1183
9999 mem: storing 97 in location 1183
 104 run: free:address:number/deref <- add free:address:number/deref, 1:literal
9999 mem: location 1193 is 1180
9999 mem: location 1180 is 0
9999 mem: location 1193 is 1180
9999 mem: storing 1 in location 1180
 104 run: len:number <- length circular-buffer:address:array:location/deref
9999 mem: location 1192 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1192 is 1182
9999 mem: storing 3 in location 1195
 104 run: at-end?:boolean <- greater-or-equal free:address:number/deref, len:number
9999 mem: location 1193 is 1180
9999 mem: location 1180 is 1
9999 mem: location 1195 is 3
9999 mem: storing 0 in location 1196
 104 run: break-unless at-end?:boolean, 
9999 mem: location 1196 is 0
9999 run: jumping to instruction 19
 104 run: reply chan:address:channel/same-as-ingredient:0
9999 mem: location 1188 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1
 103 run: restart 2:number/routine
9999 mem: location 2 is 2
 103 run: wait-for-routine 2:number
9999 mem: location 2 is 2
9999 run: waiting for routine 2
schedule: read/read-file/read-move
 103 run: full:address:number <- get-address chan:address:channel/deref, first-full:offset
9999 mem: location 101064 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 101064 is 1179
9999 run: address to copy is 1179
9999 mem: storing 1179 in location 101067
 103 run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 101064 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 101064 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 101068
 103 run: result:location <- index circular-buffer:address:array:location/deref, full:address:number/deref
9999 mem: location 101068 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 101067 is 1179
9999 mem: location 1179 is 0
9999 mem: location 101068 is 1182
9999 mem: location 101067 is 1179
9999 mem: location 1179 is 0
9999 run: address to copy is 1183
9999 run: its type is number
9999 mem: location 1183 is 97
9999 mem: storing 97 in location 101069
 103 run: full:address:number/deref <- add full:address:number/deref, 1:literal
9999 mem: location 101067 is 1179
9999 mem: location 1179 is 0
9999 mem: location 101067 is 1179
9999 mem: storing 1 in location 1179
 103 run: len:number <- length circular-buffer:address:array:location/deref
9999 mem: location 101068 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 101068 is 1182
9999 mem: storing 3 in location 101070
 103 run: at-end?:boolean <- greater-or-equal full:address:number/deref, len:number
9999 mem: location 101067 is 1179
9999 mem: location 1179 is 1
9999 mem: location 101070 is 3
9999 mem: storing 0 in location 101071
 103 run: break-unless at-end?:boolean, 
9999 mem: location 101071 is 0
9999 run: jumping to instruction 17
 103 run: reply result:location, chan:address:channel/same-as-ingredient:0
9999 mem: location 101069 is 97
9999 mem: location 101064 is 1179
9999 run: result 0 is 97
9999 run: result 1 is 1179
9999 mem: storing 97 in location 101035
9999 mem: storing 1179 in location 101033
 102 run: q-pressed?:boolean <- equal c:character, 81:literal
9999 mem: location 101035 is 97
9999 mem: storing 0 in location 101036
 102 run: break-unless q-pressed?:boolean, 
9999 mem: location 101036 is 0
9999 run: jumping to instruction 8
 102 run: q-pressed?:boolean <- equal c:character, 113:literal
9999 mem: location 101035 is 97
9999 mem: storing 0 in location 101036
 102 run: break-unless q-pressed?:boolean, 
9999 mem: location 101036 is 0
9999 run: jumping to instruction 13
 102 run: empty-fake-keyboard?:boolean <- equal c:character, 0:literal/eof
9999 mem: location 101035 is 97
9999 mem: storing 0 in location 101037
 102 run: break-unless empty-fake-keyboard?:boolean, 
9999 mem: location 101037 is 0
9999 run: jumping to instruction 18
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101035 is 97
9999 mem: storing 0 in location 101038
 102 run: break-unless newline?:boolean, 
9999 mem: location 101038 is 0
9999 run: jumping to instruction 25
 102 run: file:number <- subtract c:character, 97:literal
9999 mem: location 101035 is 97
9999 mem: storing 0 in location 101040
 102 run: above-min:boolean <- greater-or-equal file:number, 0:literal
9999 mem: location 101040 is 0
9999 mem: storing 1 in location 101041
 102 run: break-if above-min:boolean, 
9999 mem: location 101041 is 1
9999 run: jumping to instruction 35
 102 run: below-max:boolean <- lesser-than file:number, 8:literal
9999 mem: location 101040 is 0
9999 mem: storing 1 in location 101042
 102 run: break-if below-max:boolean, 
9999 mem: location 101042 is 1
9999 run: jumping to instruction 43
 102 run: reply file:number, 0:literal/quit, 0:literal/error
9999 mem: location 101040 is 0
9999 run: result 0 is 0
9999 run: result 1 is 0
9999 run: result 2 is 0
9999 mem: storing 0 in location 101004
9999 mem: storing 0 in location 101005
9999 mem: storing 0 in location 101006
 101 run: jump-unless quit?:boolean, 1:offset
9999 mem: location 101005 is 0
9999 run: jumping to instruction 6
 101 run: jump-unless error?:boolean, 1:offset
9999 mem: location 101006 is 0
9999 run: jumping to instruction 8
 101 run: result:address:move <- new move:type
9999 mem: new alloc: 101124
9999 mem: storing 101124 in location 101007
 101 run: x:address:number <- get-address result:address:move/deref, from-file:offset
9999 mem: location 101007 is 101124
9999 mem: location 101124 is 0
9999 mem: location 101125 is 0
9999 mem: location 101126 is 0
9999 mem: location 101127 is 0
9999 mem: location 101007 is 101124
9999 run: address to copy is 101124
9999 mem: storing 101124 in location 101008
 101 run: x:address:number/deref <- copy from-file:number
9999 mem: location 101004 is 0
9999 mem: location 101008 is 101124
9999 mem: storing 0 in location 101124
 101 run: x:address:number <- get-address result:address:move/deref, from-rank:offset
9999 mem: location 101007 is 101124
9999 mem: location 101124 is 0
9999 mem: location 101125 is 0
9999 mem: location 101126 is 0
9999 mem: location 101127 is 0
9999 mem: location 101007 is 101124
9999 run: address to copy is 101125
9999 mem: storing 101125 in location 101008
 101 run: x:address:number/deref, quit?:boolean, error?:boolean <- read-rank stdin:address:channel, screen:address
9999 mem: location 101002 is 1179
9999 mem: location 101003 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101128
 102 run: stdin:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101130
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 101131
 102 run: c:character, stdin:address:channel <- read stdin:address:channel
9999 mem: location 101130 is 1179
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101159
 103 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101161
 103 run: empty:boolean <- channel-empty? chan:address:channel
9999 mem: location 101161 is 1179
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101190
 104 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101192
 104 run: full:number <- get chan:address:channel/deref, first-full:offset
9999 mem: location 101192 is 1179
9999 mem: location 1179 is 1
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 101192 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 1
9999 mem: storing 1 in location 101193
 104 run: free:number <- get chan:address:channel/deref, first-free:offset
9999 mem: location 101192 is 1179
9999 mem: location 1179 is 1
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 101192 is 1179
9999 run: address to copy is 1180
9999 run: its type is number
9999 mem: location 1180 is 1
9999 mem: storing 1 in location 101194
 104 run: result:boolean <- equal full:number, free:number
9999 mem: location 101193 is 1
9999 mem: location 101194 is 1
9999 mem: storing 1 in location 101195
 104 run: reply result:boolean
9999 mem: location 101195 is 1
9999 run: result 0 is 1
9999 mem: storing 1 in location 101162
 103 run: break-unless empty:boolean, 
9999 mem: location 101162 is 1
9999 run: jump-unless fell through
 103 run: free-address:address:number <- get-address chan:address:channel/deref, first-free:offset
9999 mem: location 101161 is 1179
9999 mem: location 1179 is 1
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 101161 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 101163
 103 run: wait-for-location free-address:address:number/deref
9999 mem: location 101163 is 1180
9999 mem: location 1180 is 1
9999 mem: location 101163 is 1180
9999 run: waiting for location 1180 to change from 1
schedule: waking up routine 1
schedule: run1001/read-move-blocking
 103 run: 3:number <- routine-state 2:number/id
9999 mem: location 2 is 2
9999 mem: storing 2 in location 3
 103 run: 4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
9999 mem: location 3 is 2
9999 mem: storing 1 in location 4
 103 run: assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after rank 'a']
9999 mem: location 4 is 1
 103 run: 1:address:channel <- write 1:address:channel, 50:literal
9999 mem: location 1 is 1179
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1279
 104 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1281
 104 run: val:location <- next-ingredient 
9999 mem: storing 50 in location 1282
 104 run: full:boolean <- channel-full? chan:address:channel
9999 mem: location 1281 is 1179
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1310
 105 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1312
 105 run: tmp:number <- get chan:address:channel/deref, first-free:offset
9999 mem: location 1312 is 1179
9999 mem: location 1179 is 1
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 1312 is 1179
9999 run: address to copy is 1180
9999 run: its type is number
9999 mem: location 1180 is 1
9999 mem: storing 1 in location 1313
 105 run: tmp:number <- add tmp:number, 1:literal
9999 mem: location 1313 is 1
9999 mem: storing 2 in location 1313
 105 run: len:number <- channel-capacity chan:address:channel
9999 mem: location 1312 is 1179
 106 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1341
 106 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1343
 106 run: q:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 1343 is 1179
9999 mem: location 1179 is 1
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 1343 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 1344
 106 run: result:number <- length q:address:array:location/deref
9999 mem: location 1344 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1344 is 1182
9999 mem: storing 3 in location 1345
 106 run: reply result:number
9999 mem: location 1345 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1314
 105 run: at-end?:boolean <- greater-or-equal tmp:number, len:number
9999 mem: location 1313 is 2
9999 mem: location 1314 is 3
9999 mem: storing 0 in location 1315
 105 run: break-unless at-end?:boolean, 
9999 mem: location 1315 is 0
9999 run: jumping to instruction 9
 105 run: full:number <- get chan:address:channel/deref, first-full:offset
9999 mem: location 1312 is 1179
9999 mem: location 1179 is 1
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 1312 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 1
9999 mem: storing 1 in location 1316
 105 run: result:boolean <- equal full:number, tmp:number
9999 mem: location 1316 is 1
9999 mem: location 1313 is 2
9999 mem: storing 0 in location 1317
 105 run: reply result:boolean
9999 mem: location 1317 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1283
 104 run: break-unless full:boolean, 
9999 mem: location 1283 is 0
9999 run: jumping to instruction 8
 104 run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 1281 is 1179
9999 mem: location 1179 is 1
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 1281 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 1285
 104 run: free:address:number <- get-address chan:address:channel/deref, first-free:offset
9999 mem: location 1281 is 1179
9999 mem: location 1179 is 1
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 1281 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 1286
 104 run: dest:address:location <- index-address circular-buffer:address:array:location/deref, free:address:number/deref
9999 mem: location 1285 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1286 is 1180
9999 mem: location 1180 is 1
9999 mem: location 1285 is 1182
9999 mem: location 1286 is 1180
9999 mem: location 1180 is 1
9999 mem: storing 1184 in location 1287
 104 run: dest:address:location/deref <- copy val:location
9999 mem: location 1282 is 50
9999 mem: location 1287 is 1184
9999 mem: storing 50 in location 1184
 104 run: free:address:number/deref <- add free:address:number/deref, 1:literal
9999 mem: location 1286 is 1180
9999 mem: location 1180 is 1
9999 mem: location 1286 is 1180
9999 mem: storing 2 in location 1180
 104 run: len:number <- length circular-buffer:address:array:location/deref
9999 mem: location 1285 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 50
9999 mem: location 1185 is 0
9999 mem: location 1285 is 1182
9999 mem: storing 3 in location 1288
 104 run: at-end?:boolean <- greater-or-equal free:address:number/deref, len:number
9999 mem: location 1286 is 1180
9999 mem: location 1180 is 2
9999 mem: location 1288 is 3
9999 mem: storing 0 in location 1289
 104 run: break-unless at-end?:boolean, 
9999 mem: location 1289 is 0
9999 run: jumping to instruction 19
 104 run: reply chan:address:channel/same-as-ingredient:0
9999 mem: location 1281 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1
 103 run: restart 2:number/routine
9999 mem: location 2 is 2
 103 run: wait-for-routine 2:number
9999 mem: location 2 is 2
9999 run: waiting for routine 2
schedule: read/read-rank/read-move
 103 run: full:address:number <- get-address chan:address:channel/deref, first-full:offset
9999 mem: location 101161 is 1179
9999 mem: location 1179 is 1
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 101161 is 1179
9999 run: address to copy is 1179
9999 mem: storing 1179 in location 101164
 103 run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 101161 is 1179
9999 mem: location 1179 is 1
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 101161 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 101165
 103 run: result:location <- index circular-buffer:address:array:location/deref, full:address:number/deref
9999 mem: location 101165 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 50
9999 mem: location 1185 is 0
9999 mem: location 101164 is 1179
9999 mem: location 1179 is 1
9999 mem: location 101165 is 1182
9999 mem: location 101164 is 1179
9999 mem: location 1179 is 1
9999 run: address to copy is 1184
9999 run: its type is number
9999 mem: location 1184 is 50
9999 mem: storing 50 in location 101166
 103 run: full:address:number/deref <- add full:address:number/deref, 1:literal
9999 mem: location 101164 is 1179
9999 mem: location 1179 is 1
9999 mem: location 101164 is 1179
9999 mem: storing 2 in location 1179
 103 run: len:number <- length circular-buffer:address:array:location/deref
9999 mem: location 101165 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 50
9999 mem: location 1185 is 0
9999 mem: location 101165 is 1182
9999 mem: storing 3 in location 101167
 103 run: at-end?:boolean <- greater-or-equal full:address:number/deref, len:number
9999 mem: location 101164 is 1179
9999 mem: location 1179 is 2
9999 mem: location 101167 is 3
9999 mem: storing 0 in location 101168
 103 run: break-unless at-end?:boolean, 
9999 mem: location 101168 is 0
9999 run: jumping to instruction 17
 103 run: reply result:location, chan:address:channel/same-as-ingredient:0
9999 mem: location 101166 is 50
9999 mem: location 101161 is 1179
9999 run: result 0 is 50
9999 run: result 1 is 1179
9999 mem: storing 50 in location 101132
9999 mem: storing 1179 in location 101130
 102 run: q-pressed?:boolean <- equal c:character, 81:literal
9999 mem: location 101132 is 50
9999 mem: storing 0 in location 101133
 102 run: break-unless q-pressed?:boolean, 
9999 mem: location 101133 is 0
9999 run: jumping to instruction 8
 102 run: q-pressed?:boolean <- equal c:character, 113:literal
9999 mem: location 101132 is 50
9999 mem: storing 0 in location 101133
 102 run: break-unless q-pressed?:boolean, 
9999 mem: location 101133 is 0
9999 run: jumping to instruction 13
 102 run: newline?:boolean <- equal c:character, 10:literal
9999 mem: location 101132 is 50
9999 mem: storing 0 in location 101134
 102 run: break-unless newline?:boolean, 
9999 mem: location 101134 is 0
9999 run: jumping to instruction 20
 102 run: rank:number <- subtract c:character, 49:literal
9999 mem: location 101132 is 50
9999 mem: storing 1 in location 101136
 102 run: above-min:boolean <- greater-or-equal rank:number, 0:literal
9999 mem: location 101136 is 1
9999 mem: storing 1 in location 101137
 102 run: break-if above-min:boolean, 
9999 mem: location 101137 is 1
9999 run: jumping to instruction 29
 102 run: below-max:boolean <- lesser-or-equal rank:number, 7:literal
9999 mem: location 101136 is 1
9999 mem: storing 1 in location 101138
 102 run: break-if below-max:boolean, 
9999 mem: location 101138 is 1
9999 run: jumping to instruction 37
 102 run: reply rank:number, 0:literal/quit, 0:literal/error
9999 mem: location 101136 is 1
9999 run: result 0 is 1
9999 run: result 1 is 0
9999 run: result 2 is 0
9999 mem: location 101008 is 101125
9999 mem: storing 1 in location 101125
9999 mem: storing 0 in location 101005
9999 mem: storing 0 in location 101006
 101 run: jump-unless quit?:boolean, 1:offset
9999 mem: location 101005 is 0
9999 run: jumping to instruction 15
 101 run: jump-unless error?:boolean, 1:offset
9999 mem: location 101006 is 0
9999 run: jumping to instruction 17
 101 run: error?:boolean <- expect-from-channel stdin:address:channel, 45:literal/dash, screen:address
9999 mem: location 101002 is 1179
9999 mem: location 101003 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101221
 102 run: stdin:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101223
 102 run: expected:character <- next-ingredient 
9999 mem: storing 45 in location 101224
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 101225
 102 run: c:character, stdin:address:channel <- read stdin:address:channel
9999 mem: location 101223 is 1179
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101252
 103 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101254
 103 run: empty:boolean <- channel-empty? chan:address:channel
9999 mem: location 101254 is 1179
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101283
 104 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101285
 104 run: full:number <- get chan:address:channel/deref, first-full:offset
9999 mem: location 101285 is 1179
9999 mem: location 1179 is 2
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 101285 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 2
9999 mem: storing 2 in location 101286
 104 run: free:number <- get chan:address:channel/deref, first-free:offset
9999 mem: location 101285 is 1179
9999 mem: location 1179 is 2
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 101285 is 1179
9999 run: address to copy is 1180
9999 run: its type is number
9999 mem: location 1180 is 2
9999 mem: storing 2 in location 101287
 104 run: result:boolean <- equal full:number, free:number
9999 mem: location 101286 is 2
9999 mem: location 101287 is 2
9999 mem: storing 1 in location 101288
 104 run: reply result:boolean
9999 mem: location 101288 is 1
9999 run: result 0 is 1
9999 mem: storing 1 in location 101255
 103 run: break-unless empty:boolean, 
9999 mem: location 101255 is 1
9999 run: jump-unless fell through
 103 run: free-address:address:number <- get-address chan:address:channel/deref, first-free:offset
9999 mem: location 101254 is 1179
9999 mem: location 1179 is 2
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 101254 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 101256
 103 run: wait-for-location free-address:address:number/deref
9999 mem: location 101256 is 1180
9999 mem: location 1180 is 2
9999 mem: location 101256 is 1180
9999 run: waiting for location 1180 to change from 2
schedule: waking up routine 1
schedule: run1001/read-move-blocking
 103 run: 3:number <- routine-state 2:number/id
9999 mem: location 2 is 2
9999 mem: storing 2 in location 3
 103 run: 4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
9999 mem: location 3 is 2
9999 mem: storing 1 in location 4
 103 run: assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after file 'a2']
9999 mem: location 4 is 1
 103 run: 1:address:channel <- write 1:address:channel, 45:literal
9999 mem: location 1 is 1179
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1372
 104 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1374
 104 run: val:location <- next-ingredient 
9999 mem: storing 45 in location 1375
 104 run: full:boolean <- channel-full? chan:address:channel
9999 mem: location 1374 is 1179
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1403
 105 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1405
 105 run: tmp:number <- get chan:address:channel/deref, first-free:offset
9999 mem: location 1405 is 1179
9999 mem: location 1179 is 2
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 1405 is 1179
9999 run: address to copy is 1180
9999 run: its type is number
9999 mem: location 1180 is 2
9999 mem: storing 2 in location 1406
 105 run: tmp:number <- add tmp:number, 1:literal
9999 mem: location 1406 is 2
9999 mem: storing 3 in location 1406
 105 run: len:number <- channel-capacity chan:address:channel
9999 mem: location 1405 is 1179
 106 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1434
 106 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1436
 106 run: q:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 1436 is 1179
9999 mem: location 1179 is 2
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 1436 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 1437
 106 run: result:number <- length q:address:array:location/deref
9999 mem: location 1437 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 50
9999 mem: location 1185 is 0
9999 mem: location 1437 is 1182
9999 mem: storing 3 in location 1438
 106 run: reply result:number
9999 mem: location 1438 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1407
 105 run: at-end?:boolean <- greater-or-equal tmp:number, len:number
9999 mem: location 1406 is 3
9999 mem: location 1407 is 3
9999 mem: storing 1 in location 1408
 105 run: break-unless at-end?:boolean, 
9999 mem: location 1408 is 1
9999 run: jump-unless fell through
 105 run: tmp:number <- copy 0:literal
9999 mem: storing 0 in location 1406
 105 run: full:number <- get chan:address:channel/deref, first-full:offset
9999 mem: location 1405 is 1179
9999 mem: location 1179 is 2
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 1405 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 2
9999 mem: storing 2 in location 1409
 105 run: result:boolean <- equal full:number, tmp:number
9999 mem: location 1409 is 2
9999 mem: location 1406 is 0
9999 mem: storing 0 in location 1410
 105 run: reply result:boolean
9999 mem: location 1410 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1376
 104 run: break-unless full:boolean, 
9999 mem: location 1376 is 0
9999 run: jumping to instruction 8
 104 run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 1374 is 1179
9999 mem: location 1179 is 2
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 1374 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 1378
 104 run: free:address:number <- get-address chan:address:channel/deref, first-free:offset
9999 mem: location 1374 is 1179
9999 mem: location 1179 is 2
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 1374 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 1379
 104 run: dest:address:location <- index-address circular-buffer:address:array:location/deref, free:address:number/deref
9999 mem: location 1378 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 50
9999 mem: location 1185 is 0
9999 mem: location 1379 is 1180
9999 mem: location 1180 is 2
9999 mem: location 1378 is 1182
9999 mem: location 1379 is 1180
9999 mem: location 1180 is 2
9999 mem: storing 1185 in location 1380
 104 run: dest:address:location/deref <- copy val:location
9999 mem: location 1375 is 45
9999 mem: location 1380 is 1185
9999 mem: storing 45 in location 1185
 104 run: free:address:number/deref <- add free:address:number/deref, 1:literal
9999 mem: location 1379 is 1180
9999 mem: location 1180 is 2
9999 mem: location 1379 is 1180
9999 mem: storing 3 in location 1180
 104 run: len:number <- length circular-buffer:address:array:location/deref
9999 mem: location 1378 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 50
9999 mem: location 1185 is 45
9999 mem: location 1378 is 1182
9999 mem: storing 3 in location 1381
 104 run: at-end?:boolean <- greater-or-equal free:address:number/deref, len:number
9999 mem: location 1379 is 1180
9999 mem: location 1180 is 3
9999 mem: location 1381 is 3
9999 mem: storing 1 in location 1382
 104 run: break-unless at-end?:boolean, 
9999 mem: location 1382 is 1
9999 run: jump-unless fell through
 104 run: free:address:number/deref <- copy 0:literal
9999 mem: location 1379 is 1180
9999 mem: storing 0 in location 1180
 104 run: reply chan:address:channel/same-as-ingredient:0
9999 mem: location 1374 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1
 103 run: restart 2:number/routine
9999 mem: location 2 is 2
 103 run: wait-for-routine 2:number
9999 mem: location 2 is 2
9999 run: waiting for routine 2
schedule: read/expect-from-channel/read-move
 103 run: full:address:number <- get-address chan:address:channel/deref, first-full:offset
9999 mem: location 101254 is 1179
9999 mem: location 1179 is 2
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 101254 is 1179
9999 run: address to copy is 1179
9999 mem: storing 1179 in location 101257
 103 run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 101254 is 1179
9999 mem: location 1179 is 2
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 101254 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 101258
 103 run: result:location <- index circular-buffer:address:array:location/deref, full:address:number/deref
9999 mem: location 101258 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 50
9999 mem: location 1185 is 45
9999 mem: location 101257 is 1179
9999 mem: location 1179 is 2
9999 mem: location 101258 is 1182
9999 mem: location 101257 is 1179
9999 mem: location 1179 is 2
9999 run: address to copy is 1185
9999 run: its type is number
9999 mem: location 1185 is 45
9999 mem: storing 45 in location 101259
 103 run: full:address:number/deref <- add full:address:number/deref, 1:literal
9999 mem: location 101257 is 1179
9999 mem: location 1179 is 2
9999 mem: location 101257 is 1179
9999 mem: storing 3 in location 1179
 103 run: len:number <- length circular-buffer:address:array:location/deref
9999 mem: location 101258 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 50
9999 mem: location 1185 is 45
9999 mem: location 101258 is 1182
9999 mem: storing 3 in location 101260
 103 run: at-end?:boolean <- greater-or-equal full:address:number/deref, len:number
9999 mem: location 101257 is 1179
9999 mem: location 1179 is 3
9999 mem: location 101260 is 3
9999 mem: storing 1 in location 101261
 103 run: break-unless at-end?:boolean, 
9999 mem: location 101261 is 1
9999 run: jump-unless fell through
 103 run: full:address:number/deref <- copy 0:literal
9999 mem: location 101257 is 1179
9999 mem: storing 0 in location 1179
 103 run: reply result:location, chan:address:channel/same-as-ingredient:0
9999 mem: location 101259 is 45
9999 mem: location 101254 is 1179
9999 run: result 0 is 45
9999 run: result 1 is 1179
9999 mem: storing 45 in location 101226
9999 mem: storing 1179 in location 101223
 102 run: match?:boolean <- equal c:character, expected:character
9999 mem: location 101226 is 45
9999 mem: location 101224 is 45
9999 mem: storing 1 in location 101227
 102 run: break-if match?:boolean, 
9999 mem: location 101227 is 1
9999 run: jumping to instruction 10
 102 run: result:boolean <- not match?:boolean
9999 mem: location 101227 is 1
9999 mem: storing 0 in location 101229
 102 run: reply result:boolean
9999 mem: location 101229 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 101006
 101 run: jump-unless error?:boolean, 1:offset
9999 mem: location 101006 is 0
9999 run: jumping to instruction 20
 101 run: x:address:number <- get-address result:address:move/deref, to-file:offset
9999 mem: location 101007 is 101124
9999 mem: location 101124 is 0
9999 mem: location 101125 is 1
9999 mem: location 101126 is 0
9999 mem: location 101127 is 0
9999 mem: location 101007 is 101124
9999 run: address to copy is 101126
9999 mem: storing 101126 in location 101008
 101 run: x:address:number/deref, quit?:boolean, error?:boolean <- read-file stdin:address:channel, screen:address
9999 mem: location 101002 is 1179
9999 mem: location 101003 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101314
 102 run: stdin:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101316
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 101317
 102 run: c:character, stdin:address:channel <- read stdin:address:channel
9999 mem: location 101316 is 1179
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101345
 103 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101347
 103 run: empty:boolean <- channel-empty? chan:address:channel
9999 mem: location 101347 is 1179
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101376
 104 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101378
 104 run: full:number <- get chan:address:channel/deref, first-full:offset
9999 mem: location 101378 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 101378 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 0
9999 mem: storing 0 in location 101379
 104 run: free:number <- get chan:address:channel/deref, first-free:offset
9999 mem: location 101378 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 101378 is 1179
9999 run: address to copy is 1180
9999 run: its type is number
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 101380
 104 run: result:boolean <- equal full:number, free:number
9999 mem: location 101379 is 0
9999 mem: location 101380 is 0
9999 mem: storing 1 in location 101381
 104 run: reply result:boolean
9999 mem: location 101381 is 1
9999 run: result 0 is 1
9999 mem: storing 1 in location 101348
 103 run: break-unless empty:boolean, 
9999 mem: location 101348 is 1
9999 run: jump-unless fell through
 103 run: free-address:address:number <- get-address chan:address:channel/deref, first-free:offset
9999 mem: location 101347 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 101347 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 101349
 103 run: wait-for-location free-address:address:number/deref
9999 mem: location 101349 is 1180
9999 mem: location 1180 is 0
9999 mem: location 101349 is 1180
9999 run: waiting for location 1180 to change from 0
schedule: waking up routine 1
schedule: run1001/read-move-blocking
 103 run: 3:number <- routine-state 2:number
9999 mem: location 2 is 2
9999 mem: storing 2 in location 3
 103 run: 4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
9999 mem: location 3 is 2
9999 mem: storing 1 in location 4
 103 run: assert 4:boolean/waiting?/routine-state, [
F read-move-blocking: routine failed to pause after hyphen 'a2-']
9999 mem: location 4 is 1
 103 run: 1:address:channel <- write 1:address:channel, 97:literal
9999 mem: location 1 is 1179
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1465
 104 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1467
 104 run: val:location <- next-ingredient 
9999 mem: storing 97 in location 1468
 104 run: full:boolean <- channel-full? chan:address:channel
9999 mem: location 1467 is 1179
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1496
 105 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1498
 105 run: tmp:number <- get chan:address:channel/deref, first-free:offset
9999 mem: location 1498 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 1498 is 1179
9999 run: address to copy is 1180
9999 run: its type is number
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1499
 105 run: tmp:number <- add tmp:number, 1:literal
9999 mem: location 1499 is 0
9999 mem: storing 1 in location 1499
 105 run: len:number <- channel-capacity chan:address:channel
9999 mem: location 1498 is 1179
 106 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1527
 106 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1529
 106 run: q:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 1529 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 1529 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 1530
 106 run: result:number <- length q:address:array:location/deref
9999 mem: location 1530 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 50
9999 mem: location 1185 is 45
9999 mem: location 1530 is 1182
9999 mem: storing 3 in location 1531
 106 run: reply result:number
9999 mem: location 1531 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1500
 105 run: at-end?:boolean <- greater-or-equal tmp:number, len:number
9999 mem: location 1499 is 1
9999 mem: location 1500 is 3
9999 mem: storing 0 in location 1501
 105 run: break-unless at-end?:boolean, 
9999 mem: location 1501 is 0
9999 run: jumping to instruction 9
 105 run: full:number <- get chan:address:channel/deref, first-full:offset
9999 mem: location 1498 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 1498 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 0
9999 mem: storing 0 in location 1502
 105 run: result:boolean <- equal full:number, tmp:number
9999 mem: location 1502 is 0
9999 mem: location 1499 is 1
9999 mem: storing 0 in location 1503
 105 run: reply result:boolean
9999 mem: location 1503 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1469
 104 run: break-unless full:boolean, 
9999 mem: location 1469 is 0
9999 run: jumping to instruction 8
 104 run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 1467 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 1467 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 1471
 104 run: free:address:number <- get-address chan:address:channel/deref, first-free:offset
9999 mem: location 1467 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 1467 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 1472
 104 run: dest:address:location <- index-address circular-buffer:address:array:location/deref, free:address:number/deref
9999 mem: location 1471 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 50
9999 mem: location 1185 is 45
9999 mem: location 1472 is 1180
9999 mem: location 1180 is 0
9999 mem: location 1471 is 1182
9999 mem: location 1472 is 1180
9999 mem: location 1180 is 0
9999 mem: storing 1183 in location 1473
 104 run: dest:address:location/deref <- copy val:location
9999 mem: location 1468 is 97
9999 mem: location 1473 is 1183
9999 mem: storing 97 in location 1183
 104 run: free:address:number/deref <- add free:address:number/deref, 1:literal
9999 mem: location 1472 is 1180
9999 mem: location 1180 is 0
9999 mem: location 1472 is 1180
9999 mem: storing 1 in location 1180
 104 run: len:number <- length circular-buffer:address:array:location/deref
9999 mem: location 1471 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 50
9999 mem: location 1185 is 45
9999 mem: location 1471 is 1182
9999 mem: storing 3 in location 1474
 104 run: at-end?:boolean <- greater-or-equal free:address:number/deref, len:number
9999 mem: location 1472 is 1180
9999 mem: location 1180 is 1
9999 mem: location 1474 is 3
9999 mem: storing 0 in location 1475
 104 run: break-unless at-end?:boolean, 
9999 mem: location 1475 is 0
9999 run: jumping to instruction 19
 104 run: reply chan:address:channel/same-as-ingredient:0
9999 mem: location 1467 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1
 103 run: restart 2:number/routine
9999 mem: location 2 is 2
 103 run: wait-for-routine 2:number
9999 mem: location 2 is 2
9999 run: waiting for routine 2
schedule: read/read-file/read-move
 103 run: full:address:number <- get-address chan:address:channel/deref, first-full:offset
9999 mem: location 101347 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 101347 is 1179
9999 run: address to copy is 1179
9999 mem: storing 1179 in location 101350
 103 run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 101347 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 101347 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 101351
 103 run: result:location <- index circular-buffer:address:array:location/deref, full:address:number/deref
9999 mem: location 101351 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 50
9999 mem: location 1185 is 45
9999 mem: location 101350 is 1179
9999 mem: location 1179 is 0
9999 mem: location 101351 is 1182
9999 mem: location 101350 is 1179
9999 mem: location 1179 is 0
9999 run: address to copy is 1183
9999 run: its type is number
9999 mem: location 1183 is 97
9999 mem: storing 97 in location 101352
 103 run: full:address:number/deref <- add full:address:number/deref, 1:literal
9999 mem: location 101350 is 1179
9999 mem: location 1179 is 0
9999 mem: location 101350 is 1179
9999 mem: storing 1 in location 1179
 103 run: len:number <- length circular-buffer:address:array:location/deref
9999 mem: location 101351 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 50
9999 mem: location 1185 is 45
9999 mem: location 101351 is 1182
9999 mem: storing 3 in location 101353
 103 run: at-end?:boolean <- greater-or-equal full:address:number/deref, len:number
9999 mem: location 101350 is 1179
9999 mem: location 1179 is 1
9999 mem: location 101353 is 3
9999 mem: storing 0 in location 101354
 103 run: break-unless at-end?:boolean, 
9999 mem: location 101354 is 0
9999 run: jumping to instruction 17
 103 run: reply result:location, chan:address:channel/same-as-ingredient:0
9999 mem: location 101352 is 97
9999 mem: location 101347 is 1179
9999 run: result 0 is 97
9999 run: result 1 is 1179
9999 mem: storing 97 in location 101318
9999 mem: storing 1179 in location 101316
 102 run: q-pressed?:boolean <- equal c:character, 81:literal
9999 mem: location 101318 is 97
9999 mem: storing 0 in location 101319
 102 run: break-unless q-pressed?:boolean, 
9999 mem: location 101319 is 0
9999 run: jumping to instruction 8
 102 run: q-pressed?:boolean <- equal c:character, 113:literal
9999 mem: location 101318 is 97
9999 mem: storing 0 in location 101319
 102 run: break-unless q-pressed?:boolean, 
9999 mem: location 101319 is 0
9999 run: jumping to instruction 13
 102 run: empty-fake-keyboard?:boolean <- equal c:character, 0:literal/eof
9999 mem: location 101318 is 97
9999 mem: storing 0 in location 101320
 102 run: break-unless empty-fake-keyboard?:boolean, 
9999 mem: location 101320 is 0
9999 run: jumping to instruction 18
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101318 is 97
9999 mem: storing 0 in location 101321
 102 run: break-unless newline?:boolean, 
9999 mem: location 101321 is 0
9999 run: jumping to instruction 25
 102 run: file:number <- subtract c:character, 97:literal
9999 mem: location 101318 is 97
9999 mem: storing 0 in location 101323
 102 run: above-min:boolean <- greater-or-equal file:number, 0:literal
9999 mem: location 101323 is 0
9999 mem: storing 1 in location 101324
 102 run: break-if above-min:boolean, 
9999 mem: location 101324 is 1
9999 run: jumping to instruction 35
 102 run: below-max:boolean <- lesser-than file:number, 8:literal
9999 mem: location 101323 is 0
9999 mem: storing 1 in location 101325
 102 run: break-if below-max:boolean, 
9999 mem: location 101325 is 1
9999 run: jumping to instruction 43
 102 run: reply file:number, 0:literal/quit, 0:literal/error
9999 mem: location 101323 is 0
9999 run: result 0 is 0
9999 run: result 1 is 0
9999 run: result 2 is 0
9999 mem: location 101008 is 101126
9999 mem: storing 0 in location 101126
9999 mem: storing 0 in location 101005
9999 mem: storing 0 in location 101006
 101 run: jump-unless quit?:boolean, 1:offset
9999 mem: location 101005 is 0
9999 run: jumping to instruction 24
 101 run: jump-unless error?:boolean, 1:offset
9999 mem: location 101006 is 0
9999 run: jumping to instruction 26
 101 run: x:address:number <- get-address result:address:move/deref, to-rank:offset
9999 mem: location 101007 is 101124
9999 mem: location 101124 is 0
9999 mem: location 101125 is 1
9999 mem: location 101126 is 0
9999 mem: location 101127 is 0
9999 mem: location 101007 is 101124
9999 run: address to copy is 101127
9999 mem: storing 101127 in location 101008
 101 run: x:address:number/deref, quit?:boolean, error?:boolean <- read-rank stdin:address:channel, screen:address
9999 mem: location 101002 is 1179
9999 mem: location 101003 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101407
 102 run: stdin:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101409
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 101410
 102 run: c:character, stdin:address:channel <- read stdin:address:channel
9999 mem: location 101409 is 1179
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101438
 103 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101440
 103 run: empty:boolean <- channel-empty? chan:address:channel
9999 mem: location 101440 is 1179
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101469
 104 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101471
 104 run: full:number <- get chan:address:channel/deref, first-full:offset
9999 mem: location 101471 is 1179
9999 mem: location 1179 is 1
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 101471 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 1
9999 mem: storing 1 in location 101472
 104 run: free:number <- get chan:address:channel/deref, first-free:offset
9999 mem: location 101471 is 1179
9999 mem: location 1179 is 1
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 101471 is 1179
9999 run: address to copy is 1180
9999 run: its type is number
9999 mem: location 1180 is 1
9999 mem: storing 1 in location 101473
 104 run: result:boolean <- equal full:number, free:number
9999 mem: location 101472 is 1
9999 mem: location 101473 is 1
9999 mem: storing 1 in location 101474
 104 run: reply result:boolean
9999 mem: location 101474 is 1
9999 run: result 0 is 1
9999 mem: storing 1 in location 101441
 103 run: break-unless empty:boolean, 
9999 mem: location 101441 is 1
9999 run: jump-unless fell through
 103 run: free-address:address:number <- get-address chan:address:channel/deref, first-free:offset
9999 mem: location 101440 is 1179
9999 mem: location 1179 is 1
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 101440 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 101442
 103 run: wait-for-location free-address:address:number/deref
9999 mem: location 101442 is 1180
9999 mem: location 1180 is 1
9999 mem: location 101442 is 1180
9999 run: waiting for location 1180 to change from 1
schedule: waking up routine 1
schedule: run1001/read-move-blocking
 103 run: 3:number <- routine-state 2:number
9999 mem: location 2 is 2
9999 mem: storing 2 in location 3
 103 run: 4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
9999 mem: location 3 is 2
9999 mem: storing 1 in location 4
 103 run: assert 4:boolean/waiting?/routine-state, [
F read-move-blocking: routine failed to pause after rank 'a2-a']
9999 mem: location 4 is 1
 103 run: 1:address:channel <- write 1:address:channel, 52:literal
9999 mem: location 1 is 1179
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1558
 104 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1560
 104 run: val:location <- next-ingredient 
9999 mem: storing 52 in location 1561
 104 run: full:boolean <- channel-full? chan:address:channel
9999 mem: location 1560 is 1179
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1589
 105 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1591
 105 run: tmp:number <- get chan:address:channel/deref, first-free:offset
9999 mem: location 1591 is 1179
9999 mem: location 1179 is 1
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 1591 is 1179
9999 run: address to copy is 1180
9999 run: its type is number
9999 mem: location 1180 is 1
9999 mem: storing 1 in location 1592
 105 run: tmp:number <- add tmp:number, 1:literal
9999 mem: location 1592 is 1
9999 mem: storing 2 in location 1592
 105 run: len:number <- channel-capacity chan:address:channel
9999 mem: location 1591 is 1179
 106 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1620
 106 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1622
 106 run: q:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 1622 is 1179
9999 mem: location 1179 is 1
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 1622 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 1623
 106 run: result:number <- length q:address:array:location/deref
9999 mem: location 1623 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 50
9999 mem: location 1185 is 45
9999 mem: location 1623 is 1182
9999 mem: storing 3 in location 1624
 106 run: reply result:number
9999 mem: location 1624 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1593
 105 run: at-end?:boolean <- greater-or-equal tmp:number, len:number
9999 mem: location 1592 is 2
9999 mem: location 1593 is 3
9999 mem: storing 0 in location 1594
 105 run: break-unless at-end?:boolean, 
9999 mem: location 1594 is 0
9999 run: jumping to instruction 9
 105 run: full:number <- get chan:address:channel/deref, first-full:offset
9999 mem: location 1591 is 1179
9999 mem: location 1179 is 1
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 1591 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 1
9999 mem: storing 1 in location 1595
 105 run: result:boolean <- equal full:number, tmp:number
9999 mem: location 1595 is 1
9999 mem: location 1592 is 2
9999 mem: storing 0 in location 1596
 105 run: reply result:boolean
9999 mem: location 1596 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1562
 104 run: break-unless full:boolean, 
9999 mem: location 1562 is 0
9999 run: jumping to instruction 8
 104 run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 1560 is 1179
9999 mem: location 1179 is 1
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 1560 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 1564
 104 run: free:address:number <- get-address chan:address:channel/deref, first-free:offset
9999 mem: location 1560 is 1179
9999 mem: location 1179 is 1
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 1560 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 1565
 104 run: dest:address:location <- index-address circular-buffer:address:array:location/deref, free:address:number/deref
9999 mem: location 1564 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 50
9999 mem: location 1185 is 45
9999 mem: location 1565 is 1180
9999 mem: location 1180 is 1
9999 mem: location 1564 is 1182
9999 mem: location 1565 is 1180
9999 mem: location 1180 is 1
9999 mem: storing 1184 in location 1566
 104 run: dest:address:location/deref <- copy val:location
9999 mem: location 1561 is 52
9999 mem: location 1566 is 1184
9999 mem: storing 52 in location 1184
 104 run: free:address:number/deref <- add free:address:number/deref, 1:literal
9999 mem: location 1565 is 1180
9999 mem: location 1180 is 1
9999 mem: location 1565 is 1180
9999 mem: storing 2 in location 1180
 104 run: len:number <- length circular-buffer:address:array:location/deref
9999 mem: location 1564 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 52
9999 mem: location 1185 is 45
9999 mem: location 1564 is 1182
9999 mem: storing 3 in location 1567
 104 run: at-end?:boolean <- greater-or-equal free:address:number/deref, len:number
9999 mem: location 1565 is 1180
9999 mem: location 1180 is 2
9999 mem: location 1567 is 3
9999 mem: storing 0 in location 1568
 104 run: break-unless at-end?:boolean, 
9999 mem: location 1568 is 0
9999 run: jumping to instruction 19
 104 run: reply chan:address:channel/same-as-ingredient:0
9999 mem: location 1560 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1
 103 run: restart 2:number/routine
9999 mem: location 2 is 2
 103 run: wait-for-routine 2:number
9999 mem: location 2 is 2
9999 run: waiting for routine 2
schedule: read/read-rank/read-move
 103 run: full:address:number <- get-address chan:address:channel/deref, first-full:offset
9999 mem: location 101440 is 1179
9999 mem: location 1179 is 1
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 101440 is 1179
9999 run: address to copy is 1179
9999 mem: storing 1179 in location 101443
 103 run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 101440 is 1179
9999 mem: location 1179 is 1
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 101440 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 101444
 103 run: result:location <- index circular-buffer:address:array:location/deref, full:address:number/deref
9999 mem: location 101444 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 52
9999 mem: location 1185 is 45
9999 mem: location 101443 is 1179
9999 mem: location 1179 is 1
9999 mem: location 101444 is 1182
9999 mem: location 101443 is 1179
9999 mem: location 1179 is 1
9999 run: address to copy is 1184
9999 run: its type is number
9999 mem: location 1184 is 52
9999 mem: storing 52 in location 101445
 103 run: full:address:number/deref <- add full:address:number/deref, 1:literal
9999 mem: location 101443 is 1179
9999 mem: location 1179 is 1
9999 mem: location 101443 is 1179
9999 mem: storing 2 in location 1179
 103 run: len:number <- length circular-buffer:address:array:location/deref
9999 mem: location 101444 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 52
9999 mem: location 1185 is 45
9999 mem: location 101444 is 1182
9999 mem: storing 3 in location 101446
 103 run: at-end?:boolean <- greater-or-equal full:address:number/deref, len:number
9999 mem: location 101443 is 1179
9999 mem: location 1179 is 2
9999 mem: location 101446 is 3
9999 mem: storing 0 in location 101447
 103 run: break-unless at-end?:boolean, 
9999 mem: location 101447 is 0
9999 run: jumping to instruction 17
 103 run: reply result:location, chan:address:channel/same-as-ingredient:0
9999 mem: location 101445 is 52
9999 mem: location 101440 is 1179
9999 run: result 0 is 52
9999 run: result 1 is 1179
9999 mem: storing 52 in location 101411
9999 mem: storing 1179 in location 101409
 102 run: q-pressed?:boolean <- equal c:character, 81:literal
9999 mem: location 101411 is 52
9999 mem: storing 0 in location 101412
 102 run: break-unless q-pressed?:boolean, 
9999 mem: location 101412 is 0
9999 run: jumping to instruction 8
 102 run: q-pressed?:boolean <- equal c:character, 113:literal
9999 mem: location 101411 is 52
9999 mem: storing 0 in location 101412
 102 run: break-unless q-pressed?:boolean, 
9999 mem: location 101412 is 0
9999 run: jumping to instruction 13
 102 run: newline?:boolean <- equal c:character, 10:literal
9999 mem: location 101411 is 52
9999 mem: storing 0 in location 101413
 102 run: break-unless newline?:boolean, 
9999 mem: location 101413 is 0
9999 run: jumping to instruction 20
 102 run: rank:number <- subtract c:character, 49:literal
9999 mem: location 101411 is 52
9999 mem: storing 3 in location 101415
 102 run: above-min:boolean <- greater-or-equal rank:number, 0:literal
9999 mem: location 101415 is 3
9999 mem: storing 1 in location 101416
 102 run: break-if above-min:boolean, 
9999 mem: location 101416 is 1
9999 run: jumping to instruction 29
 102 run: below-max:boolean <- lesser-or-equal rank:number, 7:literal
9999 mem: location 101415 is 3
9999 mem: storing 1 in location 101417
 102 run: break-if below-max:boolean, 
9999 mem: location 101417 is 1
9999 run: jumping to instruction 37
 102 run: reply rank:number, 0:literal/quit, 0:literal/error
9999 mem: location 101415 is 3
9999 run: result 0 is 3
9999 run: result 1 is 0
9999 run: result 2 is 0
9999 mem: location 101008 is 101127
9999 mem: storing 3 in location 101127
9999 mem: storing 0 in location 101005
9999 mem: storing 0 in location 101006
 101 run: jump-unless quit?:boolean, 1:offset
9999 mem: location 101005 is 0
9999 run: jumping to instruction 30
 101 run: jump-unless error?:boolean, 1:offset
9999 mem: location 101006 is 0
9999 run: jumping to instruction 32
 101 run: error?:boolean <- expect-from-channel stdin:address:channel, 10:literal/newline, screen:address
9999 mem: location 101002 is 1179
9999 mem: location 101003 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101500
 102 run: stdin:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101502
 102 run: expected:character <- next-ingredient 
9999 mem: storing 10 in location 101503
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 101504
 102 run: c:character, stdin:address:channel <- read stdin:address:channel
9999 mem: location 101502 is 1179
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101531
 103 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101533
 103 run: empty:boolean <- channel-empty? chan:address:channel
9999 mem: location 101533 is 1179
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101562
 104 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101564
 104 run: full:number <- get chan:address:channel/deref, first-full:offset
9999 mem: location 101564 is 1179
9999 mem: location 1179 is 2
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 101564 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 2
9999 mem: storing 2 in location 101565
 104 run: free:number <- get chan:address:channel/deref, first-free:offset
9999 mem: location 101564 is 1179
9999 mem: location 1179 is 2
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 101564 is 1179
9999 run: address to copy is 1180
9999 run: its type is number
9999 mem: location 1180 is 2
9999 mem: storing 2 in location 101566
 104 run: result:boolean <- equal full:number, free:number
9999 mem: location 101565 is 2
9999 mem: location 101566 is 2
9999 mem: storing 1 in location 101567
 104 run: reply result:boolean
9999 mem: location 101567 is 1
9999 run: result 0 is 1
9999 mem: storing 1 in location 101534
 103 run: break-unless empty:boolean, 
9999 mem: location 101534 is 1
9999 run: jump-unless fell through
 103 run: free-address:address:number <- get-address chan:address:channel/deref, first-free:offset
9999 mem: location 101533 is 1179
9999 mem: location 1179 is 2
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 101533 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 101535
 103 run: wait-for-location free-address:address:number/deref
9999 mem: location 101535 is 1180
9999 mem: location 1180 is 2
9999 mem: location 101535 is 1180
9999 run: waiting for location 1180 to change from 2
schedule: waking up routine 1
schedule: run1001/read-move-blocking
 103 run: 3:number <- routine-state 2:number
9999 mem: location 2 is 2
9999 mem: storing 2 in location 3
 103 run: 4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
9999 mem: location 3 is 2
9999 mem: storing 1 in location 4
 103 run: assert 4:boolean/waiting?, [
F read-move-blocking: routine failed to pause after file 'a2-a4']
9999 mem: location 4 is 1
 103 run: 1:address:channel <- write 1:address:channel, 10:literal
9999 mem: location 1 is 1179
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1651
 104 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1653
 104 run: val:location <- next-ingredient 
9999 mem: storing 10 in location 1654
 104 run: full:boolean <- channel-full? chan:address:channel
9999 mem: location 1653 is 1179
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1682
 105 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1684
 105 run: tmp:number <- get chan:address:channel/deref, first-free:offset
9999 mem: location 1684 is 1179
9999 mem: location 1179 is 2
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 1684 is 1179
9999 run: address to copy is 1180
9999 run: its type is number
9999 mem: location 1180 is 2
9999 mem: storing 2 in location 1685
 105 run: tmp:number <- add tmp:number, 1:literal
9999 mem: location 1685 is 2
9999 mem: storing 3 in location 1685
 105 run: len:number <- channel-capacity chan:address:channel
9999 mem: location 1684 is 1179
 106 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1713
 106 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1715
 106 run: q:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 1715 is 1179
9999 mem: location 1179 is 2
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 1715 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 1716
 106 run: result:number <- length q:address:array:location/deref
9999 mem: location 1716 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 52
9999 mem: location 1185 is 45
9999 mem: location 1716 is 1182
9999 mem: storing 3 in location 1717
 106 run: reply result:number
9999 mem: location 1717 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1686
 105 run: at-end?:boolean <- greater-or-equal tmp:number, len:number
9999 mem: location 1685 is 3
9999 mem: location 1686 is 3
9999 mem: storing 1 in location 1687
 105 run: break-unless at-end?:boolean, 
9999 mem: location 1687 is 1
9999 run: jump-unless fell through
 105 run: tmp:number <- copy 0:literal
9999 mem: storing 0 in location 1685
 105 run: full:number <- get chan:address:channel/deref, first-full:offset
9999 mem: location 1684 is 1179
9999 mem: location 1179 is 2
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 1684 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 2
9999 mem: storing 2 in location 1688
 105 run: result:boolean <- equal full:number, tmp:number
9999 mem: location 1688 is 2
9999 mem: location 1685 is 0
9999 mem: storing 0 in location 1689
 105 run: reply result:boolean
9999 mem: location 1689 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1655
 104 run: break-unless full:boolean, 
9999 mem: location 1655 is 0
9999 run: jumping to instruction 8
 104 run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 1653 is 1179
9999 mem: location 1179 is 2
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 1653 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 1657
 104 run: free:address:number <- get-address chan:address:channel/deref, first-free:offset
9999 mem: location 1653 is 1179
9999 mem: location 1179 is 2
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 1653 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 1658
 104 run: dest:address:location <- index-address circular-buffer:address:array:location/deref, free:address:number/deref
9999 mem: location 1657 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 52
9999 mem: location 1185 is 45
9999 mem: location 1658 is 1180
9999 mem: location 1180 is 2
9999 mem: location 1657 is 1182
9999 mem: location 1658 is 1180
9999 mem: location 1180 is 2
9999 mem: storing 1185 in location 1659
 104 run: dest:address:location/deref <- copy val:location
9999 mem: location 1654 is 10
9999 mem: location 1659 is 1185
9999 mem: storing 10 in location 1185
 104 run: free:address:number/deref <- add free:address:number/deref, 1:literal
9999 mem: location 1658 is 1180
9999 mem: location 1180 is 2
9999 mem: location 1658 is 1180
9999 mem: storing 3 in location 1180
 104 run: len:number <- length circular-buffer:address:array:location/deref
9999 mem: location 1657 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 52
9999 mem: location 1185 is 10
9999 mem: location 1657 is 1182
9999 mem: storing 3 in location 1660
 104 run: at-end?:boolean <- greater-or-equal free:address:number/deref, len:number
9999 mem: location 1658 is 1180
9999 mem: location 1180 is 3
9999 mem: location 1660 is 3
9999 mem: storing 1 in location 1661
 104 run: break-unless at-end?:boolean, 
9999 mem: location 1661 is 1
9999 run: jump-unless fell through
 104 run: free:address:number/deref <- copy 0:literal
9999 mem: location 1658 is 1180
9999 mem: storing 0 in location 1180
 104 run: reply chan:address:channel/same-as-ingredient:0
9999 mem: location 1653 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1
 103 run: restart 2:number/routine
9999 mem: location 2 is 2
 103 run: wait-for-routine 2:number
9999 mem: location 2 is 2
9999 run: waiting for routine 2
schedule: read/expect-from-channel/read-move
 103 run: full:address:number <- get-address chan:address:channel/deref, first-full:offset
9999 mem: location 101533 is 1179
9999 mem: location 1179 is 2
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 101533 is 1179
9999 run: address to copy is 1179
9999 mem: storing 1179 in location 101536
 103 run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 101533 is 1179
9999 mem: location 1179 is 2
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 101533 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 101537
 103 run: result:location <- index circular-buffer:address:array:location/deref, full:address:number/deref
9999 mem: location 101537 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 52
9999 mem: location 1185 is 10
9999 mem: location 101536 is 1179
9999 mem: location 1179 is 2
9999 mem: location 101537 is 1182
9999 mem: location 101536 is 1179
9999 mem: location 1179 is 2
9999 run: address to copy is 1185
9999 run: its type is number
9999 mem: location 1185 is 10
9999 mem: storing 10 in location 101538
 103 run: full:address:number/deref <- add full:address:number/deref, 1:literal
9999 mem: location 101536 is 1179
9999 mem: location 1179 is 2
9999 mem: location 101536 is 1179
9999 mem: storing 3 in location 1179
 103 run: len:number <- length circular-buffer:address:array:location/deref
9999 mem: location 101537 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 52
9999 mem: location 1185 is 10
9999 mem: location 101537 is 1182
9999 mem: storing 3 in location 101539
 103 run: at-end?:boolean <- greater-or-equal full:address:number/deref, len:number
9999 mem: location 101536 is 1179
9999 mem: location 1179 is 3
9999 mem: location 101539 is 3
9999 mem: storing 1 in location 101540
 103 run: break-unless at-end?:boolean, 
9999 mem: location 101540 is 1
9999 run: jump-unless fell through
 103 run: full:address:number/deref <- copy 0:literal
9999 mem: location 101536 is 1179
9999 mem: storing 0 in location 1179
 103 run: reply result:location, chan:address:channel/same-as-ingredient:0
9999 mem: location 101538 is 10
9999 mem: location 101533 is 1179
9999 run: result 0 is 10
9999 run: result 1 is 1179
9999 mem: storing 10 in location 101505
9999 mem: storing 1179 in location 101502
 102 run: match?:boolean <- equal c:character, expected:character
9999 mem: location 101505 is 10
9999 mem: location 101503 is 10
9999 mem: storing 1 in location 101506
 102 run: break-if match?:boolean, 
9999 mem: location 101506 is 1
9999 run: jumping to instruction 10
 102 run: result:boolean <- not match?:boolean
9999 mem: location 101506 is 1
9999 mem: storing 0 in location 101508
 102 run: reply result:boolean
9999 mem: location 101508 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 101006
 101 run: jump-unless error?:boolean, 1:offset
9999 mem: location 101006 is 0
9999 run: jumping to instruction 35
 101 run: reply result:address:move, quit?:boolean, error?:boolean
9999 mem: location 101007 is 101124
9999 mem: location 101005 is 0
9999 mem: location 101006 is 0
schedule: waking up routine 1
schedule: run1001/read-move-blocking
 100 run: 3:number <- routine-state 2:number
9999 mem: location 2 is 2
9999 mem: storing 1 in location 3
 100 run: 4:boolean/completed? <- equal 3:number/routine-state, 1:literal/completed
9999 mem: location 3 is 1
9999 mem: storing 1 in location 4
 100 run: assert 4:boolean/completed?, [
F read-move-blocking: routine failed to terminate on newline]
9999 mem: location 4 is 1
 100 run: trace [test], [reached end]
   1 test: reached end
  99 run: trace-should-contain [
    test: reached end
  ]
