9991 load: --- defining main
9993 parse: instruction: add2
9993 parse:   ingredient: {"3": "literal"}
9993 parse:   ingredient: {"5": "literal"}
9993 parse:   product: {"1": "number", "raw": <>}
9992 load: after rewriting: 1:number/raw <- add2 3, 5
9991 load: --- defining add2
9999 parse: header ingredient: x:number
9999 parse: header ingredient: y:number
9999 parse: header product: z:number
9993 parse: instruction: local-scope
9992 load: after rewriting: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9993 parse: instruction: load-ingredients
9992 load: after rewriting: next-ingredient 
9993 parse: instruction: add
9993 parse:   ingredient: {"x": <>}
9993 parse:   ingredient: {"y": <>}
9993 parse:   product: {"z": "number"}
9992 load: after rewriting: z:number <- add x, y
9990 transform: === transform_all()
9991 transform: --- transform names for recipe main
9991 transform: --- transform names for recipe add2
9999 new: location -> location
9993 name: assign x 1
9993 name: assign y 2
9993 name: assign z 3
9991 transform: --- transform braces for recipe main
9991 transform: add2 ...
9991 transform: --- transform braces for recipe add2
9991 transform: local-scope ...
9991 transform: next-ingredient ...
9991 transform: next-ingredient ...
9991 transform: add ...
9991 transform: reply ...
9999 transform: checking reply instructions against header for add2
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: main
 102 run: 1:number/raw <- add2 3, 5
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
9999 mem: new alloc: 1000
 103 run: x:number <- next-ingredient 
9999 mem: storing 3 in location 1002
 103 run: y:number <- next-ingredient 
9999 mem: storing 5 in location 1003
 103 run: z:number <- add x, y
9999 mem: location 1002 is 3
9999 mem: location 1003 is 5
9999 mem: storing 8 in location 1004
 103 run: reply z:number
9999 mem: location 1004 is 8
9999 trace: reply: decrementing callstack depth from 2
9999 run: result 0 is 8
9999 mem: storing 8 in location 1
9999 trace: fall-through: exiting main; decrementing callstack depth from 1
