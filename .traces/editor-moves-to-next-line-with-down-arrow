 102 run: assume-console [
    press down-arrow
  ]
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"down-arrow": <>}
9992 load: after rewriting: press down-arrow
9999 mem: storing 'press' event starting at 1307
9999 mem: storing console in 1311
9999 mem: storing console data in 1313
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
    3:number <- get *2:address:shared:editor-data, cursor-row:offset
    4:number <- get *2:address:shared:editor-data, cursor-column:offset
  ]
9991 parse: --- defining run1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 parse: recipe run1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1001
9991 transform: --- deduce types for recipe run1001
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run1001
9991 transform: --- transform names for recipe run1001
9993 name: element cursor-row of type editor-data is at offset 6
9993 name: element cursor-column of type editor-data is at offset 7
9991 transform: --- resolve ambiguous calls for recipe run1001
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1001
9991 transform: --- transform braces for recipe run1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1001
9991 transform: --- type-check 'call' instructions inside recipe run1001
9991 transform: --- type-check calls inside recipe run1001
9991 transform: --- convert 'new' to 'allocate' for recipe run1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1311
9999 mem: location 2 is 1000
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1314
9999 mem: storing 14 in location 1315
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1317
9999 mem: incrementing refcount of 1012: 77 -> 78
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1311 in location 1318
9999 mem: incrementing refcount of 1311: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1319
9999 mem: incrementing refcount of 1000: 6 -> 7
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1319 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1163
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1319 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1320
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1319 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1163
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1319 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1321
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1317 is 1012
9999 mem: location 1320 is 1
9999 mem: location 1321 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1242
9999 mem: incrementing refcount of 1012: 78 -> 79
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1243
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1244
 105 run: jump-unless screen, 
9999 mem: location 1242 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1242 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1242 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1245
 105 run: *row <- copy new-row
9999 mem: location 1243 is 1
9999 mem: location 1245 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1242 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1242 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1246
 105 run: *column <- copy new-column
9999 mem: location 1244 is 0
9999 mem: location 1246 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1242 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 79 -> 78
9999 mem: storing 1012 in location 1317
9999 mem: incrementing refcount of 1012: 78 -> 79
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1318 is 1311
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1311 in location 1277
9999 mem: incrementing refcount of 1311: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1277 is 1311
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1277 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 0
9999 mem: location 1313 is 1305
9999 mem: location 1277 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1312
9999 mem: storing 1312 in location 1278
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1277 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 0
9999 mem: location 1313 is 1305
9999 mem: location 1277 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1313
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1313 is 1305
9999 mem: storing 1305 in location 1279
9999 mem: incrementing refcount of 1305: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1279 is 1305
9999 mem: skipping refcount at 1305
9999 mem: storing 1 in location 1280
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1278 is 1312
9999 mem: location 1312 is 0
9999 mem: location 1280 is 1
9999 mem: storing 0 in location 1281
 105 run: jump-unless done?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1279 is 1305
9999 mem: skipping refcount at 1305
9998 run: base address is 1306
9999 mem: location 1278 is 1312
9999 mem: location 1312 is 0
9998 run: address to copy is 1307
9998 run: its type is event
9999 mem: location 1307 is 1
9999 mem: location 1308 is 65516
9999 mem: location 1309 is 0
9999 mem: location 1310 is 0
9999 mem: storing 1 in location 1283
9999 mem: storing 65516 in location 1284
9999 mem: storing 0 in location 1285
9999 mem: storing 0 in location 1286
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1278 is 1312
9999 mem: location 1312 is 0
9999 mem: location 1278 is 1312
9999 mem: storing 1 in location 1312
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1283 is 1
9999 mem: location 1284 is 65516
9999 mem: location 1285 is 0
9999 mem: location 1286 is 0
9999 mem: location 1277 is 1311
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65516, 0, 0]
9998 run: result 1 is 1311
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1322
9999 mem: storing 65516 in location 1323
9999 mem: storing 0 in location 1324
9999 mem: storing 0 in location 1325
9999 mem: decrementing refcount of 1311: 2 -> 1
9999 mem: storing 1311 in location 1318
9999 mem: incrementing refcount of 1311: 1 -> 2
9999 mem: storing 1 in location 1326
9999 mem: storing 0 in location 1327
 104 run: jump-unless found?, 
9999 mem: location 1326 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1327 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1322 is 1
9999 mem: location 1323 is 65516
9999 mem: location 1324 is 0
9999 mem: location 1325 is 0
9999 mem: storing 0 in location 1328
 104 run: jump-unless t, 
9999 mem: location 1328 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1317 is 1012
9999 mem: location 1319 is 1000
9999 mem: location 1322 is 1
9999 mem: location 1323 is 65516
9999 mem: location 1324 is 0
9999 mem: location 1325 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1330
9999 mem: storing 85 in location 1331
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1333
9999 mem: incrementing refcount of 1012: 79 -> 80
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1334
9999 mem: incrementing refcount of 1000: 7 -> 8
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1335
9999 mem: storing 65516 in location 1336
9999 mem: storing 0 in location 1337
9999 mem: storing 0 in location 1338
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1339
 105 run: jump-if editor, 1:offset
9999 mem: location 1334 is 1000
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1333 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 80 -> 81
 106 run: jump-unless screen, 
9999 mem: location 1184 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1184 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1184 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1185
 106 run: reply width:number
9999 mem: location 1185 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1340
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1333 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 81 -> 82
 106 run: jump-unless screen, 
9999 mem: location 1184 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1184 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1184 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1185
 106 run: reply height:number
9999 mem: location 1185 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1341
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1163
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1342
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1163
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 9
9999 mem: storing 9 in location 1343
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1163
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1004
9999 mem: storing 1004 in location 1344
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1163
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1345
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1163
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9999 mem: storing 1008 in location 1346
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1345 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1347
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1346 is 1008
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1348
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1335 is 1
9999 mem: location 1336 is 65516
9999 mem: location 1337 is 0
9999 mem: location 1338 is 0
9999 mem: storing 0 in location 1349
 105 run: jump-unless c, 
9999 mem: location 1349 is 0
9998 run: jumping to instruction 438
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1335 is 1
9999 mem: location 1336 is 65516
9999 mem: location 1337 is 0
9999 mem: location 1338 is 0
9999 mem: storing 1336 in location 1403
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1403 is 1336
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1403 is 1336
9999 mem: location 1336 is 65516
9999 mem: storing 0 in location 1366
 105 run: jump-unless page-up?, 
9999 mem: location 1366 is 0
9998 run: jumping to instruction 482
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1403 is 1336
9999 mem: location 1336 is 65516
9999 mem: storing 0 in location 1382
 105 run: jump-unless page-down?, 
9999 mem: location 1382 is 0
9998 run: jumping to instruction 523
 105 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1403 is 1336
9999 mem: location 1336 is 65516
9999 mem: storing 0 in location 1389
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1389 is 0
9998 run: jumping to instruction 561
 105 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1403 is 1336
9999 mem: location 1336 is 65516
9999 mem: storing 0 in location 1390
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 599
 105 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1403 is 1336
9999 mem: location 1336 is 65516
9999 mem: storing 1 in location 1404
 105 run: jump-unless move-to-next-line?, 
9999 mem: location 1404 is 1
9998 run: jump-unless fell through
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1163
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1369
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1163
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1370
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1163
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1163
9999 mem: storing 1163 in location 1371
9999 mem: incrementing refcount of 1163: 11 -> 12
 105 run: editor, go-render? <- move-to-next-line editor, screen-height
9999 mem: location 1334 is 1000
9999 mem: location 1341 is 5
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: allocating size 25
9999 mem: new alloc: 1417
9999 mem: storing 23 in location 1418
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1420
9999 mem: incrementing refcount of 1000: 8 -> 9
 106 run: screen-height:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1421
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1420 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1163
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1420 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1422
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1420 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1163
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1420 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9999 mem: storing 1008 in location 1423
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1420 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1163
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1420 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1004
9999 mem: storing 1004 in location 1424
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1420 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1163
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1420 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1425
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1420 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1163
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1420 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 9
9999 mem: storing 9 in location 1426
 106 run: last-line:number <- subtract screen-height, 1
9999 mem: location 1421 is 5
9999 mem: storing 4 in location 1427
 106 run: already-at-bottom?:boolean <- greater-or-equal *cursor-row, last-line
9999 mem: location 1422 is 1007
9999 mem: location 1007 is 1
9999 mem: location 1427 is 4
9999 mem: storing 0 in location 1428
 106 run: jump-if already-at-bottom?, 
9999 mem: location 1428 is 0
9998 run: jump-if fell through
 106 run: max:number <- subtract right, left
9999 mem: location 1426 is 9
9999 mem: location 1425 is 0
9999 mem: storing 9 in location 1429
 106 run: next-line:address:shared:duplex-list:character <- before-start-of-next-line *before-cursor, max
9999 mem: location 1424 is 1004
9999 mem: location 1004 is 1163
9999 mem: location 1429 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: original:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1163 in location 1170
9999 mem: incrementing refcount of 1163: 12 -> 13
 107 run: max:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1171
 107 run: count:number <- copy 0
9999 mem: storing 0 in location 1172
 107 run: curr:address:shared:duplex-list:character <- copy original
9999 mem: location 1170 is 1163
9999 mem: storing 1163 in location 1173
9999 mem: incrementing refcount of 1163: 13 -> 14
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1173 is 1163
9999 mem: skipping refcount at 1163
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 167
9999 mem: location 1165 is 1177
9999 mem: location 1166 is 0
9999 mem: location 1173 is 1163
9999 mem: skipping refcount at 1163
9998 run: address to copy is 1164
9998 run: its type is character
9999 mem: location 1164 is 167
9999 mem: storing 167 in location 1174
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 167
9999 mem: storing 0 in location 1175
 107 run: jump-unless at-newline?, 
9999 mem: location 1175 is 0
9998 run: jumping to instruction 11
 107 run: jump-if curr, 1:offset
9999 mem: location 1173 is 1163
9998 run: jumping to instruction 15
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1172 is 0
9999 mem: location 1171 is 9
9999 mem: storing 0 in location 1176
 107 run: jump-if done?, 
9999 mem: location 1176 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1173 is 1163
9999 mem: skipping refcount at 1163
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 167
9999 mem: location 1165 is 1177
9999 mem: location 1166 is 0
9999 mem: location 1173 is 1163
9999 mem: skipping refcount at 1163
9998 run: address to copy is 1164
9998 run: its type is character
9999 mem: location 1164 is 167
9999 mem: storing 167 in location 1174
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 167
9999 mem: storing 0 in location 1175
 107 run: jump-if at-newline?, 
9999 mem: location 1175 is 0
9998 run: jump-if fell through
 107 run: curr <- next_2 curr
9999 mem: location 1173 is 1163
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1163 in location 1184
9999 mem: incrementing refcount of 1163: 14 -> 15
 108 run: jump-if in, 1:offset
9999 mem: location 1184 is 1163
9998 run: jumping to instruction 4
 108 run: result <- get *in, next:offset
9999 mem: location 1184 is 1163
9999 mem: skipping refcount at 1163
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 167
9999 mem: location 1165 is 1177
9999 mem: location 1166 is 0
9999 mem: location 1184 is 1163
9999 mem: skipping refcount at 1163
9999 type: type deduced to be character$
9998 run: address to copy is 1165
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1165 is 1177
9999 mem: storing 1177 in location 1185
9999 mem: incrementing refcount of 1177: 14 -> 15
 108 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1185 is 1177
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1177
9999 mem: decrementing refcount of 1163: 15 -> 14
9999 mem: storing 1177 in location 1173
9999 mem: incrementing refcount of 1177: 15 -> 16
 107 run: count <- add count, 1
9999 mem: location 1172 is 0
9999 mem: storing 1 in location 1172
 107 run: jump 
9998 run: jumping to instruction 13
 107 run: jump-if curr, 1:offset
9999 mem: location 1173 is 1177
9998 run: jumping to instruction 15
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1172 is 1
9999 mem: location 1171 is 9
9999 mem: storing 0 in location 1176
 107 run: jump-if done?, 
9999 mem: location 1176 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1173 is 1177
9999 mem: skipping refcount at 1177
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1178 is 97
9999 mem: location 1179 is 1186
9999 mem: location 1180 is 1163
9999 mem: location 1173 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy is 1178
9998 run: its type is character
9999 mem: location 1178 is 97
9999 mem: storing 97 in location 1174
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 97
9999 mem: storing 0 in location 1175
 107 run: jump-if at-newline?, 
9999 mem: location 1175 is 0
9998 run: jump-if fell through
 107 run: curr <- next_2 curr
9999 mem: location 1173 is 1177
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1177 in location 1184
9999 mem: incrementing refcount of 1177: 16 -> 17
 108 run: jump-if in, 1:offset
9999 mem: location 1184 is 1177
9998 run: jumping to instruction 4
 108 run: result <- get *in, next:offset
9999 mem: location 1184 is 1177
9999 mem: skipping refcount at 1177
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1178 is 97
9999 mem: location 1179 is 1186
9999 mem: location 1180 is 1163
9999 mem: location 1184 is 1177
9999 mem: skipping refcount at 1177
9999 type: type deduced to be character$
9998 run: address to copy is 1179
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1179 is 1186
9999 mem: storing 1186 in location 1185
9999 mem: incrementing refcount of 1186: 14 -> 15
 108 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1185 is 1186
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1186
9999 mem: decrementing refcount of 1177: 17 -> 16
9999 mem: storing 1186 in location 1173
9999 mem: incrementing refcount of 1186: 15 -> 16
 107 run: count <- add count, 1
9999 mem: location 1172 is 1
9999 mem: storing 2 in location 1172
 107 run: jump 
9998 run: jumping to instruction 13
 107 run: jump-if curr, 1:offset
9999 mem: location 1173 is 1186
9998 run: jumping to instruction 15
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1172 is 2
9999 mem: location 1171 is 9
9999 mem: storing 0 in location 1176
 107 run: jump-if done?, 
9999 mem: location 1176 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1173 is 1186
9999 mem: skipping refcount at 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 98
9999 mem: location 1188 is 1190
9999 mem: location 1189 is 1177
9999 mem: location 1173 is 1186
9999 mem: skipping refcount at 1186
9998 run: address to copy is 1187
9998 run: its type is character
9999 mem: location 1187 is 98
9999 mem: storing 98 in location 1174
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 98
9999 mem: storing 0 in location 1175
 107 run: jump-if at-newline?, 
9999 mem: location 1175 is 0
9998 run: jump-if fell through
 107 run: curr <- next_2 curr
9999 mem: location 1173 is 1186
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1186 in location 1184
9999 mem: incrementing refcount of 1186: 16 -> 17
 108 run: jump-if in, 1:offset
9999 mem: location 1184 is 1186
9998 run: jumping to instruction 4
 108 run: result <- get *in, next:offset
9999 mem: location 1184 is 1186
9999 mem: skipping refcount at 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 98
9999 mem: location 1188 is 1190
9999 mem: location 1189 is 1177
9999 mem: location 1184 is 1186
9999 mem: skipping refcount at 1186
9999 type: type deduced to be character$
9998 run: address to copy is 1188
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1188 is 1190
9999 mem: storing 1190 in location 1185
9999 mem: incrementing refcount of 1190: 14 -> 15
 108 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1185 is 1190
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1190
9999 mem: decrementing refcount of 1186: 17 -> 16
9999 mem: storing 1190 in location 1173
9999 mem: incrementing refcount of 1190: 15 -> 16
 107 run: count <- add count, 1
9999 mem: location 1172 is 2
9999 mem: storing 3 in location 1172
 107 run: jump 
9998 run: jumping to instruction 13
 107 run: jump-if curr, 1:offset
9999 mem: location 1173 is 1190
9998 run: jumping to instruction 15
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1172 is 3
9999 mem: location 1171 is 9
9999 mem: storing 0 in location 1176
 107 run: jump-if done?, 
9999 mem: location 1176 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1173 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 99
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1186
9999 mem: location 1173 is 1190
9999 mem: skipping refcount at 1190
9998 run: address to copy is 1191
9998 run: its type is character
9999 mem: location 1191 is 99
9999 mem: storing 99 in location 1174
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 99
9999 mem: storing 0 in location 1175
 107 run: jump-if at-newline?, 
9999 mem: location 1175 is 0
9998 run: jump-if fell through
 107 run: curr <- next_2 curr
9999 mem: location 1173 is 1190
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1184
9999 mem: incrementing refcount of 1190: 16 -> 17
 108 run: jump-if in, 1:offset
9999 mem: location 1184 is 1190
9998 run: jumping to instruction 4
 108 run: result <- get *in, next:offset
9999 mem: location 1184 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 99
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1186
9999 mem: location 1184 is 1190
9999 mem: skipping refcount at 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1192
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1192 is 1194
9999 mem: storing 1194 in location 1185
9999 mem: incrementing refcount of 1194: 14 -> 15
 108 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1185 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1190: 17 -> 16
9999 mem: storing 1194 in location 1173
9999 mem: incrementing refcount of 1194: 15 -> 16
 107 run: count <- add count, 1
9999 mem: location 1172 is 3
9999 mem: storing 4 in location 1172
 107 run: jump 
9998 run: jumping to instruction 13
 107 run: jump-if curr, 1:offset
9999 mem: location 1173 is 1194
9998 run: jumping to instruction 15
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1172 is 4
9999 mem: location 1171 is 9
9999 mem: storing 0 in location 1176
 107 run: jump-if done?, 
9999 mem: location 1176 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1173 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 10
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1190
9999 mem: location 1173 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1195
9998 run: its type is character
9999 mem: location 1195 is 10
9999 mem: storing 10 in location 1174
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 10
9999 mem: storing 1 in location 1175
 107 run: jump-if at-newline?, 
9999 mem: location 1175 is 1
9998 run: jumping to instruction 23
 107 run: jump-if curr, 1:offset
9999 mem: location 1173 is 1194
9998 run: jumping to instruction 26
 107 run: reply curr
9999 mem: location 1173 is 1194
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1194
9999 mem: storing 1194 in location 1430
9999 mem: incrementing refcount of 1194: 16 -> 17
 106 run: no-motion?:boolean <- equal next-line, *before-cursor
9999 mem: location 1430 is 1194
9999 mem: location 1424 is 1004
9999 mem: location 1004 is 1163
9999 mem: storing 0 in location 1431
 106 run: jump-unless no-motion?, 
9999 mem: location 1431 is 0
9998 run: jumping to instruction 21
 106 run: *cursor-row <- add *cursor-row, 1
9999 mem: location 1422 is 1007
9999 mem: location 1007 is 1
9999 mem: location 1422 is 1007
9999 mem: storing 2 in location 1007
 106 run: *before-cursor <- copy next-line
9999 mem: location 1430 is 1194
9999 mem: location 1424 is 1004
9999 mem: decrementing refcount of 1163: 14 -> 13
9999 mem: storing 1194 in location 1004
9999 mem: incrementing refcount of 1194: 17 -> 18
 106 run: target-column:number <- copy *cursor-column
9999 mem: location 1423 is 1008
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1434
 106 run: *cursor-column <- copy left
9999 mem: location 1425 is 0
9999 mem: location 1423 is 1008
9999 mem: storing 0 in location 1008
 106 run: done?:boolean <- greater-or-equal *cursor-column, target-column
9999 mem: location 1423 is 1008
9999 mem: location 1008 is 0
9999 mem: location 1434 is 0
9999 mem: storing 1 in location 1435
 106 run: jump-if done?, 
9999 mem: location 1435 is 1
9998 run: jumping to instruction 37
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1433
 106 run: reply editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1420 is 1000
9999 mem: location 1433 is 0
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1000: 9 -> 8
9999 mem: storing 1000 in location 1334
9999 mem: incrementing refcount of 1000: 8 -> 9
9999 mem: storing 0 in location 1339
 105 run: undo-coalesce-tag:number <- copy 4/down-arrow
9999 mem: storing 4 in location 1372
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1194
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 2
9999 mem: storing 2 in location 1373
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1194
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1374
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1194
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1163
9999 mem: storing 1163 in location 1375
9999 mem: incrementing refcount of 1163: 13 -> 14
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1372 is 4
9998 run: jump-unless fell through
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1194
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1353
 105 run: jump-unless *undo, 
9999 mem: location 1353 is 1010
9999 mem: location 1010 is 0
9998 run: jumping to instruction 629
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: storing 1120 in location 1352
9999 mem: incrementing refcount of 1120: 0 -> 1
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1369 is 1
9999 mem: location 1370 is 0
9999 mem: location 1371 is 1163
9999 mem: location 1373 is 2
9999 mem: location 1374 is 0
9999 mem: location 1375 is 1163
9999 mem: location 1372 is 4
9999 mem: location 1352 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1352 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 1 in location 1121
9999 mem: storing 1 in location 1122
9999 mem: storing 0 in location 1123
9999 mem: storing 1163 in location 1124
9999 mem: storing 2 in location 1125
9999 mem: storing 0 in location 1126
9999 mem: storing 1163 in location 1127
9999 mem: storing 4 in location 1128
 105 run: editor <- add-operation editor, op
9999 mem: location 1334 is 1000
9999 mem: location 1352 is 1120
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1442
9999 mem: storing 5 in location 1443
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1445
9999 mem: incrementing refcount of 1000: 9 -> 10
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1446
9999 mem: incrementing refcount of 1120: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1445 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1194
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1445 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1447
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1446 is 1120
9999 mem: location 1447 is 1010
9999 mem: location 1010 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1242
9999 mem: incrementing refcount of 1120: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1243
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1449
9999 mem: storing 1449 in location 1244
9999 mem: incrementing refcount of 1449: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1244 is 1449
9999 mem: skipping refcount at 1449
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1450 is 0
9999 mem: location 1451 is 0
9999 mem: location 1244 is 1449
9999 mem: skipping refcount at 1449
9998 run: address to copy is 1450
9999 mem: storing 1450 in location 1245
 107 run: *val <- copy x
9999 mem: location 1242 is 1120
9999 mem: location 1245 is 1450
9999 mem: storing 1120 in location 1450
9999 mem: incrementing refcount of 1120: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1244 is 1449
9999 mem: skipping refcount at 1449
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1450 is 1120
9999 mem: location 1451 is 0
9999 mem: location 1244 is 1449
9999 mem: skipping refcount at 1449
9999 type: type deduced to be address$
9998 run: address to copy is 1451
9999 mem: storing 1451 in location 1246
 107 run: *next <- copy in
9999 mem: location 1243 is 0
9999 mem: location 1246 is 1451
9999 mem: storing 0 in location 1451
 107 run: reply result
9999 mem: location 1244 is 1449
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1449
9999 mem: location 1447 is 1010
9999 mem: storing 1449 in location 1010
9999 mem: incrementing refcount of 1449: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1445 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1194
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1449
9999 mem: location 1011 is 0
9999 mem: location 1445 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1448
9990 schedule: add-operation/handle-keyboard-event/editor-event-loop/run1001/scenario-editor-moves-to-next-line-with-down-arrow
 106 run: *redo <- copy 0
9999 mem: location 1448 is 1011
9999 mem: storing 0 in location 1011
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1445 is 1000
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: decrementing refcount of 1000: 10 -> 9
9999 mem: storing 1000 in location 1334
9999 mem: incrementing refcount of 1000: 9 -> 10
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1333 is 1012
9999 mem: location 1334 is 1000
9999 mem: location 1339 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1000
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 82 -> 81
9999 mem: storing 1012 in location 1317
9999 mem: incrementing refcount of 1012: 81 -> 82
9999 mem: decrementing refcount of 1000: 10 -> 9
9999 mem: storing 1000 in location 1319
9999 mem: incrementing refcount of 1000: 9 -> 10
9999 mem: storing 0 in location 1329
 104 run: jump-unless go-render?, 
9999 mem: location 1329 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1319 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1194
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1449
9999 mem: location 1011 is 0
9999 mem: location 1319 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 2
9999 mem: storing 2 in location 1320
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1319 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1194
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1449
9999 mem: location 1011 is 0
9999 mem: location 1319 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1321
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1317 is 1012
9999 mem: location 1320 is 2
9999 mem: location 1321 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1242
9999 mem: incrementing refcount of 1012: 82 -> 83
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1243
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1244
 105 run: jump-unless screen, 
9999 mem: location 1242 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1242 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1242 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1245
 105 run: *row <- copy new-row
9999 mem: location 1243 is 2
9999 mem: location 1245 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1242 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1242 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1246
 105 run: *column <- copy new-column
9999 mem: location 1244 is 0
9999 mem: location 1246 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1242 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 83 -> 82
9999 mem: storing 1012 in location 1317
9999 mem: incrementing refcount of 1012: 82 -> 83
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1318 is 1311
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1311 in location 1277
9999 mem: incrementing refcount of 1311: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1277 is 1311
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1277 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 1
9999 mem: location 1313 is 1305
9999 mem: location 1277 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1312
9999 mem: storing 1312 in location 1278
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1277 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 1
9999 mem: location 1313 is 1305
9999 mem: location 1277 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1313
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1313 is 1305
9999 mem: storing 1305 in location 1279
9999 mem: incrementing refcount of 1305: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1279 is 1305
9999 mem: skipping refcount at 1305
9999 mem: storing 1 in location 1280
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1278 is 1312
9999 mem: location 1312 is 1
9999 mem: location 1280 is 1
9999 mem: storing 1 in location 1281
 105 run: jump-unless done?, 
9999 mem: location 1281 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1181 in location 1282
9999 mem: incrementing refcount of 1181: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1282 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1277 is 1311
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1311
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1322
9999 mem: storing 0 in location 1323
9999 mem: storing 0 in location 1324
9999 mem: storing 0 in location 1325
9999 mem: decrementing refcount of 1311: 3 -> 2
9999 mem: storing 1311 in location 1318
9999 mem: incrementing refcount of 1311: 2 -> 3
9999 mem: storing 1 in location 1326
9999 mem: storing 1 in location 1327
 104 run: jump-unless found?, 
9999 mem: location 1326 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1327 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1317 is 1012
9999 mem: location 1318 is 1311
9999 mem: location 1319 is 1000
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9999 mem: location 2 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1194
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1449
9999 mem: location 1011 is 0
9999 mem: location 2 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 2
9999 mem: storing 2 in location 3
 103 run: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 mem: location 2 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1194
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1449
9999 mem: location 1011 is 0
9999 mem: location 2 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain [
    3 <- 2
    4 <- 0
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label 0, [print-character]
 102 run: assume-console [
    type [0]
  ]
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"0": "literal-string"}
9992 load: after rewriting: type [0]
9999 mem: storing 'type' event starting at 1454
9999 mem: storing 'text' tag at 1454
9999 mem: storing character 48 at 1455
9999 mem: storing console in 1458
9999 mem: storing console data in 1460
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9991 parse: --- defining run1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 parse: recipe run1002 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1002
9991 transform: --- deduce types for recipe run1002
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run1002
9991 transform: --- transform names for recipe run1002
9991 transform: --- resolve ambiguous calls for recipe run1002
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1002
9991 transform: --- transform braces for recipe run1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1002
9991 transform: --- type-check 'call' instructions inside recipe run1002
9991 transform: --- type-check calls inside recipe run1002
9991 transform: --- convert 'new' to 'allocate' for recipe run1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1458
9999 mem: location 2 is 1000
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1317
9999 mem: incrementing refcount of 1012: 83 -> 84
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1458 in location 1318
9999 mem: incrementing refcount of 1458: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1319
9999 mem: incrementing refcount of 1000: 10 -> 11
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1319 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1194
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1449
9999 mem: location 1011 is 0
9999 mem: location 1319 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 2
9999 mem: storing 2 in location 1320
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1319 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1194
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1449
9999 mem: location 1011 is 0
9999 mem: location 1319 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1321
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1317 is 1012
9999 mem: location 1320 is 2
9999 mem: location 1321 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1242
9999 mem: incrementing refcount of 1012: 84 -> 85
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1243
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1244
 105 run: jump-unless screen, 
9999 mem: location 1242 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1242 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1242 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1245
 105 run: *row <- copy new-row
9999 mem: location 1243 is 2
9999 mem: location 1245 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1242 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1242 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1246
 105 run: *column <- copy new-column
9999 mem: location 1244 is 0
9999 mem: location 1246 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1242 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 85 -> 84
9999 mem: storing 1012 in location 1317
9999 mem: incrementing refcount of 1012: 84 -> 85
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1318 is 1458
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1458 in location 1277
9999 mem: incrementing refcount of 1458: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1277 is 1458
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1277 is 1458
9999 mem: skipping refcount at 1458
9999 mem: location 1459 is 0
9999 mem: location 1460 is 1452
9999 mem: location 1277 is 1458
9999 mem: skipping refcount at 1458
9998 run: address to copy is 1459
9999 mem: storing 1459 in location 1278
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1277 is 1458
9999 mem: skipping refcount at 1458
9999 mem: location 1459 is 0
9999 mem: location 1460 is 1452
9999 mem: location 1277 is 1458
9999 mem: skipping refcount at 1458
9998 run: address to copy is 1460
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1460 is 1452
9999 mem: storing 1452 in location 1279
9999 mem: incrementing refcount of 1452: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1279 is 1452
9999 mem: skipping refcount at 1452
9999 mem: storing 1 in location 1280
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1278 is 1459
9999 mem: location 1459 is 0
9999 mem: location 1280 is 1
9999 mem: storing 0 in location 1281
 105 run: jump-unless done?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1279 is 1452
9999 mem: skipping refcount at 1452
9998 run: base address is 1453
9999 mem: location 1278 is 1459
9999 mem: location 1459 is 0
9998 run: address to copy is 1454
9998 run: its type is event
9999 mem: location 1454 is 0
9999 mem: location 1455 is 48
9999 mem: location 1456 is 0
9999 mem: location 1457 is 0
9999 mem: storing 0 in location 1283
9999 mem: storing 48 in location 1284
9999 mem: storing 0 in location 1285
9999 mem: storing 0 in location 1286
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1278 is 1459
9999 mem: location 1459 is 0
9999 mem: location 1278 is 1459
9999 mem: storing 1 in location 1459
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1283 is 0
9999 mem: location 1284 is 48
9999 mem: location 1285 is 0
9999 mem: location 1286 is 0
9999 mem: location 1277 is 1458
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 48, 0, 0]
9998 run: result 1 is 1458
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1322
9999 mem: storing 48 in location 1323
9999 mem: storing 0 in location 1324
9999 mem: storing 0 in location 1325
9999 mem: decrementing refcount of 1458: 2 -> 1
9999 mem: storing 1458 in location 1318
9999 mem: incrementing refcount of 1458: 1 -> 2
9999 mem: storing 1 in location 1326
9999 mem: storing 0 in location 1327
 104 run: jump-unless found?, 
9999 mem: location 1326 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1327 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1322 is 0
9999 mem: location 1323 is 48
9999 mem: location 1324 is 0
9999 mem: location 1325 is 0
9999 mem: storing 0 in location 1328
 104 run: jump-unless t, 
9999 mem: location 1328 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1317 is 1012
9999 mem: location 1319 is 1000
9999 mem: location 1322 is 0
9999 mem: location 1323 is 48
9999 mem: location 1324 is 0
9999 mem: location 1325 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1333
9999 mem: incrementing refcount of 1012: 85 -> 86
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1334
9999 mem: incrementing refcount of 1000: 11 -> 12
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1335
9999 mem: storing 48 in location 1336
9999 mem: storing 0 in location 1337
9999 mem: storing 0 in location 1338
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1339
 105 run: jump-if editor, 1:offset
9999 mem: location 1334 is 1000
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1333 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1461
9999 mem: storing 3 in location 1462
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1464
9999 mem: incrementing refcount of 1012: 86 -> 87
 106 run: jump-unless screen, 
9999 mem: location 1464 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1464 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1464 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1465
 106 run: reply width:number
9999 mem: location 1465 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1340
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1333 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1464
9999 mem: incrementing refcount of 1012: 87 -> 88
 106 run: jump-unless screen, 
9999 mem: location 1464 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1464 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1464 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1465
 106 run: reply height:number
9999 mem: location 1465 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1341
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1194
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1449
9999 mem: location 1011 is 0
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1342
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1194
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1449
9999 mem: location 1011 is 0
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 9
9999 mem: storing 9 in location 1343
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1194
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1449
9999 mem: location 1011 is 0
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1004
9999 mem: storing 1004 in location 1344
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1194
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1449
9999 mem: location 1011 is 0
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1345
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1194
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1449
9999 mem: location 1011 is 0
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9999 mem: storing 1008 in location 1346
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1345 is 1007
9999 mem: location 1007 is 2
9999 mem: storing 2 in location 1347
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1346 is 1008
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1348
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1335 is 0
9999 mem: location 1336 is 48
9999 mem: location 1337 is 0
9999 mem: location 1338 is 0
9999 mem: storing 1336 in location 1349
 105 run: jump-unless c, 
9999 mem: location 1349 is 1336
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: storing 0 in location 1350
 105 run: jump-unless redo?, 
9999 mem: location 1350 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: storing 0 in location 1361
 105 run: jump-unless undo?, 
9999 mem: location 1361 is 0
9998 run: jumping to instruction 108
 105 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: storing 0 in location 1366
 105 run: jump-unless page-up?, 
9999 mem: location 1366 is 0
9998 run: jumping to instruction 149
 105 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: storing 0 in location 1382
 105 run: jump-unless page-down?, 
9999 mem: location 1382 is 0
9998 run: jumping to instruction 190
 105 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: storing 0 in location 1383
 105 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1383 is 0
9998 run: jumping to instruction 210
 105 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: storing 0 in location 1388
 105 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1388 is 0
9998 run: jumping to instruction 230
 105 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: storing 0 in location 1389
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1389 is 0
9998 run: jumping to instruction 268
 105 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: storing 0 in location 1390
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 306
 105 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: storing 0 in location 1391
 105 run: jump-unless delete-previous-character?, 
9999 mem: location 1391 is 0
9998 run: jumping to instruction 346
 105 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: storing 0 in location 1395
 105 run: jump-unless tab?, 
9999 mem: location 1395 is 0
9998 run: jumping to instruction 383
 105 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: storing 0 in location 1399
 105 run: jump-unless newline?, 
9999 mem: location 1399 is 0
9998 run: jumping to instruction 402
 105 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: storing 1 in location 1402
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1339
 105 run: jump-if regular-character?, 1:offset
9999 mem: location 1402 is 1
9998 run: jumping to instruction 407
 105 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1194
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1449
9999 mem: location 1011 is 0
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1163
9999 mem: storing 1163 in location 1384
9999 mem: incrementing refcount of 1163: 14 -> 15
 105 run: cursor-before:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1344 is 1004
9999 mem: location 1004 is 1194
9999 mem: storing 1194 in location 1396
9999 mem: incrementing refcount of 1194: 18 -> 19
 105 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1334 is 1000
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: location 1333 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1466
9999 mem: storing 31 in location 1467
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1469
9999 mem: incrementing refcount of 1000: 12 -> 13
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1470
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1471
9999 mem: incrementing refcount of 1012: 88 -> 89
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1469 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1194
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1449
9999 mem: location 1011 is 0
9999 mem: location 1469 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1004
9999 mem: storing 1004 in location 1472
 106 run: insert_2 c, *before-cursor
9999 mem: location 1470 is 48
9999 mem: location 1472 is 1004
9999 mem: location 1004 is 1194
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1157
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1158
9999 mem: incrementing refcount of 1194: 19 -> 20
 107 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1499
9999 mem: storing 1499 in location 1159
9999 mem: incrementing refcount of 1499: 0 -> 1
 107 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1159 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 0
9999 mem: location 1501 is 0
9999 mem: location 1502 is 0
9999 mem: location 1159 is 1499
9999 mem: skipping refcount at 1499
9998 run: address to copy is 1500
9999 mem: storing 1500 in location 1160
 107 run: *val <- copy x
9999 mem: location 1157 is 48
9999 mem: location 1160 is 1500
9999 mem: storing 48 in location 1500
 107 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1158 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 10
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1190
9999 mem: location 1158 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1196 is 1198
9999 mem: storing 1198 in location 1161
9999 mem: incrementing refcount of 1198: 14 -> 15
 107 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1158 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 10
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1190
9999 mem: location 1158 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9999 mem: storing 1196 in location 1162
 107 run: *y <- copy new-node
9999 mem: location 1159 is 1499
9999 mem: location 1162 is 1196
9999 mem: decrementing refcount of 1198: 15 -> 14
9999 mem: storing 1499 in location 1196
9999 mem: incrementing refcount of 1499: 1 -> 2
 107 run: y <- get-address *new-node, prev:offset
9999 mem: location 1159 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 48
9999 mem: location 1501 is 0
9999 mem: location 1502 is 0
9999 mem: location 1159 is 1499
9999 mem: skipping refcount at 1499
9999 type: type deduced to be character$
9998 run: address to copy is 1502
9999 mem: storing 1502 in location 1162
 107 run: *y <- copy in
9999 mem: location 1158 is 1194
9999 mem: location 1162 is 1502
9999 mem: storing 1194 in location 1502
9999 mem: incrementing refcount of 1194: 20 -> 21
 107 run: y <- get-address *new-node, next:offset
9999 mem: location 1159 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 48
9999 mem: location 1501 is 0
9999 mem: location 1502 is 1194
9999 mem: location 1159 is 1499
9999 mem: skipping refcount at 1499
9999 type: type deduced to be character$
9998 run: address to copy is 1501
9999 mem: storing 1501 in location 1162
 107 run: *y <- copy next-node
9999 mem: location 1161 is 1198
9999 mem: location 1162 is 1501
9999 mem: storing 1198 in location 1501
9999 mem: incrementing refcount of 1198: 14 -> 15
 107 run: jump-if next-node, 1:offset
9999 mem: location 1161 is 1198
9998 run: jumping to instruction 15
 107 run: y <- get-address *next-node, prev:offset
9999 mem: location 1161 is 1198
9999 mem: skipping refcount at 1198
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1199 is 100
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1194
9999 mem: location 1161 is 1198
9999 mem: skipping refcount at 1198
9999 type: type deduced to be character$
9998 run: address to copy is 1201
9999 mem: storing 1201 in location 1162
 107 run: *y <- copy new-node
9999 mem: location 1159 is 1499
9999 mem: location 1162 is 1201
9999 mem: decrementing refcount of 1194: 21 -> 20
9999 mem: storing 1499 in location 1201
9999 mem: incrementing refcount of 1499: 2 -> 3
 107 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1158 is 1194
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: *before-cursor <- next_2 *before-cursor
9999 mem: location 1472 is 1004
9999 mem: location 1004 is 1194
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1464
9999 mem: incrementing refcount of 1194: 20 -> 21
 107 run: jump-if in, 1:offset
9999 mem: location 1464 is 1194
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1464 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 10
9999 mem: location 1196 is 1499
9999 mem: location 1197 is 1190
9999 mem: location 1464 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1196 is 1499
9999 mem: storing 1499 in location 1465
9999 mem: incrementing refcount of 1499: 3 -> 4
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1465 is 1499
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1499
9999 mem: location 1472 is 1004
9999 mem: decrementing refcount of 1194: 21 -> 20
9999 mem: storing 1499 in location 1004
9999 mem: incrementing refcount of 1499: 4 -> 5
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1469 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1499
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1449
9999 mem: location 1011 is 0
9999 mem: location 1469 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1473
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1469 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1499
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1449
9999 mem: location 1011 is 0
9999 mem: location 1469 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9999 mem: storing 1008 in location 1474
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1469 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1499
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1449
9999 mem: location 1011 is 0
9999 mem: location 1469 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1475
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1469 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1499
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1449
9999 mem: location 1011 is 0
9999 mem: location 1469 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 9
9999 mem: storing 9 in location 1476
 106 run: save-row:number <- copy *cursor-row
9999 mem: location 1473 is 1007
9999 mem: location 1007 is 2
9999 mem: storing 2 in location 1477
 106 run: save-column:number <- copy *cursor-column
9999 mem: location 1474 is 1008
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1478
 106 run: screen-width:number <- screen-width screen
9999 mem: location 1471 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1464
9999 mem: incrementing refcount of 1012: 89 -> 90
 107 run: jump-unless screen, 
9999 mem: location 1464 is 1012
9998 run: jump-unless fell through
 107 run: width <- get *screen, num-columns:offset
9999 mem: location 1464 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1464 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1465
 107 run: reply width:number
9999 mem: location 1465 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1479
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1471 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1464
9999 mem: incrementing refcount of 1012: 90 -> 91
 107 run: jump-unless screen, 
9999 mem: location 1464 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1464 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1464 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1465
 107 run: reply height:number
9999 mem: location 1465 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1480
 106 run: wrap-column:number <- subtract right, 1
9999 mem: location 1476 is 9
9999 mem: storing 8 in location 1481
 106 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1474 is 1008
9999 mem: location 1008 is 0
9999 mem: location 1481 is 8
9999 mem: storing 0 in location 1482
 106 run: jump-unless at-wrap?, 
9999 mem: location 1482 is 0
9998 run: jumping to instruction 41
 106 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1474 is 1008
9999 mem: location 1008 is 0
9999 mem: location 1474 is 1008
9999 mem: storing 1 in location 1008
 106 run: next:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1472 is 1004
9999 mem: location 1004 is 1499
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1499 in location 1464
9999 mem: incrementing refcount of 1499: 5 -> 6
 107 run: jump-if in, 1:offset
9999 mem: location 1464 is 1499
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1464 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 48
9999 mem: location 1501 is 1198
9999 mem: location 1502 is 1194
9999 mem: location 1464 is 1499
9999 mem: skipping refcount at 1499
9999 type: type deduced to be character$
9998 run: address to copy is 1501
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1501 is 1198
9999 mem: storing 1198 in location 1465
9999 mem: incrementing refcount of 1198: 15 -> 16
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1465 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1198
9999 mem: storing 1198 in location 1489
9999 mem: incrementing refcount of 1198: 16 -> 17
 106 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1489 is 1198
9999 mem: storing 0 in location 1490
 106 run: jump-unless at-end?, 
9999 mem: location 1490 is 0
9998 run: jumping to instruction 56
 106 run: jump-unless next, 
9999 mem: location 1489 is 1198
9998 run: jump-unless fell through
 106 run: at-right?:boolean <- greater-or-equal *cursor-column, screen-width
9999 mem: location 1474 is 1008
9999 mem: location 1008 is 1
9999 mem: location 1479 is 10
9999 mem: storing 0 in location 1493
 106 run: jump-if at-right?, 
9999 mem: location 1493 is 0
9998 run: jump-if fell through
 106 run: curr:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1472 is 1004
9999 mem: location 1004 is 1499
9999 mem: storing 1499 in location 1495
9999 mem: incrementing refcount of 1499: 6 -> 7
 106 run: move-cursor screen, save-row, save-column
9999 mem: location 1471 is 1012
9999 mem: location 1477 is 2
9999 mem: location 1478 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1242
9999 mem: incrementing refcount of 1012: 91 -> 92
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1243
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1244
 107 run: jump-unless screen, 
9999 mem: location 1242 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1242 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1242 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1245
 107 run: *row <- copy new-row
9999 mem: location 1243 is 2
9999 mem: location 1245 is 1015
9999 mem: storing 2 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1242 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1242 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1246
 107 run: *column <- copy new-column
9999 mem: location 1244 is 0
9999 mem: location 1246 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1242 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column:number <- copy save-column
9999 mem: location 1478 is 0
9999 mem: storing 0 in location 1496
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1488
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1496 is 0
9999 mem: location 1476 is 9
9999 mem: storing 0 in location 1493
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1493 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1495 is 1499
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1495 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 48
9999 mem: location 1501 is 1198
9999 mem: location 1502 is 1194
9999 mem: location 1495 is 1499
9999 mem: skipping refcount at 1499
9998 run: address to copy is 1500
9998 run: its type is character
9999 mem: location 1500 is 48
9999 mem: storing 48 in location 1497
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1497 is 48
9999 mem: storing 0 in location 1498
 106 run: jump-if at-newline?, 
9999 mem: location 1498 is 0
9998 run: jump-if fell through
 106 run: print screen, currc
9999 mem: location 1471 is 1012
9999 mem: location 1497 is 48
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 92 -> 93
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1251
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1252
9999 mem: storing 0 in location 1253
 107 run: jump-if color-found?, 
9999 mem: location 1253 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1252
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1254
9999 mem: storing 0 in location 1255
 107 run: jump-if bg-color-found?, 
9999 mem: location 1255 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1254
 107 run: trace 90, [print-character], c
9999 mem: location 1251 is 48
  90 print-character: 48 
 107 run: jump-unless screen, 
9999 mem: location 1250 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1256
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1257
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1258
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1258 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1259
 107 run: jump-if legal?, 1:offset
9999 mem: location 1259 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1258 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1257 is 5
9999 mem: storing 1 in location 1259
 107 run: jump-if legal?, 1:offset
9999 mem: location 1259 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1260
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1260 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1259
 107 run: jump-if legal?, 1:offset
9999 mem: location 1259 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1260 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1256 is 10
9999 mem: storing 1 in location 1259
 107 run: jump-if legal?, 1:offset
9999 mem: location 1259 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1251 is 48
9999 mem: storing 0 in location 1261
 107 run: jump-unless newline?, 
9999 mem: location 1261 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1258 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1256 is 10
9999 mem: storing 20 in location 1264
 107 run: index <- add index, *column
9999 mem: location 1264 is 20
9999 mem: location 1260 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1264
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1265
9999 mem: incrementing refcount of 1018: 55 -> 56
 107 run: len:number <- length *buf
9999 mem: location 1265 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1266
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1251 is 48
9999 mem: storing 0 in location 1267
 107 run: jump-unless backspace?, 
9999 mem: location 1267 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1265 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1264 is 20
9999 mem: storing 1060 in location 1269
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1269 is 1060
9999 mem: location 1060 is 100
9999 mem: location 1061 is 7
9999 mem: location 1269 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1270
 107 run: *cursor-contents <- copy c
9999 mem: location 1251 is 48
9999 mem: location 1270 is 1060
9999 mem: storing 48 in location 1060
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1269 is 1060
9999 mem: location 1060 is 48
9999 mem: location 1061 is 7
9999 mem: location 1269 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1271
 107 run: *cursor-color <- copy color
9999 mem: location 1252 is 7
9999 mem: location 1271 is 1061
9999 mem: storing 7 in location 1061
 107 run: right:number <- subtract width, 1
9999 mem: location 1256 is 10
9999 mem: storing 9 in location 1272
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1260 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1273
 107 run: jump-if at-right?, 
9999 mem: location 1273 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1260 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1260 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1250 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1496 is 0
9999 mem: storing 1 in location 1496
 106 run: curr <- next_2 curr
9999 mem: location 1495 is 1499
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1499 in location 1464
9999 mem: incrementing refcount of 1499: 7 -> 8
 107 run: jump-if in, 1:offset
9999 mem: location 1464 is 1499
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1464 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 48
9999 mem: location 1501 is 1198
9999 mem: location 1502 is 1194
9999 mem: location 1464 is 1499
9999 mem: skipping refcount at 1499
9999 type: type deduced to be character$
9998 run: address to copy is 1501
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1501 is 1198
9999 mem: storing 1198 in location 1465
9999 mem: incrementing refcount of 1198: 17 -> 18
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1465 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1499: 8 -> 7
9999 mem: storing 1198 in location 1495
9999 mem: incrementing refcount of 1198: 18 -> 19
 106 run: jump 
9998 run: jumping to instruction 65
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1488
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1496 is 1
9999 mem: location 1476 is 9
9999 mem: storing 0 in location 1493
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1493 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1495 is 1198
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1495 is 1198
9999 mem: skipping refcount at 1198
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1199 is 100
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1499
9999 mem: location 1495 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1199
9998 run: its type is character
9999 mem: location 1199 is 100
9999 mem: storing 100 in location 1497
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1497 is 100
9999 mem: storing 0 in location 1498
 106 run: jump-if at-newline?, 
9999 mem: location 1498 is 0
9998 run: jump-if fell through
 106 run: print screen, currc
9999 mem: location 1471 is 1012
9999 mem: location 1497 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 93 -> 94
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1251
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1252
9999 mem: storing 0 in location 1253
 107 run: jump-if color-found?, 
9999 mem: location 1253 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1252
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1254
9999 mem: storing 0 in location 1255
 107 run: jump-if bg-color-found?, 
9999 mem: location 1255 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1254
 107 run: trace 90, [print-character], c
9999 mem: location 1251 is 100
  90 print-character: 100 
 107 run: jump-unless screen, 
9999 mem: location 1250 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1256
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1257
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1258
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1258 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1259
 107 run: jump-if legal?, 1:offset
9999 mem: location 1259 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1258 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1257 is 5
9999 mem: storing 1 in location 1259
 107 run: jump-if legal?, 1:offset
9999 mem: location 1259 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1260
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1260 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1259
 107 run: jump-if legal?, 1:offset
9999 mem: location 1259 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1260 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1256 is 10
9999 mem: storing 1 in location 1259
 107 run: jump-if legal?, 1:offset
9999 mem: location 1259 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1251 is 100
9999 mem: storing 0 in location 1261
 107 run: jump-unless newline?, 
9999 mem: location 1261 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1258 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1256 is 10
9999 mem: storing 20 in location 1264
 107 run: index <- add index, *column
9999 mem: location 1264 is 20
9999 mem: location 1260 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1264
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1265
9999 mem: incrementing refcount of 1018: 56 -> 57
 107 run: len:number <- length *buf
9999 mem: location 1265 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1266
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1251 is 100
9999 mem: storing 0 in location 1267
 107 run: jump-unless backspace?, 
9999 mem: location 1267 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1265 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1264 is 21
9999 mem: storing 1062 in location 1269
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1269 is 1062
9999 mem: location 1062 is 101
9999 mem: location 1063 is 7
9999 mem: location 1269 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1270
 107 run: *cursor-contents <- copy c
9999 mem: location 1251 is 100
9999 mem: location 1270 is 1062
9999 mem: storing 100 in location 1062
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1269 is 1062
9999 mem: location 1062 is 100
9999 mem: location 1063 is 7
9999 mem: location 1269 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1271
 107 run: *cursor-color <- copy color
9999 mem: location 1252 is 7
9999 mem: location 1271 is 1063
9999 mem: storing 7 in location 1063
 107 run: right:number <- subtract width, 1
9999 mem: location 1256 is 10
9999 mem: storing 9 in location 1272
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1260 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1273
 107 run: jump-if at-right?, 
9999 mem: location 1273 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1260 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1260 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1250 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1496 is 1
9999 mem: storing 2 in location 1496
 106 run: curr <- next_2 curr
9999 mem: location 1495 is 1198
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1464
9999 mem: incrementing refcount of 1198: 19 -> 20
 107 run: jump-if in, 1:offset
9999 mem: location 1464 is 1198
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1464 is 1198
9999 mem: skipping refcount at 1198
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1199 is 100
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1499
9999 mem: location 1464 is 1198
9999 mem: skipping refcount at 1198
9999 type: type deduced to be character$
9998 run: address to copy is 1200
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1200 is 1202
9999 mem: storing 1202 in location 1465
9999 mem: incrementing refcount of 1202: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1465 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1202
9999 mem: decrementing refcount of 1198: 20 -> 19
9999 mem: storing 1202 in location 1495
9999 mem: incrementing refcount of 1202: 15 -> 16
 106 run: jump 
9998 run: jumping to instruction 65
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1488
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1496 is 2
9999 mem: location 1476 is 9
9999 mem: storing 0 in location 1493
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1493 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1495 is 1202
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1495 is 1202
9999 mem: skipping refcount at 1202
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1203 is 101
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1495 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1203
9998 run: its type is character
9999 mem: location 1203 is 101
9999 mem: storing 101 in location 1497
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1497 is 101
9999 mem: storing 0 in location 1498
 106 run: jump-if at-newline?, 
9999 mem: location 1498 is 0
9998 run: jump-if fell through
 106 run: print screen, currc
9999 mem: location 1471 is 1012
9999 mem: location 1497 is 101
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 94 -> 95
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1251
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1252
9999 mem: storing 0 in location 1253
 107 run: jump-if color-found?, 
9999 mem: location 1253 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1252
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1254
9999 mem: storing 0 in location 1255
 107 run: jump-if bg-color-found?, 
9999 mem: location 1255 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1254
 107 run: trace 90, [print-character], c
9999 mem: location 1251 is 101
  90 print-character: 101 
 107 run: jump-unless screen, 
9999 mem: location 1250 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1256
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1257
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1258
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1258 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1259
 107 run: jump-if legal?, 1:offset
9999 mem: location 1259 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1258 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1257 is 5
9999 mem: storing 1 in location 1259
 107 run: jump-if legal?, 1:offset
9999 mem: location 1259 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1260
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1260 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1259
 107 run: jump-if legal?, 1:offset
9999 mem: location 1259 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1260 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1256 is 10
9999 mem: storing 1 in location 1259
 107 run: jump-if legal?, 1:offset
9999 mem: location 1259 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1251 is 101
9999 mem: storing 0 in location 1261
 107 run: jump-unless newline?, 
9999 mem: location 1261 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1258 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1256 is 10
9999 mem: storing 20 in location 1264
 107 run: index <- add index, *column
9999 mem: location 1264 is 20
9999 mem: location 1260 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1264
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1265
9999 mem: incrementing refcount of 1018: 57 -> 58
 107 run: len:number <- length *buf
9999 mem: location 1265 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1266
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1251 is 101
9999 mem: storing 0 in location 1267
 107 run: jump-unless backspace?, 
9999 mem: location 1267 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1265 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1264 is 22
9999 mem: storing 1064 in location 1269
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1269 is 1064
9999 mem: location 1064 is 102
9999 mem: location 1065 is 7
9999 mem: location 1269 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1270
 107 run: *cursor-contents <- copy c
9999 mem: location 1251 is 101
9999 mem: location 1270 is 1064
9999 mem: storing 101 in location 1064
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1269 is 1064
9999 mem: location 1064 is 101
9999 mem: location 1065 is 7
9999 mem: location 1269 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1271
 107 run: *cursor-color <- copy color
9999 mem: location 1252 is 7
9999 mem: location 1271 is 1065
9999 mem: storing 7 in location 1065
 107 run: right:number <- subtract width, 1
9999 mem: location 1256 is 10
9999 mem: storing 9 in location 1272
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1260 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1273
 107 run: jump-if at-right?, 
9999 mem: location 1273 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1260 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1260 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1250 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1496 is 2
9999 mem: storing 3 in location 1496
 106 run: curr <- next_2 curr
9999 mem: location 1495 is 1202
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1464
9999 mem: incrementing refcount of 1202: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1464 is 1202
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1464 is 1202
9999 mem: skipping refcount at 1202
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1203 is 101
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1464 is 1202
9999 mem: skipping refcount at 1202
9999 type: type deduced to be character$
9998 run: address to copy is 1204
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1465
9999 mem: incrementing refcount of 1206: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1465 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1206
9999 mem: decrementing refcount of 1202: 17 -> 16
9999 mem: storing 1206 in location 1495
9999 mem: incrementing refcount of 1206: 13 -> 14
 106 run: jump 
9998 run: jumping to instruction 65
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1488
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1496 is 3
9999 mem: location 1476 is 9
9999 mem: storing 0 in location 1493
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1493 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1495 is 1206
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1495 is 1206
9999 mem: skipping refcount at 1206
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1207 is 102
9999 mem: location 1208 is 0
9999 mem: location 1209 is 1202
9999 mem: location 1495 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1207
9998 run: its type is character
9999 mem: location 1207 is 102
9999 mem: storing 102 in location 1497
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1497 is 102
9999 mem: storing 0 in location 1498
 106 run: jump-if at-newline?, 
9999 mem: location 1498 is 0
9998 run: jump-if fell through
 106 run: print screen, currc
9999 mem: location 1471 is 1012
9999 mem: location 1497 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 95 -> 96
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1251
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1252
9999 mem: storing 0 in location 1253
 107 run: jump-if color-found?, 
9999 mem: location 1253 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1252
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1254
9999 mem: storing 0 in location 1255
 107 run: jump-if bg-color-found?, 
9999 mem: location 1255 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1254
 107 run: trace 90, [print-character], c
9999 mem: location 1251 is 102
  90 print-character: 102 
 107 run: jump-unless screen, 
9999 mem: location 1250 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1256
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1257
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1258
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1258 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1259
 107 run: jump-if legal?, 1:offset
9999 mem: location 1259 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1258 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1257 is 5
9999 mem: storing 1 in location 1259
 107 run: jump-if legal?, 1:offset
9999 mem: location 1259 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1260
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1260 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1259
9990 schedule: print/insert-at-cursor/handle-keyboard-event/editor-event-loop/run1002/scenario-editor-moves-to-next-line-with-down-arrow
 107 run: jump-if legal?, 1:offset
9999 mem: location 1259 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1260 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1256 is 10
9999 mem: storing 1 in location 1259
 107 run: jump-if legal?, 1:offset
9999 mem: location 1259 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1251 is 102
9999 mem: storing 0 in location 1261
 107 run: jump-unless newline?, 
9999 mem: location 1261 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1258 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1256 is 10
9999 mem: storing 20 in location 1264
 107 run: index <- add index, *column
9999 mem: location 1264 is 20
9999 mem: location 1260 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1264
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1265
9999 mem: incrementing refcount of 1018: 58 -> 59
 107 run: len:number <- length *buf
9999 mem: location 1265 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1266
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1251 is 102
9999 mem: storing 0 in location 1267
 107 run: jump-unless backspace?, 
9999 mem: location 1267 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1265 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1264 is 23
9999 mem: storing 1066 in location 1269
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1269 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1269 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1270
 107 run: *cursor-contents <- copy c
9999 mem: location 1251 is 102
9999 mem: location 1270 is 1066
9999 mem: storing 102 in location 1066
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1269 is 1066
9999 mem: location 1066 is 102
9999 mem: location 1067 is 7
9999 mem: location 1269 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1271
 107 run: *cursor-color <- copy color
9999 mem: location 1252 is 7
9999 mem: location 1271 is 1067
9999 mem: storing 7 in location 1067
 107 run: right:number <- subtract width, 1
9999 mem: location 1256 is 10
9999 mem: storing 9 in location 1272
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1260 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1273
 107 run: jump-if at-right?, 
9999 mem: location 1273 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1260 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1260 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1250 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1496 is 3
9999 mem: storing 4 in location 1496
 106 run: curr <- next_2 curr
9999 mem: location 1495 is 1206
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1206 in location 1464
9999 mem: incrementing refcount of 1206: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1464 is 1206
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1464 is 1206
9999 mem: skipping refcount at 1206
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1207 is 102
9999 mem: location 1208 is 0
9999 mem: location 1209 is 1202
9999 mem: location 1464 is 1206
9999 mem: skipping refcount at 1206
9999 type: type deduced to be character$
9998 run: address to copy is 1208
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1208 is 0
9999 mem: storing 0 in location 1465
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1465 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1206: 15 -> 14
9999 mem: storing 0 in location 1495
 106 run: jump 
9998 run: jumping to instruction 65
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1488
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1496 is 4
9999 mem: location 1476 is 9
9999 mem: storing 0 in location 1493
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1493 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1495 is 0
9998 run: jumping to instruction 77
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1488
 106 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean
9999 mem: location 1469 is 1000
9999 mem: location 1471 is 1012
9999 mem: location 1488 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1000: 13 -> 12
9999 mem: storing 1000 in location 1334
9999 mem: incrementing refcount of 1000: 12 -> 13
9999 mem: decrementing refcount of 1012: 96 -> 95
9999 mem: storing 1012 in location 1333
9999 mem: incrementing refcount of 1012: 95 -> 96
9999 mem: storing 0 in location 1339
 105 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1499
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1449
9999 mem: location 1011 is 0
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1163
9999 mem: storing 1163 in location 1386
9999 mem: incrementing refcount of 1163: 15 -> 16
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1499
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1449
9999 mem: location 1011 is 0
9999 mem: location 1334 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1353
 105 run: jump-unless *undo, 
9999 mem: location 1353 is 1010
9999 mem: location 1010 is 1449
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1353 is 1010
9999 mem: location 1010 is 1449
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1449 in location 1464
9999 mem: incrementing refcount of 1449: 2 -> 3
 106 run: result <- get *in, value:offset
9999 mem: location 1464 is 1449
9999 mem: skipping refcount at 1449
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1450 is 1120
9999 mem: location 1451 is 0
9999 mem: location 1464 is 1449
9999 mem: skipping refcount at 1449
9998 run: address to copy is 1450
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1450 is 1120
9999 mem: storing 1120 in location 1465
9999 mem: incrementing refcount of 1120: 4 -> 5
 106 run: reply result:_elem
9999 mem: location 1465 is 1120
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1120
9999 mem: storing 1120 in location 1352
9999 mem: incrementing refcount of 1120: 5 -> 6
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1352 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1163
9999 mem: location 1125 is 2
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1163
9999 mem: location 1128 is 4
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1352 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 0 in location 1359
 105 run: jump-unless typing, 
9999 mem: location 1359 is 0
9998 run: jumping to instruction 429
 105 run: insert-from:address:shared:duplex-list:character <- next_2 cursor-before
9999 mem: location 1396 is 1194
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1464
9999 mem: incrementing refcount of 1194: 20 -> 21
 106 run: jump-if in, 1:offset
9999 mem: location 1464 is 1194
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1464 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 10
9999 mem: location 1196 is 1499
9999 mem: location 1197 is 1190
9999 mem: location 1464 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1196 is 1499
9999 mem: storing 1499 in location 1465
9999 mem: incrementing refcount of 1499: 7 -> 8
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1465 is 1499
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1499
9999 mem: storing 1499 in location 1360
9999 mem: incrementing refcount of 1499: 8 -> 9
 105 run: insert-to:address:shared:duplex-list:character <- next_2 insert-from
9999 mem: location 1360 is 1499
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1499 in location 1464
9999 mem: incrementing refcount of 1499: 9 -> 10
 106 run: jump-if in, 1:offset
9999 mem: location 1464 is 1499
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1464 is 1499
9999 mem: skipping refcount at 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1500 is 48
9999 mem: location 1501 is 1198
9999 mem: location 1502 is 1194
9999 mem: location 1464 is 1499
9999 mem: skipping refcount at 1499
9999 type: type deduced to be character$
9998 run: address to copy is 1501
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1501 is 1198
9999 mem: storing 1198 in location 1465
9999 mem: incrementing refcount of 1198: 19 -> 20
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1465 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1198
9999 mem: storing 1198 in location 1398
9999 mem: incrementing refcount of 1198: 20 -> 21
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 mem: new alloc: 1503
9999 mem: decrementing refcount of 1120: 6 -> 5
9999 mem: storing 1503 in location 1352
9999 mem: incrementing refcount of 1503: 0 -> 1
 105 run: *op <- merge 0/insert-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to, 1/coalesce
9999 mem: location 1347 is 2
9999 mem: location 1348 is 0
9999 mem: location 1384 is 1163
9999 mem: location 1345 is 1007
9999 mem: location 1007 is 2
9999 mem: location 1346 is 1008
9999 mem: location 1008 is 1
9999 mem: location 1386 is 1163
9999 mem: location 1360 is 1499
9999 mem: location 1398 is 1198
9999 mem: location 1352 is 1503
9999 mem: skipping refcount at 1503
9999 mem: location 1352 is 1503
9999 mem: skipping refcount at 1503
9999 mem: storing 0 in location 1504
9999 mem: storing 2 in location 1505
9999 mem: storing 0 in location 1506
9999 mem: storing 1163 in location 1507
9999 mem: storing 2 in location 1508
9999 mem: storing 1 in location 1509
9999 mem: storing 1163 in location 1510
9999 mem: storing 1499 in location 1511
9999 mem: storing 1198 in location 1512
9999 mem: storing 1 in location 1513
 105 run: editor <- add-operation editor, op
9999 mem: location 1334 is 1000
9999 mem: location 1352 is 1503
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1445
9999 mem: incrementing refcount of 1000: 13 -> 14
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1503 in location 1446
9999 mem: incrementing refcount of 1503: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1445 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1499
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1449
9999 mem: location 1011 is 0
9999 mem: location 1445 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1447
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1446 is 1503
9999 mem: location 1447 is 1010
9999 mem: location 1010 is 1449
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1503 in location 1242
9999 mem: incrementing refcount of 1503: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1449 in location 1243
9999 mem: incrementing refcount of 1449: 3 -> 4
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1515
9999 mem: storing 1515 in location 1244
9999 mem: incrementing refcount of 1515: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1244 is 1515
9999 mem: skipping refcount at 1515
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1516 is 0
9999 mem: location 1517 is 0
9999 mem: location 1244 is 1515
9999 mem: skipping refcount at 1515
9998 run: address to copy is 1516
9999 mem: storing 1516 in location 1245
 107 run: *val <- copy x
9999 mem: location 1242 is 1503
9999 mem: location 1245 is 1516
9999 mem: storing 1503 in location 1516
9999 mem: incrementing refcount of 1503: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1244 is 1515
9999 mem: skipping refcount at 1515
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1516 is 1503
9999 mem: location 1517 is 0
9999 mem: location 1244 is 1515
9999 mem: skipping refcount at 1515
9999 type: type deduced to be address$
9998 run: address to copy is 1517
9999 mem: storing 1517 in location 1246
 107 run: *next <- copy in
9999 mem: location 1243 is 1449
9999 mem: location 1246 is 1517
9999 mem: storing 1449 in location 1517
9999 mem: incrementing refcount of 1449: 4 -> 5
 107 run: reply result
9999 mem: location 1244 is 1515
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1515
9999 mem: location 1447 is 1010
9999 mem: decrementing refcount of 1449: 5 -> 4
9999 mem: storing 1515 in location 1010
9999 mem: incrementing refcount of 1515: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1445 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1499
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1515
9999 mem: location 1011 is 0
9999 mem: location 1445 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1448
 106 run: *redo <- copy 0
9999 mem: location 1448 is 1011
9999 mem: storing 0 in location 1011
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1445 is 1000
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: decrementing refcount of 1000: 14 -> 13
9999 mem: storing 1000 in location 1334
9999 mem: incrementing refcount of 1000: 13 -> 14
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1333 is 1012
9999 mem: location 1334 is 1000
9999 mem: location 1339 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1000
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 96 -> 95
9999 mem: storing 1012 in location 1317
9999 mem: incrementing refcount of 1012: 95 -> 96
9999 mem: decrementing refcount of 1000: 14 -> 13
9999 mem: storing 1000 in location 1319
9999 mem: incrementing refcount of 1000: 13 -> 14
9999 mem: storing 0 in location 1329
 104 run: jump-unless go-render?, 
9999 mem: location 1329 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1319 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1499
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1515
9999 mem: location 1011 is 0
9999 mem: location 1319 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 2
9999 mem: storing 2 in location 1320
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1319 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1163
9999 mem: location 1002 is 1163
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1499
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1515
9999 mem: location 1011 is 0
9999 mem: location 1319 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 1
9999 mem: storing 1 in location 1321
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1317 is 1012
9999 mem: location 1320 is 2
9999 mem: location 1321 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1242
9999 mem: incrementing refcount of 1012: 96 -> 97
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1243
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1244
 105 run: jump-unless screen, 
9999 mem: location 1242 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1242 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1242 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1245
 105 run: *row <- copy new-row
9999 mem: location 1243 is 2
9999 mem: location 1245 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1242 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1242 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1246
 105 run: *column <- copy new-column
9999 mem: location 1244 is 1
9999 mem: location 1246 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1242 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 97 -> 96
9999 mem: storing 1012 in location 1317
9999 mem: incrementing refcount of 1012: 96 -> 97
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1318 is 1458
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1458 in location 1277
9999 mem: incrementing refcount of 1458: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1277 is 1458
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1277 is 1458
9999 mem: skipping refcount at 1458
9999 mem: location 1459 is 1
9999 mem: location 1460 is 1452
9999 mem: location 1277 is 1458
9999 mem: skipping refcount at 1458
9998 run: address to copy is 1459
9999 mem: storing 1459 in location 1278
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1277 is 1458
9999 mem: skipping refcount at 1458
9999 mem: location 1459 is 1
9999 mem: location 1460 is 1452
9999 mem: location 1277 is 1458
9999 mem: skipping refcount at 1458
9998 run: address to copy is 1460
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1460 is 1452
9999 mem: storing 1452 in location 1279
9999 mem: incrementing refcount of 1452: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1279 is 1452
9999 mem: skipping refcount at 1452
9999 mem: storing 1 in location 1280
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1278 is 1459
9999 mem: location 1459 is 1
9999 mem: location 1280 is 1
9999 mem: storing 1 in location 1281
 105 run: jump-unless done?, 
9999 mem: location 1281 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1461 in location 1282
9999 mem: incrementing refcount of 1461: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1282 is 1461
9999 mem: skipping refcount at 1461
9999 mem: location 1462 is 0
9999 mem: location 1463 is 0
9999 mem: location 1464 is 0
9999 mem: location 1465 is 0
9999 mem: location 1277 is 1458
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1458
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1322
9999 mem: storing 0 in location 1323
9999 mem: storing 0 in location 1324
9999 mem: storing 0 in location 1325
9999 mem: decrementing refcount of 1458: 3 -> 2
9999 mem: storing 1458 in location 1318
9999 mem: incrementing refcount of 1458: 2 -> 3
9999 mem: storing 1 in location 1326
9999 mem: storing 1 in location 1327
 104 run: jump-unless found?, 
9999 mem: location 1326 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1327 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1317 is 1012
9999 mem: location 1318 is 1458
9999 mem: location 1319 is 1000
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain [
    .          .
    .abc       .
    .0def      .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
