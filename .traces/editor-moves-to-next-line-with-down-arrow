 102 run: assume-console [
    press down-arrow
  ]
9999 parse: instruction: press
9999 parse:   ingredient: {"down-arrow": ""}
 102 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
    3:number <- get *2:address:editor-data, cursor-row:offset
    4:number <- get *2:address:editor-data, cursor-column:offset
  ]
9999 parse: instruction: editor-event-loop
9999 parse:   ingredient: {"screen": "address"}
9999 parse:   ingredient: {"console": "address"}
9999 parse:   ingredient: {"2": <"address" : "editor-data">}
9999 parse: instruction: get
9999 parse:   ingredient: {"*2": <"address" : "editor-data">, "lookup": ""}
9999 parse:   ingredient: {"cursor-row": "offset"}
9999 parse:   product: {"3": "number"}
9999 parse: instruction: get
9999 parse:   ingredient: {"*2": <"address" : "editor-data">, "lookup": ""}
9999 parse:   ingredient: {"cursor-column": "offset"}
9999 parse:   product: {"4": "number"}
9999 name: element cursor-row of type editor-data is at offset 6
9999 name: element cursor-column of type editor-data is at offset 7
9999 after-brace: recipe run1001
9999 after-brace: editor-event-loop ...
9999 after-brace: get ...
9999 after-brace: get ...
9999 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1292
9999 mem: location 2 is 1115
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1294
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1296
 104 run: console:address <- next-ingredient 
9999 mem: storing 1292 in location 1297
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1298
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1299
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1300
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1296 is 1009
9999 mem: location 1299 is 1
9999 mem: location 1300 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1212
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1213
 105 run: break-unless sc, 
9999 mem: location 1211 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 105 run: *row <- copy new-row
9999 mem: location 1212 is 1
9999 mem: location 1214 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 105 run: *column <- copy new-column
9999 mem: location 1213 is 0
9999 mem: location 1215 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1296
 104 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1297 is 1292
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1292 in location 1261
 105 run: break-unless x, 
9999 mem: location 1261 is 1292
9999 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1261 is 1292
9999 mem: location 1292 is 0
9999 mem: location 1293 is 1287
9999 mem: location 1261 is 1292
9999 run: address to copy is 1292
9999 mem: storing 1292 in location 1262
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1261 is 1292
9999 mem: location 1292 is 0
9999 mem: location 1293 is 1287
9999 mem: location 1261 is 1292
9999 run: address to copy is 1293
9999 run: its type is address
9999 mem: location 1293 is 1287
9999 mem: storing 1287 in location 1263
 105 run: max:number <- length *buf
9999 mem: location 1263 is 1287
9999 mem: storing 1 in location 1264
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1262 is 1292
9999 mem: location 1292 is 0
9999 mem: location 1264 is 1
9999 mem: storing 0 in location 1265
 105 run: break-unless done?, 
9999 mem: location 1265 is 0
9999 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1263 is 1287
9999 mem: location 1262 is 1292
9999 mem: location 1292 is 0
9999 run: address to copy is 1288
9999 run: its type is event
9999 mem: location 1288 is 1
9999 mem: location 1289 is 65516
9999 mem: location 1290 is 0
9999 mem: location 1291 is 0
9999 mem: storing 1 in location 1267
9999 mem: storing 65516 in location 1268
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: *idx <- add *idx, 1
9999 mem: location 1262 is 1292
9999 mem: location 1292 is 0
9999 mem: location 1262 is 1292
9999 mem: storing 1 in location 1292
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1267 is 1
9999 mem: location 1268 is 65516
9999 mem: location 1269 is 0
9999 mem: location 1270 is 0
9999 mem: location 1261 is 1292
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is [1, 65516, 0, 0]
9999 run: result 1 is 1292
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1301
9999 mem: storing 65516 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 1292 in location 1297
9999 mem: storing 1 in location 1305
9999 mem: storing 0 in location 1306
 104 run: loop-unless found?, 
9999 mem: location 1305 is 1
9999 run: jump-unless fell through
 104 run: break-if quit?, 
9999 mem: location 1306 is 0
9999 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1301 is 1
9999 mem: location 1302 is 65516
9999 mem: location 1303 is 0
9999 mem: location 1304 is 0
9999 mem: storing 0 in location 1307
 104 run: break-unless t, 
9999 mem: location 1307 is 0
9999 run: jumping to instruction 18
 104 run: break-if t, 
9999 mem: location 1307 is 0
9999 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1296 is 1009
9999 mem: location 1298 is 1115
9999 mem: location 1301 is 1
9999 mem: location 1302 is 65516
9999 mem: location 1303 is 0
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: new alloc: 1309
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1311
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1312
 105 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1313
9999 mem: storing 65516 in location 1314
9999 mem: storing 0 in location 1315
9999 mem: storing 0 in location 1316
 105 run: jump-if editor, 1:offset
9999 mem: location 1312 is 1115
9999 run: jumping to instruction 6
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1311 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1162
 106 run: break-unless sc, 
9999 mem: location 1162 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1162 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1163
 106 run: reply width
9999 mem: location 1163 is 10
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 10
9999 mem: storing 10 in location 1317
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1311 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1162
 106 run: break-unless sc, 
9999 mem: location 1162 is 1009
9999 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1162 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1163
 106 run: reply height
9999 mem: location 1163 is 5
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1318
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1319
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1320
 105 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1321
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1322
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1323
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1322 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1324
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1323 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1325
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1313 is 1
9999 mem: location 1314 is 65516
9999 mem: location 1315 is 0
9999 mem: location 1316 is 0
9999 mem: storing 0 in location 1326
 105 run: break-unless c, 
9999 mem: location 1326 is 0
9999 run: jumping to instruction 432
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1313 is 1
9999 mem: location 1314 is 65516
9999 mem: location 1315 is 0
9999 mem: location 1316 is 0
9999 mem: storing 1314 in location 1381
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1381 is 1314
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1381 is 1314
9999 mem: location 1314 is 65516
9999 mem: storing 0 in location 1343
 105 run: break-unless page-up?, 
9999 mem: location 1343 is 0
9999 run: jumping to instruction 477
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1381 is 1314
9999 mem: location 1314 is 65516
9999 mem: storing 0 in location 1359
 105 run: break-unless page-down?, 
9999 mem: location 1359 is 0
9999 run: jumping to instruction 519
 105 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1381 is 1314
9999 mem: location 1314 is 65516
9999 mem: storing 0 in location 1366
 105 run: break-unless move-to-end-of-line?, 
9999 mem: location 1366 is 0
9999 run: jumping to instruction 556
 105 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1381 is 1314
9999 mem: location 1314 is 65516
9999 mem: storing 0 in location 1367
 105 run: break-unless move-to-start-of-line?, 
9999 mem: location 1367 is 0
9999 run: jumping to instruction 593
 105 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1381 is 1314
9999 mem: location 1314 is 65516
9999 mem: storing 1 in location 1382
 105 run: break-unless move-to-next-line?, 
9999 mem: location 1382 is 1
9999 run: jump-unless fell through
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1346
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1347
 105 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1154
9999 mem: storing 1154 in location 1348
 105 run: editor, go-render? <- move-to-next-line editor, screen-height
9999 mem: location 1312 is 1115
9999 mem: location 1318 is 5
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 22
9999 mem: new alloc: 1395
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1397
 106 run: screen-height:number <- next-ingredient 
9999 mem: storing 5 in location 1398
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1397 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1397 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1399
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1397 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1397 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1400
 106 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1397 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1397 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1401
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1397 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1397 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1402
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1397 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1397 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1403
 106 run: last-line:number <- subtract screen-height, 1
9999 mem: location 1398 is 5
9999 mem: storing 4 in location 1404
 106 run: already-at-bottom?:boolean <- greater-or-equal *cursor-row, last-line
9999 mem: location 1399 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1404 is 4
9999 mem: storing 0 in location 1405
 106 run: break-if already-at-bottom?, 
9999 mem: location 1405 is 0
9999 run: jump-if fell through
 106 run: max:number <- subtract right, left
9999 mem: location 1403 is 9
9999 mem: location 1402 is 0
9999 mem: storing 9 in location 1406
 106 run: next-line:address:duplex-list <- before-start-of-next-line *before-cursor, max
9999 mem: location 1401 is 1118
9999 mem: location 1118 is 1154
9999 mem: location 1406 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
 107 run: original:address:duplex-list <- next-ingredient 
9999 mem: storing 1154 in location 1002
 107 run: max:number <- next-ingredient 
9999 mem: storing 9 in location 1003
 107 run: count:number <- copy 0
9999 mem: storing 0 in location 1004
 107 run: curr:address:duplex-list <- copy original
9999 mem: location 1002 is 1154
9999 mem: storing 1154 in location 1005
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1005 is 1154
9999 mem: location 1154 is 167
9999 mem: location 1155 is 1157
9999 mem: location 1156 is 0
9999 mem: location 1005 is 1154
9999 run: address to copy is 1154
9999 run: its type is character
9999 mem: location 1154 is 167
9999 mem: storing 167 in location 1006
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1006 is 167
9999 mem: storing 0 in location 1007
 107 run: break-unless at-newline?, 
9999 mem: location 1007 is 0
9999 run: jumping to instruction 11
 107 run: jump-if curr, 1:offset
9999 mem: location 1005 is 1154
9999 run: jumping to instruction 15
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1004 is 0
9999 mem: location 1003 is 9
9999 mem: storing 0 in location 1008
 107 run: break-if done?, 
9999 mem: location 1008 is 0
9999 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1005 is 1154
9999 mem: location 1154 is 167
9999 mem: location 1155 is 1157
9999 mem: location 1156 is 0
9999 mem: location 1005 is 1154
9999 run: address to copy is 1154
9999 run: its type is character
9999 mem: location 1154 is 167
9999 mem: storing 167 in location 1006
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1006 is 167
9999 mem: storing 0 in location 1007
 107 run: break-if at-newline?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 107 run: curr <- next-duplex curr
9999 mem: location 1005 is 1154
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1154 in location 1162
 108 run: jump-if in, 1:offset
9999 mem: location 1162 is 1154
9999 run: jumping to instruction 4
 108 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1154
9999 mem: location 1154 is 167
9999 mem: location 1155 is 1157
9999 mem: location 1156 is 0
9999 mem: location 1162 is 1154
9999 run: address to copy is 1155
9999 run: its type is address
9999 mem: location 1155 is 1157
9999 mem: storing 1157 in location 1163
 108 run: reply result
9999 mem: location 1163 is 1157
9999 trace: reply: decrementing callstack depth from 7
9999 run: result 0 is 1157
9999 mem: storing 1157 in location 1005
 107 run: count <- add count, 1
9999 mem: location 1004 is 0
9999 mem: storing 1 in location 1004
 107 run: loop 
9999 run: jumping to instruction 13
 107 run: jump-if curr, 1:offset
9999 mem: location 1005 is 1157
9999 run: jumping to instruction 15
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1004 is 1
9999 mem: location 1003 is 9
9999 mem: storing 0 in location 1008
 107 run: break-if done?, 
9999 mem: location 1008 is 0
9999 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1005 is 1157
9999 mem: location 1157 is 97
9999 mem: location 1158 is 1164
9999 mem: location 1159 is 1154
9999 mem: location 1005 is 1157
9999 run: address to copy is 1157
9999 run: its type is character
9999 mem: location 1157 is 97
9999 mem: storing 97 in location 1006
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1006 is 97
9999 mem: storing 0 in location 1007
 107 run: break-if at-newline?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 107 run: curr <- next-duplex curr
9999 mem: location 1005 is 1157
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1157 in location 1162
 108 run: jump-if in, 1:offset
9999 mem: location 1162 is 1157
9999 run: jumping to instruction 4
 108 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1157
9999 mem: location 1157 is 97
9999 mem: location 1158 is 1164
9999 mem: location 1159 is 1154
9999 mem: location 1162 is 1157
9999 run: address to copy is 1158
9999 run: its type is address
9999 mem: location 1158 is 1164
9999 mem: storing 1164 in location 1163
 108 run: reply result
9999 mem: location 1163 is 1164
9999 trace: reply: decrementing callstack depth from 7
9999 run: result 0 is 1164
9999 mem: storing 1164 in location 1005
 107 run: count <- add count, 1
9999 mem: location 1004 is 1
9999 mem: storing 2 in location 1004
 107 run: loop 
9999 run: jumping to instruction 13
 107 run: jump-if curr, 1:offset
9999 mem: location 1005 is 1164
9999 run: jumping to instruction 15
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1004 is 2
9999 mem: location 1003 is 9
9999 mem: storing 0 in location 1008
 107 run: break-if done?, 
9999 mem: location 1008 is 0
9999 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1005 is 1164
9999 mem: location 1164 is 98
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1157
9999 mem: location 1005 is 1164
9999 run: address to copy is 1164
9999 run: its type is character
9999 mem: location 1164 is 98
9999 mem: storing 98 in location 1006
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1006 is 98
9999 mem: storing 0 in location 1007
 107 run: break-if at-newline?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 107 run: curr <- next-duplex curr
9999 mem: location 1005 is 1164
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1164 in location 1162
 108 run: jump-if in, 1:offset
9999 mem: location 1162 is 1164
9999 run: jumping to instruction 4
 108 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1164
9999 mem: location 1164 is 98
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1157
9999 mem: location 1162 is 1164
9999 run: address to copy is 1165
9999 run: its type is address
9999 mem: location 1165 is 1167
9999 mem: storing 1167 in location 1163
 108 run: reply result
9999 mem: location 1163 is 1167
9999 trace: reply: decrementing callstack depth from 7
9999 run: result 0 is 1167
9999 mem: storing 1167 in location 1005
 107 run: count <- add count, 1
9999 mem: location 1004 is 2
9999 mem: storing 3 in location 1004
 107 run: loop 
9999 run: jumping to instruction 13
 107 run: jump-if curr, 1:offset
9999 mem: location 1005 is 1167
9999 run: jumping to instruction 15
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1004 is 3
9999 mem: location 1003 is 9
9999 mem: storing 0 in location 1008
 107 run: break-if done?, 
9999 mem: location 1008 is 0
9999 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1005 is 1167
9999 mem: location 1167 is 99
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1005 is 1167
9999 run: address to copy is 1167
9999 run: its type is character
9999 mem: location 1167 is 99
9999 mem: storing 99 in location 1006
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1006 is 99
9999 mem: storing 0 in location 1007
 107 run: break-if at-newline?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 107 run: curr <- next-duplex curr
9999 mem: location 1005 is 1167
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1167 in location 1162
 108 run: jump-if in, 1:offset
9999 mem: location 1162 is 1167
9999 run: jumping to instruction 4
 108 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1167
9999 mem: location 1167 is 99
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1162 is 1167
9999 run: address to copy is 1168
9999 run: its type is address
9999 mem: location 1168 is 1170
9999 mem: storing 1170 in location 1163
 108 run: reply result
9999 mem: location 1163 is 1170
9999 trace: reply: decrementing callstack depth from 7
9999 run: result 0 is 1170
9999 mem: storing 1170 in location 1005
 107 run: count <- add count, 1
9999 mem: location 1004 is 3
9999 mem: storing 4 in location 1004
 107 run: loop 
9999 run: jumping to instruction 13
 107 run: jump-if curr, 1:offset
9999 mem: location 1005 is 1170
9999 run: jumping to instruction 15
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1004 is 4
9999 mem: location 1003 is 9
9999 mem: storing 0 in location 1008
 107 run: break-if done?, 
9999 mem: location 1008 is 0
9999 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1005 is 1170
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1005 is 1170
9999 run: address to copy is 1170
9999 run: its type is character
9999 mem: location 1170 is 10
9999 mem: storing 10 in location 1006
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1006 is 10
9999 mem: storing 1 in location 1007
 107 run: break-if at-newline?, 
9999 mem: location 1007 is 1
9999 run: jumping to instruction 23
 107 run: jump-if curr, 1:offset
9999 mem: location 1005 is 1170
9999 run: jumping to instruction 26
 107 run: reply curr
9999 mem: location 1005 is 1170
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1170
9999 mem: storing 1170 in location 1407
 106 run: no-motion?:boolean <- equal next-line, *before-cursor
9999 mem: location 1407 is 1170
9999 mem: location 1401 is 1118
9999 mem: location 1118 is 1154
9999 mem: storing 0 in location 1408
 106 run: break-unless no-motion?, 
9999 mem: location 1408 is 0
9999 run: jumping to instruction 20
 106 run: *cursor-row <- add *cursor-row, 1
9999 mem: location 1399 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1399 is 1121
9999 mem: storing 2 in location 1121
 106 run: *before-cursor <- copy next-line
9999 mem: location 1407 is 1170
9999 mem: location 1401 is 1118
9999 mem: storing 1170 in location 1118
 106 run: target-column:number <- copy *cursor-column
9999 mem: location 1400 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1410
 106 run: *cursor-column <- copy left
9999 mem: location 1402 is 0
9999 mem: location 1400 is 1122
9999 mem: storing 0 in location 1122
 106 run: done?:boolean <- greater-or-equal *cursor-column, target-column
9999 mem: location 1400 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1410 is 0
9999 mem: storing 1 in location 1411
 106 run: break-if done?, 
9999 mem: location 1411 is 1
9999 run: jumping to instruction 36
 106 run: reply editor/same-as-ingredient:0, 0/no-more-render
9999 mem: location 1397 is 1115
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1115
9999 run: result 1 is 0
9999 mem: storing 1115 in location 1312
9999 mem: storing 0 in location 1369
 105 run: undo-coalesce-tag:number <- copy 4/down-arrow
9999 mem: storing 4 in location 1349
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1350
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1351
 105 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1154
9999 mem: storing 1154 in location 1352
 105 run: break-unless undo-coalesce-tag, 
9999 mem: location 1349 is 4
9999 run: jump-unless fell through
 105 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1330
 105 run: break-unless *undo, 
9999 mem: location 1330 is 1124
9999 mem: location 1124 is 0
9999 run: jumping to instruction 623
 105 run: op:address:operation <- new operation:type
9999 mem: storing 1216 in location 1329
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1346 is 1
9999 mem: location 1347 is 0
9999 mem: location 1348 is 1154
9999 mem: location 1350 is 2
9999 mem: location 1351 is 0
9999 mem: location 1352 is 1154
9999 mem: location 1349 is 4
9999 mem: location 1329 is 1216
9999 mem: location 1329 is 1216
9999 mem: storing 1 in location 1216
9999 mem: storing 1 in location 1217
9999 mem: storing 0 in location 1218
9999 mem: storing 1154 in location 1219
9999 mem: storing 2 in location 1220
9999 mem: storing 0 in location 1221
9999 mem: storing 1154 in location 1222
9999 mem: storing 4 in location 1223
 105 run: editor <- add-operation editor, op
9999 mem: location 1312 is 1115
9999 mem: location 1329 is 1216
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1255
 106 run: op:address:operation <- next-ingredient 
9999 mem: storing 1216 in location 1256
 106 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1255 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1255 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1257
 106 run: *undo/skiptypecheck <- push op, *undo
9999 mem: location 1256 is 1216
9999 mem: location 1257 is 1124
9999 mem: location 1124 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:location <- next-ingredient 
9999 mem: storing 1216 in location 1211
 107 run: in:address:list <- next-ingredient 
9999 mem: storing 0 in location 1212
 107 run: result:address:list <- new list:type
9999 mem: new alloc: 1418
9999 mem: storing 1418 in location 1213
 107 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1213 is 1418
9999 mem: location 1418 is 0
9999 mem: location 1419 is 0
9999 mem: location 1213 is 1418
9999 run: address to copy is 1418
9999 mem: storing 1418 in location 1214
 107 run: *val <- copy x
9999 mem: location 1211 is 1216
9999 mem: location 1214 is 1418
9999 mem: storing 1216 in location 1418
 107 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1213 is 1418
9999 mem: location 1418 is 1216
9999 mem: location 1419 is 0
9999 mem: location 1213 is 1418
9999 run: address to copy is 1419
9999 mem: storing 1419 in location 1215
 107 run: *next <- copy in
9999 mem: location 1212 is 0
9999 mem: location 1215 is 1419
9999 mem: storing 0 in location 1419
 107 run: reply result
9999 mem: location 1213 is 1418
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1418
9999 mem: location 1257 is 1124
9999 mem: storing 1418 in location 1124
 106 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1255 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1255 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1258
 106 run: *redo <- copy 0
9999 mem: location 1258 is 1125
9999 mem: storing 0 in location 1125
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1255 is 1115
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1312
 105 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1311 is 1009
9999 mem: location 1312 is 1115
9999 mem: location 1369 is 0
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1296
9999 mem: storing 1115 in location 1298
9999 mem: storing 0 in location 1308
 104 run: break-unless go-render?, 
9999 mem: location 1308 is 0
9999 run: jumping to instruction 25
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1299
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1300
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1296 is 1009
9999 mem: location 1299 is 2
9999 mem: location 1300 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1212
9999 schedule: move-cursor/editor-event-loop/run1001/scenario-editor-moves-to-next-line-with-down-arrow
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1213
 105 run: break-unless sc, 
9999 mem: location 1211 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 105 run: *row <- copy new-row
9999 mem: location 1212 is 2
9999 mem: location 1214 is 1011
9999 mem: storing 2 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 105 run: *column <- copy new-column
9999 mem: location 1213 is 0
9999 mem: location 1215 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1296
 104 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1297 is 1292
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1292 in location 1261
 105 run: break-unless x, 
9999 mem: location 1261 is 1292
9999 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1261 is 1292
9999 mem: location 1292 is 1
9999 mem: location 1293 is 1287
9999 mem: location 1261 is 1292
9999 run: address to copy is 1292
9999 mem: storing 1292 in location 1262
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1261 is 1292
9999 mem: location 1292 is 1
9999 mem: location 1293 is 1287
9999 mem: location 1261 is 1292
9999 run: address to copy is 1293
9999 run: its type is address
9999 mem: location 1293 is 1287
9999 mem: storing 1287 in location 1263
 105 run: max:number <- length *buf
9999 mem: location 1263 is 1287
9999 mem: storing 1 in location 1264
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1262 is 1292
9999 mem: location 1292 is 1
9999 mem: location 1264 is 1
9999 mem: storing 1 in location 1265
 105 run: break-unless done?, 
9999 mem: location 1265 is 1
9999 run: jump-unless fell through
 105 run: dummy:address:event <- new event:type
9999 mem: storing 1160 in location 1266
 105 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1266 is 1160
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1261 is 1292
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1292
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1301
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 1292 in location 1297
9999 mem: storing 1 in location 1305
9999 mem: storing 1 in location 1306
 104 run: loop-unless found?, 
9999 mem: location 1305 is 1
9999 run: jump-unless fell through
 104 run: break-if quit?, 
9999 mem: location 1306 is 1
9999 run: jumping to instruction 28
9999 trace: fall-through: exiting editor-event-loop; decrementing callstack depth from 3
 103 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 3
 103 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 4
9999 trace: fall-through: exiting run1001; decrementing callstack depth from 2
 102 run: memory-should-contain [
    3 <- 2
    4 <- 0
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label 0, [print-character]
 102 run: assume-console [
    type [0]
  ]
9999 parse: instruction: type
9999 parse:   ingredient: {"0": "literal-string"}
 102 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
9999 parse: instruction: editor-event-loop
9999 parse:   ingredient: {"screen": "address"}
9999 parse:   ingredient: {"console": "address"}
9999 parse:   ingredient: {"2": <"address" : "editor-data">}
9999 after-brace: recipe run1002
9999 after-brace: editor-event-loop ...
9999 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1425
9999 mem: location 2 is 1115
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 14
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1296
 104 run: console:address <- next-ingredient 
9999 mem: storing 1425 in location 1297
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1298
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1299
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1300
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1296 is 1009
9999 mem: location 1299 is 2
9999 mem: location 1300 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1212
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1213
 105 run: break-unless sc, 
9999 mem: location 1211 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 105 run: *row <- copy new-row
9999 mem: location 1212 is 2
9999 mem: location 1214 is 1011
9999 mem: storing 2 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 105 run: *column <- copy new-column
9999 mem: location 1213 is 0
9999 mem: location 1215 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1296
 104 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1297 is 1425
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1425 in location 1261
 105 run: break-unless x, 
9999 mem: location 1261 is 1425
9999 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1261 is 1425
9999 mem: location 1425 is 0
9999 mem: location 1426 is 1420
9999 mem: location 1261 is 1425
9999 run: address to copy is 1425
9999 mem: storing 1425 in location 1262
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1261 is 1425
9999 mem: location 1425 is 0
9999 mem: location 1426 is 1420
9999 mem: location 1261 is 1425
9999 run: address to copy is 1426
9999 run: its type is address
9999 mem: location 1426 is 1420
9999 mem: storing 1420 in location 1263
 105 run: max:number <- length *buf
9999 mem: location 1263 is 1420
9999 mem: storing 1 in location 1264
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1262 is 1425
9999 mem: location 1425 is 0
9999 mem: location 1264 is 1
9999 mem: storing 0 in location 1265
 105 run: break-unless done?, 
9999 mem: location 1265 is 0
9999 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1263 is 1420
9999 mem: location 1262 is 1425
9999 mem: location 1425 is 0
9999 run: address to copy is 1421
9999 run: its type is event
9999 mem: location 1421 is 0
9999 mem: location 1422 is 48
9999 mem: location 1423 is 0
9999 mem: location 1424 is 0
9999 mem: storing 0 in location 1267
9999 mem: storing 48 in location 1268
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: *idx <- add *idx, 1
9999 mem: location 1262 is 1425
9999 mem: location 1425 is 0
9999 mem: location 1262 is 1425
9999 mem: storing 1 in location 1425
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1267 is 0
9999 mem: location 1268 is 48
9999 mem: location 1269 is 0
9999 mem: location 1270 is 0
9999 mem: location 1261 is 1425
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is [0, 48, 0, 0]
9999 run: result 1 is 1425
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1301
9999 mem: storing 48 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 1425 in location 1297
9999 mem: storing 1 in location 1305
9999 mem: storing 0 in location 1306
 104 run: loop-unless found?, 
9999 mem: location 1305 is 1
9999 run: jump-unless fell through
 104 run: break-if quit?, 
9999 mem: location 1306 is 0
9999 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1301 is 0
9999 mem: location 1302 is 48
9999 mem: location 1303 is 0
9999 mem: location 1304 is 0
9999 mem: storing 0 in location 1307
 104 run: break-unless t, 
9999 mem: location 1307 is 0
9999 run: jumping to instruction 18
 104 run: break-if t, 
9999 mem: location 1307 is 0
9999 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1296 is 1009
9999 mem: location 1298 is 1115
9999 mem: location 1301 is 0
9999 mem: location 1302 is 48
9999 mem: location 1303 is 0
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1311
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1312
 105 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1313
9999 mem: storing 48 in location 1314
9999 mem: storing 0 in location 1315
9999 mem: storing 0 in location 1316
 105 run: jump-if editor, 1:offset
9999 mem: location 1312 is 1115
9999 run: jumping to instruction 6
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1311 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1427
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1429
 106 run: break-unless sc, 
9999 mem: location 1429 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1429 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1429 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1430
 106 run: reply width
9999 mem: location 1430 is 10
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 10
9999 mem: storing 10 in location 1317
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1311 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1429
 106 run: break-unless sc, 
9999 mem: location 1429 is 1009
9999 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1429 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1429 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1430
 106 run: reply height
9999 mem: location 1430 is 5
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1318
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1319
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1320
 105 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1321
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1322
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1323
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1322 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1324
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1323 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1325
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1313 is 0
9999 mem: location 1314 is 48
9999 mem: location 1315 is 0
9999 mem: location 1316 is 0
9999 mem: storing 1314 in location 1326
 105 run: break-unless c, 
9999 mem: location 1326 is 1314
9999 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1326 is 1314
9999 mem: location 1314 is 48
9999 mem: storing 0 in location 1327
 105 run: break-unless redo?, 
9999 mem: location 1327 is 0
9999 run: jumping to instruction 60
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1326 is 1314
9999 mem: location 1314 is 48
9999 mem: storing 0 in location 1338
 105 run: break-unless undo?, 
9999 mem: location 1338 is 0
9999 run: jumping to instruction 107
 105 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1326 is 1314
9999 mem: location 1314 is 48
9999 mem: storing 0 in location 1343
 105 run: break-unless page-up?, 
9999 mem: location 1343 is 0
9999 run: jumping to instruction 149
 105 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1326 is 1314
9999 mem: location 1314 is 48
9999 mem: storing 0 in location 1359
 105 run: break-unless page-down?, 
9999 mem: location 1359 is 0
9999 run: jumping to instruction 191
 105 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1326 is 1314
9999 mem: location 1314 is 48
9999 mem: storing 0 in location 1360
 105 run: break-unless delete-to-end-of-line?, 
9999 mem: location 1360 is 0
9999 run: jumping to instruction 210
 105 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1326 is 1314
9999 mem: location 1314 is 48
9999 mem: storing 0 in location 1365
 105 run: break-unless delete-to-start-of-line?, 
9999 mem: location 1365 is 0
9999 run: jumping to instruction 229
 105 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1326 is 1314
9999 mem: location 1314 is 48
9999 mem: storing 0 in location 1366
 105 run: break-unless move-to-end-of-line?, 
9999 mem: location 1366 is 0
9999 run: jumping to instruction 266
 105 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1326 is 1314
9999 mem: location 1314 is 48
9999 mem: storing 0 in location 1367
 105 run: break-unless move-to-start-of-line?, 
9999 mem: location 1367 is 0
9999 run: jumping to instruction 303
 105 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1326 is 1314
9999 mem: location 1314 is 48
9999 mem: storing 0 in location 1368
 105 run: break-unless delete-previous-character?, 
9999 mem: location 1368 is 0
9999 run: jumping to instruction 343
 105 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1326 is 1314
9999 mem: location 1314 is 48
9999 mem: storing 0 in location 1373
 105 run: break-unless tab?, 
9999 mem: location 1373 is 0
9999 run: jumping to instruction 379
 105 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1326 is 1314
9999 mem: location 1314 is 48
9999 mem: storing 0 in location 1377
 105 run: break-unless newline?, 
9999 mem: location 1377 is 0
9999 run: jumping to instruction 397
 105 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1326 is 1314
9999 mem: location 1314 is 48
9999 mem: storing 1 in location 1380
 105 run: jump-if regular-character?, 1:offset
9999 mem: location 1380 is 1
9999 run: jumping to instruction 401
 105 run: top-before:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1154
9999 mem: storing 1154 in location 1361
 105 run: cursor-before:address:duplex-list <- copy *before-cursor
9999 mem: location 1321 is 1118
9999 mem: location 1118 is 1170
9999 mem: storing 1170 in location 1374
 105 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1312 is 1115
9999 mem: location 1326 is 1314
9999 mem: location 1314 is 48
9999 mem: location 1311 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 30
9999 mem: new alloc: 1431
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1433
 106 run: c:character <- next-ingredient 
9999 mem: storing 48 in location 1434
 106 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1435
 106 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1433 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1433 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1436
 106 run: insert-duplex c, *before-cursor
9999 mem: location 1434 is 48
9999 mem: location 1436 is 1118
9999 mem: location 1118 is 1170
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 107 run: x:character <- next-ingredient 
9999 mem: storing 48 in location 1148
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1170 in location 1149
 107 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1462
9999 mem: storing 1462 in location 1150
 107 run: val:address:character <- get-address *new-node, value:offset
9999 mem: location 1150 is 1462
9999 mem: location 1462 is 0
9999 mem: location 1463 is 0
9999 mem: location 1464 is 0
9999 mem: location 1150 is 1462
9999 run: address to copy is 1462
9999 mem: storing 1462 in location 1151
 107 run: *val <- copy x
9999 mem: location 1148 is 48
9999 mem: location 1151 is 1462
9999 mem: storing 48 in location 1462
 107 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1149 is 1170
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1149 is 1170
9999 run: address to copy is 1171
9999 run: its type is address
9999 mem: location 1171 is 1173
9999 mem: storing 1173 in location 1152
 107 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1149 is 1170
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1149 is 1170
9999 run: address to copy is 1171
9999 mem: storing 1171 in location 1153
 107 run: *y <- copy new-node
9999 mem: location 1150 is 1462
9999 mem: location 1153 is 1171
9999 mem: storing 1462 in location 1171
 107 run: y <- get-address *new-node, prev:offset
9999 mem: location 1150 is 1462
9999 mem: location 1462 is 48
9999 mem: location 1463 is 0
9999 mem: location 1464 is 0
9999 mem: location 1150 is 1462
9999 run: address to copy is 1464
9999 mem: storing 1464 in location 1153
 107 run: *y <- copy in
9999 mem: location 1149 is 1170
9999 mem: location 1153 is 1464
9999 mem: storing 1170 in location 1464
 107 run: y <- get-address *new-node, next:offset
9999 mem: location 1150 is 1462
9999 mem: location 1462 is 48
9999 mem: location 1463 is 0
9999 mem: location 1464 is 1170
9999 mem: location 1150 is 1462
9999 run: address to copy is 1463
9999 mem: storing 1463 in location 1153
 107 run: *y <- copy next-node
9999 mem: location 1152 is 1173
9999 mem: location 1153 is 1463
9999 mem: storing 1173 in location 1463
 107 run: jump-if next-node, 1:offset
9999 mem: location 1152 is 1173
9999 run: jumping to instruction 15
 107 run: y <- get-address *next-node, prev:offset
9999 mem: location 1152 is 1173
9999 mem: location 1173 is 100
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1152 is 1173
9999 run: address to copy is 1175
9999 mem: storing 1175 in location 1153
 107 run: *y <- copy new-node
9999 mem: location 1150 is 1462
9999 mem: location 1153 is 1175
9999 mem: storing 1462 in location 1175
 107 run: reply new-node
9999 mem: location 1150 is 1462
9999 trace: reply: decrementing callstack depth from 6
 106 run: *before-cursor <- next-duplex *before-cursor
9999 mem: location 1436 is 1118
9999 mem: location 1118 is 1170
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1170 in location 1429
 107 run: jump-if in, 1:offset
9999 mem: location 1429 is 1170
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1429 is 1170
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1462
9999 mem: location 1172 is 1167
9999 mem: location 1429 is 1170
9999 run: address to copy is 1171
9999 run: its type is address
9999 mem: location 1171 is 1462
9999 mem: storing 1462 in location 1430
 107 run: reply result
9999 mem: location 1430 is 1462
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1462
9999 mem: location 1436 is 1118
9999 mem: storing 1462 in location 1118
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1433 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1462
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1433 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1437
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1433 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1462
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1433 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1438
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1433 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1462
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1433 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1439
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1433 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1462
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1433 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1440
 106 run: save-row:number <- copy *cursor-row
9999 mem: location 1437 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1441
 106 run: save-column:number <- copy *cursor-column
9999 mem: location 1438 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1442
 106 run: screen-width:number <- screen-width screen
9999 mem: location 1435 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1429
 107 run: break-unless sc, 
9999 mem: location 1429 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1429 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1429 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1430
 107 run: reply width
9999 mem: location 1430 is 10
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 10
9999 mem: storing 10 in location 1443
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1435 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1429
 107 run: break-unless sc, 
9999 mem: location 1429 is 1009
9999 run: jump-unless fell through
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1429 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1429 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1430
 107 run: reply height
9999 mem: location 1430 is 5
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 5
9999 mem: storing 5 in location 1444
 106 run: wrap-column:number <- subtract right, 1
9999 mem: location 1440 is 9
9999 mem: storing 8 in location 1445
 106 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1438 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1445 is 8
9999 mem: storing 0 in location 1446
 106 run: break-unless at-wrap?, 
9999 mem: location 1446 is 0
9999 run: jumping to instruction 39
 106 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1438 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1438 is 1122
9999 mem: storing 1 in location 1122
 106 run: next:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1436 is 1118
9999 mem: location 1118 is 1462
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1462 in location 1429
 107 run: jump-if in, 1:offset
9999 mem: location 1429 is 1462
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1429 is 1462
9999 mem: location 1462 is 48
9999 mem: location 1463 is 1173
9999 mem: location 1464 is 1170
9999 mem: location 1429 is 1462
9999 run: address to copy is 1463
9999 run: its type is address
9999 mem: location 1463 is 1173
9999 mem: storing 1173 in location 1430
 107 run: reply result
9999 mem: location 1430 is 1173
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1452
 106 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1452 is 1173
9999 mem: storing 0 in location 1453
 106 run: break-unless at-end?, 
9999 mem: location 1453 is 0
9999 run: jumping to instruction 53
 106 run: break-unless next, 
9999 mem: location 1452 is 1173
9999 run: jump-unless fell through
 106 run: at-right?:boolean <- greater-or-equal *cursor-column, screen-width
9999 mem: location 1438 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1443 is 10
9999 mem: storing 0 in location 1456
 106 run: break-if at-right?, 
9999 mem: location 1456 is 0
9999 run: jump-if fell through
 106 run: curr:address:duplex-list <- copy *before-cursor
9999 mem: location 1436 is 1118
9999 mem: location 1118 is 1462
9999 mem: storing 1462 in location 1458
 106 run: move-cursor screen, save-row, save-column
9999 mem: location 1435 is 1009
9999 mem: location 1441 is 2
9999 mem: location 1442 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1212
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1213
 107 run: break-unless sc, 
9999 mem: location 1211 is 1009
9999 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 107 run: *row <- copy new-row
9999 mem: location 1212 is 2
9999 mem: location 1214 is 1011
9999 mem: storing 2 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 107 run: *column <- copy new-column
9999 mem: location 1213 is 0
9999 mem: location 1215 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column:number <- copy save-column
9999 mem: location 1442 is 0
9999 mem: storing 0 in location 1459
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1459 is 0
9999 mem: location 1440 is 9
9999 mem: storing 0 in location 1456
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1456 is 0
9999 run: jumping to instruction 65
 106 run: break-unless curr, 
9999 mem: location 1458 is 1462
9999 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1458 is 1462
9999 mem: location 1462 is 48
9999 mem: location 1463 is 1173
9999 mem: location 1464 is 1170
9999 mem: location 1458 is 1462
9999 run: address to copy is 1462
9999 run: its type is character
9999 mem: location 1462 is 48
9999 mem: storing 48 in location 1460
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1460 is 48
9999 mem: storing 0 in location 1461
 106 run: break-if at-newline?, 
9999 mem: location 1461 is 0
9999 run: jump-if fell through
 106 run: print-character screen, currc
9999 mem: location 1435 is 1009
9999 mem: location 1460 is 48
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 48 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: break-if color-found?, 
9999 mem: location 1232 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: break-if bg-color-found?, 
9999 mem: location 1234 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 48
  90 print-character: 48 
 107 run: break-unless sc, 
9999 mem: location 1229 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 48
9999 mem: storing 0 in location 1240
 107 run: break-unless newline?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1243
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 48
9999 mem: storing 0 in location 1246
 107 run: break-unless backspace?, 
9999 mem: location 1246 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 20
9999 mem: storing 1055 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1055
9999 mem: location 1055 is 100
9999 mem: location 1056 is 7
9999 mem: location 1248 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 48
9999 mem: location 1249 is 1055
9999 mem: storing 48 in location 1055
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1055
9999 mem: location 1055 is 48
9999 mem: location 1056 is 7
9999 mem: location 1248 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1056
9999 mem: storing 7 in location 1056
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: break-if at-right?, 
9999 mem: location 1252 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1459 is 0
9999 mem: storing 1 in location 1459
 106 run: curr <- next-duplex curr
9999 mem: location 1458 is 1462
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1462 in location 1429
 107 run: jump-if in, 1:offset
9999 mem: location 1429 is 1462
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1429 is 1462
9999 mem: location 1462 is 48
9999 mem: location 1463 is 1173
9999 mem: location 1464 is 1170
9999 mem: location 1429 is 1462
9999 run: address to copy is 1463
9999 run: its type is address
9999 mem: location 1463 is 1173
9999 mem: storing 1173 in location 1430
 107 run: reply result
9999 mem: location 1430 is 1173
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1458
 106 run: loop 
9999 run: jumping to instruction 62
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1459 is 1
9999 mem: location 1440 is 9
9999 mem: storing 0 in location 1456
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1456 is 0
9999 run: jumping to instruction 65
 106 run: break-unless curr, 
9999 mem: location 1458 is 1173
9999 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1458 is 1173
9999 mem: location 1173 is 100
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1462
9999 mem: location 1458 is 1173
9999 run: address to copy is 1173
9999 run: its type is character
9999 mem: location 1173 is 100
9999 mem: storing 100 in location 1460
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1460 is 100
9999 mem: storing 0 in location 1461
 106 run: break-if at-newline?, 
9999 mem: location 1461 is 0
9999 run: jump-if fell through
 106 run: print-character screen, currc
9999 mem: location 1435 is 1009
9999 mem: location 1460 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: break-if color-found?, 
9999 mem: location 1232 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: break-if bg-color-found?, 
9999 mem: location 1234 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 100
  90 print-character: 100 
 107 run: break-unless sc, 
9999 mem: location 1229 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 100
9999 mem: storing 0 in location 1240
 107 run: break-unless newline?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1243
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 100
9999 mem: storing 0 in location 1246
 107 run: break-unless backspace?, 
9999 mem: location 1246 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 21
9999 mem: storing 1057 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1057
9999 mem: location 1057 is 101
9999 mem: location 1058 is 7
9999 mem: location 1248 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 100
9999 mem: location 1249 is 1057
9999 mem: storing 100 in location 1057
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1057
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1248 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1058
9999 mem: storing 7 in location 1058
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: break-if at-right?, 
9999 mem: location 1252 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1239 is 1012
9999 mem: storing 2 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1459 is 1
9999 mem: storing 2 in location 1459
 106 run: curr <- next-duplex curr
9999 mem: location 1458 is 1173
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1429
 107 run: jump-if in, 1:offset
9999 mem: location 1429 is 1173
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1429 is 1173
9999 mem: location 1173 is 100
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1462
9999 mem: location 1429 is 1173
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1430
 107 run: reply result
9999 mem: location 1430 is 1176
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1458
 106 run: loop 
9999 run: jumping to instruction 62
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1459 is 2
9999 mem: location 1440 is 9
9999 mem: storing 0 in location 1456
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1456 is 0
9999 run: jumping to instruction 65
 106 run: break-unless curr, 
9999 mem: location 1458 is 1176
9999 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1458 is 1176
9999 mem: location 1176 is 101
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1458 is 1176
9999 run: address to copy is 1176
9999 run: its type is character
9999 mem: location 1176 is 101
9999 mem: storing 101 in location 1460
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1460 is 101
9999 mem: storing 0 in location 1461
 106 run: break-if at-newline?, 
9999 mem: location 1461 is 0
9999 run: jump-if fell through
 106 run: print-character screen, currc
9999 mem: location 1435 is 1009
9999 mem: location 1460 is 101
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: break-if color-found?, 
9999 mem: location 1232 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: break-if bg-color-found?, 
9999 mem: location 1234 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 101
  90 print-character: 101 
 107 run: break-unless sc, 
9999 mem: location 1229 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 101
9999 mem: storing 0 in location 1240
 107 run: break-unless newline?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1243
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 101
9999 mem: storing 0 in location 1246
 107 run: break-unless backspace?, 
9999 mem: location 1246 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 22
9999 mem: storing 1059 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1059
9999 mem: location 1059 is 102
9999 mem: location 1060 is 7
9999 mem: location 1248 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 101
9999 mem: location 1249 is 1059
9999 mem: storing 101 in location 1059
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1059
9999 mem: location 1059 is 101
9999 mem: location 1060 is 7
9999 mem: location 1248 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1060
9999 mem: storing 7 in location 1060
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: break-if at-right?, 
9999 mem: location 1252 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1239 is 1012
9999 mem: storing 3 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1459 is 2
9999 mem: storing 3 in location 1459
 106 run: curr <- next-duplex curr
9999 mem: location 1458 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1429
 107 run: jump-if in, 1:offset
9999 mem: location 1429 is 1176
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1429 is 1176
9999 mem: location 1176 is 101
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1429 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1430
 107 run: reply result
9999 mem: location 1430 is 1179
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1458
 106 run: loop 
9999 run: jumping to instruction 62
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1459 is 3
9999 mem: location 1440 is 9
9999 mem: storing 0 in location 1456
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1456 is 0
9999 run: jumping to instruction 65
 106 run: break-unless curr, 
9999 mem: location 1458 is 1179
9999 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1458 is 1179
9999 mem: location 1179 is 102
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1176
9999 mem: location 1458 is 1179
9999 run: address to copy is 1179
9999 run: its type is character
9999 mem: location 1179 is 102
9999 mem: storing 102 in location 1460
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1460 is 102
9999 mem: storing 0 in location 1461
 106 run: break-if at-newline?, 
9999 mem: location 1461 is 0
9999 run: jump-if fell through
 106 run: print-character screen, currc
9999 mem: location 1435 is 1009
9999 mem: location 1460 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: break-if color-found?, 
9999 mem: location 1232 is 0
9999 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: break-if bg-color-found?, 
9999 mem: location 1234 is 0
9999 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 102
  90 print-character: 102 
 107 run: break-unless sc, 
9999 mem: location 1229 is 1009
9999 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9999 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9999 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9999 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9999 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1240
 107 run: break-unless newline?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1243
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1246
 107 run: break-unless backspace?, 
9999 mem: location 1246 is 0
9999 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 23
9999 mem: storing 1061 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1248 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 102
9999 mem: location 1249 is 1061
9999 mem: storing 102 in location 1061
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1061
9999 mem: location 1061 is 102
9999 mem: location 1062 is 7
9999 mem: location 1248 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1062
9999 mem: storing 7 in location 1062
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: break-if at-right?, 
9999 mem: location 1252 is 0
9999 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1239 is 1012
9999 mem: storing 4 in location 1012
9999 schedule: print-character/insert-at-cursor/handle-keyboard-event/editor-event-loop/run1002/scenario-editor-moves-to-next-line-with-down-arrow
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1459 is 3
9999 mem: storing 4 in location 1459
 106 run: curr <- next-duplex curr
9999 mem: location 1458 is 1179
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1429
 107 run: jump-if in, 1:offset
9999 mem: location 1429 is 1179
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1429 is 1179
9999 mem: location 1179 is 102
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1176
9999 mem: location 1429 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1430
 107 run: reply result
9999 mem: location 1430 is 0
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 0
9999 mem: storing 0 in location 1458
 106 run: loop 
9999 run: jumping to instruction 62
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1459 is 4
9999 mem: location 1440 is 9
9999 mem: storing 0 in location 1456
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1456 is 0
9999 run: jumping to instruction 65
 106 run: break-unless curr, 
9999 mem: location 1458 is 0
9999 run: jumping to instruction 73
 106 run: reply editor/same-as-ingredient:0, screen/same-as-ingredient:2, 0/no-more-render
9999 mem: location 1433 is 1115
9999 mem: location 1435 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1115
9999 run: result 1 is 1009
9999 run: result 2 is 0
9999 mem: storing 1115 in location 1312
9999 mem: storing 1009 in location 1311
9999 mem: storing 0 in location 1369
 105 run: top-after:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1462
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1154
9999 mem: storing 1154 in location 1363
 105 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1462
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1330
 105 run: break-unless *undo, 
9999 mem: location 1330 is 1124
9999 mem: location 1124 is 1418
9999 run: jump-unless fell through
 105 run: op:address:operation/skiptypecheck <- first *undo
9999 mem: location 1330 is 1124
9999 mem: location 1124 is 1418
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:list <- next-ingredient 
9999 mem: storing 1418 in location 1429
 106 run: result:location <- get *in, value:offset
9999 mem: location 1429 is 1418
9999 mem: location 1418 is 1216
9999 mem: location 1419 is 0
9999 mem: location 1429 is 1418
9999 run: address to copy is 1418
9999 run: its type is number
9999 mem: location 1418 is 1216
9999 mem: storing 1216 in location 1430
 106 run: reply result
9999 mem: location 1430 is 1216
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1216
9999 mem: storing 1216 in location 1329
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1329 is 1216
9999 mem: location 1216 is 1
9999 mem: location 1217 is 1
9999 mem: location 1218 is 0
9999 mem: location 1219 is 1154
9999 mem: location 1220 is 2
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1154
9999 mem: location 1223 is 4
9999 mem: location 1224 is 0
9999 mem: location 1225 is 0
9999 mem: location 1226 is 0
9999 mem: location 1329 is 1216
9999 mem: storing 0 in location 1336
 105 run: break-unless typing, 
9999 mem: location 1336 is 0
9999 run: jumping to instruction 423
 105 run: insert-from:address:duplex-list <- next-duplex cursor-before
9999 mem: location 1374 is 1170
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1170 in location 1429
 106 run: jump-if in, 1:offset
9999 mem: location 1429 is 1170
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1429 is 1170
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1462
9999 mem: location 1172 is 1167
9999 mem: location 1429 is 1170
9999 run: address to copy is 1171
9999 run: its type is address
9999 mem: location 1171 is 1462
9999 mem: storing 1462 in location 1430
 106 run: reply result
9999 mem: location 1430 is 1462
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1462
9999 mem: storing 1462 in location 1337
 105 run: insert-to:address:duplex-list <- next-duplex insert-from
9999 mem: location 1337 is 1462
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1462 in location 1429
 106 run: jump-if in, 1:offset
9999 mem: location 1429 is 1462
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1429 is 1462
9999 mem: location 1462 is 48
9999 mem: location 1463 is 1173
9999 mem: location 1464 is 1170
9999 mem: location 1429 is 1462
9999 run: address to copy is 1463
9999 run: its type is address
9999 mem: location 1463 is 1173
9999 mem: storing 1173 in location 1430
 106 run: reply result
9999 mem: location 1430 is 1173
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1376
 105 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1465
9999 mem: storing 1465 in location 1329
 105 run: *op <- merge 0/insert-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to, 1/coalesce
9999 mem: location 1324 is 2
9999 mem: location 1325 is 0
9999 mem: location 1361 is 1154
9999 mem: location 1322 is 1121
9999 mem: location 1121 is 2
9999 mem: location 1323 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1363 is 1154
9999 mem: location 1337 is 1462
9999 mem: location 1376 is 1173
9999 mem: location 1329 is 1465
9999 mem: location 1329 is 1465
9999 mem: storing 0 in location 1465
9999 mem: storing 2 in location 1466
9999 mem: storing 0 in location 1467
9999 mem: storing 1154 in location 1468
9999 mem: storing 2 in location 1469
9999 mem: storing 1 in location 1470
9999 mem: storing 1154 in location 1471
9999 mem: storing 1462 in location 1472
9999 mem: storing 1173 in location 1473
9999 mem: storing 1 in location 1474
 105 run: editor <- add-operation editor, op
9999 mem: location 1312 is 1115
9999 mem: location 1329 is 1465
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1255
 106 run: op:address:operation <- next-ingredient 
9999 mem: storing 1465 in location 1256
 106 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1255 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1462
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1255 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1257
 106 run: *undo/skiptypecheck <- push op, *undo
9999 mem: location 1256 is 1465
9999 mem: location 1257 is 1124
9999 mem: location 1124 is 1418
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:location <- next-ingredient 
9999 mem: storing 1465 in location 1211
 107 run: in:address:list <- next-ingredient 
9999 mem: storing 1418 in location 1212
 107 run: result:address:list <- new list:type
9999 mem: new alloc: 1476
9999 mem: storing 1476 in location 1213
 107 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1213 is 1476
9999 mem: location 1476 is 0
9999 mem: location 1477 is 0
9999 mem: location 1213 is 1476
9999 run: address to copy is 1476
9999 mem: storing 1476 in location 1214
 107 run: *val <- copy x
9999 mem: location 1211 is 1465
9999 mem: location 1214 is 1476
9999 mem: storing 1465 in location 1476
 107 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1213 is 1476
9999 mem: location 1476 is 1465
9999 mem: location 1477 is 0
9999 mem: location 1213 is 1476
9999 run: address to copy is 1477
9999 mem: storing 1477 in location 1215
 107 run: *next <- copy in
9999 mem: location 1212 is 1418
9999 mem: location 1215 is 1477
9999 mem: storing 1418 in location 1477
 107 run: reply result
9999 mem: location 1213 is 1476
9999 trace: reply: decrementing callstack depth from 6
9999 run: result 0 is 1476
9999 mem: location 1257 is 1124
9999 mem: storing 1476 in location 1124
 106 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1255 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1462
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1476
9999 mem: location 1125 is 0
9999 mem: location 1255 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1258
 106 run: *redo <- copy 0
9999 mem: location 1258 is 1125
9999 mem: storing 0 in location 1125
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1255 is 1115
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1312
 105 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1311 is 1009
9999 mem: location 1312 is 1115
9999 mem: location 1369 is 0
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1296
9999 mem: storing 1115 in location 1298
9999 mem: storing 0 in location 1308
 104 run: break-unless go-render?, 
9999 mem: location 1308 is 0
9999 run: jumping to instruction 25
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1462
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1476
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1299
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1462
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1476
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1300
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1296 is 1009
9999 mem: location 1299 is 2
9999 mem: location 1300 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1212
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1213
 105 run: break-unless sc, 
9999 mem: location 1211 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 105 run: *row <- copy new-row
9999 mem: location 1212 is 2
9999 mem: location 1214 is 1011
9999 mem: storing 2 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 105 run: *column <- copy new-column
9999 mem: location 1213 is 1
9999 mem: location 1215 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1296
 104 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1297 is 1425
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1425 in location 1261
 105 run: break-unless x, 
9999 mem: location 1261 is 1425
9999 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1261 is 1425
9999 mem: location 1425 is 1
9999 mem: location 1426 is 1420
9999 mem: location 1261 is 1425
9999 run: address to copy is 1425
9999 mem: storing 1425 in location 1262
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1261 is 1425
9999 mem: location 1425 is 1
9999 mem: location 1426 is 1420
9999 mem: location 1261 is 1425
9999 run: address to copy is 1426
9999 run: its type is address
9999 mem: location 1426 is 1420
9999 mem: storing 1420 in location 1263
 105 run: max:number <- length *buf
9999 mem: location 1263 is 1420
9999 mem: storing 1 in location 1264
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1262 is 1425
9999 mem: location 1425 is 1
9999 mem: location 1264 is 1
9999 mem: storing 1 in location 1265
 105 run: break-unless done?, 
9999 mem: location 1265 is 1
9999 run: jump-unless fell through
 105 run: dummy:address:event <- new event:type
9999 mem: storing 1427 in location 1266
 105 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1266 is 1427
9999 mem: location 1427 is 0
9999 mem: location 1428 is 0
9999 mem: location 1429 is 0
9999 mem: location 1430 is 0
9999 mem: location 1261 is 1425
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1425
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1301
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 1425 in location 1297
9999 mem: storing 1 in location 1305
9999 mem: storing 1 in location 1306
 104 run: loop-unless found?, 
9999 mem: location 1305 is 1
9999 run: jump-unless fell through
 104 run: break-if quit?, 
9999 mem: location 1306 is 1
9999 run: jumping to instruction 28
9999 trace: fall-through: exiting editor-event-loop; decrementing callstack depth from 3
9999 trace: fall-through: exiting run1002; decrementing callstack depth from 2
 102 run: screen-should-contain [
    .          .
    .abc       .
    .0def      .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
9999 trace: fall-through: exiting scenario-editor-moves-to-next-line-with-down-arrow; decrementing callstack depth from 1
