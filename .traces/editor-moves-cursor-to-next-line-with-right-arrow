 101 run: assume-console [
    press 65514  # right arrow
    press 65514  # right arrow
    press 65514  # right arrow
    press 65514  # right arrow - next line
  ]
parse: instruction: press
parse:   ingredient: {name: "65514", properties: ["65514": "literal"]}
parse: instruction: press
parse:   ingredient: {name: "65514", properties: ["65514": "literal"]}
parse: instruction: press
parse:   ingredient: {name: "65514", properties: ["65514": "literal"]}
parse: instruction: press
parse:   ingredient: {name: "65514", properties: ["65514": "literal"]}
 101 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1001
after-brace: editor-event-loop ...
 101 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1296
9999 mem: location 2 is 1115
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 19
9999 mem: new alloc: 1298
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1300
 102 run: console:address <- next-ingredient 
9999 mem: storing 1296 in location 1301
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1302
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1296
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1296 in location 1253
 103 run: break-unless x, 
9999 mem: location 1253 is 1296
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1253 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1297 is 1279
9999 mem: location 1253 is 1296
9999 run: address to copy is 1296
9999 mem: storing 1296 in location 1254
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1253 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1297 is 1279
9999 mem: location 1253 is 1296
9999 run: address to copy is 1297
9999 run: its type is address
9999 mem: location 1297 is 1279
9999 mem: storing 1279 in location 1255
 103 run: max:number <- length *buf
9999 mem: location 1255 is 1279
9999 mem: storing 4 in location 1256
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1254 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1256 is 4
9999 mem: storing 0 in location 1257
 103 run: break-unless done?, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1255 is 1279
9999 mem: location 1254 is 1296
9999 mem: location 1296 is 0
9999 run: address to copy is 1280
9999 run: its type is event
9999 mem: location 1280 is 1
9999 mem: location 1281 is 65514
9999 mem: location 1282 is 0
9999 mem: location 1283 is 0
9999 mem: storing 1 in location 1259
9999 mem: storing 65514 in location 1260
9999 mem: storing 0 in location 1261
9999 mem: storing 0 in location 1262
 103 run: *idx <- add *idx, 1
9999 mem: location 1254 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1254 is 1296
9999 mem: storing 1 in location 1296
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1259 is 1
9999 mem: location 1260 is 65514
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1253 is 1296
9999 run: result 0 is [1, 65514, 0, 0]
9999 run: result 1 is 1296
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1303
9999 mem: storing 65514 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 1296 in location 1301
9999 mem: storing 1 in location 1307
9999 mem: storing 0 in location 1308
 102 run: loop-unless found?, 
9999 mem: location 1307 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1303 is 1
9999 mem: location 1304 is 65514
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
9999 mem: storing 0 in location 1309
 102 run: break-unless t, 
9999 mem: location 1309 is 0
9999 run: jumping to instruction 26
 102 run: break-if t, 
9999 mem: location 1309 is 0
9999 run: jump-if fell through
 102 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1300 is 1009
9999 mem: location 1302 is 1115
9999 mem: location 1303 is 1
9999 mem: location 1304 is 65514
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 69
9999 mem: new alloc: 1318
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1320
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1321
 103 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1322
9999 mem: storing 65514 in location 1323
9999 mem: storing 0 in location 1324
9999 mem: storing 0 in location 1325
 103 run: jump-if editor, 1:offset
9999 mem: location 1321 is 1115
9999 run: jumping to instruction 6
 103 run: screen-width:number <- screen-width screen
9999 mem: location 1320 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1160
 104 run: break-unless sc, 
9999 mem: location 1160 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1160 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1160 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1161
 104 run: reply width
9999 mem: location 1161 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1326
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1320 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1160
 104 run: break-unless sc, 
9999 mem: location 1160 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1160 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1160 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1161
 104 run: reply height
9999 mem: location 1161 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1327
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1152
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1328
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1152
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1329
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1152
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1330
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1152
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1331
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1152
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1332
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1331 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1331 is 1121
9999 mem: location 1331 is 1121
9999 mem: storing 1 in location 1333
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1332 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1332 is 1122
9999 mem: location 1332 is 1122
9999 mem: storing 0 in location 1334
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1322 is 1
9999 mem: location 1323 is 65514
9999 mem: location 1324 is 0
9999 mem: location 1325 is 0
9999 mem: storing 0 in location 1335
 103 run: break-unless c, 
9999 mem: location 1335 is 0
9999 run: jumping to instruction 208
 103 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1322 is 1
9999 mem: location 1323 is 65514
9999 mem: location 1324 is 0
9999 mem: location 1325 is 0
9999 mem: storing 1323 in location 1371
 103 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1371 is 1323
 103 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1347
 103 run: break-unless page-up?, 
9999 mem: location 1347 is 0
9999 run: jumping to instruction 228
 103 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1354
 103 run: break-unless page-down?, 
9999 mem: location 1354 is 0
9999 run: jumping to instruction 245
 103 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1357
 103 run: break-unless move-to-end-of-line?, 
9999 mem: location 1357 is 0
9999 run: jumping to instruction 262
 103 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1358
 103 run: break-unless move-to-start-of-line?, 
9999 mem: location 1358 is 0
9999 run: jumping to instruction 279
 103 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1372
 103 run: break-unless move-to-next-line?, 
9999 mem: location 1372 is 0
9999 run: jumping to instruction 296
 103 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1373
 103 run: break-unless move-to-previous-line?, 
9999 mem: location 1373 is 0
9999 run: jumping to instruction 313
 103 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1374
 103 run: break-unless move-to-previous-character?, 
9999 mem: location 1374 is 0
9999 run: jumping to instruction 335
 103 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 1 in location 1376
 103 run: break-unless move-to-next-character?, 
9999 mem: location 1376 is 1
9999 run: jump-unless fell through
 103 run: next-cursor:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1330 is 1118
9999 mem: location 1118 is 1152
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1152 in location 1160
 104 run: jump-if in, 1:offset
9999 mem: location 1160 is 1152
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1160 is 1152
9999 mem: location 1152 is 167
9999 mem: location 1153 is 1155
9999 mem: location 1154 is 0
9999 mem: location 1160 is 1152
9999 run: address to copy is 1153
9999 run: its type is address
9999 mem: location 1153 is 1155
9999 mem: storing 1155 in location 1161
 104 run: reply result
9999 mem: location 1161 is 1155
9999 run: result 0 is 1155
9999 mem: storing 1155 in location 1377
 103 run: break-unless next-cursor, 
9999 mem: location 1377 is 1155
9999 run: jump-unless fell through
 103 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1152
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1348
 103 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1152
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1349
 103 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1152
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1152
9999 mem: storing 1152 in location 1350
 103 run: *before-cursor <- copy next-cursor
9999 mem: location 1377 is 1155
9999 mem: location 1330 is 1118
9999 mem: location 1330 is 1118
9999 mem: storing 1155 in location 1118
 103 run: editor, go-render?:boolean <- move-cursor-coordinates-right editor, screen-height
9999 mem: location 1321 is 1115
9999 mem: location 1327 is 5
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 18
9999 mem: new alloc: 1388
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1390
 104 run: screen-height:number <- next-ingredient 
9999 mem: storing 5 in location 1391
 104 run: before-cursor:address:duplex-list <- get *editor, before-cursor:offset
9999 mem: location 1390 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1155
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1390 is 1115
9999 run: address to copy is 1118
9999 run: its type is address
9999 mem: location 1118 is 1155
9999 mem: storing 1155 in location 1392
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1390 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1155
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1390 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1393
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1390 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1155
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1390 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1394
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1390 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1155
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1390 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1395
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1390 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1155
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1390 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1396
 104 run: old-cursor-character:character <- get *before-cursor, value:offset
9999 mem: location 1392 is 1155
9999 mem: location 1155 is 97
9999 mem: location 1156 is 1162
9999 mem: location 1157 is 1152
9999 mem: location 1392 is 1155
9999 run: address to copy is 1155
9999 run: its type is number
9999 mem: location 1155 is 97
9999 mem: storing 97 in location 1397
 104 run: was-at-newline?:boolean <- equal old-cursor-character, 10/newline
9999 mem: location 1397 is 97
9999 mem: storing 0 in location 1398
 104 run: break-unless was-at-newline?, 
9999 mem: location 1398 is 0
9999 run: jumping to instruction 26
 104 run: wrap-column:number <- subtract right, 1
9999 mem: location 1396 is 9
9999 mem: storing 8 in location 1402
 104 run: at-wrap?:boolean <- equal *cursor-column, wrap-column
9999 mem: location 1394 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1402 is 8
9999 mem: storing 0 in location 1403
 104 run: break-unless at-wrap?, 
9999 mem: location 1403 is 0
9999 run: jumping to instruction 50
schedule: move-cursor-coordinates-right/handle-keyboard-event/editor-event-loop/run1001/scenario-editor-moves-cursor-to-next-line-with-right-arrow
 104 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1394 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1394 is 1122
9999 mem: storing 1 in location 1122
 104 run: reply editor/same-as-ingredient:0, 0/no-more-render
9999 mem: location 1390 is 1115
9999 run: result 0 is 1115
9999 run: result 1 is 0
9999 mem: storing 1115 in location 1321
9999 mem: storing 0 in location 1360
 103 run: screen <- move-cursor screen, *cursor-row, *cursor-column
9999 mem: location 1320 is 1009
9999 mem: location 1331 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1332 is 1122
9999 mem: location 1122 is 1
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1203
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1204
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1205
 104 run: break-unless sc, 
9999 mem: location 1203 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1203 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1203 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1206
 104 run: *row <- copy new-row
9999 mem: location 1204 is 1
9999 mem: location 1206 is 1011
9999 mem: location 1206 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1203 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1203 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1207
 104 run: *column <- copy new-column
9999 mem: location 1205 is 1
9999 mem: location 1207 is 1012
9999 mem: location 1207 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1203 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1320
 103 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1155
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1351
 103 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1155
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1352
 103 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1155
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1152
9999 mem: storing 1152 in location 1353
 103 run: op:address:operation <- new operation:type
9999 mem: storing 1000 in location 1338
 103 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, 0/empty, 0/empty
9999 mem: location 1348 is 1
9999 mem: location 1349 is 0
9999 mem: location 1350 is 1152
9999 mem: location 1351 is 1
9999 mem: location 1352 is 1
9999 mem: location 1353 is 1152
9999 mem: location 1338 is 1000
9999 mem: storing 1 in location 1000
9999 mem: storing 1 in location 1001
9999 mem: storing 0 in location 1002
9999 mem: storing 1152 in location 1003
9999 mem: storing 1 in location 1004
9999 mem: storing 1 in location 1005
9999 mem: storing 1152 in location 1006
9999 mem: storing 0 in location 1007
9999 mem: storing 0 in location 1008
 103 run: editor <- add-operation editor, op
9999 mem: location 1321 is 1115
9999 mem: location 1338 is 1000
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1247
 104 run: op:address:operation <- next-ingredient 
9999 mem: storing 1000 in location 1248
 104 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1247 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1155
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1247 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1249
 104 run: *undo <- push op, *undo
9999 mem: location 1248 is 1000
9999 mem: location 1249 is 1124
9999 mem: location 1124 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: x:location <- next-ingredient 
9999 mem: storing 1000 in location 1203
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 0 in location 1204
 105 run: result:address:list <- new list:type
9999 mem: new alloc: 1407
9999 mem: storing 1407 in location 1205
 105 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1205 is 1407
9999 mem: location 1407 is 0
9999 mem: location 1408 is 0
9999 mem: location 1205 is 1407
9999 run: address to copy is 1407
9999 mem: storing 1407 in location 1206
 105 run: *val <- copy x
9999 mem: location 1203 is 1000
9999 mem: location 1206 is 1407
9999 mem: location 1206 is 1407
9999 mem: storing 1000 in location 1407
 105 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1205 is 1407
9999 mem: location 1407 is 1000
9999 mem: location 1408 is 0
9999 mem: location 1205 is 1407
9999 run: address to copy is 1408
9999 mem: storing 1408 in location 1207
 105 run: *next <- copy in
9999 mem: location 1204 is 0
9999 mem: location 1207 is 1408
9999 mem: location 1207 is 1408
9999 mem: storing 0 in location 1408
 105 run: reply result
9999 mem: location 1205 is 1407
9999 run: result 0 is 1407
9999 mem: location 1249 is 1124
9999 mem: storing 1407 in location 1124
 104 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1247 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1155
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1407
9999 mem: location 1125 is 0
9999 mem: location 1247 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1250
 104 run: *redo <- copy 0
9999 mem: location 1250 is 1125
9999 mem: location 1250 is 1125
9999 mem: storing 0 in location 1125
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1247 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1321
 103 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1320 is 1009
9999 mem: location 1321 is 1115
9999 mem: location 1360 is 0
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1300
9999 mem: storing 1115 in location 1302
9999 mem: storing 0 in location 1317
 102 run: break-unless go-render?, 
9999 mem: location 1317 is 0
9999 run: jumping to instruction 33
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1296
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1296 in location 1253
 103 run: break-unless x, 
9999 mem: location 1253 is 1296
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1253 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1297 is 1279
9999 mem: location 1253 is 1296
9999 run: address to copy is 1296
9999 mem: storing 1296 in location 1254
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1253 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1297 is 1279
9999 mem: location 1253 is 1296
9999 run: address to copy is 1297
9999 run: its type is address
9999 mem: location 1297 is 1279
9999 mem: storing 1279 in location 1255
 103 run: max:number <- length *buf
9999 mem: location 1255 is 1279
9999 mem: storing 4 in location 1256
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1254 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1256 is 4
9999 mem: storing 0 in location 1257
 103 run: break-unless done?, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1255 is 1279
9999 mem: location 1254 is 1296
9999 mem: location 1296 is 1
9999 run: address to copy is 1284
9999 run: its type is event
9999 mem: location 1284 is 1
9999 mem: location 1285 is 65514
9999 mem: location 1286 is 0
9999 mem: location 1287 is 0
9999 mem: storing 1 in location 1259
9999 mem: storing 65514 in location 1260
9999 mem: storing 0 in location 1261
9999 mem: storing 0 in location 1262
 103 run: *idx <- add *idx, 1
9999 mem: location 1254 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1254 is 1296
9999 mem: storing 2 in location 1296
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1259 is 1
9999 mem: location 1260 is 65514
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1253 is 1296
9999 run: result 0 is [1, 65514, 0, 0]
9999 run: result 1 is 1296
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1303
9999 mem: storing 65514 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 1296 in location 1301
9999 mem: storing 1 in location 1307
9999 mem: storing 0 in location 1308
 102 run: loop-unless found?, 
9999 mem: location 1307 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1303 is 1
9999 mem: location 1304 is 65514
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
9999 mem: storing 0 in location 1309
 102 run: break-unless t, 
9999 mem: location 1309 is 0
9999 run: jumping to instruction 26
 102 run: break-if t, 
9999 mem: location 1309 is 0
9999 run: jump-if fell through
 102 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1300 is 1009
9999 mem: location 1302 is 1115
9999 mem: location 1303 is 1
9999 mem: location 1304 is 65514
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 69
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1320
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1321
 103 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1322
9999 mem: storing 65514 in location 1323
9999 mem: storing 0 in location 1324
9999 mem: storing 0 in location 1325
 103 run: jump-if editor, 1:offset
9999 mem: location 1321 is 1115
9999 run: jumping to instruction 6
 103 run: screen-width:number <- screen-width screen
9999 mem: location 1320 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1160
 104 run: break-unless sc, 
9999 mem: location 1160 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1160 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1160 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1161
 104 run: reply width
9999 mem: location 1161 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1326
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1320 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1160
 104 run: break-unless sc, 
9999 mem: location 1160 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1160 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1160 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1161
 104 run: reply height
9999 mem: location 1161 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1327
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1155
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1407
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1328
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1155
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1407
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1329
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1155
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1407
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1330
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1155
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1407
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1331
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1155
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1407
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1332
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1331 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1331 is 1121
9999 mem: location 1331 is 1121
9999 mem: storing 1 in location 1333
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1332 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1332 is 1122
9999 mem: location 1332 is 1122
9999 mem: storing 1 in location 1334
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1322 is 1
9999 mem: location 1323 is 65514
9999 mem: location 1324 is 0
9999 mem: location 1325 is 0
9999 mem: storing 0 in location 1335
 103 run: break-unless c, 
9999 mem: location 1335 is 0
9999 run: jumping to instruction 208
 103 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1322 is 1
9999 mem: location 1323 is 65514
9999 mem: location 1324 is 0
9999 mem: location 1325 is 0
9999 mem: storing 1323 in location 1371
 103 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1371 is 1323
 103 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1347
 103 run: break-unless page-up?, 
9999 mem: location 1347 is 0
9999 run: jumping to instruction 228
 103 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1354
 103 run: break-unless page-down?, 
9999 mem: location 1354 is 0
9999 run: jumping to instruction 245
 103 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1357
 103 run: break-unless move-to-end-of-line?, 
9999 mem: location 1357 is 0
9999 run: jumping to instruction 262
 103 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1358
 103 run: break-unless move-to-start-of-line?, 
9999 mem: location 1358 is 0
9999 run: jumping to instruction 279
 103 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1372
 103 run: break-unless move-to-next-line?, 
9999 mem: location 1372 is 0
9999 run: jumping to instruction 296
 103 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1373
 103 run: break-unless move-to-previous-line?, 
9999 mem: location 1373 is 0
9999 run: jumping to instruction 313
 103 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1374
 103 run: break-unless move-to-previous-character?, 
9999 mem: location 1374 is 0
9999 run: jumping to instruction 335
 103 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 1 in location 1376
 103 run: break-unless move-to-next-character?, 
9999 mem: location 1376 is 1
9999 run: jump-unless fell through
 103 run: next-cursor:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1330 is 1118
9999 mem: location 1118 is 1155
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1155 in location 1160
 104 run: jump-if in, 1:offset
9999 mem: location 1160 is 1155
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1160 is 1155
9999 mem: location 1155 is 97
9999 mem: location 1156 is 1162
9999 mem: location 1157 is 1152
9999 mem: location 1160 is 1155
9999 run: address to copy is 1156
9999 run: its type is address
9999 mem: location 1156 is 1162
9999 mem: storing 1162 in location 1161
 104 run: reply result
9999 mem: location 1161 is 1162
9999 run: result 0 is 1162
9999 mem: storing 1162 in location 1377
 103 run: break-unless next-cursor, 
9999 mem: location 1377 is 1162
9999 run: jump-unless fell through
 103 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1155
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1407
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1348
 103 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1155
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1407
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1349
 103 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1155
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1407
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1152
9999 mem: storing 1152 in location 1350
 103 run: *before-cursor <- copy next-cursor
9999 mem: location 1377 is 1162
9999 mem: location 1330 is 1118
9999 mem: location 1330 is 1118
9999 mem: storing 1162 in location 1118
 103 run: editor, go-render?:boolean <- move-cursor-coordinates-right editor, screen-height
9999 mem: location 1321 is 1115
9999 mem: location 1327 is 5
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 18
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1390
 104 run: screen-height:number <- next-ingredient 
9999 mem: storing 5 in location 1391
 104 run: before-cursor:address:duplex-list <- get *editor, before-cursor:offset
9999 mem: location 1390 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1162
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1407
9999 mem: location 1125 is 0
9999 mem: location 1390 is 1115
9999 run: address to copy is 1118
9999 run: its type is address
9999 mem: location 1118 is 1162
9999 mem: storing 1162 in location 1392
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1390 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1162
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1407
9999 mem: location 1125 is 0
9999 mem: location 1390 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1393
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1390 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1162
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1407
9999 mem: location 1125 is 0
9999 mem: location 1390 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1394
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1390 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1162
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1407
9999 mem: location 1125 is 0
9999 mem: location 1390 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1395
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1390 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1162
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1407
9999 mem: location 1125 is 0
9999 mem: location 1390 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1396
 104 run: old-cursor-character:character <- get *before-cursor, value:offset
9999 mem: location 1392 is 1162
9999 mem: location 1162 is 98
9999 mem: location 1163 is 1165
9999 mem: location 1164 is 1155
9999 mem: location 1392 is 1162
9999 run: address to copy is 1162
9999 run: its type is number
9999 mem: location 1162 is 98
9999 mem: storing 98 in location 1397
 104 run: was-at-newline?:boolean <- equal old-cursor-character, 10/newline
9999 mem: location 1397 is 98
9999 mem: storing 0 in location 1398
 104 run: break-unless was-at-newline?, 
9999 mem: location 1398 is 0
9999 run: jumping to instruction 26
 104 run: wrap-column:number <- subtract right, 1
9999 mem: location 1396 is 9
9999 mem: storing 8 in location 1402
 104 run: at-wrap?:boolean <- equal *cursor-column, wrap-column
9999 mem: location 1394 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1402 is 8
9999 mem: storing 0 in location 1403
 104 run: break-unless at-wrap?, 
9999 mem: location 1403 is 0
9999 run: jumping to instruction 50
 104 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1394 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1394 is 1122
9999 mem: storing 2 in location 1122
 104 run: reply editor/same-as-ingredient:0, 0/no-more-render
9999 mem: location 1390 is 1115
9999 run: result 0 is 1115
9999 run: result 1 is 0
9999 mem: storing 1115 in location 1321
9999 mem: storing 0 in location 1360
 103 run: screen <- move-cursor screen, *cursor-row, *cursor-column
9999 mem: location 1320 is 1009
9999 mem: location 1331 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1332 is 1122
9999 mem: location 1122 is 2
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1203
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1204
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 2 in location 1205
 104 run: break-unless sc, 
9999 mem: location 1203 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1203 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1203 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1206
 104 run: *row <- copy new-row
9999 mem: location 1204 is 1
9999 mem: location 1206 is 1011
9999 mem: location 1206 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1203 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1203 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1207
 104 run: *column <- copy new-column
9999 mem: location 1205 is 2
9999 mem: location 1207 is 1012
9999 mem: location 1207 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1203 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1320
 103 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1162
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1407
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1351
 103 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1162
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1407
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 1352
 103 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1162
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1407
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1152
9999 mem: storing 1152 in location 1353
 103 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1409
9999 mem: storing 1409 in location 1338
 103 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, 0/empty, 0/empty
9999 mem: location 1348 is 1
9999 mem: location 1349 is 1
9999 mem: location 1350 is 1152
9999 mem: location 1351 is 1
9999 mem: location 1352 is 2
9999 mem: location 1353 is 1152
9999 mem: location 1338 is 1409
9999 mem: storing 1 in location 1409
9999 mem: storing 1 in location 1410
9999 mem: storing 1 in location 1411
9999 mem: storing 1152 in location 1412
9999 mem: storing 1 in location 1413
9999 mem: storing 2 in location 1414
9999 mem: storing 1152 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
 103 run: editor <- add-operation editor, op
9999 mem: location 1321 is 1115
9999 mem: location 1338 is 1409
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1247
 104 run: op:address:operation <- next-ingredient 
9999 mem: storing 1409 in location 1248
 104 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1247 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1162
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1407
9999 mem: location 1125 is 0
9999 mem: location 1247 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1249
 104 run: *undo <- push op, *undo
9999 mem: location 1248 is 1409
9999 mem: location 1249 is 1124
9999 mem: location 1124 is 1407
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: x:location <- next-ingredient 
9999 mem: storing 1409 in location 1203
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 1407 in location 1204
 105 run: result:address:list <- new list:type
9999 mem: new alloc: 1418
9999 mem: storing 1418 in location 1205
 105 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1205 is 1418
9999 mem: location 1418 is 0
9999 mem: location 1419 is 0
9999 mem: location 1205 is 1418
9999 run: address to copy is 1418
9999 mem: storing 1418 in location 1206
 105 run: *val <- copy x
9999 mem: location 1203 is 1409
9999 mem: location 1206 is 1418
9999 mem: location 1206 is 1418
9999 mem: storing 1409 in location 1418
 105 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1205 is 1418
9999 mem: location 1418 is 1409
9999 mem: location 1419 is 0
9999 mem: location 1205 is 1418
9999 run: address to copy is 1419
9999 mem: storing 1419 in location 1207
 105 run: *next <- copy in
9999 mem: location 1204 is 1407
9999 mem: location 1207 is 1419
9999 mem: location 1207 is 1419
9999 mem: storing 1407 in location 1419
 105 run: reply result
9999 mem: location 1205 is 1418
9999 run: result 0 is 1418
9999 mem: location 1249 is 1124
9999 mem: storing 1418 in location 1124
 104 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1247 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1162
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1247 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1250
 104 run: *redo <- copy 0
9999 mem: location 1250 is 1125
9999 mem: location 1250 is 1125
9999 mem: storing 0 in location 1125
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1247 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1321
 103 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1320 is 1009
9999 mem: location 1321 is 1115
9999 mem: location 1360 is 0
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1300
9999 mem: storing 1115 in location 1302
9999 mem: storing 0 in location 1317
 102 run: break-unless go-render?, 
9999 mem: location 1317 is 0
9999 run: jumping to instruction 33
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1296
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1296 in location 1253
 103 run: break-unless x, 
9999 mem: location 1253 is 1296
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1253 is 1296
9999 mem: location 1296 is 2
9999 mem: location 1297 is 1279
9999 mem: location 1253 is 1296
9999 run: address to copy is 1296
9999 mem: storing 1296 in location 1254
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1253 is 1296
9999 mem: location 1296 is 2
9999 mem: location 1297 is 1279
9999 mem: location 1253 is 1296
9999 run: address to copy is 1297
9999 run: its type is address
9999 mem: location 1297 is 1279
9999 mem: storing 1279 in location 1255
 103 run: max:number <- length *buf
9999 mem: location 1255 is 1279
9999 mem: storing 4 in location 1256
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1254 is 1296
9999 mem: location 1296 is 2
9999 mem: location 1256 is 4
9999 mem: storing 0 in location 1257
 103 run: break-unless done?, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1255 is 1279
9999 mem: location 1254 is 1296
9999 mem: location 1296 is 2
9999 run: address to copy is 1288
9999 run: its type is event
9999 mem: location 1288 is 1
9999 mem: location 1289 is 65514
9999 mem: location 1290 is 0
9999 mem: location 1291 is 0
9999 mem: storing 1 in location 1259
9999 mem: storing 65514 in location 1260
9999 mem: storing 0 in location 1261
9999 mem: storing 0 in location 1262
 103 run: *idx <- add *idx, 1
9999 mem: location 1254 is 1296
9999 mem: location 1296 is 2
9999 mem: location 1254 is 1296
9999 mem: storing 3 in location 1296
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1259 is 1
9999 mem: location 1260 is 65514
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1253 is 1296
9999 run: result 0 is [1, 65514, 0, 0]
9999 run: result 1 is 1296
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1303
9999 mem: storing 65514 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 1296 in location 1301
9999 mem: storing 1 in location 1307
9999 mem: storing 0 in location 1308
 102 run: loop-unless found?, 
9999 mem: location 1307 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1303 is 1
9999 mem: location 1304 is 65514
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
9999 mem: storing 0 in location 1309
 102 run: break-unless t, 
9999 mem: location 1309 is 0
9999 run: jumping to instruction 26
 102 run: break-if t, 
9999 mem: location 1309 is 0
9999 run: jump-if fell through
 102 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1300 is 1009
9999 mem: location 1302 is 1115
9999 mem: location 1303 is 1
9999 mem: location 1304 is 65514
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 69
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1320
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1321
 103 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1322
9999 mem: storing 65514 in location 1323
9999 mem: storing 0 in location 1324
9999 mem: storing 0 in location 1325
 103 run: jump-if editor, 1:offset
9999 mem: location 1321 is 1115
9999 run: jumping to instruction 6
 103 run: screen-width:number <- screen-width screen
9999 mem: location 1320 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1160
 104 run: break-unless sc, 
9999 mem: location 1160 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1160 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1160 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1161
 104 run: reply width
9999 mem: location 1161 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1326
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1320 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1160
 104 run: break-unless sc, 
9999 mem: location 1160 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1160 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1160 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1161
 104 run: reply height
9999 mem: location 1161 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1327
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1162
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1328
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1162
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1329
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1162
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1330
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1162
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1331
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1162
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1332
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1331 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1331 is 1121
9999 mem: location 1331 is 1121
9999 mem: storing 1 in location 1333
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1332 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1332 is 1122
9999 mem: location 1332 is 1122
9999 mem: storing 2 in location 1334
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1322 is 1
9999 mem: location 1323 is 65514
9999 mem: location 1324 is 0
9999 mem: location 1325 is 0
9999 mem: storing 0 in location 1335
 103 run: break-unless c, 
9999 mem: location 1335 is 0
9999 run: jumping to instruction 208
 103 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1322 is 1
9999 mem: location 1323 is 65514
9999 mem: location 1324 is 0
9999 mem: location 1325 is 0
9999 mem: storing 1323 in location 1371
 103 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1371 is 1323
 103 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1347
 103 run: break-unless page-up?, 
9999 mem: location 1347 is 0
9999 run: jumping to instruction 228
 103 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1354
 103 run: break-unless page-down?, 
9999 mem: location 1354 is 0
9999 run: jumping to instruction 245
 103 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1357
 103 run: break-unless move-to-end-of-line?, 
9999 mem: location 1357 is 0
9999 run: jumping to instruction 262
 103 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1358
 103 run: break-unless move-to-start-of-line?, 
9999 mem: location 1358 is 0
9999 run: jumping to instruction 279
 103 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1372
 103 run: break-unless move-to-next-line?, 
9999 mem: location 1372 is 0
9999 run: jumping to instruction 296
 103 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1373
 103 run: break-unless move-to-previous-line?, 
9999 mem: location 1373 is 0
9999 run: jumping to instruction 313
 103 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1374
 103 run: break-unless move-to-previous-character?, 
9999 mem: location 1374 is 0
9999 run: jumping to instruction 335
 103 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 1 in location 1376
 103 run: break-unless move-to-next-character?, 
9999 mem: location 1376 is 1
9999 run: jump-unless fell through
 103 run: next-cursor:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1330 is 1118
9999 mem: location 1118 is 1162
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1162 in location 1160
 104 run: jump-if in, 1:offset
9999 mem: location 1160 is 1162
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1160 is 1162
9999 mem: location 1162 is 98
9999 mem: location 1163 is 1165
9999 mem: location 1164 is 1155
9999 mem: location 1160 is 1162
9999 run: address to copy is 1163
9999 run: its type is address
9999 mem: location 1163 is 1165
9999 mem: storing 1165 in location 1161
 104 run: reply result
9999 mem: location 1161 is 1165
9999 run: result 0 is 1165
9999 mem: storing 1165 in location 1377
 103 run: break-unless next-cursor, 
9999 mem: location 1377 is 1165
9999 run: jump-unless fell through
 103 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1162
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1348
 103 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1162
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 1349
 103 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1162
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1152
9999 mem: storing 1152 in location 1350
 103 run: *before-cursor <- copy next-cursor
9999 mem: location 1377 is 1165
9999 mem: location 1330 is 1118
9999 mem: location 1330 is 1118
9999 mem: storing 1165 in location 1118
 103 run: editor, go-render?:boolean <- move-cursor-coordinates-right editor, screen-height
9999 mem: location 1321 is 1115
9999 mem: location 1327 is 5
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 18
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1390
 104 run: screen-height:number <- next-ingredient 
9999 mem: storing 5 in location 1391
 104 run: before-cursor:address:duplex-list <- get *editor, before-cursor:offset
9999 mem: location 1390 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1165
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1390 is 1115
9999 run: address to copy is 1118
9999 run: its type is address
9999 mem: location 1118 is 1165
9999 mem: storing 1165 in location 1392
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1390 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1165
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1390 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1393
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1390 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1165
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1390 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1394
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1390 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1165
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1390 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1395
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1390 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1165
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1390 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1396
 104 run: old-cursor-character:character <- get *before-cursor, value:offset
9999 mem: location 1392 is 1165
9999 mem: location 1165 is 99
9999 mem: location 1166 is 1168
9999 mem: location 1167 is 1162
9999 mem: location 1392 is 1165
9999 run: address to copy is 1165
9999 run: its type is number
9999 mem: location 1165 is 99
9999 mem: storing 99 in location 1397
 104 run: was-at-newline?:boolean <- equal old-cursor-character, 10/newline
9999 mem: location 1397 is 99
9999 mem: storing 0 in location 1398
 104 run: break-unless was-at-newline?, 
9999 mem: location 1398 is 0
9999 run: jumping to instruction 26
 104 run: wrap-column:number <- subtract right, 1
9999 mem: location 1396 is 9
9999 mem: storing 8 in location 1402
 104 run: at-wrap?:boolean <- equal *cursor-column, wrap-column
9999 mem: location 1394 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1402 is 8
9999 mem: storing 0 in location 1403
 104 run: break-unless at-wrap?, 
9999 mem: location 1403 is 0
9999 run: jumping to instruction 50
 104 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1394 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1394 is 1122
9999 mem: storing 3 in location 1122
 104 run: reply editor/same-as-ingredient:0, 0/no-more-render
9999 mem: location 1390 is 1115
9999 run: result 0 is 1115
9999 run: result 1 is 0
9999 mem: storing 1115 in location 1321
9999 mem: storing 0 in location 1360
 103 run: screen <- move-cursor screen, *cursor-row, *cursor-column
9999 mem: location 1320 is 1009
9999 mem: location 1331 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1332 is 1122
9999 mem: location 1122 is 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1203
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1204
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 3 in location 1205
 104 run: break-unless sc, 
9999 mem: location 1203 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1203 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1203 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1206
 104 run: *row <- copy new-row
9999 mem: location 1204 is 1
9999 mem: location 1206 is 1011
9999 mem: location 1206 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1203 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1203 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1207
 104 run: *column <- copy new-column
9999 mem: location 1205 is 3
9999 mem: location 1207 is 1012
9999 mem: location 1207 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1203 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1320
 103 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1165
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1351
 103 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1165
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1352
 103 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1165
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1152
9999 mem: storing 1152 in location 1353
 103 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1420
9999 mem: storing 1420 in location 1338
 103 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, 0/empty, 0/empty
9999 mem: location 1348 is 1
9999 mem: location 1349 is 2
9999 mem: location 1350 is 1152
9999 mem: location 1351 is 1
9999 mem: location 1352 is 3
9999 mem: location 1353 is 1152
9999 mem: location 1338 is 1420
9999 mem: storing 1 in location 1420
9999 mem: storing 1 in location 1421
9999 mem: storing 2 in location 1422
9999 mem: storing 1152 in location 1423
9999 mem: storing 1 in location 1424
9999 mem: storing 3 in location 1425
9999 mem: storing 1152 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
 103 run: editor <- add-operation editor, op
9999 mem: location 1321 is 1115
9999 mem: location 1338 is 1420
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1247
 104 run: op:address:operation <- next-ingredient 
9999 mem: storing 1420 in location 1248
 104 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1247 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1165
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1418
9999 mem: location 1125 is 0
9999 mem: location 1247 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1249
 104 run: *undo <- push op, *undo
9999 mem: location 1248 is 1420
9999 mem: location 1249 is 1124
9999 mem: location 1124 is 1418
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: x:location <- next-ingredient 
9999 mem: storing 1420 in location 1203
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 1418 in location 1204
 105 run: result:address:list <- new list:type
9999 mem: new alloc: 1429
9999 mem: storing 1429 in location 1205
 105 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1205 is 1429
9999 mem: location 1429 is 0
9999 mem: location 1430 is 0
9999 mem: location 1205 is 1429
9999 run: address to copy is 1429
9999 mem: storing 1429 in location 1206
 105 run: *val <- copy x
9999 mem: location 1203 is 1420
9999 mem: location 1206 is 1429
9999 mem: location 1206 is 1429
9999 mem: storing 1420 in location 1429
 105 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1205 is 1429
9999 mem: location 1429 is 1420
9999 mem: location 1430 is 0
9999 mem: location 1205 is 1429
9999 run: address to copy is 1430
9999 mem: storing 1430 in location 1207
 105 run: *next <- copy in
9999 mem: location 1204 is 1418
9999 mem: location 1207 is 1430
9999 mem: location 1207 is 1430
9999 mem: storing 1418 in location 1430
 105 run: reply result
9999 mem: location 1205 is 1429
9999 run: result 0 is 1429
9999 mem: location 1249 is 1124
9999 mem: storing 1429 in location 1124
 104 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1247 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1165
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1429
9999 mem: location 1125 is 0
9999 mem: location 1247 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1250
 104 run: *redo <- copy 0
9999 mem: location 1250 is 1125
9999 mem: location 1250 is 1125
9999 mem: storing 0 in location 1125
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1247 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1321
 103 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1320 is 1009
9999 mem: location 1321 is 1115
9999 mem: location 1360 is 0
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1300
9999 mem: storing 1115 in location 1302
9999 mem: storing 0 in location 1317
 102 run: break-unless go-render?, 
9999 mem: location 1317 is 0
9999 run: jumping to instruction 33
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1296
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1296 in location 1253
 103 run: break-unless x, 
9999 mem: location 1253 is 1296
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1253 is 1296
9999 mem: location 1296 is 3
9999 mem: location 1297 is 1279
9999 mem: location 1253 is 1296
9999 run: address to copy is 1296
9999 mem: storing 1296 in location 1254
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1253 is 1296
9999 mem: location 1296 is 3
9999 mem: location 1297 is 1279
9999 mem: location 1253 is 1296
9999 run: address to copy is 1297
9999 run: its type is address
9999 mem: location 1297 is 1279
9999 mem: storing 1279 in location 1255
 103 run: max:number <- length *buf
9999 mem: location 1255 is 1279
9999 mem: storing 4 in location 1256
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1254 is 1296
9999 mem: location 1296 is 3
9999 mem: location 1256 is 4
9999 mem: storing 0 in location 1257
 103 run: break-unless done?, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1255 is 1279
9999 mem: location 1254 is 1296
9999 mem: location 1296 is 3
9999 run: address to copy is 1292
9999 run: its type is event
9999 mem: location 1292 is 1
9999 mem: location 1293 is 65514
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: storing 1 in location 1259
9999 mem: storing 65514 in location 1260
9999 mem: storing 0 in location 1261
9999 mem: storing 0 in location 1262
 103 run: *idx <- add *idx, 1
9999 mem: location 1254 is 1296
9999 mem: location 1296 is 3
9999 mem: location 1254 is 1296
9999 mem: storing 4 in location 1296
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1259 is 1
9999 mem: location 1260 is 65514
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1253 is 1296
9999 run: result 0 is [1, 65514, 0, 0]
9999 run: result 1 is 1296
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1303
9999 mem: storing 65514 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 1296 in location 1301
9999 mem: storing 1 in location 1307
9999 mem: storing 0 in location 1308
 102 run: loop-unless found?, 
9999 mem: location 1307 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1303 is 1
9999 mem: location 1304 is 65514
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
9999 mem: storing 0 in location 1309
 102 run: break-unless t, 
9999 mem: location 1309 is 0
9999 run: jumping to instruction 26
 102 run: break-if t, 
9999 mem: location 1309 is 0
9999 run: jump-if fell through
 102 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1300 is 1009
9999 mem: location 1302 is 1115
9999 mem: location 1303 is 1
9999 mem: location 1304 is 65514
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 69
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1320
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1321
 103 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1322
9999 mem: storing 65514 in location 1323
9999 mem: storing 0 in location 1324
9999 mem: storing 0 in location 1325
 103 run: jump-if editor, 1:offset
9999 mem: location 1321 is 1115
9999 run: jumping to instruction 6
 103 run: screen-width:number <- screen-width screen
9999 mem: location 1320 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1160
 104 run: break-unless sc, 
9999 mem: location 1160 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1160 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1160 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1161
 104 run: reply width
9999 mem: location 1161 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1326
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1320 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1160
 104 run: break-unless sc, 
9999 mem: location 1160 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1160 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1160 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1161
 104 run: reply height
9999 mem: location 1161 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1327
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1165
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1429
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1328
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1165
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1429
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1329
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1165
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1429
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1330
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1165
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1429
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1331
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1165
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1429
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1332
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1331 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1331 is 1121
9999 mem: location 1331 is 1121
9999 mem: storing 1 in location 1333
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1332 is 1122
9999 mem: location 1122 is 3
9999 mem: location 1332 is 1122
9999 mem: location 1332 is 1122
9999 mem: storing 3 in location 1334
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1322 is 1
9999 mem: location 1323 is 65514
9999 mem: location 1324 is 0
9999 mem: location 1325 is 0
9999 mem: storing 0 in location 1335
 103 run: break-unless c, 
9999 mem: location 1335 is 0
9999 run: jumping to instruction 208
 103 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1322 is 1
9999 mem: location 1323 is 65514
9999 mem: location 1324 is 0
9999 mem: location 1325 is 0
9999 mem: storing 1323 in location 1371
 103 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1371 is 1323
 103 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1347
 103 run: break-unless page-up?, 
9999 mem: location 1347 is 0
9999 run: jumping to instruction 228
 103 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1354
 103 run: break-unless page-down?, 
9999 mem: location 1354 is 0
9999 run: jumping to instruction 245
 103 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1357
 103 run: break-unless move-to-end-of-line?, 
9999 mem: location 1357 is 0
9999 run: jumping to instruction 262
 103 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1358
 103 run: break-unless move-to-start-of-line?, 
9999 mem: location 1358 is 0
9999 run: jumping to instruction 279
 103 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1372
 103 run: break-unless move-to-next-line?, 
9999 mem: location 1372 is 0
9999 run: jumping to instruction 296
 103 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1373
 103 run: break-unless move-to-previous-line?, 
9999 mem: location 1373 is 0
9999 run: jumping to instruction 313
 103 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 0 in location 1374
 103 run: break-unless move-to-previous-character?, 
9999 mem: location 1374 is 0
9999 run: jumping to instruction 335
 103 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1371 is 1323
9999 mem: location 1323 is 65514
9999 mem: storing 1 in location 1376
 103 run: break-unless move-to-next-character?, 
9999 mem: location 1376 is 1
9999 run: jump-unless fell through
 103 run: next-cursor:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1330 is 1118
9999 mem: location 1118 is 1165
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1165 in location 1160
 104 run: jump-if in, 1:offset
9999 mem: location 1160 is 1165
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1160 is 1165
9999 mem: location 1165 is 99
9999 mem: location 1166 is 1168
9999 mem: location 1167 is 1162
9999 mem: location 1160 is 1165
9999 run: address to copy is 1166
9999 run: its type is address
9999 mem: location 1166 is 1168
9999 mem: storing 1168 in location 1161
 104 run: reply result
9999 mem: location 1161 is 1168
9999 run: result 0 is 1168
9999 mem: storing 1168 in location 1377
 103 run: break-unless next-cursor, 
9999 mem: location 1377 is 1168
9999 run: jump-unless fell through
 103 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1165
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1429
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1348
 103 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1165
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1429
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1349
 103 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1165
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1429
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1152
9999 mem: storing 1152 in location 1350
 103 run: *before-cursor <- copy next-cursor
9999 mem: location 1377 is 1168
9999 mem: location 1330 is 1118
9999 mem: location 1330 is 1118
9999 mem: storing 1168 in location 1118
 103 run: editor, go-render?:boolean <- move-cursor-coordinates-right editor, screen-height
9999 mem: location 1321 is 1115
9999 mem: location 1327 is 5
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 18
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1390
 104 run: screen-height:number <- next-ingredient 
9999 mem: storing 5 in location 1391
 104 run: before-cursor:address:duplex-list <- get *editor, before-cursor:offset
9999 mem: location 1390 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1168
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1429
9999 mem: location 1125 is 0
9999 mem: location 1390 is 1115
9999 run: address to copy is 1118
9999 run: its type is address
9999 mem: location 1118 is 1168
9999 mem: storing 1168 in location 1392
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1390 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1168
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1429
9999 mem: location 1125 is 0
9999 mem: location 1390 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1393
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1390 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1168
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1429
9999 mem: location 1125 is 0
9999 mem: location 1390 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1394
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1390 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1168
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1429
9999 mem: location 1125 is 0
9999 mem: location 1390 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1395
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1390 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1168
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1429
9999 mem: location 1125 is 0
9999 mem: location 1390 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1396
 104 run: old-cursor-character:character <- get *before-cursor, value:offset
9999 mem: location 1392 is 1168
9999 mem: location 1168 is 10
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1165
9999 mem: location 1392 is 1168
9999 run: address to copy is 1168
9999 run: its type is number
9999 mem: location 1168 is 10
9999 mem: storing 10 in location 1397
 104 run: was-at-newline?:boolean <- equal old-cursor-character, 10/newline
9999 mem: location 1397 is 10
9999 mem: storing 1 in location 1398
 104 run: break-unless was-at-newline?, 
9999 mem: location 1398 is 1
9999 run: jump-unless fell through
 104 run: *cursor-row <- add *cursor-row, 1
9999 mem: location 1393 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1393 is 1121
9999 mem: storing 2 in location 1121
 104 run: *cursor-column <- copy left
9999 mem: location 1395 is 0
9999 mem: location 1394 is 1122
9999 mem: location 1394 is 1122
9999 mem: storing 0 in location 1122
 104 run: below-screen?:boolean <- greater-or-equal *cursor-row, screen-height
9999 mem: location 1393 is 1121
9999 mem: location 1121 is 2
9999 mem: location 1391 is 5
9999 mem: storing 0 in location 1399
 104 run: jump-if below-screen?, 1:offset
9999 mem: location 1399 is 0
9999 run: jump-if fell through
 104 run: reply editor/same-as-ingredient:0, 0/no-more-render
9999 mem: location 1390 is 1115
9999 run: result 0 is 1115
9999 run: result 1 is 0
9999 mem: storing 1115 in location 1321
9999 mem: storing 0 in location 1360
 103 run: screen <- move-cursor screen, *cursor-row, *cursor-column
9999 mem: location 1320 is 1009
9999 mem: location 1331 is 1121
9999 mem: location 1121 is 2
9999 mem: location 1332 is 1122
9999 mem: location 1122 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1203
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1204
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1205
schedule: move-cursor/handle-keyboard-event/editor-event-loop/run1001/scenario-editor-moves-cursor-to-next-line-with-right-arrow
 104 run: break-unless sc, 
9999 mem: location 1203 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1203 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1203 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1206
 104 run: *row <- copy new-row
9999 mem: location 1204 is 2
9999 mem: location 1206 is 1011
9999 mem: location 1206 is 1011
9999 mem: storing 2 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1203 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1203 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1207
 104 run: *column <- copy new-column
9999 mem: location 1205 is 0
9999 mem: location 1207 is 1012
9999 mem: location 1207 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1203 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1320
 103 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1168
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1429
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1351
 103 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1168
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1429
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1352
 103 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1168
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1429
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1152
9999 mem: storing 1152 in location 1353
 103 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1431
9999 mem: storing 1431 in location 1338
 103 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, 0/empty, 0/empty
9999 mem: location 1348 is 1
9999 mem: location 1349 is 3
9999 mem: location 1350 is 1152
9999 mem: location 1351 is 2
9999 mem: location 1352 is 0
9999 mem: location 1353 is 1152
9999 mem: location 1338 is 1431
9999 mem: storing 1 in location 1431
9999 mem: storing 1 in location 1432
9999 mem: storing 3 in location 1433
9999 mem: storing 1152 in location 1434
9999 mem: storing 2 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 1152 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
 103 run: editor <- add-operation editor, op
9999 mem: location 1321 is 1115
9999 mem: location 1338 is 1431
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1247
 104 run: op:address:operation <- next-ingredient 
9999 mem: storing 1431 in location 1248
 104 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1247 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1168
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1429
9999 mem: location 1125 is 0
9999 mem: location 1247 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1249
 104 run: *undo <- push op, *undo
9999 mem: location 1248 is 1431
9999 mem: location 1249 is 1124
9999 mem: location 1124 is 1429
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: x:location <- next-ingredient 
9999 mem: storing 1431 in location 1203
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 1429 in location 1204
 105 run: result:address:list <- new list:type
9999 mem: new alloc: 1440
9999 mem: storing 1440 in location 1205
 105 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1205 is 1440
9999 mem: location 1440 is 0
9999 mem: location 1441 is 0
9999 mem: location 1205 is 1440
9999 run: address to copy is 1440
9999 mem: storing 1440 in location 1206
 105 run: *val <- copy x
9999 mem: location 1203 is 1431
9999 mem: location 1206 is 1440
9999 mem: location 1206 is 1440
9999 mem: storing 1431 in location 1440
 105 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1205 is 1440
9999 mem: location 1440 is 1431
9999 mem: location 1441 is 0
9999 mem: location 1205 is 1440
9999 run: address to copy is 1441
9999 mem: storing 1441 in location 1207
 105 run: *next <- copy in
9999 mem: location 1204 is 1429
9999 mem: location 1207 is 1441
9999 mem: location 1207 is 1441
9999 mem: storing 1429 in location 1441
 105 run: reply result
9999 mem: location 1205 is 1440
9999 run: result 0 is 1440
9999 mem: location 1249 is 1124
9999 mem: storing 1440 in location 1124
 104 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1247 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1168
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1440
9999 mem: location 1125 is 0
9999 mem: location 1247 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1250
 104 run: *redo <- copy 0
9999 mem: location 1250 is 1125
9999 mem: location 1250 is 1125
9999 mem: storing 0 in location 1125
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1247 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1321
 103 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1320 is 1009
9999 mem: location 1321 is 1115
9999 mem: location 1360 is 0
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1300
9999 mem: storing 1115 in location 1302
9999 mem: storing 0 in location 1317
 102 run: break-unless go-render?, 
9999 mem: location 1317 is 0
9999 run: jumping to instruction 33
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1296
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1296 in location 1253
 103 run: break-unless x, 
9999 mem: location 1253 is 1296
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1253 is 1296
9999 mem: location 1296 is 4
9999 mem: location 1297 is 1279
9999 mem: location 1253 is 1296
9999 run: address to copy is 1296
9999 mem: storing 1296 in location 1254
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1253 is 1296
9999 mem: location 1296 is 4
9999 mem: location 1297 is 1279
9999 mem: location 1253 is 1296
9999 run: address to copy is 1297
9999 run: its type is address
9999 mem: location 1297 is 1279
9999 mem: storing 1279 in location 1255
 103 run: max:number <- length *buf
9999 mem: location 1255 is 1279
9999 mem: storing 4 in location 1256
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1254 is 1296
9999 mem: location 1296 is 4
9999 mem: location 1256 is 4
9999 mem: storing 1 in location 1257
 103 run: break-unless done?, 
9999 mem: location 1257 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: storing 1158 in location 1258
 103 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1258 is 1158
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1253 is 1296
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1296
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 1296 in location 1301
9999 mem: storing 1 in location 1307
9999 mem: storing 1 in location 1308
 102 run: loop-unless found?, 
9999 mem: location 1307 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1308 is 1
9999 run: jumping to instruction 36
 100 run: check-trace-count-for-label 0, [print-character]
 100 run: assume-console [
    type [0]
  ]
parse: instruction: type
parse:   ingredient: {name: "0", properties: [_: "literal-string"]}
 100 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1002
after-brace: editor-event-loop ...
 100 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1447
9999 mem: location 2 is 1115
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 19
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1300
 101 run: console:address <- next-ingredient 
9999 mem: storing 1447 in location 1301
 101 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1302
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1447
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 1447 in location 1253
 102 run: break-unless x, 
9999 mem: location 1253 is 1447
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1253 is 1447
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1442
9999 mem: location 1253 is 1447
9999 run: address to copy is 1447
9999 mem: storing 1447 in location 1254
 102 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1253 is 1447
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1442
9999 mem: location 1253 is 1447
9999 run: address to copy is 1448
9999 run: its type is address
9999 mem: location 1448 is 1442
9999 mem: storing 1442 in location 1255
 102 run: max:number <- length *buf
9999 mem: location 1255 is 1442
9999 mem: storing 1 in location 1256
 102 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1254 is 1447
9999 mem: location 1447 is 0
9999 mem: location 1256 is 1
9999 mem: storing 0 in location 1257
 102 run: break-unless done?, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 12
 102 run: result:event <- index *buf, *idx
9999 mem: location 1255 is 1442
9999 mem: location 1254 is 1447
9999 mem: location 1447 is 0
9999 run: address to copy is 1443
9999 run: its type is event
9999 mem: location 1443 is 0
9999 mem: location 1444 is 48
9999 mem: location 1445 is 0
9999 mem: location 1446 is 0
9999 mem: storing 0 in location 1259
9999 mem: storing 48 in location 1260
9999 mem: storing 0 in location 1261
9999 mem: storing 0 in location 1262
 102 run: *idx <- add *idx, 1
9999 mem: location 1254 is 1447
9999 mem: location 1447 is 0
9999 mem: location 1254 is 1447
9999 mem: storing 1 in location 1447
 102 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1259 is 0
9999 mem: location 1260 is 48
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1253 is 1447
9999 run: result 0 is [0, 48, 0, 0]
9999 run: result 1 is 1447
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1303
9999 mem: storing 48 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 1447 in location 1301
9999 mem: storing 1 in location 1307
9999 mem: storing 0 in location 1308
 101 run: loop-unless found?, 
9999 mem: location 1307 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 101 run: trace 10, [app], [next-event]
  10 app: next-event 
 101 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1303 is 0
9999 mem: location 1304 is 48
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
9999 mem: storing 0 in location 1309
 101 run: break-unless t, 
9999 mem: location 1309 is 0
9999 run: jumping to instruction 26
 101 run: break-if t, 
9999 mem: location 1309 is 0
9999 run: jump-if fell through
 101 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1300 is 1009
9999 mem: location 1302 is 1115
9999 mem: location 1303 is 0
9999 mem: location 1304 is 48
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 69
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1320
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1321
 102 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1322
9999 mem: storing 48 in location 1323
9999 mem: storing 0 in location 1324
9999 mem: storing 0 in location 1325
 102 run: jump-if editor, 1:offset
9999 mem: location 1321 is 1115
9999 run: jumping to instruction 6
 102 run: screen-width:number <- screen-width screen
9999 mem: location 1320 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1449
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1451
 103 run: break-unless sc, 
9999 mem: location 1451 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1451 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1451 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1452
 103 run: reply width
9999 mem: location 1452 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1326
 102 run: screen-height:number <- screen-height screen
9999 mem: location 1320 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1451
 103 run: break-unless sc, 
9999 mem: location 1451 is 1009
9999 run: jump-unless fell through
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1451 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1451 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1452
 103 run: reply height
9999 mem: location 1452 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1327
 102 run: left:number <- get *editor, left:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1168
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1440
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1328
 102 run: right:number <- get *editor, right:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1168
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1440
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1329
 102 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1168
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1440
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1330
 102 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1168
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1440
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1331
 102 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1168
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1440
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1332
 102 run: save-row:number <- copy *cursor-row
9999 mem: location 1331 is 1121
9999 mem: location 1121 is 2
9999 mem: location 1331 is 1121
9999 mem: location 1331 is 1121
9999 mem: storing 2 in location 1333
 102 run: save-column:number <- copy *cursor-column
9999 mem: location 1332 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1332 is 1122
9999 mem: location 1332 is 1122
9999 mem: storing 0 in location 1334
 102 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1322 is 0
9999 mem: location 1323 is 48
9999 mem: location 1324 is 0
9999 mem: location 1325 is 0
9999 mem: storing 1323 in location 1335
 102 run: break-unless c, 
9999 mem: location 1335 is 1323
9999 run: jump-unless fell through
 102 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 102 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1335 is 1323
9999 mem: location 1323 is 48
9999 mem: storing 0 in location 1336
 102 run: break-unless redo?, 
9999 mem: location 1336 is 0
9999 run: jumping to instruction 49
 102 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1335 is 1323
9999 mem: location 1323 is 48
9999 mem: storing 0 in location 1344
 102 run: break-unless undo?, 
9999 mem: location 1344 is 0
9999 run: jumping to instruction 81
 102 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1335 is 1323
9999 mem: location 1323 is 48
9999 mem: storing 0 in location 1347
 102 run: break-unless page-up?, 
9999 mem: location 1347 is 0
9999 run: jumping to instruction 98
 102 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1335 is 1323
9999 mem: location 1323 is 48
9999 mem: storing 0 in location 1354
 102 run: break-unless page-down?, 
9999 mem: location 1354 is 0
9999 run: jumping to instruction 115
 102 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1335 is 1323
9999 mem: location 1323 is 48
9999 mem: storing 0 in location 1355
 102 run: break-unless delete-to-end-of-line?, 
9999 mem: location 1355 is 0
9999 run: jumping to instruction 121
 102 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1335 is 1323
9999 mem: location 1323 is 48
9999 mem: storing 0 in location 1356
 102 run: break-unless delete-to-start-of-line?, 
9999 mem: location 1356 is 0
9999 run: jumping to instruction 127
 102 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1335 is 1323
9999 mem: location 1323 is 48
9999 mem: storing 0 in location 1357
 102 run: break-unless move-to-end-of-line?, 
9999 mem: location 1357 is 0
9999 run: jumping to instruction 144
 102 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1335 is 1323
9999 mem: location 1323 is 48
9999 mem: storing 0 in location 1358
 102 run: break-unless move-to-start-of-line?, 
9999 mem: location 1358 is 0
9999 run: jumping to instruction 161
 102 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1335 is 1323
9999 mem: location 1323 is 48
9999 mem: storing 0 in location 1359
 102 run: break-unless delete-previous-character?, 
9999 mem: location 1359 is 0
9999 run: jumping to instruction 167
 102 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1335 is 1323
9999 mem: location 1323 is 48
9999 mem: storing 0 in location 1361
 102 run: break-unless tab?, 
9999 mem: location 1361 is 0
9999 run: jumping to instruction 174
 102 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1335 is 1323
9999 mem: location 1323 is 48
9999 mem: storing 1 in location 1362
 102 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1335 is 1323
9999 mem: location 1323 is 48
9999 mem: storing 0 in location 1363
 102 run: regular-character? <- or regular-character?, newline?
9999 mem: location 1362 is 1
9999 mem: location 1363 is 0
9999 mem: storing 1 in location 1362
 102 run: jump-if regular-character?, 1:offset
9999 mem: location 1362 is 1
9999 run: jumping to instruction 180
 102 run: top-before:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1168
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1440
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1152
9999 mem: storing 1152 in location 1364
 102 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1321 is 1115
9999 mem: location 1335 is 1323
9999 mem: location 1323 is 48
9999 mem: location 1320 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 35
9999 mem: new alloc: 1453
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1455
 103 run: c:character <- next-ingredient 
9999 mem: storing 48 in location 1456
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1457
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1455 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1168
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1440
9999 mem: location 1125 is 0
9999 mem: location 1455 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1458
 103 run: insert-duplex c, *before-cursor
9999 mem: location 1456 is 48
9999 mem: location 1458 is 1118
9999 mem: location 1118 is 1168
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 48 in location 1146
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1168 in location 1147
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1489
9999 mem: storing 1489 in location 1148
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1148 is 1489
9999 mem: location 1489 is 0
9999 mem: location 1490 is 0
9999 mem: location 1491 is 0
9999 mem: location 1148 is 1489
9999 run: address to copy is 1489
9999 mem: storing 1489 in location 1149
 104 run: *val <- copy x
9999 mem: location 1146 is 48
9999 mem: location 1149 is 1489
9999 mem: location 1149 is 1489
9999 mem: storing 48 in location 1489
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1147 is 1168
9999 mem: location 1168 is 10
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1165
9999 mem: location 1147 is 1168
9999 run: address to copy is 1169
9999 run: its type is address
9999 mem: location 1169 is 1171
9999 mem: storing 1171 in location 1150
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1147 is 1168
9999 mem: location 1168 is 10
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1165
9999 mem: location 1147 is 1168
9999 run: address to copy is 1169
9999 mem: storing 1169 in location 1151
 104 run: *y <- copy new-node
9999 mem: location 1148 is 1489
9999 mem: location 1151 is 1169
9999 mem: location 1151 is 1169
9999 mem: storing 1489 in location 1169
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1148 is 1489
9999 mem: location 1489 is 48
9999 mem: location 1490 is 0
9999 mem: location 1491 is 0
9999 mem: location 1148 is 1489
9999 run: address to copy is 1491
9999 mem: storing 1491 in location 1151
 104 run: *y <- copy in
9999 mem: location 1147 is 1168
9999 mem: location 1151 is 1491
9999 mem: location 1151 is 1491
9999 mem: storing 1168 in location 1491
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1148 is 1489
9999 mem: location 1489 is 48
9999 mem: location 1490 is 0
9999 mem: location 1491 is 1168
9999 mem: location 1148 is 1489
9999 run: address to copy is 1490
9999 mem: storing 1490 in location 1151
 104 run: *y <- copy next-node
9999 mem: location 1150 is 1171
9999 mem: location 1151 is 1490
9999 mem: location 1151 is 1490
9999 mem: storing 1171 in location 1490
 104 run: jump-if next-node, 1:offset
9999 mem: location 1150 is 1171
9999 run: jumping to instruction 15
 104 run: y <- get-address *next-node, prev:offset
9999 mem: location 1150 is 1171
9999 mem: location 1171 is 100
9999 mem: location 1172 is 0
9999 mem: location 1173 is 1168
9999 mem: location 1150 is 1171
9999 run: address to copy is 1173
9999 mem: storing 1173 in location 1151
 104 run: *y <- copy new-node
9999 mem: location 1148 is 1489
9999 mem: location 1151 is 1173
9999 mem: location 1151 is 1173
9999 mem: storing 1489 in location 1173
 104 run: reply new-node
9999 mem: location 1148 is 1489
 103 run: *before-cursor <- next-duplex *before-cursor
9999 mem: location 1458 is 1118
9999 mem: location 1118 is 1168
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1168 in location 1451
 104 run: jump-if in, 1:offset
9999 mem: location 1451 is 1168
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1451 is 1168
9999 mem: location 1168 is 10
9999 mem: location 1169 is 1489
9999 mem: location 1170 is 1165
9999 mem: location 1451 is 1168
9999 run: address to copy is 1169
9999 run: its type is address
9999 mem: location 1169 is 1489
9999 mem: storing 1489 in location 1452
 104 run: reply result
9999 mem: location 1452 is 1489
9999 run: result 0 is 1489
9999 mem: location 1458 is 1118
9999 mem: storing 1489 in location 1118
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1455 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1489
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1440
9999 mem: location 1125 is 0
9999 mem: location 1455 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1459
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1455 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1489
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1440
9999 mem: location 1125 is 0
9999 mem: location 1455 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1460
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1455 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1489
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1440
9999 mem: location 1125 is 0
9999 mem: location 1455 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1461
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1455 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1489
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1440
9999 mem: location 1125 is 0
9999 mem: location 1455 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1462
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1459 is 1121
9999 mem: location 1121 is 2
9999 mem: location 1459 is 1121
9999 mem: location 1459 is 1121
9999 mem: storing 2 in location 1463
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1460 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1460 is 1122
9999 mem: location 1460 is 1122
9999 mem: storing 0 in location 1464
 103 run: screen-width:number <- screen-width screen
9999 mem: location 1457 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1451
 104 run: break-unless sc, 
9999 mem: location 1451 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1451 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1451 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1452
 104 run: reply width
9999 mem: location 1452 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1465
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1457 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1451
 104 run: break-unless sc, 
9999 mem: location 1451 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1451 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1451 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1452
 104 run: reply height
9999 mem: location 1452 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1466
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1456 is 48
9999 mem: storing 0 in location 1467
 103 run: break-unless newline?, 
9999 mem: location 1467 is 0
9999 run: jumping to instruction 48
 103 run: wrap-column:number <- subtract right, 1
9999 mem: location 1462 is 9
9999 mem: storing 8 in location 1477
 103 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1460 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1477 is 8
9999 mem: storing 0 in location 1478
 103 run: break-unless at-wrap?, 
9999 mem: location 1478 is 0
9999 run: jumping to instruction 67
 103 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1460 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1460 is 1122
9999 mem: storing 1 in location 1122
 103 run: next:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1458 is 1118
9999 mem: location 1118 is 1489
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1489 in location 1451
 104 run: jump-if in, 1:offset
9999 mem: location 1451 is 1489
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1451 is 1489
9999 mem: location 1489 is 48
9999 mem: location 1490 is 1171
9999 mem: location 1491 is 1168
9999 mem: location 1451 is 1489
9999 run: address to copy is 1490
9999 run: its type is address
9999 mem: location 1490 is 1171
9999 mem: storing 1171 in location 1452
 104 run: reply result
9999 mem: location 1452 is 1171
9999 run: result 0 is 1171
9999 mem: storing 1171 in location 1479
 103 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1479 is 1171
9999 mem: storing 0 in location 1480
 103 run: break-unless at-end?, 
9999 mem: location 1480 is 0
9999 run: jumping to instruction 81
 103 run: break-unless next, 
9999 mem: location 1479 is 1171
9999 run: jump-unless fell through
 103 run: at-right?:boolean <- greater-or-equal *cursor-column, screen-width
9999 mem: location 1460 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1465 is 10
9999 mem: storing 0 in location 1483
 103 run: break-if at-right?, 
9999 mem: location 1483 is 0
9999 run: jump-if fell through
 103 run: curr:address:duplex-list <- copy *before-cursor
9999 mem: location 1458 is 1118
9999 mem: location 1118 is 1489
9999 mem: location 1458 is 1118
9999 mem: location 1458 is 1118
9999 mem: storing 1489 in location 1485
 103 run: move-cursor screen, save-row, save-column
9999 mem: location 1457 is 1009
9999 mem: location 1463 is 2
9999 mem: location 1464 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1203
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1204
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1205
 104 run: break-unless sc, 
9999 mem: location 1203 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1203 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1203 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1206
 104 run: *row <- copy new-row
9999 mem: location 1204 is 2
9999 mem: location 1206 is 1011
9999 mem: location 1206 is 1011
9999 mem: storing 2 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1203 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1203 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1207
 104 run: *column <- copy new-column
9999 mem: location 1205 is 0
9999 mem: location 1207 is 1012
9999 mem: location 1207 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1203 is 1009
 103 run: curr-column:number <- copy save-column
9999 mem: location 1464 is 0
9999 mem: storing 0 in location 1486
 103 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1486 is 0
9999 mem: location 1465 is 10
9999 mem: storing 0 in location 1483
 103 run: jump-unless at-right?, 1:offset
9999 mem: location 1483 is 0
9999 run: jumping to instruction 93
 103 run: break-unless curr, 
9999 mem: location 1485 is 1489
9999 run: jump-unless fell through
 103 run: currc:character <- get *curr, value:offset
9999 mem: location 1485 is 1489
9999 mem: location 1489 is 48
9999 mem: location 1490 is 1171
9999 mem: location 1491 is 1168
9999 mem: location 1485 is 1489
9999 run: address to copy is 1489
9999 run: its type is number
9999 mem: location 1489 is 48
9999 mem: storing 48 in location 1487
 103 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1487 is 48
9999 mem: storing 0 in location 1488
 103 run: break-if at-newline?, 
9999 mem: location 1488 is 0
9999 run: jump-if fell through
 103 run: print-character screen, currc
9999 mem: location 1457 is 1009
9999 mem: location 1487 is 48
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1221
 104 run: c:character <- next-ingredient 
9999 mem: storing 48 in location 1222
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1223
9999 mem: storing 0 in location 1224
 104 run: break-if color-found?, 
9999 mem: location 1224 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1223
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1225
9999 mem: storing 0 in location 1226
 104 run: break-if bg-color-found?, 
9999 mem: location 1226 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1225
 104 run: trace 90, [print-character], c
9999 mem: location 1222 is 48
  90 print-character: 48 
 104 run: break-unless sc, 
9999 mem: location 1221 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1221 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1221 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1227
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1221 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1221 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1228
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1221 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1221 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1229
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1229 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1230
 104 run: jump-if legal?, 1:offset
9999 mem: location 1230 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1229 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1228 is 5
9999 mem: storing 1 in location 1230
 104 run: jump-if legal?, 1:offset
9999 mem: location 1230 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1221 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1221 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1231
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1231 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1230
 104 run: jump-if legal?, 1:offset
9999 mem: location 1230 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1231 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1227 is 10
9999 mem: storing 1 in location 1230
 104 run: jump-if legal?, 1:offset
9999 mem: location 1230 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1222 is 48
9999 mem: storing 0 in location 1232
 104 run: break-unless newline?, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1229 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1227 is 10
9999 mem: storing 20 in location 1235
 104 run: index <- add index, *column
9999 mem: location 1235 is 20
9999 mem: location 1231 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1235
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1221 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1221 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1236
 104 run: len:number <- length *buf
9999 mem: location 1236 is 1014
9999 mem: storing 50 in location 1237
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1222 is 48
9999 mem: storing 0 in location 1238
 104 run: break-unless backspace?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1236 is 1014
9999 mem: location 1235 is 20
9999 mem: storing 1055 in location 1240
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1240 is 1055
9999 mem: location 1055 is 100
9999 mem: location 1056 is 7
9999 mem: location 1240 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1241
 104 run: *cursor-contents <- copy c
9999 mem: location 1222 is 48
9999 mem: location 1241 is 1055
9999 mem: location 1241 is 1055
9999 mem: storing 48 in location 1055
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1240 is 1055
9999 mem: location 1055 is 48
9999 mem: location 1056 is 7
9999 mem: location 1240 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1242
 104 run: *cursor-color <- copy color
9999 mem: location 1223 is 7
9999 mem: location 1242 is 1056
9999 mem: location 1242 is 1056
9999 mem: storing 7 in location 1056
 104 run: right:number <- subtract width, 1
9999 mem: location 1227 is 10
9999 mem: storing 9 in location 1243
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1231 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1243 is 9
9999 mem: storing 0 in location 1244
 104 run: break-if at-right?, 
9999 mem: location 1244 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1231 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1231 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1221 is 1009
 103 run: curr-column <- add curr-column, 1
9999 mem: location 1486 is 0
9999 mem: storing 1 in location 1486
 103 run: curr <- next-duplex curr
9999 mem: location 1485 is 1489
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1489 in location 1451
 104 run: jump-if in, 1:offset
9999 mem: location 1451 is 1489
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1451 is 1489
9999 mem: location 1489 is 48
9999 mem: location 1490 is 1171
9999 mem: location 1491 is 1168
9999 mem: location 1451 is 1489
9999 run: address to copy is 1490
9999 run: its type is address
9999 mem: location 1490 is 1171
9999 mem: storing 1171 in location 1452
 104 run: reply result
9999 mem: location 1452 is 1171
9999 run: result 0 is 1171
9999 mem: storing 1171 in location 1485
 103 run: loop 
9999 run: jumping to instruction 90
 103 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1486 is 1
9999 mem: location 1465 is 10
9999 mem: storing 0 in location 1483
 103 run: jump-unless at-right?, 1:offset
9999 mem: location 1483 is 0
9999 run: jumping to instruction 93
 103 run: break-unless curr, 
9999 mem: location 1485 is 1171
9999 run: jump-unless fell through
 103 run: currc:character <- get *curr, value:offset
9999 mem: location 1485 is 1171
9999 mem: location 1171 is 100
9999 mem: location 1172 is 0
9999 mem: location 1173 is 1489
9999 mem: location 1485 is 1171
9999 run: address to copy is 1171
9999 run: its type is number
9999 mem: location 1171 is 100
9999 mem: storing 100 in location 1487
 103 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1487 is 100
9999 mem: storing 0 in location 1488
 103 run: break-if at-newline?, 
9999 mem: location 1488 is 0
9999 run: jump-if fell through
 103 run: print-character screen, currc
9999 mem: location 1457 is 1009
9999 mem: location 1487 is 100
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1221
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1222
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1223
9999 mem: storing 0 in location 1224
 104 run: break-if color-found?, 
9999 mem: location 1224 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1223
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1225
9999 mem: storing 0 in location 1226
 104 run: break-if bg-color-found?, 
9999 mem: location 1226 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1225
 104 run: trace 90, [print-character], c
9999 mem: location 1222 is 100
  90 print-character: 100 
 104 run: break-unless sc, 
9999 mem: location 1221 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1221 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1221 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1227
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1221 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1221 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1228
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1221 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1221 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1229
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1229 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1230
 104 run: jump-if legal?, 1:offset
9999 mem: location 1230 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1229 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1228 is 5
9999 mem: storing 1 in location 1230
 104 run: jump-if legal?, 1:offset
9999 mem: location 1230 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1221 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1221 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1231
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1231 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1230
 104 run: jump-if legal?, 1:offset
9999 mem: location 1230 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1231 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1227 is 10
9999 mem: storing 1 in location 1230
 104 run: jump-if legal?, 1:offset
9999 mem: location 1230 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1222 is 100
9999 mem: storing 0 in location 1232
 104 run: break-unless newline?, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1229 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1227 is 10
9999 mem: storing 20 in location 1235
 104 run: index <- add index, *column
9999 mem: location 1235 is 20
9999 mem: location 1231 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1235
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1221 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1221 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1236
 104 run: len:number <- length *buf
9999 mem: location 1236 is 1014
9999 mem: storing 50 in location 1237
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1222 is 100
9999 mem: storing 0 in location 1238
 104 run: break-unless backspace?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1236 is 1014
9999 mem: location 1235 is 21
9999 mem: storing 1057 in location 1240
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1240 is 1057
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1240 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1241
 104 run: *cursor-contents <- copy c
9999 mem: location 1222 is 100
9999 mem: location 1241 is 1057
9999 mem: location 1241 is 1057
9999 mem: storing 100 in location 1057
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1240 is 1057
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1240 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1242
 104 run: *cursor-color <- copy color
9999 mem: location 1223 is 7
9999 mem: location 1242 is 1058
9999 mem: location 1242 is 1058
9999 mem: storing 7 in location 1058
 104 run: right:number <- subtract width, 1
9999 mem: location 1227 is 10
9999 mem: storing 9 in location 1243
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1231 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1243 is 9
9999 mem: storing 0 in location 1244
 104 run: break-if at-right?, 
9999 mem: location 1244 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1231 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1231 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1221 is 1009
 103 run: curr-column <- add curr-column, 1
9999 mem: location 1486 is 1
9999 mem: storing 2 in location 1486
 103 run: curr <- next-duplex curr
9999 mem: location 1485 is 1171
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1171 in location 1451
 104 run: jump-if in, 1:offset
9999 mem: location 1451 is 1171
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1451 is 1171
9999 mem: location 1171 is 100
9999 mem: location 1172 is 0
9999 mem: location 1173 is 1489
9999 mem: location 1451 is 1171
9999 run: address to copy is 1172
9999 run: its type is address
9999 mem: location 1172 is 0
9999 mem: storing 0 in location 1452
 104 run: reply result
9999 mem: location 1452 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1485
 103 run: loop 
9999 run: jumping to instruction 90
 103 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1486 is 2
9999 mem: location 1465 is 10
9999 mem: storing 0 in location 1483
 103 run: jump-unless at-right?, 1:offset
9999 mem: location 1483 is 0
9999 run: jumping to instruction 93
 103 run: break-unless curr, 
9999 mem: location 1485 is 0
9999 run: jumping to instruction 101
 103 run: reply editor/same-as-ingredient:0, screen/same-as-ingredient:2, 0/no-more-render
9999 mem: location 1455 is 1115
9999 mem: location 1457 is 1009
9999 run: result 0 is 1115
9999 run: result 1 is 1009
9999 run: result 2 is 0
9999 mem: storing 1115 in location 1321
9999 mem: storing 1009 in location 1320
9999 mem: storing 0 in location 1360
 102 run: top-after:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1489
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1440
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1152
9999 mem: storing 1152 in location 1365
 102 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1321 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1489
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1440
9999 mem: location 1125 is 0
9999 mem: location 1321 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1339
 102 run: break-unless *undo, 
9999 mem: location 1339 is 1124
9999 mem: location 1124 is 1440
9999 run: jump-unless fell through
 102 run: op:address:operation <- first *undo
9999 mem: location 1339 is 1124
9999 mem: location 1124 is 1440
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:list <- next-ingredient 
9999 mem: storing 1440 in location 1451
 103 run: result:location <- get *in, value:offset
9999 mem: location 1451 is 1440
9999 mem: location 1440 is 1431
9999 mem: location 1441 is 1429
9999 mem: location 1451 is 1440
9999 run: address to copy is 1440
9999 run: its type is number
9999 mem: location 1440 is 1431
9999 mem: storing 1431 in location 1452
 103 run: reply result
9999 mem: location 1452 is 1431
9999 run: result 0 is 1431
9999 mem: storing 1431 in location 1338
 102 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1338 is 1431
9999 mem: location 1431 is 1
9999 mem: location 1432 is 1
9999 mem: location 1433 is 3
9999 mem: location 1434 is 1152
9999 mem: location 1435 is 2
9999 mem: location 1436 is 0
9999 mem: location 1437 is 1152
9999 mem: location 1438 is 0
9999 mem: location 1439 is 0
9999 mem: location 1338 is 1431
9999 mem: storing 0 in location 1342
 102 run: break-unless typing, 
9999 mem: location 1342 is 0
9999 run: jumping to instruction 199
 102 run: insert-from:address:duplex-list <- copy *before-cursor
9999 mem: location 1330 is 1118
9999 mem: location 1118 is 1489
9999 mem: location 1330 is 1118
9999 mem: location 1330 is 1118
9999 mem: storing 1489 in location 1343
 102 run: insert-to:address:duplex-list <- next-duplex insert-from
9999 mem: location 1343 is 1489
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1489 in location 1451
 103 run: jump-if in, 1:offset
9999 mem: location 1451 is 1489
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1451 is 1489
9999 mem: location 1489 is 48
9999 mem: location 1490 is 1171
9999 mem: location 1491 is 1168
9999 mem: location 1451 is 1489
9999 run: address to copy is 1490
9999 run: its type is address
9999 mem: location 1490 is 1171
9999 mem: storing 1171 in location 1452
 103 run: reply result
9999 mem: location 1452 is 1171
9999 run: result 0 is 1171
9999 mem: storing 1171 in location 1370
 102 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1492
9999 mem: storing 1492 in location 1338
 102 run: *op <- merge 0/insert-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to
9999 mem: location 1333 is 2
9999 mem: location 1334 is 0
9999 mem: location 1364 is 1152
9999 mem: location 1331 is 1121
9999 mem: location 1121 is 2
9999 mem: location 1332 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1365 is 1152
9999 mem: location 1343 is 1489
9999 mem: location 1370 is 1171
9999 mem: location 1338 is 1492
9999 mem: storing 0 in location 1492
9999 mem: storing 2 in location 1493
9999 mem: storing 0 in location 1494
9999 mem: storing 1152 in location 1495
9999 mem: storing 2 in location 1496
9999 mem: storing 1 in location 1497
9999 mem: storing 1152 in location 1498
9999 mem: storing 1489 in location 1499
9999 mem: storing 1171 in location 1500
 102 run: editor <- add-operation editor, op
9999 mem: location 1321 is 1115
9999 mem: location 1338 is 1492
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1247
 103 run: op:address:operation <- next-ingredient 
9999 mem: storing 1492 in location 1248
 103 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1247 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1489
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1440
9999 mem: location 1125 is 0
9999 mem: location 1247 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1249
 103 run: *undo <- push op, *undo
9999 mem: location 1248 is 1492
9999 mem: location 1249 is 1124
9999 mem: location 1124 is 1440
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: x:location <- next-ingredient 
9999 mem: storing 1492 in location 1203
 104 run: in:address:list <- next-ingredient 
9999 mem: storing 1440 in location 1204
 104 run: result:address:list <- new list:type
9999 mem: new alloc: 1501
9999 mem: storing 1501 in location 1205
 104 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1205 is 1501
9999 mem: location 1501 is 0
9999 mem: location 1502 is 0
9999 mem: location 1205 is 1501
9999 run: address to copy is 1501
9999 mem: storing 1501 in location 1206
 104 run: *val <- copy x
9999 mem: location 1203 is 1492
9999 mem: location 1206 is 1501
9999 mem: location 1206 is 1501
9999 mem: storing 1492 in location 1501
 104 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1205 is 1501
9999 mem: location 1501 is 1492
9999 mem: location 1502 is 0
9999 mem: location 1205 is 1501
9999 run: address to copy is 1502
9999 mem: storing 1502 in location 1207
 104 run: *next <- copy in
9999 mem: location 1204 is 1440
9999 mem: location 1207 is 1502
9999 mem: location 1207 is 1502
9999 mem: storing 1440 in location 1502
 104 run: reply result
9999 mem: location 1205 is 1501
9999 run: result 0 is 1501
9999 mem: location 1249 is 1124
9999 mem: storing 1501 in location 1124
 103 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1247 is 1115
9999 mem: location 1115 is 1152
9999 mem: location 1116 is 1152
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1489
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1501
9999 mem: location 1125 is 0
9999 mem: location 1247 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1250
 103 run: *redo <- copy 0
9999 mem: location 1250 is 1125
9999 mem: location 1250 is 1125
9999 mem: storing 0 in location 1125
 103 run: reply editor/same-as-ingredient:0
9999 mem: location 1247 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1321
 102 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1320 is 1009
9999 mem: location 1321 is 1115
9999 mem: location 1360 is 0
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1300
9999 mem: storing 1115 in location 1302
9999 mem: storing 0 in location 1317
 101 run: break-unless go-render?, 
9999 mem: location 1317 is 0
9999 run: jumping to instruction 33
 101 run: loop 
9999 run: jumping to instruction 5
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1447
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 1447 in location 1253
 102 run: break-unless x, 
9999 mem: location 1253 is 1447
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1253 is 1447
9999 mem: location 1447 is 1
9999 mem: location 1448 is 1442
9999 mem: location 1253 is 1447
9999 run: address to copy is 1447
9999 mem: storing 1447 in location 1254
 102 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1253 is 1447
9999 mem: location 1447 is 1
9999 mem: location 1448 is 1442
9999 mem: location 1253 is 1447
9999 run: address to copy is 1448
9999 run: its type is address
9999 mem: location 1448 is 1442
9999 mem: storing 1442 in location 1255
 102 run: max:number <- length *buf
9999 mem: location 1255 is 1442
9999 mem: storing 1 in location 1256
 102 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1254 is 1447
9999 mem: location 1447 is 1
9999 mem: location 1256 is 1
9999 mem: storing 1 in location 1257
 102 run: break-unless done?, 
9999 mem: location 1257 is 1
9999 run: jump-unless fell through
 102 run: dummy:address:event <- new event:type
9999 mem: storing 1449 in location 1258
 102 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1258 is 1449
9999 mem: location 1449 is 0
9999 mem: location 1450 is 0
9999 mem: location 1451 is 0
9999 mem: location 1452 is 0
9999 mem: location 1253 is 1447
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1447
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 1447 in location 1301
9999 mem: storing 1 in location 1307
9999 mem: storing 1 in location 1308
 101 run: loop-unless found?, 
9999 mem: location 1307 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?, 
9999 mem: location 1308 is 1
9999 run: jumping to instruction 36
  99 run: screen-should-contain [
    .          .
    .abc       .
    .0d        .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
  99 run: check-trace-count-for-label 2, [print-character]
