schedule: test-new-screen
run: -- nil
run: 1 test-new-screen 0: (((1 screen-address) (global)) <- ((new-screen)) ((5 literal)) ((5 literal)))
run: -- nil
run: 2 new-screen 0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal)))
sizeof: location
run: 1000 => ((default-scope scope-address))
sizeof: ((default-scope scope-address))
run: -- ((1000 30))
run: 3 new-screen 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (5 5)
run: 5 => ((1 integer))
setm: ((1 integer)) <= 5
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 1001 to 5
run: -- ((1000 30) (1001 5))
run: 4 new-screen 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (5 5)
run: 5 => ((2 integer))
setm: ((2 integer)) <= 5
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 1002 to 5
run: -- ((1000 30) (1001 5) (1002 5))
run: 5 new-screen 3: (((3 screen-address)) <- ((new)) ((screen literal)) ((1 integer)))
m: ((1 integer))
sizeof: ((1 integer))
sizeof: line-address
run: 1031 => ((3 screen-address))
setm: ((3 screen-address)) <= 1031
setm: size of ((3 screen-address)) is 1
setm: ((3 screen-address)): setting 1003 to 1031
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1031 5))
run: 6 new-screen 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1004 to 0
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 0) (1031 5))
run: 7 new-screen 5: (((5 line-address-address)) <- ((index-address)) ((3 screen-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1031 screen) (global))
m: ((1031 integer) (global))
sizeof: ((1031 integer) (global))
sizeof: line-address
run: 1032 => ((5 line-address-address))
setm: ((5 line-address-address)) <= 1032
setm: size of ((5 line-address-address)) is 1
setm: ((5 line-address-address)): setting 1005 to 1032
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 0) (1005 1032) (1031 5))
run: 8 new-screen 6: (((5 line-address-address) (deref)) <- ((new)) ((line literal)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
sizeof: character
run: 1037 => ((5 line-address-address) (deref))
setm: ((5 line-address-address) (deref)) <= 1037
setm: size of ((5 line-address-address) (deref)) is 1
setm: ((5 line-address-address) (deref)): setting 1032 to 1037
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 0) (1005 1032) (1031 5) (1032 1037) (1037 5))
run: 9 new-screen 7: (((6 line-address)) <- ((copy)) ((5 line-address-address) (deref)))
m: ((5 line-address-address) (deref))
sizeof: ((5 line-address-address) (deref))
run: 1037 => ((6 line-address))
setm: ((6 line-address)) <= 1037
setm: size of ((6 line-address)) is 1
setm: ((6 line-address)): setting 1006 to 1037
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 0) (1005 1032) (1006 1037) (1031 5) (1032 1037) (1037 5))
run: 10 new-screen 8: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
add: 0 1
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1004 to 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 1) (1005 1032) (1006 1037) (1031 5) (1032 1037) (1037 5))
run: 11 new-screen 9: (((7 boolean)) <- ((not-equal)) ((4 integer)) ((1 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((1 integer))
sizeof: ((1 integer))
neq: 1 5
m: ((4 integer))
sizeof: ((4 integer))
m: ((1 integer))
sizeof: ((1 integer))
run: t => ((7 boolean))
setm: ((7 boolean)) <= t
setm: size of ((7 boolean)) is 1
setm: ((7 boolean)): setting 1007 to t
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 1) (1005 1032) (1006 1037) (1007 t) (1031 5) (1032 1037) (1037 5))
run: 12 new-screen 10: (((jump-if)) ((7 boolean)) ((-6 offset)))
m: ((7 boolean))
sizeof: ((7 boolean))
jump: checking that t is t
jump: jumping to 5
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 1) (1005 1032) (1006 1037) (1007 t) (1031 5) (1032 1037) (1037 5))
run: 13 new-screen 5: (((5 line-address-address)) <- ((index-address)) ((3 screen-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1031 screen) (global))
m: ((1031 integer) (global))
sizeof: ((1031 integer) (global))
sizeof: line-address
run: 1033 => ((5 line-address-address))
setm: ((5 line-address-address)) <= 1033
setm: size of ((5 line-address-address)) is 1
setm: ((5 line-address-address)): setting 1005 to 1033
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 1) (1005 1033) (1006 1037) (1007 t) (1031 5) (1032 1037) (1037 5))
run: 14 new-screen 6: (((5 line-address-address) (deref)) <- ((new)) ((line literal)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
sizeof: character
run: 1043 => ((5 line-address-address) (deref))
setm: ((5 line-address-address) (deref)) <= 1043
setm: size of ((5 line-address-address) (deref)) is 1
setm: ((5 line-address-address) (deref)): setting 1033 to 1043
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 1) (1005 1033) (1006 1037) (1007 t) (1031 5) (1032 1037) (1033 1043) (1037 5) (1043 5))
run: 15 new-screen 7: (((6 line-address)) <- ((copy)) ((5 line-address-address) (deref)))
m: ((5 line-address-address) (deref))
sizeof: ((5 line-address-address) (deref))
run: 1043 => ((6 line-address))
setm: ((6 line-address)) <= 1043
setm: size of ((6 line-address)) is 1
setm: ((6 line-address)): setting 1006 to 1043
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 1) (1005 1033) (1006 1043) (1007 t) (1031 5) (1032 1037) (1033 1043) (1037 5) (1043 5))
run: 16 new-screen 8: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
add: 1 1
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1004 to 2
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 2) (1005 1033) (1006 1043) (1007 t) (1031 5) (1032 1037) (1033 1043) (1037 5) (1043 5))
run: 17 new-screen 9: (((7 boolean)) <- ((not-equal)) ((4 integer)) ((1 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((1 integer))
sizeof: ((1 integer))
neq: 2 5
m: ((4 integer))
sizeof: ((4 integer))
m: ((1 integer))
sizeof: ((1 integer))
run: t => ((7 boolean))
setm: ((7 boolean)) <= t
setm: size of ((7 boolean)) is 1
setm: ((7 boolean)): setting 1007 to t
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 2) (1005 1033) (1006 1043) (1007 t) (1031 5) (1032 1037) (1033 1043) (1037 5) (1043 5))
run: 18 new-screen 10: (((jump-if)) ((7 boolean)) ((-6 offset)))
m: ((7 boolean))
sizeof: ((7 boolean))
jump: checking that t is t
jump: jumping to 5
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 2) (1005 1033) (1006 1043) (1007 t) (1031 5) (1032 1037) (1033 1043) (1037 5) (1043 5))
run: 19 new-screen 5: (((5 line-address-address)) <- ((index-address)) ((3 screen-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1031 screen) (global))
m: ((1031 integer) (global))
sizeof: ((1031 integer) (global))
sizeof: line-address
run: 1034 => ((5 line-address-address))
setm: ((5 line-address-address)) <= 1034
setm: size of ((5 line-address-address)) is 1
setm: ((5 line-address-address)): setting 1005 to 1034
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 2) (1005 1034) (1006 1043) (1007 t) (1031 5) (1032 1037) (1033 1043) (1037 5) (1043 5))
run: 20 new-screen 6: (((5 line-address-address) (deref)) <- ((new)) ((line literal)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
sizeof: character
run: 1049 => ((5 line-address-address) (deref))
setm: ((5 line-address-address) (deref)) <= 1049
setm: size of ((5 line-address-address) (deref)) is 1
setm: ((5 line-address-address) (deref)): setting 1034 to 1049
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 2) (1005 1034) (1006 1043) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1037 5) (1043 5) (1049 5))
run: 21 new-screen 7: (((6 line-address)) <- ((copy)) ((5 line-address-address) (deref)))
m: ((5 line-address-address) (deref))
sizeof: ((5 line-address-address) (deref))
run: 1049 => ((6 line-address))
setm: ((6 line-address)) <= 1049
setm: size of ((6 line-address)) is 1
setm: ((6 line-address)): setting 1006 to 1049
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 2) (1005 1034) (1006 1049) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1037 5) (1043 5) (1049 5))
run: 22 new-screen 8: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
add: 2 1
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1004 to 3
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 3) (1005 1034) (1006 1049) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1037 5) (1043 5) (1049 5))
run: 23 new-screen 9: (((7 boolean)) <- ((not-equal)) ((4 integer)) ((1 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((1 integer))
sizeof: ((1 integer))
neq: 3 5
m: ((4 integer))
sizeof: ((4 integer))
m: ((1 integer))
sizeof: ((1 integer))
run: t => ((7 boolean))
setm: ((7 boolean)) <= t
setm: size of ((7 boolean)) is 1
setm: ((7 boolean)): setting 1007 to t
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 3) (1005 1034) (1006 1049) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1037 5) (1043 5) (1049 5))
run: 24 new-screen 10: (((jump-if)) ((7 boolean)) ((-6 offset)))
m: ((7 boolean))
sizeof: ((7 boolean))
jump: checking that t is t
jump: jumping to 5
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 3) (1005 1034) (1006 1049) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1037 5) (1043 5) (1049 5))
run: 25 new-screen 5: (((5 line-address-address)) <- ((index-address)) ((3 screen-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1031 screen) (global))
m: ((1031 integer) (global))
sizeof: ((1031 integer) (global))
sizeof: line-address
run: 1035 => ((5 line-address-address))
setm: ((5 line-address-address)) <= 1035
setm: size of ((5 line-address-address)) is 1
setm: ((5 line-address-address)): setting 1005 to 1035
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 3) (1005 1035) (1006 1049) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1037 5) (1043 5) (1049 5))
run: 26 new-screen 6: (((5 line-address-address) (deref)) <- ((new)) ((line literal)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
sizeof: character
run: 1055 => ((5 line-address-address) (deref))
setm: ((5 line-address-address) (deref)) <= 1055
setm: size of ((5 line-address-address) (deref)) is 1
setm: ((5 line-address-address) (deref)): setting 1035 to 1055
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 3) (1005 1035) (1006 1049) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1037 5) (1043 5) (1049 5) (1055 5))
run: 27 new-screen 7: (((6 line-address)) <- ((copy)) ((5 line-address-address) (deref)))
m: ((5 line-address-address) (deref))
sizeof: ((5 line-address-address) (deref))
run: 1055 => ((6 line-address))
setm: ((6 line-address)) <= 1055
setm: size of ((6 line-address)) is 1
setm: ((6 line-address)): setting 1006 to 1055
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 3) (1005 1035) (1006 1055) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1037 5) (1043 5) (1049 5) (1055 5))
run: 28 new-screen 8: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
add: 3 1
m: ((4 integer))
sizeof: ((4 integer))
run: 4 => ((4 integer))
setm: ((4 integer)) <= 4
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1004 to 4
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 4) (1005 1035) (1006 1055) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1037 5) (1043 5) (1049 5) (1055 5))
run: 29 new-screen 9: (((7 boolean)) <- ((not-equal)) ((4 integer)) ((1 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((1 integer))
sizeof: ((1 integer))
neq: 4 5
m: ((4 integer))
sizeof: ((4 integer))
m: ((1 integer))
sizeof: ((1 integer))
run: t => ((7 boolean))
setm: ((7 boolean)) <= t
setm: size of ((7 boolean)) is 1
setm: ((7 boolean)): setting 1007 to t
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 4) (1005 1035) (1006 1055) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1037 5) (1043 5) (1049 5) (1055 5))
run: 30 new-screen 10: (((jump-if)) ((7 boolean)) ((-6 offset)))
m: ((7 boolean))
sizeof: ((7 boolean))
jump: checking that t is t
jump: jumping to 5
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 4) (1005 1035) (1006 1055) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1037 5) (1043 5) (1049 5) (1055 5))
run: 31 new-screen 5: (((5 line-address-address)) <- ((index-address)) ((3 screen-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1031 screen) (global))
m: ((1031 integer) (global))
sizeof: ((1031 integer) (global))
sizeof: line-address
run: 1036 => ((5 line-address-address))
setm: ((5 line-address-address)) <= 1036
setm: size of ((5 line-address-address)) is 1
setm: ((5 line-address-address)): setting 1005 to 1036
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 4) (1005 1036) (1006 1055) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1037 5) (1043 5) (1049 5) (1055 5))
run: 32 new-screen 6: (((5 line-address-address) (deref)) <- ((new)) ((line literal)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
sizeof: character
run: 1061 => ((5 line-address-address) (deref))
setm: ((5 line-address-address) (deref)) <= 1061
setm: size of ((5 line-address-address) (deref)) is 1
setm: ((5 line-address-address) (deref)): setting 1036 to 1061
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 4) (1005 1036) (1006 1055) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1036 1061) (1037 5) (1043 5) (1049 5) (1055 5) (1061 5))
run: 33 new-screen 7: (((6 line-address)) <- ((copy)) ((5 line-address-address) (deref)))
m: ((5 line-address-address) (deref))
sizeof: ((5 line-address-address) (deref))
run: 1061 => ((6 line-address))
setm: ((6 line-address)) <= 1061
setm: size of ((6 line-address)) is 1
setm: ((6 line-address)): setting 1006 to 1061
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 4) (1005 1036) (1006 1061) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1036 1061) (1037 5) (1043 5) (1049 5) (1055 5) (1061 5))
run: 34 new-screen 8: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
add: 4 1
m: ((4 integer))
sizeof: ((4 integer))
run: 5 => ((4 integer))
setm: ((4 integer)) <= 5
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1004 to 5
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 5) (1005 1036) (1006 1061) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1036 1061) (1037 5) (1043 5) (1049 5) (1055 5) (1061 5))
run: 35 new-screen 9: (((7 boolean)) <- ((not-equal)) ((4 integer)) ((1 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((1 integer))
sizeof: ((1 integer))
neq: 5 5
m: ((4 integer))
sizeof: ((4 integer))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((7 boolean))
setm: ((7 boolean)) <= nil
setm: size of ((7 boolean)) is 1
setm: ((7 boolean)): setting 1007 to nil
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 5) (1005 1036) (1006 1061) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1036 1061) (1037 5) (1043 5) (1049 5) (1055 5) (1061 5))
run: 36 new-screen 10: (((jump-if)) ((7 boolean)) ((-6 offset)))
m: ((7 boolean))
sizeof: ((7 boolean))
jump: checking that nil is t
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 5) (1005 1036) (1006 1061) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1036 1061) (1037 5) (1043 5) (1049 5) (1055 5) (1061 5))
run: 37 new-screen 11: (((reply)) ((3 screen-address)))
m: ((3 screen-address))
sizeof: ((3 screen-address))
reply: (((3 screen-address))) (((1 screen-address) (global)))
reply: 1031 => ((1 screen-address) (global))
setm: ((1 screen-address) (global)) <= 1031
setm: size of ((1 screen-address) (global)) is 1
setm: ((1 screen-address) (global)): setting 1 to 1031
schedule: done with routine
