schedule: test-new-screen
run: -- nil
run: 1 test-new-screen 0: ((2001 screen-address) <- new-screen (5 literal) (5 literal))
run: -- nil
run: 2 new-screen 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1000 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1000 30))
run: 3 new-screen 1: ((1 integer) <- arg)
arg: nil 0 (5 5)
run: 5 => (1 integer)
setm: (1 integer) <= 5
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
addr: incrementing by 1000
setm: size of (1 integer) is 1
setm: (1 integer): setting 1001 to 5
run: -- ((1000 30) (1001 5))
run: 4 new-screen 2: ((2 integer) <- arg)
arg: nil 1 (5 5)
run: 5 => (2 integer)
setm: (2 integer) <= 5
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1000
setm: size of (2 integer) is 1
setm: (2 integer): setting 1002 to 5
run: -- ((1000 30) (1001 5) (1002 5))
run: 5 new-screen 3: ((3 screen-address) <- new (screen literal) (1 integer))
m: (1 integer)
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
addr: incrementing by 1000
sizeof: line-address
run: 1031 => (3 screen-address)
setm: (3 screen-address) <= 1031
sz: (3 screen-address)
addr: (3 screen-address)
addr: initial result: 3
addr: incrementing by 1000
setm: size of (3 screen-address) is 1
setm: (3 screen-address): setting 1003 to 1031
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1031 5))
run: 6 new-screen 4: ((4 integer) <- copy (0 literal))
run: 0 => (4 integer)
setm: (4 integer) <= 0
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
setm: size of (4 integer) is 1
setm: (4 integer): setting 1004 to 0
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 0) (1031 5))
run: 7 new-screen 5: ((5 line-address-address) <- index-address (3 screen-address deref) (4 integer))
array-info: (3 screen-address deref) (4 integer)
addr: (3 screen-address deref)
addr: initial result: 3
addr: incrementing by 1000
addr: deref 1003 => 1031
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
array-info: initial base 1031 type ((address t) (elem screen) (size 1))
array-info: (3 screen-address deref) requests deref => ((array t) (elem line-address))
array-len: (3 screen-address deref)
m: (3 integer-address deref)
sz: (3 integer-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
addr: incrementing by 1000
sz: (1031 integer)
addr: (3 integer-address deref)
addr: initial result: 3
addr: incrementing by 1000
addr: deref 1003 => 1031
array-info: array-len of (3 screen-address deref) is 5
index-address: (3 screen-address deref) (4 integer) => 1032
run: 1032 => (5 line-address-address)
setm: (5 line-address-address) <= 1032
sz: (5 line-address-address)
addr: (5 line-address-address)
addr: initial result: 5
addr: incrementing by 1000
setm: size of (5 line-address-address) is 1
setm: (5 line-address-address): setting 1005 to 1032
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 0) (1005 1032) (1031 5))
run: 8 new-screen 6: ((5 line-address-address deref) <- new (line literal) (2 integer))
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1000
sizeof: character
run: 1037 => (5 line-address-address deref)
setm: (5 line-address-address deref) <= 1037
sz: (5 line-address-address deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1000
sz: (1032 line-address)
addr: (5 line-address-address deref)
addr: initial result: 5
addr: incrementing by 1000
addr: deref 1005 => 1032
setm: size of (5 line-address-address deref) is 1
setm: (5 line-address-address deref): setting 1032 to 1037
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 0) (1005 1032) (1031 5) (1032 1037) (1037 5))
run: 9 new-screen 7: ((6 line-address) <- copy (5 line-address-address deref))
m: (5 line-address-address deref)
sz: (5 line-address-address deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1000
sz: (1032 line-address)
addr: (5 line-address-address deref)
addr: initial result: 5
addr: incrementing by 1000
addr: deref 1005 => 1032
run: 1037 => (6 line-address)
setm: (6 line-address) <= 1037
sz: (6 line-address)
addr: (6 line-address)
addr: initial result: 6
addr: incrementing by 1000
setm: size of (6 line-address) is 1
setm: (6 line-address): setting 1006 to 1037
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 0) (1005 1032) (1006 1037) (1031 5) (1032 1037) (1037 5))
run: 10 new-screen 8: ((4 integer) <- add (4 integer) (1 literal))
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
add: 0 1
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
run: 1 => (4 integer)
setm: (4 integer) <= 1
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
setm: size of (4 integer) is 1
setm: (4 integer): setting 1004 to 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 1) (1005 1032) (1006 1037) (1031 5) (1032 1037) (1037 5))
run: 11 new-screen 9: ((7 boolean) <- neq (4 integer) (1 integer))
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
m: (1 integer)
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
addr: incrementing by 1000
neq: 1 5
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
m: (1 integer)
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
addr: incrementing by 1000
run: t => (7 boolean)
setm: (7 boolean) <= t
sz: (7 boolean)
addr: (7 boolean)
addr: initial result: 7
addr: incrementing by 1000
setm: size of (7 boolean) is 1
setm: (7 boolean): setting 1007 to t
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 1) (1005 1032) (1006 1037) (1007 t) (1031 5) (1032 1037) (1037 5))
run: 12 new-screen 10: (jump-if (7 boolean) (-6 offset))
m: (7 boolean)
sz: (7 boolean)
addr: (7 boolean)
addr: initial result: 7
addr: incrementing by 1000
jump: checking that t is t
jump: jumping to 5
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 1) (1005 1032) (1006 1037) (1007 t) (1031 5) (1032 1037) (1037 5))
run: 13 new-screen 5: ((5 line-address-address) <- index-address (3 screen-address deref) (4 integer))
array-info: (3 screen-address deref) (4 integer)
addr: (3 screen-address deref)
addr: initial result: 3
addr: incrementing by 1000
addr: deref 1003 => 1031
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
array-info: initial base 1031 type ((address t) (elem screen) (size 1))
array-info: (3 screen-address deref) requests deref => ((array t) (elem line-address))
array-len: (3 screen-address deref)
m: (3 integer-address deref)
sz: (3 integer-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
addr: incrementing by 1000
sz: (1031 integer)
addr: (3 integer-address deref)
addr: initial result: 3
addr: incrementing by 1000
addr: deref 1003 => 1031
array-info: array-len of (3 screen-address deref) is 5
index-address: (3 screen-address deref) (4 integer) => 1033
run: 1033 => (5 line-address-address)
setm: (5 line-address-address) <= 1033
sz: (5 line-address-address)
addr: (5 line-address-address)
addr: initial result: 5
addr: incrementing by 1000
setm: size of (5 line-address-address) is 1
setm: (5 line-address-address): setting 1005 to 1033
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 1) (1005 1033) (1006 1037) (1007 t) (1031 5) (1032 1037) (1037 5))
run: 14 new-screen 6: ((5 line-address-address deref) <- new (line literal) (2 integer))
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1000
sizeof: character
run: 1043 => (5 line-address-address deref)
setm: (5 line-address-address deref) <= 1043
sz: (5 line-address-address deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1000
sz: (1033 line-address)
addr: (5 line-address-address deref)
addr: initial result: 5
addr: incrementing by 1000
addr: deref 1005 => 1033
setm: size of (5 line-address-address deref) is 1
setm: (5 line-address-address deref): setting 1033 to 1043
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 1) (1005 1033) (1006 1037) (1007 t) (1031 5) (1032 1037) (1033 1043) (1037 5) (1043 5))
run: 15 new-screen 7: ((6 line-address) <- copy (5 line-address-address deref))
m: (5 line-address-address deref)
sz: (5 line-address-address deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1000
sz: (1033 line-address)
addr: (5 line-address-address deref)
addr: initial result: 5
addr: incrementing by 1000
addr: deref 1005 => 1033
run: 1043 => (6 line-address)
setm: (6 line-address) <= 1043
sz: (6 line-address)
addr: (6 line-address)
addr: initial result: 6
addr: incrementing by 1000
setm: size of (6 line-address) is 1
setm: (6 line-address): setting 1006 to 1043
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 1) (1005 1033) (1006 1043) (1007 t) (1031 5) (1032 1037) (1033 1043) (1037 5) (1043 5))
run: 16 new-screen 8: ((4 integer) <- add (4 integer) (1 literal))
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
add: 1 1
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
run: 2 => (4 integer)
setm: (4 integer) <= 2
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
setm: size of (4 integer) is 1
setm: (4 integer): setting 1004 to 2
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 2) (1005 1033) (1006 1043) (1007 t) (1031 5) (1032 1037) (1033 1043) (1037 5) (1043 5))
run: 17 new-screen 9: ((7 boolean) <- neq (4 integer) (1 integer))
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
m: (1 integer)
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
addr: incrementing by 1000
neq: 2 5
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
m: (1 integer)
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
addr: incrementing by 1000
run: t => (7 boolean)
setm: (7 boolean) <= t
sz: (7 boolean)
addr: (7 boolean)
addr: initial result: 7
addr: incrementing by 1000
setm: size of (7 boolean) is 1
setm: (7 boolean): setting 1007 to t
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 2) (1005 1033) (1006 1043) (1007 t) (1031 5) (1032 1037) (1033 1043) (1037 5) (1043 5))
run: 18 new-screen 10: (jump-if (7 boolean) (-6 offset))
m: (7 boolean)
sz: (7 boolean)
addr: (7 boolean)
addr: initial result: 7
addr: incrementing by 1000
jump: checking that t is t
jump: jumping to 5
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 2) (1005 1033) (1006 1043) (1007 t) (1031 5) (1032 1037) (1033 1043) (1037 5) (1043 5))
run: 19 new-screen 5: ((5 line-address-address) <- index-address (3 screen-address deref) (4 integer))
array-info: (3 screen-address deref) (4 integer)
addr: (3 screen-address deref)
addr: initial result: 3
addr: incrementing by 1000
addr: deref 1003 => 1031
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
array-info: initial base 1031 type ((address t) (elem screen) (size 1))
array-info: (3 screen-address deref) requests deref => ((array t) (elem line-address))
array-len: (3 screen-address deref)
m: (3 integer-address deref)
sz: (3 integer-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
addr: incrementing by 1000
sz: (1031 integer)
addr: (3 integer-address deref)
addr: initial result: 3
addr: incrementing by 1000
addr: deref 1003 => 1031
array-info: array-len of (3 screen-address deref) is 5
index-address: (3 screen-address deref) (4 integer) => 1034
run: 1034 => (5 line-address-address)
setm: (5 line-address-address) <= 1034
sz: (5 line-address-address)
addr: (5 line-address-address)
addr: initial result: 5
addr: incrementing by 1000
setm: size of (5 line-address-address) is 1
setm: (5 line-address-address): setting 1005 to 1034
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 2) (1005 1034) (1006 1043) (1007 t) (1031 5) (1032 1037) (1033 1043) (1037 5) (1043 5))
run: 20 new-screen 6: ((5 line-address-address deref) <- new (line literal) (2 integer))
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1000
sizeof: character
run: 1049 => (5 line-address-address deref)
setm: (5 line-address-address deref) <= 1049
sz: (5 line-address-address deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1000
sz: (1034 line-address)
addr: (5 line-address-address deref)
addr: initial result: 5
addr: incrementing by 1000
addr: deref 1005 => 1034
setm: size of (5 line-address-address deref) is 1
setm: (5 line-address-address deref): setting 1034 to 1049
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 2) (1005 1034) (1006 1043) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1037 5) (1043 5) (1049 5))
run: 21 new-screen 7: ((6 line-address) <- copy (5 line-address-address deref))
m: (5 line-address-address deref)
sz: (5 line-address-address deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1000
sz: (1034 line-address)
addr: (5 line-address-address deref)
addr: initial result: 5
addr: incrementing by 1000
addr: deref 1005 => 1034
run: 1049 => (6 line-address)
setm: (6 line-address) <= 1049
sz: (6 line-address)
addr: (6 line-address)
addr: initial result: 6
addr: incrementing by 1000
setm: size of (6 line-address) is 1
setm: (6 line-address): setting 1006 to 1049
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 2) (1005 1034) (1006 1049) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1037 5) (1043 5) (1049 5))
run: 22 new-screen 8: ((4 integer) <- add (4 integer) (1 literal))
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
add: 2 1
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
run: 3 => (4 integer)
setm: (4 integer) <= 3
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
setm: size of (4 integer) is 1
setm: (4 integer): setting 1004 to 3
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 3) (1005 1034) (1006 1049) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1037 5) (1043 5) (1049 5))
run: 23 new-screen 9: ((7 boolean) <- neq (4 integer) (1 integer))
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
m: (1 integer)
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
addr: incrementing by 1000
neq: 3 5
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
m: (1 integer)
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
addr: incrementing by 1000
run: t => (7 boolean)
setm: (7 boolean) <= t
sz: (7 boolean)
addr: (7 boolean)
addr: initial result: 7
addr: incrementing by 1000
setm: size of (7 boolean) is 1
setm: (7 boolean): setting 1007 to t
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 3) (1005 1034) (1006 1049) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1037 5) (1043 5) (1049 5))
run: 24 new-screen 10: (jump-if (7 boolean) (-6 offset))
m: (7 boolean)
sz: (7 boolean)
addr: (7 boolean)
addr: initial result: 7
addr: incrementing by 1000
jump: checking that t is t
jump: jumping to 5
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 3) (1005 1034) (1006 1049) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1037 5) (1043 5) (1049 5))
run: 25 new-screen 5: ((5 line-address-address) <- index-address (3 screen-address deref) (4 integer))
array-info: (3 screen-address deref) (4 integer)
addr: (3 screen-address deref)
addr: initial result: 3
addr: incrementing by 1000
addr: deref 1003 => 1031
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
array-info: initial base 1031 type ((address t) (elem screen) (size 1))
array-info: (3 screen-address deref) requests deref => ((array t) (elem line-address))
array-len: (3 screen-address deref)
m: (3 integer-address deref)
sz: (3 integer-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
addr: incrementing by 1000
sz: (1031 integer)
addr: (3 integer-address deref)
addr: initial result: 3
addr: incrementing by 1000
addr: deref 1003 => 1031
array-info: array-len of (3 screen-address deref) is 5
index-address: (3 screen-address deref) (4 integer) => 1035
run: 1035 => (5 line-address-address)
setm: (5 line-address-address) <= 1035
sz: (5 line-address-address)
addr: (5 line-address-address)
addr: initial result: 5
addr: incrementing by 1000
setm: size of (5 line-address-address) is 1
setm: (5 line-address-address): setting 1005 to 1035
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 3) (1005 1035) (1006 1049) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1037 5) (1043 5) (1049 5))
run: 26 new-screen 6: ((5 line-address-address deref) <- new (line literal) (2 integer))
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1000
sizeof: character
run: 1055 => (5 line-address-address deref)
setm: (5 line-address-address deref) <= 1055
sz: (5 line-address-address deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1000
sz: (1035 line-address)
addr: (5 line-address-address deref)
addr: initial result: 5
addr: incrementing by 1000
addr: deref 1005 => 1035
setm: size of (5 line-address-address deref) is 1
setm: (5 line-address-address deref): setting 1035 to 1055
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 3) (1005 1035) (1006 1049) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1037 5) (1043 5) (1049 5) (1055 5))
run: 27 new-screen 7: ((6 line-address) <- copy (5 line-address-address deref))
m: (5 line-address-address deref)
sz: (5 line-address-address deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1000
sz: (1035 line-address)
addr: (5 line-address-address deref)
addr: initial result: 5
addr: incrementing by 1000
addr: deref 1005 => 1035
run: 1055 => (6 line-address)
setm: (6 line-address) <= 1055
sz: (6 line-address)
addr: (6 line-address)
addr: initial result: 6
addr: incrementing by 1000
setm: size of (6 line-address) is 1
setm: (6 line-address): setting 1006 to 1055
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 3) (1005 1035) (1006 1055) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1037 5) (1043 5) (1049 5) (1055 5))
run: 28 new-screen 8: ((4 integer) <- add (4 integer) (1 literal))
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
add: 3 1
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
run: 4 => (4 integer)
setm: (4 integer) <= 4
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
setm: size of (4 integer) is 1
setm: (4 integer): setting 1004 to 4
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 4) (1005 1035) (1006 1055) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1037 5) (1043 5) (1049 5) (1055 5))
run: 29 new-screen 9: ((7 boolean) <- neq (4 integer) (1 integer))
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
m: (1 integer)
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
addr: incrementing by 1000
neq: 4 5
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
m: (1 integer)
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
addr: incrementing by 1000
run: t => (7 boolean)
setm: (7 boolean) <= t
sz: (7 boolean)
addr: (7 boolean)
addr: initial result: 7
addr: incrementing by 1000
setm: size of (7 boolean) is 1
setm: (7 boolean): setting 1007 to t
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 4) (1005 1035) (1006 1055) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1037 5) (1043 5) (1049 5) (1055 5))
run: 30 new-screen 10: (jump-if (7 boolean) (-6 offset))
m: (7 boolean)
sz: (7 boolean)
addr: (7 boolean)
addr: initial result: 7
addr: incrementing by 1000
jump: checking that t is t
jump: jumping to 5
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 4) (1005 1035) (1006 1055) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1037 5) (1043 5) (1049 5) (1055 5))
run: 31 new-screen 5: ((5 line-address-address) <- index-address (3 screen-address deref) (4 integer))
array-info: (3 screen-address deref) (4 integer)
addr: (3 screen-address deref)
addr: initial result: 3
addr: incrementing by 1000
addr: deref 1003 => 1031
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
array-info: initial base 1031 type ((address t) (elem screen) (size 1))
array-info: (3 screen-address deref) requests deref => ((array t) (elem line-address))
array-len: (3 screen-address deref)
m: (3 integer-address deref)
sz: (3 integer-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
addr: incrementing by 1000
sz: (1031 integer)
addr: (3 integer-address deref)
addr: initial result: 3
addr: incrementing by 1000
addr: deref 1003 => 1031
array-info: array-len of (3 screen-address deref) is 5
index-address: (3 screen-address deref) (4 integer) => 1036
run: 1036 => (5 line-address-address)
setm: (5 line-address-address) <= 1036
sz: (5 line-address-address)
addr: (5 line-address-address)
addr: initial result: 5
addr: incrementing by 1000
setm: size of (5 line-address-address) is 1
setm: (5 line-address-address): setting 1005 to 1036
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 4) (1005 1036) (1006 1055) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1037 5) (1043 5) (1049 5) (1055 5))
run: 32 new-screen 6: ((5 line-address-address deref) <- new (line literal) (2 integer))
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1000
sizeof: character
run: 1061 => (5 line-address-address deref)
setm: (5 line-address-address deref) <= 1061
sz: (5 line-address-address deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1000
sz: (1036 line-address)
addr: (5 line-address-address deref)
addr: initial result: 5
addr: incrementing by 1000
addr: deref 1005 => 1036
setm: size of (5 line-address-address deref) is 1
setm: (5 line-address-address deref): setting 1036 to 1061
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 4) (1005 1036) (1006 1055) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1036 1061) (1037 5) (1043 5) (1049 5) (1055 5) (1061 5))
run: 33 new-screen 7: ((6 line-address) <- copy (5 line-address-address deref))
m: (5 line-address-address deref)
sz: (5 line-address-address deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1000
sz: (1036 line-address)
addr: (5 line-address-address deref)
addr: initial result: 5
addr: incrementing by 1000
addr: deref 1005 => 1036
run: 1061 => (6 line-address)
setm: (6 line-address) <= 1061
sz: (6 line-address)
addr: (6 line-address)
addr: initial result: 6
addr: incrementing by 1000
setm: size of (6 line-address) is 1
setm: (6 line-address): setting 1006 to 1061
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 4) (1005 1036) (1006 1061) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1036 1061) (1037 5) (1043 5) (1049 5) (1055 5) (1061 5))
run: 34 new-screen 8: ((4 integer) <- add (4 integer) (1 literal))
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
add: 4 1
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
run: 5 => (4 integer)
setm: (4 integer) <= 5
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
setm: size of (4 integer) is 1
setm: (4 integer): setting 1004 to 5
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 5) (1005 1036) (1006 1061) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1036 1061) (1037 5) (1043 5) (1049 5) (1055 5) (1061 5))
run: 35 new-screen 9: ((7 boolean) <- neq (4 integer) (1 integer))
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
m: (1 integer)
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
addr: incrementing by 1000
neq: 5 5
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
m: (1 integer)
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
addr: incrementing by 1000
run: nil => (7 boolean)
setm: (7 boolean) <= nil
sz: (7 boolean)
addr: (7 boolean)
addr: initial result: 7
addr: incrementing by 1000
setm: size of (7 boolean) is 1
setm: (7 boolean): setting 1007 to nil
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 5) (1005 1036) (1006 1061) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1036 1061) (1037 5) (1043 5) (1049 5) (1055 5) (1061 5))
run: 36 new-screen 10: (jump-if (7 boolean) (-6 offset))
m: (7 boolean)
sz: (7 boolean)
addr: (7 boolean)
addr: initial result: 7
addr: incrementing by 1000
jump: checking that nil is t
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 5) (1005 1036) (1006 1061) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1036 1061) (1037 5) (1043 5) (1049 5) (1055 5) (1061 5))
run: 37 new-screen 11: (reply (3 screen-address))
m: (3 screen-address)
sz: (3 screen-address)
addr: (3 screen-address)
addr: initial result: 3
addr: incrementing by 1000
reply: ((3 screen-address)) ((2001 screen-address))
reply: 1031 => (2001 screen-address)
setm: (2001 screen-address) <= 1031
sz: (2001 screen-address)
addr: (2001 screen-address)
addr: initial result: 2001
setm: size of (2001 screen-address) is 1
setm: (2001 screen-address): setting 2001 to 1031
schedule: done with routine
