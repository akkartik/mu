schedule: test-new-screen
run: test-new-screen 0: (((1 screen-address) (global)) <- ((new-screen)) ((5 literal)) ((5 literal)))
run: new-screen/test-new-screen 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: new-screen/test-new-screen 0: 101000 => ((default-space space-address))
run: new-screen/test-new-screen 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (5 5)
run: new-screen/test-new-screen 1: 5 => ((1 integer))
mem: ((1 integer)): 101002 <= 5
run: new-screen/test-new-screen 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (5 5)
run: new-screen/test-new-screen 2: 5 => ((2 integer))
mem: ((2 integer)): 101003 <= 5
run: new-screen/test-new-screen 3: (((3 screen-address)) <- ((new)) ((screen literal)) ((1 integer)))
mem: ((1 integer)) => 5
run: new-screen/test-new-screen 3: 101031 => ((3 screen-address))
mem: ((3 screen-address)): 101004 <= 101031
run: new-screen/test-new-screen 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: new-screen/test-new-screen 4: 0 => ((4 integer))
mem: ((4 integer)): 101005 <= 0
run: new-screen/test-new-screen 5: (((5 line-address-address)) <- ((index-address)) ((3 screen-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((101031 screen) (raw))
mem: ((101031 integer) (raw)) => 5
run: new-screen/test-new-screen 5: 101032 => ((5 line-address-address))
mem: ((5 line-address-address)): 101006 <= 101032
run: new-screen/test-new-screen 6: (((5 line-address-address) (deref)) <- ((new)) ((line literal)) ((2 integer)))
mem: ((2 integer)) => 5
run: new-screen/test-new-screen 6: 101037 => ((5 line-address-address) (deref))
mem: ((5 line-address-address) (deref)): 101032 <= 101037
run: new-screen/test-new-screen 7: (((6 line-address)) <- ((copy)) ((5 line-address-address) (deref)))
mem: ((5 line-address-address) (deref)) => 101037
run: new-screen/test-new-screen 7: 101037 => ((6 line-address))
mem: ((6 line-address)): 101007 <= 101037
run: new-screen/test-new-screen 8: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: new-screen/test-new-screen 8: 1 => ((4 integer))
mem: ((4 integer)): 101005 <= 1
run: new-screen/test-new-screen 9: (((7 boolean)) <- ((not-equal)) ((4 integer)) ((1 integer)))
mem: ((4 integer)) => 1
mem: ((1 integer)) => 5
run: new-screen/test-new-screen 9: t => ((7 boolean))
mem: ((7 boolean)): 101008 <= t
run: new-screen/test-new-screen 10: (((jump-if)) ((7 boolean)) ((-6 offset)))
mem: ((7 boolean)) => t
run: new-screen/test-new-screen 5: (((5 line-address-address)) <- ((index-address)) ((3 screen-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((101031 screen) (raw))
mem: ((101031 integer) (raw)) => 5
run: new-screen/test-new-screen 5: 101033 => ((5 line-address-address))
mem: ((5 line-address-address)): 101006 <= 101033
run: new-screen/test-new-screen 6: (((5 line-address-address) (deref)) <- ((new)) ((line literal)) ((2 integer)))
mem: ((2 integer)) => 5
run: new-screen/test-new-screen 6: 101043 => ((5 line-address-address) (deref))
mem: ((5 line-address-address) (deref)): 101033 <= 101043
run: new-screen/test-new-screen 7: (((6 line-address)) <- ((copy)) ((5 line-address-address) (deref)))
mem: ((5 line-address-address) (deref)) => 101043
run: new-screen/test-new-screen 7: 101043 => ((6 line-address))
mem: ((6 line-address)): 101007 <= 101043
run: new-screen/test-new-screen 8: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: new-screen/test-new-screen 8: 2 => ((4 integer))
mem: ((4 integer)): 101005 <= 2
run: new-screen/test-new-screen 9: (((7 boolean)) <- ((not-equal)) ((4 integer)) ((1 integer)))
mem: ((4 integer)) => 2
mem: ((1 integer)) => 5
run: new-screen/test-new-screen 9: t => ((7 boolean))
mem: ((7 boolean)): 101008 <= t
run: new-screen/test-new-screen 10: (((jump-if)) ((7 boolean)) ((-6 offset)))
mem: ((7 boolean)) => t
run: new-screen/test-new-screen 5: (((5 line-address-address)) <- ((index-address)) ((3 screen-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((101031 screen) (raw))
mem: ((101031 integer) (raw)) => 5
run: new-screen/test-new-screen 5: 101034 => ((5 line-address-address))
mem: ((5 line-address-address)): 101006 <= 101034
run: new-screen/test-new-screen 6: (((5 line-address-address) (deref)) <- ((new)) ((line literal)) ((2 integer)))
mem: ((2 integer)) => 5
run: new-screen/test-new-screen 6: 101049 => ((5 line-address-address) (deref))
mem: ((5 line-address-address) (deref)): 101034 <= 101049
run: new-screen/test-new-screen 7: (((6 line-address)) <- ((copy)) ((5 line-address-address) (deref)))
mem: ((5 line-address-address) (deref)) => 101049
run: new-screen/test-new-screen 7: 101049 => ((6 line-address))
mem: ((6 line-address)): 101007 <= 101049
run: new-screen/test-new-screen 8: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: new-screen/test-new-screen 8: 3 => ((4 integer))
mem: ((4 integer)): 101005 <= 3
run: new-screen/test-new-screen 9: (((7 boolean)) <- ((not-equal)) ((4 integer)) ((1 integer)))
mem: ((4 integer)) => 3
mem: ((1 integer)) => 5
run: new-screen/test-new-screen 9: t => ((7 boolean))
mem: ((7 boolean)): 101008 <= t
run: new-screen/test-new-screen 10: (((jump-if)) ((7 boolean)) ((-6 offset)))
mem: ((7 boolean)) => t
run: new-screen/test-new-screen 5: (((5 line-address-address)) <- ((index-address)) ((3 screen-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((101031 screen) (raw))
mem: ((101031 integer) (raw)) => 5
run: new-screen/test-new-screen 5: 101035 => ((5 line-address-address))
mem: ((5 line-address-address)): 101006 <= 101035
run: new-screen/test-new-screen 6: (((5 line-address-address) (deref)) <- ((new)) ((line literal)) ((2 integer)))
mem: ((2 integer)) => 5
run: new-screen/test-new-screen 6: 101055 => ((5 line-address-address) (deref))
mem: ((5 line-address-address) (deref)): 101035 <= 101055
run: new-screen/test-new-screen 7: (((6 line-address)) <- ((copy)) ((5 line-address-address) (deref)))
mem: ((5 line-address-address) (deref)) => 101055
run: new-screen/test-new-screen 7: 101055 => ((6 line-address))
mem: ((6 line-address)): 101007 <= 101055
run: new-screen/test-new-screen 8: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: new-screen/test-new-screen 8: 4 => ((4 integer))
mem: ((4 integer)): 101005 <= 4
run: new-screen/test-new-screen 9: (((7 boolean)) <- ((not-equal)) ((4 integer)) ((1 integer)))
mem: ((4 integer)) => 4
mem: ((1 integer)) => 5
run: new-screen/test-new-screen 9: t => ((7 boolean))
mem: ((7 boolean)): 101008 <= t
run: new-screen/test-new-screen 10: (((jump-if)) ((7 boolean)) ((-6 offset)))
mem: ((7 boolean)) => t
run: new-screen/test-new-screen 5: (((5 line-address-address)) <- ((index-address)) ((3 screen-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((101031 screen) (raw))
mem: ((101031 integer) (raw)) => 5
run: new-screen/test-new-screen 5: 101036 => ((5 line-address-address))
mem: ((5 line-address-address)): 101006 <= 101036
run: new-screen/test-new-screen 6: (((5 line-address-address) (deref)) <- ((new)) ((line literal)) ((2 integer)))
mem: ((2 integer)) => 5
run: new-screen/test-new-screen 6: 101061 => ((5 line-address-address) (deref))
mem: ((5 line-address-address) (deref)): 101036 <= 101061
run: new-screen/test-new-screen 7: (((6 line-address)) <- ((copy)) ((5 line-address-address) (deref)))
mem: ((5 line-address-address) (deref)) => 101061
run: new-screen/test-new-screen 7: 101061 => ((6 line-address))
mem: ((6 line-address)): 101007 <= 101061
run: new-screen/test-new-screen 8: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: new-screen/test-new-screen 8: 5 => ((4 integer))
mem: ((4 integer)): 101005 <= 5
run: new-screen/test-new-screen 9: (((7 boolean)) <- ((not-equal)) ((4 integer)) ((1 integer)))
mem: ((4 integer)) => 5
mem: ((1 integer)) => 5
run: new-screen/test-new-screen 9: nil => ((7 boolean))
mem: ((7 boolean)): 101008 <= nil
run: new-screen/test-new-screen 10: (((jump-if)) ((7 boolean)) ((-6 offset)))
mem: ((7 boolean)) => nil
run: new-screen/test-new-screen 11: (((reply)) ((3 screen-address)))
mem: ((3 screen-address)) => 101031
run: test-new-screen 0: 101031 => ((1 screen-address) (global))
mem: ((1 screen-address) (global)): 1 <= 101031
schedule: done with routine 
