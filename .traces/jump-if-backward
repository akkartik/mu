schedule: main
run: 1 main 0: (((1 integer)) <- ((copy)) ((2 literal)))
run: 2 => ((1 integer))
setm: ((1 integer)) <= 2
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 1 to 2
run: 2 main 1: (((2 integer)) <- ((copy)) ((1 literal)))
run: 1 => ((2 integer))
setm: ((2 integer)) <= 1
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 2 to 1
run: 3 main 2: (((2 integer)) <- ((add)) ((2 integer)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((2 integer))
sizeof: ((2 integer))
add: 1 1
m: ((2 integer))
sizeof: ((2 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: 2 => ((2 integer))
setm: ((2 integer)) <= 2
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 2 to 2
run: 4 main 3: (((3 boolean)) <- ((equal)) ((1 integer)) ((2 integer)))
m: ((1 integer))
sizeof: ((1 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: t => ((3 boolean))
setm: ((3 boolean)) <= t
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 3 to t
run: 5 main 4: (((jump-if)) ((3 boolean)) ((-3 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
jump: checking t
jump: jumping to 2
run: 6 main 2: (((2 integer)) <- ((add)) ((2 integer)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((2 integer))
sizeof: ((2 integer))
add: 2 2
m: ((2 integer))
sizeof: ((2 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: 4 => ((2 integer))
setm: ((2 integer)) <= 4
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 2 to 4
run: 7 main 3: (((3 boolean)) <- ((equal)) ((1 integer)) ((2 integer)))
m: ((1 integer))
sizeof: ((1 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 3 to nil
run: 8 main 4: (((jump-if)) ((3 boolean)) ((-3 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
jump: checking nil
run: 9 main 5: (((4 integer)) <- ((copy)) ((3 literal)))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 4 to 3
run: 10 main 6: (((reply)))
schedule: done with routine
