parse: instruction: copy
parse:   ingredient: {name: "3", properties: ["3": "literal"]}
parse:   product: {name: "1", properties: ["1": "number"]}
parse: instruction: copy
parse:   ingredient: {name: "97", properties: ["97": "literal"]}
parse:   product: {name: "2", properties: ["2": "number"]}
parse: instruction: copy
parse:   ingredient: {name: "98", properties: ["98": "literal"]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: copy
parse:   ingredient: {name: "99", properties: ["99": "literal"]}
parse:   product: {name: "4", properties: ["4": "number"]}
parse: instruction: memory-should-contain
parse:   ingredient: {name: "
    1:string <- [ab]
  ", properties: ["
    1:string <- [ab]
  ": "literal-string"]}
after-brace: recipe main
after-brace: copy ...
after-brace: copy ...
after-brace: copy ...
after-brace: copy ...
after-brace: memory-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: main
 101 run: 1:number <- copy 3:literal
9999 mem: storing 3 in location 1
 101 run: 2:number <- copy 97:literal
9999 mem: storing 97 in location 2
 101 run: 3:number <- copy 98:literal
9999 mem: storing 98 in location 3
 101 run: 4:number <- copy 99:literal
9999 mem: storing 99 in location 4
 101 run: memory-should-contain [
    1:string <- [ab]
  ]
9999 run: checking string length at 1
warn: expected location 1 to contain length 2 of string [ab] but saw 3

9999 run: checking location 2
9999 run: checking location 3
