parse: instruction: f
parse:   ingredient: {name: "2", value: 0, type: 0, properties: ["2": "literal"]}
parse: instruction: next-ingredient
parse:   product: {name: "12", value: 0, type: 1, properties: ["12": "number"]}
parse: instruction: next-ingredient
parse:   product: {name: "_", value: 0, type: 0, properties: ["_": "dummy"]}
parse:   product: {name: "1", value: 0, type: 3, properties: ["1": "boolean"]}
parse: instruction: rewind-ingredients
parse: instruction: next-ingredient
parse:   product: {name: "13", value: 0, type: 1, properties: ["13": "number"]}
parse:   product: {name: "2", value: 0, type: 3, properties: ["2": "boolean"]}
after-brace: recipe main
after-brace: f ...
after-brace: recipe f
after-brace: next-ingredient ...
after-brace: next-ingredient ...
after-brace: rewind-ingredients ...
after-brace: next-ingredient ...
new: routine allocated memory from 1000 to 101000
schedule: main
run: instruction main/0
run: f/1001 {name: "2", value: 2, type: 0, properties: ["2": "literal"]}
run: ingredient 0 is 2
run: instruction f/0
run: {name: "12", value: 12, type: 1, properties: ["12": "number"]} <- next-ingredient/34 
run: product 0 is 12
mem: storing 2 in location 12
run: instruction f/1
run: {name: "_", value: 0, type: 0, properties: ["_": "dummy"]}, {name: "1", value: 1, type: 3, properties: ["1": "boolean"]} <- next-ingredient/34 
run: product 0 is _
run: product 1 is 1
mem: storing 0 in location 1
run: instruction f/2
run: rewind-ingredients/35 
run: instruction f/3
run: {name: "13", value: 13, type: 1, properties: ["13": "number"]}, {name: "2", value: 2, type: 3, properties: ["2": "boolean"]} <- next-ingredient/34 
run: product 0 is 13
mem: storing 2 in location 13
run: product 1 is 2
mem: storing 1 in location 2
