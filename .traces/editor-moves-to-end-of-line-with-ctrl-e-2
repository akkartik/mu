 101 run: assume-console [
    left-click 2, 1
    type [e]  # ctrl-e
  ]
parse: instruction: left-click
parse:   ingredient: {name: "2", properties: ["2": "literal"]}
parse:   ingredient: {name: "1", properties: ["1": "literal"]}
parse: instruction: type
parse:   ingredient: {name: "e", properties: [_: "literal-string"]}
 101 run: 3:event/ctrl-e <- merge 0/text, 5/ctrl-e, 0/dummy, 0/dummy
9999 mem: storing 0 in location 3
9999 mem: storing 5 in location 4
9999 mem: storing 0 in location 5
9999 mem: storing 0 in location 6
 101 run: replace-in-console 101/e, 3:event/ctrl-e
9999 mem: location 3 is 0
9999 mem: location 4 is 5
9999 mem: location 5 is 0
9999 mem: location 6 is 0
 101 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
    4:number <- get *2:address:editor-data, cursor-row:offset
    5:number <- get *2:address:editor-data, cursor-column:offset
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-row", properties: ["cursor-row": "offset"]}
parse:   product: {name: "4", properties: ["4": "number"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-column", properties: ["cursor-column": "offset"]}
parse:   product: {name: "5", properties: ["5": "number"]}
name: element cursor-row of type editor-data is at offset 6
name: element cursor-column of type editor-data is at offset 7
after-brace: recipe run1001
after-brace: editor-event-loop ...
after-brace: get ...
after-brace: get ...
 101 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1296
9999 mem: location 2 is 1115
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 20
9999 mem: new alloc: 1298
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1300
 102 run: console:address <- next-ingredient 
9999 mem: storing 1296 in location 1301
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1302
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1296
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1296 in location 1261
 103 run: break-unless x, 
9999 mem: location 1261 is 1296
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1261 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1297 is 1287
9999 mem: location 1261 is 1296
9999 run: address to copy is 1296
9999 mem: storing 1296 in location 1262
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1261 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1297 is 1287
9999 mem: location 1261 is 1296
9999 run: address to copy is 1297
9999 run: its type is address
9999 mem: location 1297 is 1287
9999 mem: storing 1287 in location 1263
 103 run: max:number <- length *buf
9999 mem: location 1263 is 1287
9999 mem: storing 2 in location 1264
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1262 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1264 is 2
9999 mem: storing 0 in location 1265
 103 run: break-unless done?, 
9999 mem: location 1265 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1263 is 1287
9999 mem: location 1262 is 1296
9999 mem: location 1296 is 0
9999 run: address to copy is 1288
9999 run: its type is event
9999 mem: location 1288 is 2
9999 mem: location 1289 is 65513
9999 mem: location 1290 is 2
9999 mem: location 1291 is 1
9999 mem: storing 2 in location 1267
9999 mem: storing 65513 in location 1268
9999 mem: storing 2 in location 1269
9999 mem: storing 1 in location 1270
 103 run: *idx <- add *idx, 1
9999 mem: location 1262 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1262 is 1296
9999 mem: storing 1 in location 1296
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1267 is 2
9999 mem: location 1268 is 65513
9999 mem: location 1269 is 2
9999 mem: location 1270 is 1
9999 mem: location 1261 is 1296
9999 run: result 0 is [2, 65513, 2, 1]
9999 run: result 1 is 1296
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 2 in location 1303
9999 mem: storing 65513 in location 1304
9999 mem: storing 2 in location 1305
9999 mem: storing 1 in location 1306
9999 mem: storing 1296 in location 1301
9999 mem: storing 1 in location 1307
9999 mem: storing 0 in location 1308
 102 run: loop-unless found?, 
9999 mem: location 1307 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1303 is 2
9999 mem: location 1304 is 65513
9999 mem: location 1305 is 2
9999 mem: location 1306 is 1
9999 mem: storing 1304 in location 1309
 102 run: break-unless t, 
9999 mem: location 1309 is 1304
9999 run: jump-unless fell through
 102 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1302 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1302 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1310
 102 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1302 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1302 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1311
 102 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1302 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1302 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1154
9999 mem: storing 1154 in location 1312
 102 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1300 is 1009
9999 mem: location 1302 is 1115
9999 mem: location 1309 is 1304
9999 mem: location 1304 is 65513
9999 mem: location 1305 is 2
9999 mem: location 1306 is 1
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1261
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1262
 103 run: t:touch-event <- next-ingredient 
9999 mem: storing 65513 in location 1263
9999 mem: storing 2 in location 1264
9999 mem: storing 1 in location 1265
 103 run: jump-if editor, 1:offset
9999 mem: location 1262 is 1115
9999 run: jumping to instruction 6
 103 run: click-column:number <- get t, column:offset
9999 mem: location 1263 is 65513
9999 mem: location 1264 is 2
9999 mem: location 1265 is 1
9999 run: address to copy is 1265
9999 run: its type is number
9999 mem: location 1265 is 1
9999 mem: storing 1 in location 1266
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1262 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1262 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1267
 103 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1266 is 1
9999 mem: location 1267 is 0
9999 mem: storing 0 in location 1268
 103 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1268 is 0
9999 run: jumping to instruction 11
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1262 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1262 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1269
 103 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1266 is 1
9999 mem: location 1269 is 9
9999 mem: storing 0 in location 1270
 103 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1270 is 0
9999 run: jumping to instruction 15
 103 run: click-row:number <- get t, row:offset
9999 mem: location 1263 is 65513
9999 mem: location 1264 is 2
9999 mem: location 1265 is 1
9999 run: address to copy is 1264
9999 run: its type is number
9999 mem: location 1264 is 2
9999 mem: storing 2 in location 1271
 103 run: click-column:number <- get t, column:offset
9999 mem: location 1263 is 65513
9999 mem: location 1264 is 2
9999 mem: location 1265 is 1
9999 run: address to copy is 1265
9999 run: its type is number
9999 mem: location 1265 is 1
9999 mem: storing 1 in location 1266
 103 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1261 is 1009
9999 mem: location 1262 is 1115
9999 mem: location 1271 is 2
9999 mem: location 1266 is 1
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1184
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1185
 104 run: target-row:number <- next-ingredient 
9999 mem: storing 2 in location 1186
 104 run: target-column:number <- next-ingredient 
9999 mem: storing 1 in location 1187
 104 run: jump-if editor, 1:offset
9999 mem: location 1185 is 1115
9999 run: jumping to instruction 7
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1185 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1185 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1188
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1185 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1185 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1189
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1184 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1162
 105 run: break-unless sc, 
9999 mem: location 1162 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1162 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1163
 105 run: reply height
9999 mem: location 1163 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1190
 104 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1185 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1185 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1154
9999 mem: storing 1154 in location 1191
 104 run: prev:address:duplex-list <- copy curr
9999 mem: location 1191 is 1154
9999 mem: storing 1154 in location 1192
 104 run: curr <- next-duplex curr
9999 mem: location 1191 is 1154
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1154 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1154
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1154
9999 mem: location 1154 is 167
9999 mem: location 1155 is 1157
9999 mem: location 1156 is 0
9999 mem: location 1162 is 1154
9999 run: address to copy is 1155
9999 run: its type is address
9999 mem: location 1155 is 1157
9999 mem: storing 1157 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1157
9999 run: result 0 is 1157
9999 mem: storing 1157 in location 1191
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1193
 104 run: column:number <- copy left
9999 mem: location 1188 is 0
9999 mem: storing 0 in location 1194
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1185 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1185 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1195
 104 run: *cursor-row <- copy target-row
9999 mem: location 1186 is 2
9999 mem: location 1195 is 1121
9999 mem: location 1195 is 1121
9999 mem: storing 2 in location 1121
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1185 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1185 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1196
 104 run: *cursor-column <- copy target-column
9999 mem: location 1187 is 1
9999 mem: location 1196 is 1122
9999 mem: location 1196 is 1122
9999 mem: storing 1 in location 1122
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1185 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1185 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1197
 104 run: break-unless curr, 
9999 mem: location 1191 is 1157
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 1
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 104 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 1
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1199
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1157
9999 mem: location 1157 is 49
9999 mem: location 1158 is 1164
9999 mem: location 1159 is 1154
9999 mem: location 1191 is 1157
9999 run: address to copy is 1157
9999 run: its type is number
9999 mem: location 1157 is 49
9999 mem: storing 49 in location 1201
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 49
9999 mem: storing 0 in location 1202
 104 run: break-unless newline?, 
9999 mem: location 1202 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1194 is 0
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1204
 104 run: break-unless at-right?, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1191 is 1157
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1157 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1157
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1157
9999 mem: location 1157 is 49
9999 mem: location 1158 is 1164
9999 mem: location 1159 is 1154
9999 mem: location 1162 is 1157
9999 run: address to copy is 1158
9999 run: its type is address
9999 mem: location 1158 is 1164
9999 mem: storing 1164 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1164
9999 run: result 0 is 1164
9999 mem: storing 1164 in location 1191
 104 run: prev <- next-duplex prev
9999 mem: location 1192 is 1154
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1154 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1154
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1154
9999 mem: location 1154 is 167
9999 mem: location 1155 is 1157
9999 mem: location 1156 is 0
9999 mem: location 1162 is 1154
9999 run: address to copy is 1155
9999 run: its type is address
9999 mem: location 1155 is 1157
9999 mem: storing 1157 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1157
9999 run: result 0 is 1157
9999 mem: storing 1157 in location 1192
 104 run: column <- add column, 1
9999 mem: location 1194 is 0
9999 mem: storing 1 in location 1194
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1191 is 1164
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 1
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 104 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 1
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1199
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1164
9999 mem: location 1164 is 50
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1157
9999 mem: location 1191 is 1164
9999 run: address to copy is 1164
9999 run: its type is number
9999 mem: location 1164 is 50
9999 mem: storing 50 in location 1201
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 50
9999 mem: storing 0 in location 1202
 104 run: break-unless newline?, 
9999 mem: location 1202 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1194 is 1
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1204
 104 run: break-unless at-right?, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1191 is 1164
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1164 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1164
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1164
9999 mem: location 1164 is 50
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1157
9999 mem: location 1162 is 1164
9999 run: address to copy is 1165
9999 run: its type is address
9999 mem: location 1165 is 1167
9999 mem: storing 1167 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1167
9999 run: result 0 is 1167
9999 mem: storing 1167 in location 1191
 104 run: prev <- next-duplex prev
9999 mem: location 1192 is 1157
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1157 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1157
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1157
9999 mem: location 1157 is 49
9999 mem: location 1158 is 1164
9999 mem: location 1159 is 1154
9999 mem: location 1162 is 1157
9999 run: address to copy is 1158
9999 run: its type is address
9999 mem: location 1158 is 1164
9999 mem: storing 1164 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1164
9999 run: result 0 is 1164
9999 mem: storing 1164 in location 1192
 104 run: column <- add column, 1
9999 mem: location 1194 is 1
9999 mem: storing 2 in location 1194
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1191 is 1167
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 1
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 104 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 1
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1199
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1167
9999 mem: location 1167 is 51
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1191 is 1167
9999 run: address to copy is 1167
9999 run: its type is number
9999 mem: location 1167 is 51
9999 mem: storing 51 in location 1201
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 51
9999 mem: storing 0 in location 1202
 104 run: break-unless newline?, 
9999 mem: location 1202 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1194 is 2
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1204
 104 run: break-unless at-right?, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1191 is 1167
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1167 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1167
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1167
9999 mem: location 1167 is 51
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1162 is 1167
9999 run: address to copy is 1168
9999 run: its type is address
9999 mem: location 1168 is 1170
9999 mem: storing 1170 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1170
9999 run: result 0 is 1170
9999 mem: storing 1170 in location 1191
 104 run: prev <- next-duplex prev
9999 mem: location 1192 is 1164
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1164 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1164
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1164
9999 mem: location 1164 is 50
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1157
9999 mem: location 1162 is 1164
9999 run: address to copy is 1165
9999 run: its type is address
9999 mem: location 1165 is 1167
9999 mem: storing 1167 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1167
9999 run: result 0 is 1167
9999 mem: storing 1167 in location 1192
 104 run: column <- add column, 1
9999 mem: location 1194 is 2
9999 mem: storing 3 in location 1194
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1191 is 1170
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 1
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 104 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 1
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1199
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1170
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1191 is 1170
9999 run: address to copy is 1170
9999 run: its type is number
9999 mem: location 1170 is 10
9999 mem: storing 10 in location 1201
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 10
9999 mem: storing 1 in location 1202
 104 run: break-unless newline?, 
9999 mem: location 1202 is 1
9999 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 1
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1199
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 0
9999 run: jumping to instruction 43
 104 run: row <- add row, 1
9999 mem: location 1193 is 1
9999 mem: storing 2 in location 1193
 104 run: column <- copy left
9999 mem: location 1188 is 0
9999 mem: storing 0 in location 1194
 104 run: curr <- next-duplex curr
9999 mem: location 1191 is 1170
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1170 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1170
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1170
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1162 is 1170
9999 run: address to copy is 1171
9999 run: its type is address
9999 mem: location 1171 is 1173
9999 mem: storing 1173 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1173
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1191
 104 run: prev <- next-duplex prev
9999 mem: location 1192 is 1167
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1167 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1167
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1167
9999 mem: location 1167 is 51
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1162 is 1167
9999 run: address to copy is 1168
9999 run: its type is address
9999 mem: location 1168 is 1170
9999 mem: storing 1170 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1170
9999 run: result 0 is 1170
9999 mem: storing 1170 in location 1192
 104 run: loop +next-character:label
9999 run: jumping to instruction 22
 104 run: break-unless curr, 
9999 mem: location 1191 is 1173
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 2
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 104 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 2
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1199
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1194 is 0
9999 mem: location 1196 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1200
 104 run: break-unless at-cursor?, 
9999 mem: location 1200 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1173
9999 mem: location 1173 is 52
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1191 is 1173
9999 run: address to copy is 1173
9999 run: its type is number
9999 mem: location 1173 is 52
9999 mem: storing 52 in location 1201
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 52
9999 mem: storing 0 in location 1202
 104 run: break-unless newline?, 
9999 mem: location 1202 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1194 is 0
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1204
 104 run: break-unless at-right?, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1191 is 1173
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1173
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1173
9999 mem: location 1173 is 52
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1162 is 1173
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1176
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1191
 104 run: prev <- next-duplex prev
9999 mem: location 1192 is 1170
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1170 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1170
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1170
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1162 is 1170
9999 run: address to copy is 1171
9999 run: its type is address
9999 mem: location 1171 is 1173
9999 mem: storing 1173 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1173
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1192
 104 run: column <- add column, 1
9999 mem: location 1194 is 0
9999 mem: storing 1 in location 1194
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1191 is 1176
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 2
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 104 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 2
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1199
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1200
 104 run: break-unless at-cursor?, 
9999 mem: location 1200 is 1
9999 run: jump-unless fell through
 104 run: *before-cursor <- copy prev
9999 mem: location 1192 is 1173
9999 mem: location 1197 is 1118
9999 mem: location 1197 is 1118
9999 mem: storing 1173 in location 1118
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1176
9999 mem: location 1176 is 53
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1191 is 1176
9999 run: address to copy is 1176
9999 run: its type is number
9999 mem: location 1176 is 53
9999 mem: storing 53 in location 1201
schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run1001/scenario-editor-moves-to-end-of-line-with-ctrl-e-2
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 53
9999 mem: storing 0 in location 1202
 104 run: break-unless newline?, 
9999 mem: location 1202 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1194 is 1
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1204
 104 run: break-unless at-right?, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1191 is 1176
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1176
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1176
9999 mem: location 1176 is 53
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1162 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1191
 104 run: prev <- next-duplex prev
9999 mem: location 1192 is 1173
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1173
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1173
9999 mem: location 1173 is 52
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1162 is 1173
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1176
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1192
 104 run: column <- add column, 1
9999 mem: location 1194 is 1
9999 mem: storing 2 in location 1194
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1191 is 1179
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 2
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 104 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 2
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1199
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1194 is 2
9999 mem: location 1196 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1200
 104 run: break-unless at-cursor?, 
9999 mem: location 1200 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1179
9999 mem: location 1179 is 54
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1176
9999 mem: location 1191 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 54
9999 mem: storing 54 in location 1201
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 54
9999 mem: storing 0 in location 1202
 104 run: break-unless newline?, 
9999 mem: location 1202 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1194 is 2
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1204
 104 run: break-unless at-right?, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1191 is 1179
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1179
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1179
9999 mem: location 1179 is 54
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1176
9999 mem: location 1162 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1163
 105 run: reply result
9999 mem: location 1163 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1191
 104 run: prev <- next-duplex prev
9999 mem: location 1192 is 1176
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1176
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1176
9999 mem: location 1176 is 53
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1162 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1192
 104 run: column <- add column, 1
9999 mem: location 1194 is 2
9999 mem: storing 3 in location 1194
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1191 is 0
9999 run: jumping to instruction 61
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 2
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1199
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1194 is 3
9999 mem: location 1196 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1205
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1199 is 1
9999 mem: location 1205 is 0
9999 mem: storing 0 in location 1206
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1193 is 2
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1207
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1206 is 0
9999 mem: location 1207 is 0
9999 mem: storing 0 in location 1208
 104 run: break-unless before-cursor?, 
9999 mem: location 1208 is 0
9999 run: jumping to instruction 72
 104 run: reply editor/same-as-ingredient:1
9999 mem: location 1185 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1262
 103 run: reply 1/true
 102 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1302 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1302 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1313
 102 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1302 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1302 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1314
 102 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1302 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1302 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1154
9999 mem: storing 1154 in location 1315
 102 run: op:address:operation <- new operation:type
9999 mem: storing 1000 in location 1316
 102 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, 0/empty, 0/empty
9999 mem: location 1310 is 1
9999 mem: location 1311 is 0
9999 mem: location 1312 is 1154
9999 mem: location 1313 is 2
9999 mem: location 1314 is 1
9999 mem: location 1315 is 1154
9999 mem: location 1316 is 1000
9999 mem: storing 1 in location 1000
9999 mem: storing 1 in location 1001
9999 mem: storing 0 in location 1002
9999 mem: storing 1154 in location 1003
9999 mem: storing 2 in location 1004
9999 mem: storing 1 in location 1005
9999 mem: storing 1154 in location 1006
9999 mem: storing 0 in location 1007
9999 mem: storing 0 in location 1008
 102 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1302 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1302 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1317
 102 run: *undo <- push op, *undo
9999 mem: location 1316 is 1000
9999 mem: location 1317 is 1124
9999 mem: location 1124 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: x:location <- next-ingredient 
9999 mem: storing 1000 in location 1211
 103 run: in:address:list <- next-ingredient 
9999 mem: storing 0 in location 1212
 103 run: result:address:list <- new list:type
9999 mem: new alloc: 1319
9999 mem: storing 1319 in location 1213
 103 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1213 is 1319
9999 mem: location 1319 is 0
9999 mem: location 1320 is 0
9999 mem: location 1213 is 1319
9999 run: address to copy is 1319
9999 mem: storing 1319 in location 1214
 103 run: *val <- copy x
9999 mem: location 1211 is 1000
9999 mem: location 1214 is 1319
9999 mem: location 1214 is 1319
9999 mem: storing 1000 in location 1319
 103 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1213 is 1319
9999 mem: location 1319 is 1000
9999 mem: location 1320 is 0
9999 mem: location 1213 is 1319
9999 run: address to copy is 1320
9999 mem: storing 1320 in location 1215
 103 run: *next <- copy in
9999 mem: location 1212 is 0
9999 mem: location 1215 is 1320
9999 mem: location 1215 is 1320
9999 mem: storing 0 in location 1320
 103 run: reply result
9999 mem: location 1213 is 1319
9999 run: result 0 is 1319
9999 mem: location 1317 is 1124
9999 mem: storing 1319 in location 1124
 102 run: loop +next-event:label
9999 run: jumping to instruction 6
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1296
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1296 in location 1261
 103 run: break-unless x, 
9999 mem: location 1261 is 1296
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1261 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1297 is 1287
9999 mem: location 1261 is 1296
9999 run: address to copy is 1296
9999 mem: storing 1296 in location 1262
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1261 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1297 is 1287
9999 mem: location 1261 is 1296
9999 run: address to copy is 1297
9999 run: its type is address
9999 mem: location 1297 is 1287
9999 mem: storing 1287 in location 1263
 103 run: max:number <- length *buf
9999 mem: location 1263 is 1287
9999 mem: storing 2 in location 1264
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1262 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1264 is 2
9999 mem: storing 0 in location 1265
 103 run: break-unless done?, 
9999 mem: location 1265 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1263 is 1287
9999 mem: location 1262 is 1296
9999 mem: location 1296 is 1
9999 run: address to copy is 1292
9999 run: its type is event
9999 mem: location 1292 is 0
9999 mem: location 1293 is 5
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: storing 0 in location 1267
9999 mem: storing 5 in location 1268
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: *idx <- add *idx, 1
9999 mem: location 1262 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1262 is 1296
9999 mem: storing 2 in location 1296
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1267 is 0
9999 mem: location 1268 is 5
9999 mem: location 1269 is 0
9999 mem: location 1270 is 0
9999 mem: location 1261 is 1296
9999 run: result 0 is [0, 5, 0, 0]
9999 run: result 1 is 1296
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1303
9999 mem: storing 5 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 1296 in location 1301
9999 mem: storing 1 in location 1307
9999 mem: storing 0 in location 1308
 102 run: loop-unless found?, 
9999 mem: location 1307 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1303 is 0
9999 mem: location 1304 is 5
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
9999 mem: storing 0 in location 1309
 102 run: break-unless t, 
9999 mem: location 1309 is 0
9999 run: jumping to instruction 27
 102 run: break-if t, 
9999 mem: location 1309 is 0
9999 run: jump-if fell through
 102 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1300 is 1009
9999 mem: location 1302 is 1115
9999 mem: location 1303 is 0
9999 mem: location 1304 is 5
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 80
9999 mem: new alloc: 1321
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1323
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1324
 103 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1325
9999 mem: storing 5 in location 1326
9999 mem: storing 0 in location 1327
9999 mem: storing 0 in location 1328
 103 run: jump-if editor, 1:offset
9999 mem: location 1324 is 1115
9999 run: jumping to instruction 6
 103 run: screen-width:number <- screen-width screen
9999 mem: location 1323 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1162
 104 run: break-unless sc, 
9999 mem: location 1162 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1162 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1163
 104 run: reply width
9999 mem: location 1163 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1329
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1323 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1162
 104 run: break-unless sc, 
9999 mem: location 1162 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1162 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1163
 104 run: reply height
9999 mem: location 1163 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1330
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1324 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1319
9999 mem: location 1125 is 0
9999 mem: location 1324 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1331
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1324 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1319
9999 mem: location 1125 is 0
9999 mem: location 1324 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1332
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1324 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1319
9999 mem: location 1125 is 0
9999 mem: location 1324 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1333
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1324 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1319
9999 mem: location 1125 is 0
9999 mem: location 1324 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1334
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1324 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1319
9999 mem: location 1125 is 0
9999 mem: location 1324 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1335
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1334 is 1121
9999 mem: location 1121 is 2
9999 mem: location 1334 is 1121
9999 mem: location 1334 is 1121
9999 mem: storing 2 in location 1336
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1335 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1335 is 1122
9999 mem: location 1335 is 1122
9999 mem: storing 1 in location 1337
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1325 is 0
9999 mem: location 1326 is 5
9999 mem: location 1327 is 0
9999 mem: location 1328 is 0
9999 mem: storing 1326 in location 1338
 103 run: break-unless c, 
9999 mem: location 1338 is 1326
9999 run: jump-unless fell through
 103 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1338 is 1326
9999 mem: location 1326 is 5
9999 mem: storing 0 in location 1339
 103 run: break-unless redo?, 
9999 mem: location 1339 is 0
9999 run: jumping to instruction 48
 103 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1338 is 1326
9999 mem: location 1326 is 5
9999 mem: storing 0 in location 1347
 103 run: break-unless undo?, 
9999 mem: location 1347 is 0
9999 run: jumping to instruction 80
 103 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1338 is 1326
9999 mem: location 1326 is 5
9999 mem: storing 0 in location 1350
 103 run: break-unless page-up?, 
9999 mem: location 1350 is 0
9999 run: jumping to instruction 86
 103 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1338 is 1326
9999 mem: location 1326 is 5
9999 mem: storing 0 in location 1351
 103 run: break-unless page-down?, 
9999 mem: location 1351 is 0
9999 run: jumping to instruction 92
 103 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1338 is 1326
9999 mem: location 1326 is 5
9999 mem: storing 0 in location 1352
 103 run: break-unless delete-to-end-of-line?, 
9999 mem: location 1352 is 0
9999 run: jumping to instruction 98
 103 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1338 is 1326
9999 mem: location 1326 is 5
9999 mem: storing 0 in location 1353
 103 run: break-unless delete-to-start-of-line?, 
9999 mem: location 1353 is 0
9999 run: jumping to instruction 104
 103 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1338 is 1326
9999 mem: location 1326 is 5
9999 mem: storing 1 in location 1354
 103 run: break-unless move-to-end-of-line?, 
9999 mem: location 1354 is 1
9999 run: jump-unless fell through
 103 run: move-to-end-of-line editor
9999 mem: location 1324 is 1115
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1148
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1148 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1319
9999 mem: location 1125 is 0
9999 mem: location 1148 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1149
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1148 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1173
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1319
9999 mem: location 1125 is 0
9999 mem: location 1148 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1150
 104 run: next:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1149 is 1118
9999 mem: location 1118 is 1173
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1173
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1173
9999 mem: location 1173 is 52
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1162 is 1173
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1176
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1151
 104 run: break-unless next, 
9999 mem: location 1151 is 1176
9999 run: jump-unless fell through
 104 run: nextc:character <- get *next, value:offset
9999 mem: location 1151 is 1176
9999 mem: location 1176 is 53
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1151 is 1176
9999 run: address to copy is 1176
9999 run: its type is number
9999 mem: location 1176 is 53
9999 mem: storing 53 in location 1152
 104 run: at-end-of-line?:boolean <- equal nextc, 10/newline
9999 mem: location 1152 is 53
9999 mem: storing 0 in location 1153
 104 run: break-if at-end-of-line?, 
9999 mem: location 1153 is 0
9999 run: jump-if fell through
 104 run: *before-cursor <- copy next
9999 mem: location 1151 is 1176
9999 mem: location 1149 is 1118
9999 mem: location 1149 is 1118
9999 mem: storing 1176 in location 1118
 104 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1150 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1150 is 1122
9999 mem: storing 2 in location 1122
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: next:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1149 is 1118
9999 mem: location 1118 is 1176
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1176
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1176
9999 mem: location 1176 is 53
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1162 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1151
 104 run: break-unless next, 
9999 mem: location 1151 is 1179
9999 run: jump-unless fell through
 104 run: nextc:character <- get *next, value:offset
9999 mem: location 1151 is 1179
9999 mem: location 1179 is 54
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1176
9999 mem: location 1151 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 54
9999 mem: storing 54 in location 1152
 104 run: at-end-of-line?:boolean <- equal nextc, 10/newline
9999 mem: location 1152 is 54
9999 mem: storing 0 in location 1153
 104 run: break-if at-end-of-line?, 
9999 mem: location 1153 is 0
9999 run: jump-if fell through
 104 run: *before-cursor <- copy next
9999 mem: location 1151 is 1179
9999 mem: location 1149 is 1118
9999 mem: location 1149 is 1118
9999 mem: storing 1179 in location 1118
 104 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1150 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1150 is 1122
9999 mem: storing 3 in location 1122
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: next:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1149 is 1118
9999 mem: location 1118 is 1179
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1179
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1179
9999 mem: location 1179 is 54
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1176
9999 mem: location 1162 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1163
 105 run: reply result
9999 mem: location 1163 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1151
 104 run: break-unless next, 
9999 mem: location 1151 is 0
9999 run: jumping to instruction 13
 103 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, 0/no-more-render
9999 mem: location 1323 is 1009
9999 mem: location 1324 is 1115
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1300
9999 mem: storing 1115 in location 1302
9999 mem: storing 0 in location 1318
 102 run: break-unless go-render?, 
9999 mem: location 1318 is 0
9999 run: jumping to instruction 34
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1296
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1296 in location 1261
 103 run: break-unless x, 
9999 mem: location 1261 is 1296
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1261 is 1296
9999 mem: location 1296 is 2
9999 mem: location 1297 is 1287
9999 mem: location 1261 is 1296
9999 run: address to copy is 1296
9999 mem: storing 1296 in location 1262
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1261 is 1296
9999 mem: location 1296 is 2
9999 mem: location 1297 is 1287
9999 mem: location 1261 is 1296
9999 run: address to copy is 1297
9999 run: its type is address
9999 mem: location 1297 is 1287
9999 mem: storing 1287 in location 1263
 103 run: max:number <- length *buf
9999 mem: location 1263 is 1287
9999 mem: storing 2 in location 1264
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1262 is 1296
9999 mem: location 1296 is 2
9999 mem: location 1264 is 2
9999 mem: storing 1 in location 1265
 103 run: break-unless done?, 
9999 mem: location 1265 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: storing 1160 in location 1266
 103 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1266 is 1160
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1261 is 1296
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1296
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 1296 in location 1301
9999 mem: storing 1 in location 1307
9999 mem: storing 1 in location 1308
 102 run: loop-unless found?, 
9999 mem: location 1307 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1308 is 1
9999 run: jumping to instruction 37
 101 run: 4:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1319
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 4
 101 run: 5:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1319
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 5
 100 run: memory-should-contain [
    4 <- 2
    5 <- 3
  ]
9999 run: checking location 4
9999 run: checking location 5
 100 run: check-trace-count-for-label 0, [print-character]
