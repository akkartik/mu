 101 run: assume-console [
    left-click 1, 1  # on the 'b'
  ]
parse: instruction: left-click
parse:   ingredient: {name: "1", properties: ["1": "literal"]}
parse:   ingredient: {name: "1", properties: ["1": "literal"]}
 101 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
    3:number <- get *2:address:editor-data, cursor-row:offset
    4:number <- get *2:address:editor-data, cursor-column:offset
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-row", properties: ["cursor-row": "offset"]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-column", properties: ["cursor-column": "offset"]}
parse:   product: {name: "4", properties: ["4": "number"]}
name: element cursor-row of type editor-data is at offset 6
name: element cursor-column of type editor-data is at offset 7
after-brace: recipe run1001
after-brace: editor-event-loop ...
after-brace: get ...
after-brace: get ...
 101 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1253
9999 mem: location 2 is 1000
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1132
 102 run: console:address <- next-ingredient 
9999 mem: storing 1253 in location 1133
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1134
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1133 is 1253
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1255
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1253 in location 1257
 103 run: break-unless x, 
9999 mem: location 1257 is 1253
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1257 is 1253
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1248
9999 mem: location 1257 is 1253
9999 run: address to copy is 1253
9999 mem: storing 1253 in location 1258
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1257 is 1253
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1248
9999 mem: location 1257 is 1253
9999 run: address to copy is 1254
9999 run: its type is address
9999 mem: location 1254 is 1248
9999 mem: storing 1248 in location 1259
 103 run: max:number <- length *buf
9999 mem: location 1259 is 1248
9999 mem: storing 1 in location 1260
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1258 is 1253
9999 mem: location 1253 is 0
9999 mem: location 1260 is 1
9999 mem: storing 0 in location 1261
 103 run: break-unless done?, 
9999 mem: location 1261 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1259 is 1248
9999 mem: location 1258 is 1253
9999 mem: location 1253 is 0
9999 run: address to copy is 1249
9999 run: its type is event
9999 mem: location 1249 is 2
9999 mem: location 1250 is 65513
9999 mem: location 1251 is 1
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1263
9999 mem: storing 65513 in location 1264
9999 mem: storing 1 in location 1265
9999 mem: storing 1 in location 1266
 103 run: *idx <- add *idx, 1
9999 mem: location 1258 is 1253
9999 mem: location 1253 is 0
9999 mem: location 1258 is 1253
9999 mem: storing 1 in location 1253
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1263 is 2
9999 mem: location 1264 is 65513
9999 mem: location 1265 is 1
9999 mem: location 1266 is 1
9999 mem: location 1257 is 1253
9999 run: result 0 is [2, 65513, 1, 1]
9999 run: result 1 is 1253
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 2 in location 1135
9999 mem: storing 65513 in location 1136
9999 mem: storing 1 in location 1137
9999 mem: storing 1 in location 1138
9999 mem: storing 1253 in location 1133
9999 mem: storing 1 in location 1139
9999 mem: storing 0 in location 1140
 102 run: loop-unless found?, 
9999 mem: location 1139 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1140 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1135 is 2
9999 mem: location 1136 is 65513
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: storing 1136 in location 1141
 102 run: break-unless t, 
9999 mem: location 1141 is 1136
9999 run: jump-unless fell through
 102 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1132 is 1009
9999 mem: location 1134 is 1000
9999 mem: location 1141 is 1136
9999 mem: location 1136 is 65513
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 13
9999 mem: new alloc: 1268
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1270
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1271
 103 run: t:touch-event <- next-ingredient 
9999 mem: storing 65513 in location 1272
9999 mem: storing 1 in location 1273
9999 mem: storing 1 in location 1274
 103 run: jump-if editor, 1:offset
9999 mem: location 1271 is 1000
9999 run: jumping to instruction 6
 103 run: click-column:number <- get t, column:offset
9999 mem: location 1272 is 65513
9999 mem: location 1273 is 1
9999 mem: location 1274 is 1
9999 run: address to copy is 1274
9999 run: its type is number
9999 mem: location 1274 is 1
9999 mem: storing 1 in location 1275
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1271 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1150
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1271 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1276
 103 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1275 is 1
9999 mem: location 1276 is 0
9999 mem: storing 0 in location 1277
 103 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1277 is 0
9999 run: jumping to instruction 11
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1271 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1150
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1271 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1278
 103 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1275 is 1
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1279
 103 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1279 is 0
9999 run: jumping to instruction 15
 103 run: cursor-row:number <- get t, row:offset
9999 mem: location 1272 is 65513
9999 mem: location 1273 is 1
9999 mem: location 1274 is 1
9999 run: address to copy is 1273
9999 run: its type is number
9999 mem: location 1273 is 1
9999 mem: storing 1 in location 1280
 103 run: cursor-column:number <- get t, column:offset
9999 mem: location 1272 is 65513
9999 mem: location 1273 is 1
9999 mem: location 1274 is 1
9999 run: address to copy is 1274
9999 run: its type is number
9999 mem: location 1274 is 1
9999 mem: storing 1 in location 1281
 103 run: editor <- snap-cursor screen, editor, cursor-row, cursor-column
9999 mem: location 1270 is 1009
9999 mem: location 1271 is 1000
9999 mem: location 1280 is 1
9999 mem: location 1281 is 1
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1177
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1178
 104 run: target-row:number <- next-ingredient 
9999 mem: storing 1 in location 1179
 104 run: target-column:number <- next-ingredient 
9999 mem: storing 1 in location 1180
 104 run: jump-if editor, 1:offset
9999 mem: location 1178 is 1000
9999 run: jumping to instruction 7
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1178 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1150
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1178 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1181
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1178 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1150
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1178 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1182
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1177 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1167
 105 run: break-unless sc, 
9999 mem: location 1167 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1167 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1168
 105 run: reply height
9999 mem: location 1168 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1183
 104 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1178 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1150
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1178 is 1000
9999 run: address to copy is 1001
9999 run: its type is address
9999 mem: location 1001 is 1150
9999 mem: storing 1150 in location 1184
 104 run: prev:address:duplex-list <- copy curr
9999 mem: location 1184 is 1150
9999 mem: storing 1150 in location 1185
 104 run: curr <- next-duplex curr
9999 mem: location 1184 is 1150
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1150 in location 1167
 105 run: jump-if in, 1:offset
9999 mem: location 1167 is 1150
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1167 is 1150
9999 mem: location 1150 is 167
9999 mem: location 1151 is 1162
9999 mem: location 1152 is 0
9999 mem: location 1167 is 1150
9999 run: address to copy is 1151
9999 run: its type is address
9999 mem: location 1151 is 1162
9999 mem: storing 1162 in location 1168
 105 run: reply result
9999 mem: location 1168 is 1162
9999 run: result 0 is 1162
9999 mem: storing 1162 in location 1184
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1186
 104 run: column:number <- copy left
9999 mem: location 1181 is 0
9999 mem: storing 0 in location 1187
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1178 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1150
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1178 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1188
 104 run: *cursor-row <- copy target-row
9999 mem: location 1179 is 1
9999 mem: location 1188 is 1006
9999 mem: location 1188 is 1006
9999 mem: storing 1 in location 1006
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1178 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1150
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1178 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1189
 104 run: *cursor-column <- copy target-column
9999 mem: location 1180 is 1
9999 mem: location 1189 is 1007
9999 mem: location 1189 is 1007
9999 mem: storing 1 in location 1007
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1178 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1150
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1178 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1190
 104 run: break-unless curr, 
9999 mem: location 1184 is 1162
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1186 is 1
9999 mem: location 1183 is 5
9999 mem: storing 0 in location 1191
 104 run: break-if off-screen?, 
9999 mem: location 1191 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1186 is 1
9999 mem: location 1188 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1192
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1192 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1187 is 0
9999 mem: location 1189 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 0 in location 1193
 104 run: break-unless at-cursor?, 
9999 mem: location 1193 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1184 is 1162
9999 mem: location 1162 is 97
9999 mem: location 1163 is 1169
9999 mem: location 1164 is 1150
9999 mem: location 1184 is 1162
9999 run: address to copy is 1162
9999 run: its type is number
9999 mem: location 1162 is 97
9999 mem: storing 97 in location 1194
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1194 is 97
9999 mem: storing 0 in location 1195
 104 run: break-unless newline?, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1187 is 0
9999 mem: location 1182 is 9
9999 mem: storing 0 in location 1197
 104 run: break-unless at-right?, 
9999 mem: location 1197 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1184 is 1162
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1162 in location 1167
 105 run: jump-if in, 1:offset
9999 mem: location 1167 is 1162
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1167 is 1162
9999 mem: location 1162 is 97
9999 mem: location 1163 is 1169
9999 mem: location 1164 is 1150
9999 mem: location 1167 is 1162
9999 run: address to copy is 1163
9999 run: its type is address
9999 mem: location 1163 is 1169
9999 mem: storing 1169 in location 1168
 105 run: reply result
9999 mem: location 1168 is 1169
9999 run: result 0 is 1169
9999 mem: storing 1169 in location 1184
 104 run: prev <- next-duplex prev
9999 mem: location 1185 is 1150
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1150 in location 1167
 105 run: jump-if in, 1:offset
9999 mem: location 1167 is 1150
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1167 is 1150
9999 mem: location 1150 is 167
9999 mem: location 1151 is 1162
9999 mem: location 1152 is 0
9999 mem: location 1167 is 1150
9999 run: address to copy is 1151
9999 run: its type is address
9999 mem: location 1151 is 1162
9999 mem: storing 1162 in location 1168
 105 run: reply result
9999 mem: location 1168 is 1162
9999 run: result 0 is 1162
9999 mem: storing 1162 in location 1185
 104 run: column <- add column, 1
9999 mem: location 1187 is 0
9999 mem: storing 1 in location 1187
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1184 is 1169
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1186 is 1
9999 mem: location 1183 is 5
9999 mem: storing 0 in location 1191
 104 run: break-if off-screen?, 
9999 mem: location 1191 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1186 is 1
9999 mem: location 1188 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1192
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1192 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1187 is 1
9999 mem: location 1189 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1193
 104 run: break-unless at-cursor?, 
9999 mem: location 1193 is 1
9999 run: jump-unless fell through
 104 run: *before-cursor <- copy prev
9999 mem: location 1185 is 1162
9999 mem: location 1190 is 1003
9999 mem: location 1190 is 1003
9999 mem: storing 1162 in location 1003
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1184 is 1169
9999 mem: location 1169 is 98
9999 mem: location 1170 is 1172
9999 mem: location 1171 is 1162
9999 mem: location 1184 is 1169
9999 run: address to copy is 1169
9999 run: its type is number
9999 mem: location 1169 is 98
9999 mem: storing 98 in location 1194
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1194 is 98
9999 mem: storing 0 in location 1195
 104 run: break-unless newline?, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1187 is 1
9999 mem: location 1182 is 9
9999 mem: storing 0 in location 1197
 104 run: break-unless at-right?, 
9999 mem: location 1197 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1184 is 1169
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1169 in location 1167
 105 run: jump-if in, 1:offset
9999 mem: location 1167 is 1169
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1167 is 1169
9999 mem: location 1169 is 98
9999 mem: location 1170 is 1172
9999 mem: location 1171 is 1162
9999 mem: location 1167 is 1169
9999 run: address to copy is 1170
9999 run: its type is address
9999 mem: location 1170 is 1172
9999 mem: storing 1172 in location 1168
 105 run: reply result
9999 mem: location 1168 is 1172
9999 run: result 0 is 1172
9999 mem: storing 1172 in location 1184
 104 run: prev <- next-duplex prev
9999 mem: location 1185 is 1162
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1162 in location 1167
 105 run: jump-if in, 1:offset
9999 mem: location 1167 is 1162
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1167 is 1162
9999 mem: location 1162 is 97
9999 mem: location 1163 is 1169
9999 mem: location 1164 is 1150
9999 mem: location 1167 is 1162
9999 run: address to copy is 1163
9999 run: its type is address
9999 mem: location 1163 is 1169
9999 mem: storing 1169 in location 1168
 105 run: reply result
9999 mem: location 1168 is 1169
9999 run: result 0 is 1169
9999 mem: storing 1169 in location 1185
 104 run: column <- add column, 1
9999 mem: location 1187 is 1
9999 mem: storing 2 in location 1187
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1184 is 1172
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1186 is 1
9999 mem: location 1183 is 5
9999 mem: storing 0 in location 1191
 104 run: break-if off-screen?, 
9999 mem: location 1191 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1186 is 1
9999 mem: location 1188 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1192
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1192 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1187 is 2
9999 mem: location 1189 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 0 in location 1193
 104 run: break-unless at-cursor?, 
9999 mem: location 1193 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1184 is 1172
9999 mem: location 1172 is 99
9999 mem: location 1173 is 0
9999 mem: location 1174 is 1169
9999 mem: location 1184 is 1172
9999 run: address to copy is 1172
9999 run: its type is number
9999 mem: location 1172 is 99
9999 mem: storing 99 in location 1194
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1194 is 99
9999 mem: storing 0 in location 1195
 104 run: break-unless newline?, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1187 is 2
9999 mem: location 1182 is 9
9999 mem: storing 0 in location 1197
 104 run: break-unless at-right?, 
9999 mem: location 1197 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1184 is 1172
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 1167
 105 run: jump-if in, 1:offset
9999 mem: location 1167 is 1172
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1167 is 1172
9999 mem: location 1172 is 99
9999 mem: location 1173 is 0
9999 mem: location 1174 is 1169
9999 mem: location 1167 is 1172
9999 run: address to copy is 1173
9999 run: its type is address
9999 mem: location 1173 is 0
9999 mem: storing 0 in location 1168
 105 run: reply result
9999 mem: location 1168 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1184
 104 run: prev <- next-duplex prev
9999 mem: location 1185 is 1169
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1169 in location 1167
 105 run: jump-if in, 1:offset
9999 mem: location 1167 is 1169
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1167 is 1169
9999 mem: location 1169 is 98
9999 mem: location 1170 is 1172
9999 mem: location 1171 is 1162
9999 mem: location 1167 is 1169
9999 run: address to copy is 1170
9999 run: its type is address
9999 mem: location 1170 is 1172
9999 mem: storing 1172 in location 1168
 105 run: reply result
9999 mem: location 1168 is 1172
9999 run: result 0 is 1172
9999 mem: storing 1172 in location 1185
 104 run: column <- add column, 1
9999 mem: location 1187 is 2
9999 mem: storing 3 in location 1187
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 61
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1186 is 1
9999 mem: location 1188 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1192
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1187 is 3
9999 mem: location 1189 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 0 in location 1198
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1192 is 1
9999 mem: location 1198 is 0
9999 mem: storing 0 in location 1199
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1186 is 1
9999 mem: location 1188 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1200
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1199 is 0
9999 mem: location 1200 is 0
9999 mem: storing 0 in location 1201
 104 run: break-unless before-cursor?, 
9999 mem: location 1201 is 0
9999 run: jumping to instruction 72
 104 run: reply editor/same-as-ingredient:1
9999 mem: location 1178 is 1000
9999 run: result 0 is 1000
9999 mem: storing 1000 in location 1271
 103 run: reply 1/true
 102 run: loop +next-event:label
9999 run: jumping to instruction 6
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1133 is 1253
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1253 in location 1257
 103 run: break-unless x, 
9999 mem: location 1257 is 1253
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1257 is 1253
9999 mem: location 1253 is 1
9999 mem: location 1254 is 1248
9999 mem: location 1257 is 1253
9999 run: address to copy is 1253
9999 mem: storing 1253 in location 1258
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1257 is 1253
9999 mem: location 1253 is 1
9999 mem: location 1254 is 1248
9999 mem: location 1257 is 1253
9999 run: address to copy is 1254
9999 run: its type is address
9999 mem: location 1254 is 1248
9999 mem: storing 1248 in location 1259
 103 run: max:number <- length *buf
9999 mem: location 1259 is 1248
9999 mem: storing 1 in location 1260
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1258 is 1253
9999 mem: location 1253 is 1
9999 mem: location 1260 is 1
9999 mem: storing 1 in location 1261
 103 run: break-unless done?, 
9999 mem: location 1261 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: storing 1165 in location 1262
 103 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1262 is 1165
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1257 is 1253
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1253
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1135
9999 mem: storing 0 in location 1136
9999 mem: storing 0 in location 1137
9999 mem: storing 0 in location 1138
9999 mem: storing 1253 in location 1133
9999 mem: storing 1 in location 1139
9999 mem: storing 1 in location 1140
 102 run: loop-unless found?, 
9999 mem: location 1139 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1140 is 1
9999 run: jumping to instruction 22
 101 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1162
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 2 is 1000
9999 run: address to copy is 1006
9999 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 3
 101 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1162
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 2 is 1000
9999 run: address to copy is 1007
9999 run: its type is number
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 4
 100 run: screen-should-contain [
    .          .
    .abc       .
    .          .
  ]
 100 run: memory-should-contain [
    3 <- 1  # cursor is at row 0..
    4 <- 1  # ..and column 1
  ]
9999 run: checking location 3
9999 run: checking location 4
 100 run: check-trace-count-for-label 0, [print-character]
