 102 run: assume-console [
    left-click 1, 1  # on the 'b'
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"1": "literal"}
9993 parse:   ingredient: {"1": "literal"}
9992 load: after rewriting: left-click 1, 1
9999 mem: storing 'left-click' event starting at 1301
9999 mem: storing console in 1305
9999 mem: storing console data in 1307
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
    3:number <- get *2:address:shared:editor-data, cursor-row:offset
    4:number <- get *2:address:shared:editor-data, cursor-column:offset
  ]
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1305
9999 mem: location 2 is 1150
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1308
9999 mem: storing 14 in location 1309
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1311
9999 mem: incrementing refcount of 1012: 65 -> 66
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1305 in location 1312
9999 mem: incrementing refcount of 1305: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1150 in location 1313
9999 mem: incrementing refcount of 1150: 6 -> 7
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1313 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1313 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1158
9998 run: its type is number
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1314
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1313 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1313 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1315
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1311 is 1012
9999 mem: location 1314 is 1
9999 mem: location 1315 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1236
9999 mem: incrementing refcount of 1012: 66 -> 67
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1237
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1238
 105 run: jump-unless screen, 
9999 mem: location 1236 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1239
 105 run: *row <- copy new-row
9999 mem: location 1237 is 1
9999 mem: location 1239 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1240
 105 run: *column <- copy new-column
9999 mem: location 1238 is 0
9999 mem: location 1240 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1236 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 67 -> 66
9999 mem: storing 1012 in location 1311
9999 mem: incrementing refcount of 1012: 66 -> 67
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1312 is 1305
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1305 in location 1271
9999 mem: incrementing refcount of 1305: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1271 is 1305
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1271 is 1305
9999 mem: skipping refcount at 1305
9999 mem: location 1306 is 0
9999 mem: location 1307 is 1299
9999 mem: location 1271 is 1305
9999 mem: skipping refcount at 1305
9998 run: address to copy is 1306
9999 mem: storing 1306 in location 1272
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1271 is 1305
9999 mem: skipping refcount at 1305
9999 mem: location 1306 is 0
9999 mem: location 1307 is 1299
9999 mem: location 1271 is 1305
9999 mem: skipping refcount at 1305
9998 run: address to copy is 1307
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1307 is 1299
9999 mem: storing 1299 in location 1273
9999 mem: incrementing refcount of 1299: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1273 is 1299
9999 mem: skipping refcount at 1299
9999 mem: storing 1 in location 1274
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1272 is 1306
9999 mem: location 1306 is 0
9999 mem: location 1274 is 1
9999 mem: storing 0 in location 1275
 105 run: jump-unless done?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1273 is 1299
9999 mem: skipping refcount at 1299
9998 run: base address is 1300
9999 mem: location 1272 is 1306
9999 mem: location 1306 is 0
9998 run: address to copy is 1301
9998 run: its type is event
9999 mem: location 1301 is 2
9999 mem: location 1302 is 65513
9999 mem: location 1303 is 1
9999 mem: location 1304 is 1
9999 mem: storing 2 in location 1277
9999 mem: storing 65513 in location 1278
9999 mem: storing 1 in location 1279
9999 mem: storing 1 in location 1280
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1272 is 1306
9999 mem: location 1306 is 0
9999 mem: location 1272 is 1306
9999 mem: storing 1 in location 1306
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1277 is 2
9999 mem: location 1278 is 65513
9999 mem: location 1279 is 1
9999 mem: location 1280 is 1
9999 mem: location 1271 is 1305
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 1, 1]
9998 run: result 1 is 1305
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1316
9999 mem: storing 65513 in location 1317
9999 mem: storing 1 in location 1318
9999 mem: storing 1 in location 1319
9999 mem: decrementing refcount of 1305: 2 -> 1
9999 mem: storing 1305 in location 1312
9999 mem: incrementing refcount of 1305: 1 -> 2
9999 mem: storing 1 in location 1320
9999 mem: storing 0 in location 1321
 104 run: jump-unless found?, 
9999 mem: location 1320 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1321 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1316 is 2
9999 mem: location 1317 is 65513
9999 mem: location 1318 is 1
9999 mem: location 1319 is 1
9999 mem: storing 1317 in location 1322
 104 run: jump-unless t, 
9999 mem: location 1322 is 1317
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1311 is 1012
9999 mem: location 1313 is 1150
9999 mem: location 1322 is 1317
9999 mem: location 1317 is 65513
9999 mem: location 1318 is 1
9999 mem: location 1319 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1324
9999 mem: storing 27 in location 1325
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1327
9999 mem: incrementing refcount of 1012: 67 -> 68
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1150 in location 1328
9999 mem: incrementing refcount of 1150: 7 -> 8
 105 run: t:touch-event <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1329
9999 mem: storing 1 in location 1330
9999 mem: storing 1 in location 1331
 105 run: jump-if editor, 1:offset
9999 mem: location 1328 is 1150
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1329 is 65513
9999 mem: location 1330 is 1
9999 mem: location 1331 is 1
9998 run: address to copy is 1330
9998 run: its type is number
9999 mem: location 1330 is 1
9999 mem: storing 1 in location 1332
 105 run: jump-if click-row, 1:offset
9999 mem: location 1332 is 1
9998 run: jumping to instruction 9
 105 run: click-column:number <- get t, column:offset
9999 mem: location 1329 is 65513
9999 mem: location 1330 is 1
9999 mem: location 1331 is 1
9998 run: address to copy is 1331
9998 run: its type is number
9999 mem: location 1331 is 1
9999 mem: storing 1 in location 1333
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 0
9999 mem: storing 0 in location 1334
 105 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1333 is 1
9999 mem: location 1334 is 0
9999 mem: storing 0 in location 1335
 105 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1335 is 0
9998 run: jumping to instruction 14
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 9
9999 mem: storing 9 in location 1336
 105 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1333 is 1
9999 mem: location 1336 is 9
9999 mem: storing 0 in location 1337
 105 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1337 is 0
9998 run: jumping to instruction 18
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1158
9998 run: its type is number
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1338
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1339
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1152
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1152 is 1172
9999 mem: storing 1172 in location 1340
9999 mem: incrementing refcount of 1172: 11 -> 12
 105 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1327 is 1012
9999 mem: location 1328 is 1150
9999 mem: location 1332 is 1
9999 mem: location 1333 is 1
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1353
9999 mem: storing 26 in location 1354
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1356
9999 mem: incrementing refcount of 1012: 68 -> 69
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1150 in location 1357
9999 mem: incrementing refcount of 1150: 8 -> 9
 106 run: target-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1358
 106 run: target-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1359
 106 run: jump-if editor, 1:offset
9999 mem: location 1357 is 1150
9998 run: jumping to instruction 7
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1357 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1357 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 0
9999 mem: storing 0 in location 1360
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1357 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1357 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 9
9999 mem: storing 9 in location 1361
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1356 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1193
9999 mem: incrementing refcount of 1012: 69 -> 70
 107 run: jump-unless screen, 
9999 mem: location 1193 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1193 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1193 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1194
 107 run: reply height:number
9999 mem: location 1194 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1362
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1357 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1357 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1152
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1152 is 1172
9999 mem: storing 1172 in location 1363
9999 mem: incrementing refcount of 1172: 12 -> 13
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1363 is 1172
9999 mem: storing 1172 in location 1364
9999 mem: incrementing refcount of 1172: 13 -> 14
 106 run: curr <- next_2 curr
9999 mem: location 1363 is 1172
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1172 in location 1193
9999 mem: incrementing refcount of 1172: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1193 is 1172
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1193 is 1172
9999 mem: skipping refcount at 1172
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 167
9999 mem: location 1174 is 1186
9999 mem: location 1175 is 0
9999 mem: location 1193 is 1172
9999 mem: skipping refcount at 1172
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1174 is 1186
9999 mem: storing 1186 in location 1194
9999 mem: incrementing refcount of 1186: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 1186
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1186
9999 mem: decrementing refcount of 1172: 15 -> 14
9999 mem: storing 1186 in location 1363
9999 mem: incrementing refcount of 1186: 15 -> 16
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1365
 106 run: column:number <- copy left
9999 mem: location 1360 is 0
9999 mem: storing 0 in location 1366
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1357 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1357 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1367
 106 run: *cursor-row <- copy target-row
9999 mem: location 1358 is 1
9999 mem: location 1367 is 1158
9999 mem: storing 1 in location 1158
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1357 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1357 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1368
 106 run: *cursor-column <- copy target-column
9999 mem: location 1359 is 1
9999 mem: location 1368 is 1159
9999 mem: storing 1 in location 1159
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1357 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1357 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1369
 106 run: jump-unless curr, 
9999 mem: location 1363 is 1186
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1365 is 1
9999 mem: location 1362 is 5
9999 mem: storing 0 in location 1370
 106 run: jump-if off-screen?, 
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1365 is 1
9999 mem: location 1367 is 1158
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1371
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1371 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1366 is 0
9999 mem: location 1368 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1372
 106 run: jump-unless at-cursor?, 
9999 mem: location 1372 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1363 is 1186
9999 mem: skipping refcount at 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 97
9999 mem: location 1188 is 1195
9999 mem: location 1189 is 1172
9999 mem: location 1363 is 1186
9999 mem: skipping refcount at 1186
9998 run: address to copy is 1187
9998 run: its type is character
9999 mem: location 1187 is 97
9999 mem: storing 97 in location 1373
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1373 is 97
9999 mem: storing 0 in location 1374
 106 run: jump-unless newline?, 
9999 mem: location 1374 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1366 is 0
9999 mem: location 1361 is 9
9999 mem: storing 0 in location 1376
 106 run: jump-unless at-right?, 
9999 mem: location 1376 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1363 is 1186
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1186 in location 1193
9999 mem: incrementing refcount of 1186: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1193 is 1186
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1193 is 1186
9999 mem: skipping refcount at 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 97
9999 mem: location 1188 is 1195
9999 mem: location 1189 is 1172
9999 mem: location 1193 is 1186
9999 mem: skipping refcount at 1186
9999 type: type deduced to be character$
9998 run: address to copy is 1188
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1188 is 1195
9999 mem: storing 1195 in location 1194
9999 mem: incrementing refcount of 1195: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 1195
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1195
9999 mem: decrementing refcount of 1186: 17 -> 16
9999 mem: storing 1195 in location 1363
9999 mem: incrementing refcount of 1195: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1364 is 1172
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1172 in location 1193
9999 mem: incrementing refcount of 1172: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1193 is 1172
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1193 is 1172
9999 mem: skipping refcount at 1172
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 167
9999 mem: location 1174 is 1186
9999 mem: location 1175 is 0
9999 mem: location 1193 is 1172
9999 mem: skipping refcount at 1172
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1174 is 1186
9999 mem: storing 1186 in location 1194
9999 mem: incrementing refcount of 1186: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 1186
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1186
9999 mem: decrementing refcount of 1172: 15 -> 14
9999 mem: storing 1186 in location 1364
9999 mem: incrementing refcount of 1186: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1366 is 0
9999 mem: storing 1 in location 1366
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1363 is 1195
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1365 is 1
9999 mem: location 1362 is 5
9999 mem: storing 0 in location 1370
 106 run: jump-if off-screen?, 
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1365 is 1
9999 mem: location 1367 is 1158
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1371
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1371 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1366 is 1
9999 mem: location 1368 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1372
 106 run: jump-unless at-cursor?, 
9999 mem: location 1372 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1364 is 1186
9999 mem: location 1369 is 1154
9999 mem: decrementing refcount of 1172: 14 -> 13
9999 mem: storing 1186 in location 1154
9999 mem: incrementing refcount of 1186: 18 -> 19
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1363 is 1195
9999 mem: skipping refcount at 1195
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1196 is 98
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1186
9999 mem: location 1363 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1196
9998 run: its type is character
9999 mem: location 1196 is 98
9999 mem: storing 98 in location 1373
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1373 is 98
9999 mem: storing 0 in location 1374
 106 run: jump-unless newline?, 
9999 mem: location 1374 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1366 is 1
9999 mem: location 1361 is 9
9999 mem: storing 0 in location 1376
 106 run: jump-unless at-right?, 
9999 mem: location 1376 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1363 is 1195
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1195 in location 1193
9999 mem: incrementing refcount of 1195: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1193 is 1195
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1193 is 1195
9999 mem: skipping refcount at 1195
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1196 is 98
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1186
9999 mem: location 1193 is 1195
9999 mem: skipping refcount at 1195
9999 type: type deduced to be character$
9998 run: address to copy is 1197
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1197 is 1199
9999 mem: storing 1199 in location 1194
9999 mem: incrementing refcount of 1199: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: decrementing refcount of 1195: 17 -> 16
9999 mem: storing 1199 in location 1363
9999 mem: incrementing refcount of 1199: 13 -> 14
 106 run: prev <- next_2 prev
9999 mem: location 1364 is 1186
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1186 in location 1193
9999 mem: incrementing refcount of 1186: 19 -> 20
 107 run: jump-if in, 1:offset
9999 mem: location 1193 is 1186
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1193 is 1186
9999 mem: skipping refcount at 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 97
9999 mem: location 1188 is 1195
9999 mem: location 1189 is 1172
9999 mem: location 1193 is 1186
9999 mem: skipping refcount at 1186
9999 type: type deduced to be character$
9998 run: address to copy is 1188
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1188 is 1195
9999 mem: storing 1195 in location 1194
9999 mem: incrementing refcount of 1195: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 1195
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1195
9999 mem: decrementing refcount of 1186: 20 -> 19
9999 mem: storing 1195 in location 1364
9999 mem: incrementing refcount of 1195: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1366 is 1
9999 mem: storing 2 in location 1366
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1363 is 1199
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1365 is 1
9999 mem: location 1362 is 5
9999 mem: storing 0 in location 1370
 106 run: jump-if off-screen?, 
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1365 is 1
9999 mem: location 1367 is 1158
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1371
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1371 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1366 is 2
9999 mem: location 1368 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1372
 106 run: jump-unless at-cursor?, 
9999 mem: location 1372 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1363 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 99
9999 mem: location 1201 is 0
9999 mem: location 1202 is 1195
9999 mem: location 1363 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1200
9998 run: its type is character
9999 mem: location 1200 is 99
9999 mem: storing 99 in location 1373
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1373 is 99
9999 mem: storing 0 in location 1374
 106 run: jump-unless newline?, 
9999 mem: location 1374 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1366 is 2
9999 mem: location 1361 is 9
9999 mem: storing 0 in location 1376
 106 run: jump-unless at-right?, 
9999 mem: location 1376 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1363 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1193
9999 mem: incrementing refcount of 1199: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1193 is 1199
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1193 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 99
9999 mem: location 1201 is 0
9999 mem: location 1202 is 1195
9999 mem: location 1193 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1201
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1201 is 0
9999 mem: storing 0 in location 1194
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1199: 15 -> 14
9999 mem: storing 0 in location 1363
 106 run: prev <- next_2 prev
9999 mem: location 1364 is 1195
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1195 in location 1193
9999 mem: incrementing refcount of 1195: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1193 is 1195
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1193 is 1195
9999 mem: skipping refcount at 1195
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1196 is 98
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1186
9999 mem: location 1193 is 1195
9999 mem: skipping refcount at 1195
9999 type: type deduced to be character$
9998 run: address to copy is 1197
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1197 is 1199
9999 mem: storing 1199 in location 1194
9999 mem: incrementing refcount of 1199: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: decrementing refcount of 1195: 19 -> 18
9999 mem: storing 1199 in location 1364
9999 mem: incrementing refcount of 1199: 15 -> 16
 106 run: column <- add column, 1
9999 mem: location 1366 is 2
9999 mem: storing 3 in location 1366
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1363 is 0
9998 run: jumping to instruction 61
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1365 is 1
9999 mem: location 1367 is 1158
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1371
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1366 is 3
9999 mem: location 1368 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1377
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1371 is 1
9999 mem: location 1377 is 0
9999 mem: storing 0 in location 1378
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1365 is 1
9999 mem: location 1367 is 1158
9999 mem: location 1158 is 1
9999 mem: storing 0 in location 1379
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1378 is 0
9999 mem: location 1379 is 0
9999 mem: storing 0 in location 1380
 106 run: jump-unless before-cursor?, 
9999 mem: location 1380 is 0
9998 run: jumping to instruction 72
 106 run: reply editor:address:shared:editor-data
9999 mem: location 1357 is 1150
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1150
9999 mem: decrementing refcount of 1150: 9 -> 8
9999 mem: storing 1150 in location 1328
9999 mem: incrementing refcount of 1150: 8 -> 9
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1341
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1186
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1158
9998 run: its type is number
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1342
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1186
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1343
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1186
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1152
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1152 is 1172
9999 mem: storing 1172 in location 1344
9999 mem: incrementing refcount of 1172: 13 -> 14
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1341 is 0
9998 run: jumping to instruction 44
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: storing 1000 in location 1346
9999 mem: incrementing refcount of 1000: 0 -> 1
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1338 is 1
9999 mem: location 1339 is 0
9999 mem: location 1340 is 1172
9999 mem: location 1342 is 1
9999 mem: location 1343 is 1
9999 mem: location 1344 is 1172
9999 mem: location 1341 is 0
9999 mem: location 1346 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1346 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1 in location 1001
9999 mem: storing 1 in location 1002
9999 mem: storing 0 in location 1003
9999 mem: storing 1172 in location 1004
9999 mem: storing 1 in location 1005
9999 mem: storing 1 in location 1006
9999 mem: storing 1172 in location 1007
9999 mem: storing 0 in location 1008
 105 run: editor <- add-operation editor, op
9999 mem: location 1328 is 1150
9999 mem: location 1346 is 1000
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1381
9999 mem: storing 5 in location 1382
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1150 in location 1384
9999 mem: incrementing refcount of 1150: 9 -> 10
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1385
9999 mem: incrementing refcount of 1000: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1384 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1186
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1384 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1386
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1385 is 1000
9999 mem: location 1386 is 1161
9999 mem: location 1161 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1236
9999 mem: incrementing refcount of 1000: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1237
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1388
9999 mem: storing 1388 in location 1238
9999 mem: incrementing refcount of 1388: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1238 is 1388
9999 mem: skipping refcount at 1388
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1389 is 0
9999 mem: location 1390 is 0
9999 mem: location 1238 is 1388
9999 mem: skipping refcount at 1388
9998 run: address to copy is 1389
9999 mem: storing 1389 in location 1239
 107 run: *val <- copy x
9999 mem: location 1236 is 1000
9999 mem: location 1239 is 1389
9999 mem: storing 1000 in location 1389
9999 mem: incrementing refcount of 1000: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1238 is 1388
9999 mem: skipping refcount at 1388
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1389 is 1000
9999 mem: location 1390 is 0
9999 mem: location 1238 is 1388
9999 mem: skipping refcount at 1388
9999 type: type deduced to be address$
9998 run: address to copy is 1390
9999 mem: storing 1390 in location 1240
 107 run: *next <- copy in
9999 mem: location 1237 is 0
9999 mem: location 1240 is 1390
9999 mem: storing 0 in location 1390
 107 run: reply result
9999 mem: location 1238 is 1388
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1388
9999 mem: location 1386 is 1161
9999 mem: storing 1388 in location 1161
9999 mem: incrementing refcount of 1388: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1384 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1186
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1388
9999 mem: location 1162 is 0
9999 mem: location 1384 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1387
 106 run: *redo <- copy 0
9999 mem: location 1387 is 1162
9999 mem: storing 0 in location 1162
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1384 is 1150
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1150
9999 mem: decrementing refcount of 1150: 10 -> 9
9999 mem: storing 1150 in location 1328
9999 mem: incrementing refcount of 1150: 9 -> 10
 105 run: reply 1/true
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1313 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1186
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1388
9999 mem: location 1162 is 0
9999 mem: location 1313 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1158
9998 run: its type is number
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1314
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1313 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1186
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1388
9999 mem: location 1162 is 0
9999 mem: location 1313 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1315
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1311 is 1012
9999 mem: location 1314 is 1
9999 mem: location 1315 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1236
9999 mem: incrementing refcount of 1012: 70 -> 71
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1237
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1238
 105 run: jump-unless screen, 
9999 mem: location 1236 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1239
 105 run: *row <- copy new-row
9999 mem: location 1237 is 1
9999 mem: location 1239 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1240
 105 run: *column <- copy new-column
9999 mem: location 1238 is 1
9999 mem: location 1240 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1236 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 71 -> 70
9999 mem: storing 1012 in location 1311
9999 mem: incrementing refcount of 1012: 70 -> 71
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1312 is 1305
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1305 in location 1271
9999 mem: incrementing refcount of 1305: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1271 is 1305
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1271 is 1305
9999 mem: skipping refcount at 1305
9999 mem: location 1306 is 1
9999 mem: location 1307 is 1299
9999 mem: location 1271 is 1305
9999 mem: skipping refcount at 1305
9998 run: address to copy is 1306
9999 mem: storing 1306 in location 1272
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1271 is 1305
9999 mem: skipping refcount at 1305
9999 mem: location 1306 is 1
9999 mem: location 1307 is 1299
9999 mem: location 1271 is 1305
9999 mem: skipping refcount at 1305
9998 run: address to copy is 1307
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1307 is 1299
9999 mem: storing 1299 in location 1273
9999 mem: incrementing refcount of 1299: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1273 is 1299
9999 mem: skipping refcount at 1299
9999 mem: storing 1 in location 1274
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1272 is 1306
9999 mem: location 1306 is 1
9999 mem: location 1274 is 1
9999 mem: storing 1 in location 1275
 105 run: jump-unless done?, 
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1190 in location 1276
9999 mem: incrementing refcount of 1190: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1276 is 1190
9999 mem: skipping refcount at 1190
9999 mem: location 1191 is 0
9999 mem: location 1192 is 0
9999 mem: location 1193 is 0
9999 mem: location 1194 is 0
9999 mem: location 1271 is 1305
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1305
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
9999 mem: storing 0 in location 1318
9999 mem: storing 0 in location 1319
9999 mem: decrementing refcount of 1305: 3 -> 2
9999 mem: storing 1305 in location 1312
9999 mem: incrementing refcount of 1305: 2 -> 3
9999 mem: storing 1 in location 1320
9999 mem: storing 1 in location 1321
 104 run: jump-unless found?, 
9999 mem: location 1320 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1321 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1311 is 1012
9999 mem: location 1312 is 1305
9999 mem: location 1313 is 1150
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9999 mem: location 2 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1186
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1388
9999 mem: location 1162 is 0
9999 mem: location 2 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1158
9998 run: its type is number
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 3
 103 run: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 mem: location 2 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1186
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1388
9999 mem: location 1162 is 0
9999 mem: location 2 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain [
    .          .
    .abc       .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: memory-should-contain [
    3 <- 1  # cursor is at row 0..
    4 <- 1  # ..and column 1
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label 0, [print-character]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
