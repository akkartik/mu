 102 run: assume-console [
    left-click 1, 5  # right of last line
    type [d]
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"1": "literal"}
9993 parse:   ingredient: {"5": "literal"}
9992 load: after rewriting: left-click 1, 5
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"d": "literal-string"}
9992 load: after rewriting: type [d]
9999 mem: storing 'left-click' event starting at 1301
9999 mem: storing 'type' event starting at 1305
9999 mem: storing 'text' tag at 1305
9999 mem: storing character 100 at 1306
9999 mem: storing console in 1309
9999 mem: storing console data in 1311
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9991 parse: --- defining run1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 parse: recipe run1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1001
9991 transform: --- deduce types for recipe run1001
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run1001
9991 transform: --- transform names for recipe run1001
9991 transform: --- resolve ambiguous calls for recipe run1001
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1001
9991 transform: --- transform braces for recipe run1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1001
9991 transform: --- type-check 'call' instructions inside recipe run1001
9991 transform: --- type-check calls inside recipe run1001
9991 transform: --- convert 'new' to 'allocate' for recipe run1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1309
9999 mem: location 2 is 1150
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1312
9999 mem: storing 14 in location 1313
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1315
9999 mem: incrementing refcount of 1012: 65 -> 66
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1309 in location 1316
9999 mem: incrementing refcount of 1309: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1150 in location 1317
9999 mem: incrementing refcount of 1150: 6 -> 7
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1317 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1317 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1158
9998 run: its type is number
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1318
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1317 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1317 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1319
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1315 is 1012
9999 mem: location 1318 is 1
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1236
9999 mem: incrementing refcount of 1012: 66 -> 67
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1237
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1238
 105 run: jump-unless screen, 
9999 mem: location 1236 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1239
 105 run: *row <- copy new-row
9999 mem: location 1237 is 1
9999 mem: location 1239 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1240
 105 run: *column <- copy new-column
9999 mem: location 1238 is 0
9999 mem: location 1240 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1236 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 67 -> 66
9999 mem: storing 1012 in location 1315
9999 mem: incrementing refcount of 1012: 66 -> 67
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1316 is 1309
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1309 in location 1271
9999 mem: incrementing refcount of 1309: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1271 is 1309
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1271 is 1309
9999 mem: skipping refcount at 1309
9999 mem: location 1310 is 0
9999 mem: location 1311 is 1299
9999 mem: location 1271 is 1309
9999 mem: skipping refcount at 1309
9998 run: address to copy is 1310
9999 mem: storing 1310 in location 1272
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1271 is 1309
9999 mem: skipping refcount at 1309
9999 mem: location 1310 is 0
9999 mem: location 1311 is 1299
9999 mem: location 1271 is 1309
9999 mem: skipping refcount at 1309
9998 run: address to copy is 1311
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1311 is 1299
9999 mem: storing 1299 in location 1273
9999 mem: incrementing refcount of 1299: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1273 is 1299
9999 mem: skipping refcount at 1299
9999 mem: storing 2 in location 1274
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1272 is 1310
9999 mem: location 1310 is 0
9999 mem: location 1274 is 2
9999 mem: storing 0 in location 1275
 105 run: jump-unless done?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1273 is 1299
9999 mem: skipping refcount at 1299
9998 run: base address is 1300
9999 mem: location 1272 is 1310
9999 mem: location 1310 is 0
9998 run: address to copy is 1301
9998 run: its type is event
9999 mem: location 1301 is 2
9999 mem: location 1302 is 65513
9999 mem: location 1303 is 1
9999 mem: location 1304 is 5
9999 mem: storing 2 in location 1277
9999 mem: storing 65513 in location 1278
9999 mem: storing 1 in location 1279
9999 mem: storing 5 in location 1280
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1272 is 1310
9999 mem: location 1310 is 0
9999 mem: location 1272 is 1310
9999 mem: storing 1 in location 1310
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1277 is 2
9999 mem: location 1278 is 65513
9999 mem: location 1279 is 1
9999 mem: location 1280 is 5
9999 mem: location 1271 is 1309
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 1, 5]
9998 run: result 1 is 1309
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1320
9999 mem: storing 65513 in location 1321
9999 mem: storing 1 in location 1322
9999 mem: storing 5 in location 1323
9999 mem: decrementing refcount of 1309: 2 -> 1
9999 mem: storing 1309 in location 1316
9999 mem: incrementing refcount of 1309: 1 -> 2
9999 mem: storing 1 in location 1324
9999 mem: storing 0 in location 1325
 104 run: jump-unless found?, 
9999 mem: location 1324 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1325 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1320 is 2
9999 mem: location 1321 is 65513
9999 mem: location 1322 is 1
9999 mem: location 1323 is 5
9999 mem: storing 1321 in location 1326
 104 run: jump-unless t, 
9999 mem: location 1326 is 1321
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1315 is 1012
9999 mem: location 1317 is 1150
9999 mem: location 1326 is 1321
9999 mem: location 1321 is 65513
9999 mem: location 1322 is 1
9999 mem: location 1323 is 5
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1328
9999 mem: storing 27 in location 1329
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1331
9999 mem: incrementing refcount of 1012: 67 -> 68
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1150 in location 1332
9999 mem: incrementing refcount of 1150: 7 -> 8
 105 run: t:touch-event <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1333
9999 mem: storing 1 in location 1334
9999 mem: storing 5 in location 1335
 105 run: jump-if editor, 1:offset
9999 mem: location 1332 is 1150
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1333 is 65513
9999 mem: location 1334 is 1
9999 mem: location 1335 is 5
9998 run: address to copy is 1334
9998 run: its type is number
9999 mem: location 1334 is 1
9999 mem: storing 1 in location 1336
 105 run: jump-if click-row, 1:offset
9999 mem: location 1336 is 1
9998 run: jumping to instruction 9
 105 run: click-column:number <- get t, column:offset
9999 mem: location 1333 is 65513
9999 mem: location 1334 is 1
9999 mem: location 1335 is 5
9998 run: address to copy is 1335
9998 run: its type is number
9999 mem: location 1335 is 5
9999 mem: storing 5 in location 1337
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1332 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1332 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 0
9999 mem: storing 0 in location 1338
 105 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1337 is 5
9999 mem: location 1338 is 0
9999 mem: storing 0 in location 1339
 105 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1339 is 0
9998 run: jumping to instruction 14
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1332 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1332 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 9
9999 mem: storing 9 in location 1340
 105 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1337 is 5
9999 mem: location 1340 is 9
9999 mem: storing 0 in location 1341
 105 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1341 is 0
9998 run: jumping to instruction 18
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1332 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1332 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1158
9998 run: its type is number
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1342
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1332 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1332 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1343
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1332 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1332 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1152
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1152 is 1172
9999 mem: storing 1172 in location 1344
9999 mem: incrementing refcount of 1172: 11 -> 12
 105 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1331 is 1012
9999 mem: location 1332 is 1150
9999 mem: location 1336 is 1
9999 mem: location 1337 is 5
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1357
9999 mem: storing 26 in location 1358
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1360
9999 mem: incrementing refcount of 1012: 68 -> 69
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1150 in location 1361
9999 mem: incrementing refcount of 1150: 8 -> 9
 106 run: target-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1362
 106 run: target-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1363
 106 run: jump-if editor, 1:offset
9999 mem: location 1361 is 1150
9998 run: jumping to instruction 7
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1361 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1361 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 0
9999 mem: storing 0 in location 1364
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1361 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1361 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 9
9999 mem: storing 9 in location 1365
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1360 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1193
9999 mem: incrementing refcount of 1012: 69 -> 70
 107 run: jump-unless screen, 
9999 mem: location 1193 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1193 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1193 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1194
 107 run: reply height:number
9999 mem: location 1194 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1366
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1361 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1361 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1152
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1152 is 1172
9999 mem: storing 1172 in location 1367
9999 mem: incrementing refcount of 1172: 12 -> 13
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1367 is 1172
9999 mem: storing 1172 in location 1368
9999 mem: incrementing refcount of 1172: 13 -> 14
 106 run: curr <- next_2 curr
9999 mem: location 1367 is 1172
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1172 in location 1193
9999 mem: incrementing refcount of 1172: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1193 is 1172
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1193 is 1172
9999 mem: skipping refcount at 1172
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 167
9999 mem: location 1174 is 1186
9999 mem: location 1175 is 0
9999 mem: location 1193 is 1172
9999 mem: skipping refcount at 1172
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1174 is 1186
9999 mem: storing 1186 in location 1194
9999 mem: incrementing refcount of 1186: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 1186
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1186
9999 mem: decrementing refcount of 1172: 15 -> 14
9999 mem: storing 1186 in location 1367
9999 mem: incrementing refcount of 1186: 15 -> 16
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1369
 106 run: column:number <- copy left
9999 mem: location 1364 is 0
9999 mem: storing 0 in location 1370
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1361 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1361 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1371
 106 run: *cursor-row <- copy target-row
9999 mem: location 1362 is 1
9999 mem: location 1371 is 1158
9999 mem: storing 1 in location 1158
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1361 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1361 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1372
 106 run: *cursor-column <- copy target-column
9999 mem: location 1363 is 5
9999 mem: location 1372 is 1159
9999 mem: storing 5 in location 1159
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1361 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 5
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1361 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1373
 106 run: jump-unless curr, 
9999 mem: location 1367 is 1186
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1369 is 1
9999 mem: location 1366 is 5
9999 mem: storing 0 in location 1374
 106 run: jump-if off-screen?, 
9999 mem: location 1374 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1369 is 1
9999 mem: location 1371 is 1158
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1375
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1375 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1370 is 0
9999 mem: location 1372 is 1159
9999 mem: location 1159 is 5
9999 mem: storing 0 in location 1376
 106 run: jump-unless at-cursor?, 
9999 mem: location 1376 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1367 is 1186
9999 mem: skipping refcount at 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 97
9999 mem: location 1188 is 1195
9999 mem: location 1189 is 1172
9999 mem: location 1367 is 1186
9999 mem: skipping refcount at 1186
9998 run: address to copy is 1187
9998 run: its type is character
9999 mem: location 1187 is 97
9999 mem: storing 97 in location 1377
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1377 is 97
9999 mem: storing 0 in location 1378
 106 run: jump-unless newline?, 
9999 mem: location 1378 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1370 is 0
9999 mem: location 1365 is 9
9999 mem: storing 0 in location 1380
 106 run: jump-unless at-right?, 
9999 mem: location 1380 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1367 is 1186
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1186 in location 1193
9999 mem: incrementing refcount of 1186: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1193 is 1186
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1193 is 1186
9999 mem: skipping refcount at 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 97
9999 mem: location 1188 is 1195
9999 mem: location 1189 is 1172
9999 mem: location 1193 is 1186
9999 mem: skipping refcount at 1186
9999 type: type deduced to be character$
9998 run: address to copy is 1188
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1188 is 1195
9999 mem: storing 1195 in location 1194
9999 mem: incrementing refcount of 1195: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 1195
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1195
9999 mem: decrementing refcount of 1186: 17 -> 16
9999 mem: storing 1195 in location 1367
9999 mem: incrementing refcount of 1195: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1368 is 1172
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1172 in location 1193
9999 mem: incrementing refcount of 1172: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1193 is 1172
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1193 is 1172
9999 mem: skipping refcount at 1172
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 167
9999 mem: location 1174 is 1186
9999 mem: location 1175 is 0
9999 mem: location 1193 is 1172
9999 mem: skipping refcount at 1172
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1174 is 1186
9999 mem: storing 1186 in location 1194
9999 mem: incrementing refcount of 1186: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 1186
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1186
9999 mem: decrementing refcount of 1172: 15 -> 14
9999 mem: storing 1186 in location 1368
9999 mem: incrementing refcount of 1186: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1370 is 0
9999 mem: storing 1 in location 1370
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1367 is 1195
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1369 is 1
9999 mem: location 1366 is 5
9999 mem: storing 0 in location 1374
 106 run: jump-if off-screen?, 
9999 mem: location 1374 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1369 is 1
9999 mem: location 1371 is 1158
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1375
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1375 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1370 is 1
9999 mem: location 1372 is 1159
9999 mem: location 1159 is 5
9999 mem: storing 0 in location 1376
 106 run: jump-unless at-cursor?, 
9999 mem: location 1376 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1367 is 1195
9999 mem: skipping refcount at 1195
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1196 is 98
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1186
9999 mem: location 1367 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1196
9998 run: its type is character
9999 mem: location 1196 is 98
9999 mem: storing 98 in location 1377
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1377 is 98
9999 mem: storing 0 in location 1378
 106 run: jump-unless newline?, 
9999 mem: location 1378 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1370 is 1
9999 mem: location 1365 is 9
9999 mem: storing 0 in location 1380
 106 run: jump-unless at-right?, 
9999 mem: location 1380 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1367 is 1195
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1195 in location 1193
9999 mem: incrementing refcount of 1195: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1193 is 1195
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1193 is 1195
9999 mem: skipping refcount at 1195
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1196 is 98
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1186
9999 mem: location 1193 is 1195
9999 mem: skipping refcount at 1195
9999 type: type deduced to be character$
9998 run: address to copy is 1197
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1197 is 1199
9999 mem: storing 1199 in location 1194
9999 mem: incrementing refcount of 1199: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: decrementing refcount of 1195: 17 -> 16
9999 mem: storing 1199 in location 1367
9999 mem: incrementing refcount of 1199: 13 -> 14
 106 run: prev <- next_2 prev
9999 mem: location 1368 is 1186
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1186 in location 1193
9999 mem: incrementing refcount of 1186: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1193 is 1186
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1193 is 1186
9999 mem: skipping refcount at 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 97
9999 mem: location 1188 is 1195
9999 mem: location 1189 is 1172
9999 mem: location 1193 is 1186
9999 mem: skipping refcount at 1186
9999 type: type deduced to be character$
9998 run: address to copy is 1188
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1188 is 1195
9999 mem: storing 1195 in location 1194
9999 mem: incrementing refcount of 1195: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 1195
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1195
9999 mem: decrementing refcount of 1186: 19 -> 18
9999 mem: storing 1195 in location 1368
9999 mem: incrementing refcount of 1195: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1370 is 1
9999 mem: storing 2 in location 1370
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1367 is 1199
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1369 is 1
9999 mem: location 1366 is 5
9999 mem: storing 0 in location 1374
 106 run: jump-if off-screen?, 
9999 mem: location 1374 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1369 is 1
9999 mem: location 1371 is 1158
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1375
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1375 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1370 is 2
9999 mem: location 1372 is 1159
9999 mem: location 1159 is 5
9999 mem: storing 0 in location 1376
 106 run: jump-unless at-cursor?, 
9999 mem: location 1376 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1367 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 99
9999 mem: location 1201 is 0
9999 mem: location 1202 is 1195
9999 mem: location 1367 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1200
9998 run: its type is character
9999 mem: location 1200 is 99
9999 mem: storing 99 in location 1377
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1377 is 99
9999 mem: storing 0 in location 1378
 106 run: jump-unless newline?, 
9999 mem: location 1378 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1370 is 2
9999 mem: location 1365 is 9
9999 mem: storing 0 in location 1380
 106 run: jump-unless at-right?, 
9999 mem: location 1380 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1367 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1193
9999 mem: incrementing refcount of 1199: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1193 is 1199
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1193 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 99
9999 mem: location 1201 is 0
9999 mem: location 1202 is 1195
9999 mem: location 1193 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1201
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1201 is 0
9999 mem: storing 0 in location 1194
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1199: 15 -> 14
9999 mem: storing 0 in location 1367
 106 run: prev <- next_2 prev
9999 mem: location 1368 is 1195
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1195 in location 1193
9999 mem: incrementing refcount of 1195: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1193 is 1195
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1193 is 1195
9999 mem: skipping refcount at 1195
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1196 is 98
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1186
9999 mem: location 1193 is 1195
9999 mem: skipping refcount at 1195
9999 type: type deduced to be character$
9998 run: address to copy is 1197
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1197 is 1199
9999 mem: storing 1199 in location 1194
9999 mem: incrementing refcount of 1199: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: decrementing refcount of 1195: 19 -> 18
9999 mem: storing 1199 in location 1368
9999 mem: incrementing refcount of 1199: 15 -> 16
 106 run: column <- add column, 1
9999 mem: location 1370 is 2
9999 mem: storing 3 in location 1370
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1367 is 0
9998 run: jumping to instruction 61
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1369 is 1
9999 mem: location 1371 is 1158
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1375
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1370 is 3
9999 mem: location 1372 is 1159
9999 mem: location 1159 is 5
9999 mem: storing 1 in location 1381
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1375 is 1
9999 mem: location 1381 is 1
9999 mem: storing 1 in location 1382
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1369 is 1
9999 mem: location 1371 is 1158
9999 mem: location 1158 is 1
9999 mem: storing 0 in location 1383
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1382 is 1
9999 mem: location 1383 is 0
9999 mem: storing 1 in location 1384
 106 run: jump-unless before-cursor?, 
9999 mem: location 1384 is 1
9998 run: jump-unless fell through
 106 run: *cursor-row <- copy row
9999 mem: location 1369 is 1
9999 mem: location 1371 is 1158
9999 mem: storing 1 in location 1158
 106 run: *cursor-column <- copy column
9999 mem: location 1370 is 3
9999 mem: location 1372 is 1159
9999 mem: storing 3 in location 1159
 106 run: *before-cursor <- copy prev
9999 mem: location 1368 is 1199
9999 mem: location 1373 is 1154
9999 mem: decrementing refcount of 1172: 14 -> 13
9999 mem: storing 1199 in location 1154
9999 mem: incrementing refcount of 1199: 16 -> 17
 106 run: reply editor:address:shared:editor-data
9999 mem: location 1361 is 1150
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1150
9999 mem: decrementing refcount of 1150: 9 -> 8
9999 mem: storing 1150 in location 1332
9999 mem: incrementing refcount of 1150: 8 -> 9
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1345
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1332 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1199
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1332 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1158
9998 run: its type is number
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1346
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1332 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1199
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1332 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 3
9999 mem: storing 3 in location 1347
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1332 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1199
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1332 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1152
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1152 is 1172
9999 mem: storing 1172 in location 1348
9999 mem: incrementing refcount of 1172: 13 -> 14
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1345 is 0
9998 run: jumping to instruction 44
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: storing 1000 in location 1350
9999 mem: incrementing refcount of 1000: 0 -> 1
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1342 is 1
9999 mem: location 1343 is 0
9999 mem: location 1344 is 1172
9999 mem: location 1346 is 1
9999 mem: location 1347 is 3
9999 mem: location 1348 is 1172
9999 mem: location 1345 is 0
9999 mem: location 1350 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1350 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1 in location 1001
9999 mem: storing 1 in location 1002
9999 mem: storing 0 in location 1003
9999 mem: storing 1172 in location 1004
9999 mem: storing 1 in location 1005
9999 mem: storing 3 in location 1006
9999 mem: storing 1172 in location 1007
9999 mem: storing 0 in location 1008
 105 run: editor <- add-operation editor, op
9999 mem: location 1332 is 1150
9999 mem: location 1350 is 1000
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1385
9999 mem: storing 5 in location 1386
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1150 in location 1388
9999 mem: incrementing refcount of 1150: 9 -> 10
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1389
9999 mem: incrementing refcount of 1000: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1388 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1199
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1388 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1390
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1389 is 1000
9999 mem: location 1390 is 1161
9999 mem: location 1161 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1236
9999 mem: incrementing refcount of 1000: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1237
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1392
9999 mem: storing 1392 in location 1238
9999 mem: incrementing refcount of 1392: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1238 is 1392
9999 mem: skipping refcount at 1392
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1393 is 0
9999 mem: location 1394 is 0
9999 mem: location 1238 is 1392
9999 mem: skipping refcount at 1392
9998 run: address to copy is 1393
9999 mem: storing 1393 in location 1239
 107 run: *val <- copy x
9999 mem: location 1236 is 1000
9999 mem: location 1239 is 1393
9999 mem: storing 1000 in location 1393
9999 mem: incrementing refcount of 1000: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1238 is 1392
9999 mem: skipping refcount at 1392
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1393 is 1000
9999 mem: location 1394 is 0
9999 mem: location 1238 is 1392
9999 mem: skipping refcount at 1392
9999 type: type deduced to be address$
9998 run: address to copy is 1394
9999 mem: storing 1394 in location 1240
 107 run: *next <- copy in
9999 mem: location 1237 is 0
9999 mem: location 1240 is 1394
9999 mem: storing 0 in location 1394
 107 run: reply result
9999 mem: location 1238 is 1392
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1392
9999 mem: location 1390 is 1161
9999 mem: storing 1392 in location 1161
9999 mem: incrementing refcount of 1392: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1388 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1199
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1392
9999 mem: location 1162 is 0
9999 mem: location 1388 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1391
 106 run: *redo <- copy 0
9999 mem: location 1391 is 1162
9999 mem: storing 0 in location 1162
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1388 is 1150
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1150
9999 mem: decrementing refcount of 1150: 10 -> 9
9999 mem: storing 1150 in location 1332
9999 mem: incrementing refcount of 1150: 9 -> 10
 105 run: reply 1/true
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1317 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1199
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1392
9999 mem: location 1162 is 0
9999 mem: location 1317 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1158
9998 run: its type is number
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1318
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1317 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1199
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1392
9999 mem: location 1162 is 0
9999 mem: location 1317 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 3
9999 mem: storing 3 in location 1319
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1315 is 1012
9999 mem: location 1318 is 1
9999 mem: location 1319 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1236
9999 mem: incrementing refcount of 1012: 70 -> 71
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1237
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1238
 105 run: jump-unless screen, 
9999 mem: location 1236 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1239
 105 run: *row <- copy new-row
9999 mem: location 1237 is 1
9999 mem: location 1239 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1240
 105 run: *column <- copy new-column
9999 mem: location 1238 is 3
9999 mem: location 1240 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1236 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 71 -> 70
9999 mem: storing 1012 in location 1315
9999 mem: incrementing refcount of 1012: 70 -> 71
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1316 is 1309
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1309 in location 1271
9999 mem: incrementing refcount of 1309: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1271 is 1309
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1271 is 1309
9999 mem: skipping refcount at 1309
9999 mem: location 1310 is 1
9999 mem: location 1311 is 1299
9999 mem: location 1271 is 1309
9999 mem: skipping refcount at 1309
9998 run: address to copy is 1310
9999 mem: storing 1310 in location 1272
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1271 is 1309
9999 mem: skipping refcount at 1309
9999 mem: location 1310 is 1
9999 mem: location 1311 is 1299
9999 mem: location 1271 is 1309
9999 mem: skipping refcount at 1309
9998 run: address to copy is 1311
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1311 is 1299
9999 mem: storing 1299 in location 1273
9999 mem: incrementing refcount of 1299: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1273 is 1299
9999 mem: skipping refcount at 1299
9999 mem: storing 2 in location 1274
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1272 is 1310
9999 mem: location 1310 is 1
9999 mem: location 1274 is 2
9999 mem: storing 0 in location 1275
 105 run: jump-unless done?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1273 is 1299
9999 mem: skipping refcount at 1299
9998 run: base address is 1300
9999 mem: location 1272 is 1310
9999 mem: location 1310 is 1
9998 run: address to copy is 1305
9998 run: its type is event
9999 mem: location 1305 is 0
9999 mem: location 1306 is 100
9999 mem: location 1307 is 0
9999 mem: location 1308 is 0
9999 mem: storing 0 in location 1277
9999 mem: storing 100 in location 1278
9999 mem: storing 0 in location 1279
9999 mem: storing 0 in location 1280
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1272 is 1310
9999 mem: location 1310 is 1
9999 mem: location 1272 is 1310
9999 mem: storing 2 in location 1310
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1277 is 0
9999 mem: location 1278 is 100
9999 mem: location 1279 is 0
9999 mem: location 1280 is 0
9999 mem: location 1271 is 1309
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 100, 0, 0]
9998 run: result 1 is 1309
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1320
9999 mem: storing 100 in location 1321
9999 mem: storing 0 in location 1322
9999 mem: storing 0 in location 1323
9999 mem: decrementing refcount of 1309: 3 -> 2
9999 mem: storing 1309 in location 1316
9999 mem: incrementing refcount of 1309: 2 -> 3
9999 mem: storing 1 in location 1324
9999 mem: storing 0 in location 1325
 104 run: jump-unless found?, 
9999 mem: location 1324 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1325 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1320 is 0
9999 mem: location 1321 is 100
9999 mem: location 1322 is 0
9999 mem: location 1323 is 0
9999 mem: storing 0 in location 1326
 104 run: jump-unless t, 
9999 mem: location 1326 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1315 is 1012
9999 mem: location 1317 is 1150
9999 mem: location 1320 is 0
9999 mem: location 1321 is 100
9999 mem: location 1322 is 0
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1395
9999 mem: storing 85 in location 1396
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1398
9999 mem: incrementing refcount of 1012: 71 -> 72
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1150 in location 1399
9999 mem: incrementing refcount of 1150: 10 -> 11
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1400
9999 mem: storing 100 in location 1401
9999 mem: storing 0 in location 1402
9999 mem: storing 0 in location 1403
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1404
 105 run: jump-if editor, 1:offset
9999 mem: location 1399 is 1150
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1398 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1193
9999 mem: incrementing refcount of 1012: 72 -> 73
 106 run: jump-unless screen, 
9999 mem: location 1193 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1193 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1193 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1194
 106 run: reply width:number
9999 mem: location 1194 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1405
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1398 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1193
9999 mem: incrementing refcount of 1012: 73 -> 74
 106 run: jump-unless screen, 
9999 mem: location 1193 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1193 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1193 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1194
 106 run: reply height:number
9999 mem: location 1194 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1406
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1399 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1199
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1392
9999 mem: location 1162 is 0
9999 mem: location 1399 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 0
9999 mem: storing 0 in location 1407
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1399 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1199
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1392
9999 mem: location 1162 is 0
9999 mem: location 1399 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 9
9999 mem: storing 9 in location 1408
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1399 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1199
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1392
9999 mem: location 1162 is 0
9999 mem: location 1399 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1409
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1399 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1199
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1392
9999 mem: location 1162 is 0
9999 mem: location 1399 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1410
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1399 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1199
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1392
9999 mem: location 1162 is 0
9999 mem: location 1399 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1411
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1410 is 1158
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1412
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1411 is 1159
9999 mem: location 1159 is 3
9999 mem: storing 3 in location 1413
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1400 is 0
9999 mem: location 1401 is 100
9999 mem: location 1402 is 0
9999 mem: location 1403 is 0
9999 mem: storing 1401 in location 1414
 105 run: jump-unless c, 
9999 mem: location 1414 is 1401
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1414 is 1401
9999 mem: location 1401 is 100
9999 mem: storing 0 in location 1415
 105 run: jump-unless redo?, 
9999 mem: location 1415 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1414 is 1401
9999 mem: location 1401 is 100
9999 mem: storing 0 in location 1426
 105 run: jump-unless undo?, 
9999 mem: location 1426 is 0
9998 run: jumping to instruction 108
 105 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1414 is 1401
9999 mem: location 1401 is 100
9999 mem: storing 0 in location 1431
 105 run: jump-unless page-up?, 
9999 mem: location 1431 is 0
9998 run: jumping to instruction 149
 105 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1414 is 1401
9999 mem: location 1401 is 100
9999 mem: storing 0 in location 1447
 105 run: jump-unless page-down?, 
9999 mem: location 1447 is 0
9998 run: jumping to instruction 190
 105 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1414 is 1401
9999 mem: location 1401 is 100
9999 mem: storing 0 in location 1448
 105 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1448 is 0
9998 run: jumping to instruction 210
 105 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1414 is 1401
9999 mem: location 1401 is 100
9999 mem: storing 0 in location 1453
 105 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1453 is 0
9998 run: jumping to instruction 230
 105 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1414 is 1401
9999 mem: location 1401 is 100
9999 mem: storing 0 in location 1454
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1454 is 0
9998 run: jumping to instruction 268
 105 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1414 is 1401
9999 mem: location 1401 is 100
9999 mem: storing 0 in location 1455
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1455 is 0
9998 run: jumping to instruction 306
 105 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1414 is 1401
9999 mem: location 1401 is 100
9999 mem: storing 0 in location 1456
 105 run: jump-unless delete-previous-character?, 
9999 mem: location 1456 is 0
9998 run: jumping to instruction 346
 105 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1414 is 1401
9999 mem: location 1401 is 100
9999 mem: storing 0 in location 1460
 105 run: jump-unless tab?, 
9999 mem: location 1460 is 0
9998 run: jumping to instruction 383
 105 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1414 is 1401
9999 mem: location 1401 is 100
9999 mem: storing 0 in location 1464
 105 run: jump-unless newline?, 
9999 mem: location 1464 is 0
9998 run: jumping to instruction 402
 105 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1414 is 1401
9999 mem: location 1401 is 100
9999 mem: storing 1 in location 1467
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1404
 105 run: jump-if regular-character?, 1:offset
9999 mem: location 1467 is 1
9998 run: jumping to instruction 407
 105 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1399 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1199
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1392
9999 mem: location 1162 is 0
9999 mem: location 1399 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1152
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1152 is 1172
9999 mem: storing 1172 in location 1449
9999 mem: incrementing refcount of 1172: 14 -> 15
 105 run: cursor-before:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1409 is 1154
9999 mem: location 1154 is 1199
9999 mem: storing 1199 in location 1461
9999 mem: incrementing refcount of 1199: 17 -> 18
 105 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1399 is 1150
9999 mem: location 1414 is 1401
9999 mem: location 1401 is 100
9999 mem: location 1398 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1482
9999 mem: storing 31 in location 1483
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1150 in location 1485
9999 mem: incrementing refcount of 1150: 11 -> 12
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1486
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1487
9999 mem: incrementing refcount of 1012: 74 -> 75
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1485 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1199
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1392
9999 mem: location 1162 is 0
9999 mem: location 1485 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1488
 106 run: insert_2 c, *before-cursor
9999 mem: location 1486 is 100
9999 mem: location 1488 is 1154
9999 mem: location 1154 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1166
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1167
9999 mem: incrementing refcount of 1199: 18 -> 19
 107 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1515
9999 mem: storing 1515 in location 1168
9999 mem: incrementing refcount of 1515: 0 -> 1
 107 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1168 is 1515
9999 mem: skipping refcount at 1515
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1516 is 0
9999 mem: location 1517 is 0
9999 mem: location 1518 is 0
9999 mem: location 1168 is 1515
9999 mem: skipping refcount at 1515
9998 run: address to copy is 1516
9999 mem: storing 1516 in location 1169
 107 run: *val <- copy x
9999 mem: location 1166 is 100
9999 mem: location 1169 is 1516
9999 mem: storing 100 in location 1516
 107 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1167 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 99
9999 mem: location 1201 is 0
9999 mem: location 1202 is 1195
9999 mem: location 1167 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1201
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1201 is 0
9999 mem: storing 0 in location 1170
 107 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1167 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 99
9999 mem: location 1201 is 0
9999 mem: location 1202 is 1195
9999 mem: location 1167 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1201
9999 mem: storing 1201 in location 1171
 107 run: *y <- copy new-node
9999 mem: location 1168 is 1515
9999 mem: location 1171 is 1201
9999 mem: storing 1515 in location 1201
9999 mem: incrementing refcount of 1515: 1 -> 2
 107 run: y <- get-address *new-node, prev:offset
9999 mem: location 1168 is 1515
9999 mem: skipping refcount at 1515
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1516 is 100
9999 mem: location 1517 is 0
9999 mem: location 1518 is 0
9999 mem: location 1168 is 1515
9999 mem: skipping refcount at 1515
9999 type: type deduced to be character$
9998 run: address to copy is 1518
9999 mem: storing 1518 in location 1171
 107 run: *y <- copy in
9999 mem: location 1167 is 1199
9999 mem: location 1171 is 1518
9999 mem: storing 1199 in location 1518
9999 mem: incrementing refcount of 1199: 19 -> 20
 107 run: y <- get-address *new-node, next:offset
9999 mem: location 1168 is 1515
9999 mem: skipping refcount at 1515
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1516 is 100
9999 mem: location 1517 is 0
9999 mem: location 1518 is 1199
9999 mem: location 1168 is 1515
9999 mem: skipping refcount at 1515
9999 type: type deduced to be character$
9998 run: address to copy is 1517
9999 mem: storing 1517 in location 1171
 107 run: *y <- copy next-node
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1517
9999 mem: storing 0 in location 1517
 107 run: jump-if next-node, 1:offset
9999 mem: location 1170 is 0
9998 run: jump-if fell through
 107 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1167 is 1199
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: *before-cursor <- next_2 *before-cursor
9999 mem: location 1488 is 1154
9999 mem: location 1154 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1193
9999 mem: incrementing refcount of 1199: 20 -> 21
 107 run: jump-if in, 1:offset
9999 mem: location 1193 is 1199
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1193 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 99
9999 mem: location 1201 is 1515
9999 mem: location 1202 is 1195
9999 mem: location 1193 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1201
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1201 is 1515
9999 mem: storing 1515 in location 1194
9999 mem: incrementing refcount of 1515: 2 -> 3
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 1515
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1515
9999 mem: location 1488 is 1154
9999 mem: decrementing refcount of 1199: 21 -> 20
9999 mem: storing 1515 in location 1154
9999 mem: incrementing refcount of 1515: 3 -> 4
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1485 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1515
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1392
9999 mem: location 1162 is 0
9999 mem: location 1485 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1489
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1485 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1515
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1392
9999 mem: location 1162 is 0
9999 mem: location 1485 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1490
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1485 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1515
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1392
9999 mem: location 1162 is 0
9999 mem: location 1485 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 0
9999 mem: storing 0 in location 1491
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1485 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1515
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1392
9999 mem: location 1162 is 0
9999 mem: location 1485 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 9
9999 mem: storing 9 in location 1492
 106 run: save-row:number <- copy *cursor-row
9999 mem: location 1489 is 1158
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1493
 106 run: save-column:number <- copy *cursor-column
9999 mem: location 1490 is 1159
9999 mem: location 1159 is 3
9999 mem: storing 3 in location 1494
 106 run: screen-width:number <- screen-width screen
9999 mem: location 1487 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1193
9999 mem: incrementing refcount of 1012: 75 -> 76
 107 run: jump-unless screen, 
9999 mem: location 1193 is 1012
9998 run: jump-unless fell through
9990 schedule: screen-width/insert-at-cursor/handle-keyboard-event/editor-event-loop/run1001/scenario-editor-inserts-characters-at-cursor-2
 107 run: width <- get *screen, num-columns:offset
9999 mem: location 1193 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1193 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1194
 107 run: reply width:number
9999 mem: location 1194 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1495
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1487 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1193
9999 mem: incrementing refcount of 1012: 76 -> 77
 107 run: jump-unless screen, 
9999 mem: location 1193 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1193 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1193 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1194
 107 run: reply height:number
9999 mem: location 1194 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1496
 106 run: wrap-column:number <- subtract right, 1
9999 mem: location 1492 is 9
9999 mem: storing 8 in location 1497
 106 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1490 is 1159
9999 mem: location 1159 is 3
9999 mem: location 1497 is 8
9999 mem: storing 0 in location 1498
 106 run: jump-unless at-wrap?, 
9999 mem: location 1498 is 0
9998 run: jumping to instruction 41
 106 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1490 is 1159
9999 mem: location 1159 is 3
9999 mem: location 1490 is 1159
9999 mem: storing 4 in location 1159
 106 run: next:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1488 is 1154
9999 mem: location 1154 is 1515
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1515 in location 1193
9999 mem: incrementing refcount of 1515: 4 -> 5
 107 run: jump-if in, 1:offset
9999 mem: location 1193 is 1515
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1193 is 1515
9999 mem: skipping refcount at 1515
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1516 is 100
9999 mem: location 1517 is 0
9999 mem: location 1518 is 1199
9999 mem: location 1193 is 1515
9999 mem: skipping refcount at 1515
9999 type: type deduced to be character$
9998 run: address to copy is 1517
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1517 is 0
9999 mem: storing 0 in location 1194
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1505
 106 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1505 is 0
9999 mem: storing 1 in location 1506
 106 run: jump-unless at-end?, 
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 106 run: bottom:number <- subtract screen-height, 1
9999 mem: location 1496 is 5
9999 mem: storing 4 in location 1507
 106 run: at-bottom?:boolean <- equal save-row, bottom
9999 mem: location 1493 is 1
9999 mem: location 1507 is 4
9999 mem: storing 0 in location 1508
 106 run: at-right?:boolean <- equal save-column, right
9999 mem: location 1494 is 3
9999 mem: location 1492 is 9
9999 mem: storing 0 in location 1509
 106 run: overflow?:boolean <- and at-bottom?, at-right?
9999 mem: location 1508 is 0
9999 mem: location 1509 is 0
9999 mem: storing 0 in location 1510
 106 run: jump-if overflow?, 
9999 mem: location 1510 is 0
9998 run: jump-if fell through
 106 run: move-cursor screen, save-row, save-column
9999 mem: location 1487 is 1012
9999 mem: location 1493 is 1
9999 mem: location 1494 is 3
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1236
9999 mem: incrementing refcount of 1012: 77 -> 78
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1237
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1238
 107 run: jump-unless screen, 
9999 mem: location 1236 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1239
 107 run: *row <- copy new-row
9999 mem: location 1237 is 1
9999 mem: location 1239 is 1015
9999 mem: storing 1 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1240
 107 run: *column <- copy new-column
9999 mem: location 1238 is 3
9999 mem: location 1240 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1236 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: print screen, c
9999 mem: location 1487 is 1012
9999 mem: location 1486 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1244
9999 mem: incrementing refcount of 1012: 78 -> 79
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1245
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1246
9999 mem: storing 0 in location 1247
 107 run: jump-if color-found?, 
9999 mem: location 1247 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1246
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1248
9999 mem: storing 0 in location 1249
 107 run: jump-if bg-color-found?, 
9999 mem: location 1249 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1248
 107 run: trace 90, [print-character], c
9999 mem: location 1245 is 100
  90 print-character: 100 
 107 run: jump-unless screen, 
9999 mem: location 1244 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1250
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1251
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1252
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1252 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1253
 107 run: jump-if legal?, 1:offset
9999 mem: location 1253 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1252 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1251 is 5
9999 mem: storing 1 in location 1253
 107 run: jump-if legal?, 1:offset
9999 mem: location 1253 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1254
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1253
 107 run: jump-if legal?, 1:offset
9999 mem: location 1253 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1250 is 10
9999 mem: storing 1 in location 1253
 107 run: jump-if legal?, 1:offset
9999 mem: location 1253 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1245 is 100
9999 mem: storing 0 in location 1255
 107 run: jump-unless newline?, 
9999 mem: location 1255 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1252 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1250 is 10
9999 mem: storing 10 in location 1258
 107 run: index <- add index, *column
9999 mem: location 1258 is 10
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1258
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1259
9999 mem: incrementing refcount of 1018: 45 -> 46
 107 run: len:number <- length *buf
9999 mem: location 1259 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1260
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1245 is 100
9999 mem: storing 0 in location 1261
 107 run: jump-unless backspace?, 
9999 mem: location 1261 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1259 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1258 is 13
9999 mem: storing 1046 in location 1263
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1263 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 0
9999 mem: location 1263 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1264
 107 run: *cursor-contents <- copy c
9999 mem: location 1245 is 100
9999 mem: location 1264 is 1046
9999 mem: storing 100 in location 1046
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1263 is 1046
9999 mem: location 1046 is 100
9999 mem: location 1047 is 0
9999 mem: location 1263 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1265
 107 run: *cursor-color <- copy color
9999 mem: location 1246 is 7
9999 mem: location 1265 is 1047
9999 mem: storing 7 in location 1047
 107 run: right:number <- subtract width, 1
9999 mem: location 1250 is 10
9999 mem: storing 9 in location 1266
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1266 is 9
9999 mem: storing 0 in location 1267
 107 run: jump-if at-right?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1254 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1244 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1504
 106 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean
9999 mem: location 1485 is 1150
9999 mem: location 1487 is 1012
9999 mem: location 1504 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1150
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1150: 12 -> 11
9999 mem: storing 1150 in location 1399
9999 mem: incrementing refcount of 1150: 11 -> 12
9999 mem: decrementing refcount of 1012: 79 -> 78
9999 mem: storing 1012 in location 1398
9999 mem: incrementing refcount of 1012: 78 -> 79
9999 mem: storing 0 in location 1404
 105 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1399 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1515
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1392
9999 mem: location 1162 is 0
9999 mem: location 1399 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1152
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1152 is 1172
9999 mem: storing 1172 in location 1451
9999 mem: incrementing refcount of 1172: 15 -> 16
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1399 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1515
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1392
9999 mem: location 1162 is 0
9999 mem: location 1399 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1418
 105 run: jump-unless *undo, 
9999 mem: location 1418 is 1161
9999 mem: location 1161 is 1392
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1418 is 1161
9999 mem: location 1161 is 1392
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1392 in location 1193
9999 mem: incrementing refcount of 1392: 2 -> 3
 106 run: result <- get *in, value:offset
9999 mem: location 1193 is 1392
9999 mem: skipping refcount at 1392
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1393 is 1000
9999 mem: location 1394 is 0
9999 mem: location 1193 is 1392
9999 mem: skipping refcount at 1392
9998 run: address to copy is 1393
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1393 is 1000
9999 mem: storing 1000 in location 1194
9999 mem: incrementing refcount of 1000: 4 -> 5
 106 run: reply result:_elem
9999 mem: location 1194 is 1000
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1417
9999 mem: incrementing refcount of 1000: 5 -> 6
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1417 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1172
9999 mem: location 1005 is 1
9999 mem: location 1006 is 3
9999 mem: location 1007 is 1172
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1417 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 0 in location 1424
 105 run: jump-unless typing, 
9999 mem: location 1424 is 0
9998 run: jumping to instruction 429
 105 run: insert-from:address:shared:duplex-list:character <- next_2 cursor-before
9999 mem: location 1461 is 1199
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1193
9999 mem: incrementing refcount of 1199: 20 -> 21
 106 run: jump-if in, 1:offset
9999 mem: location 1193 is 1199
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1193 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 99
9999 mem: location 1201 is 1515
9999 mem: location 1202 is 1195
9999 mem: location 1193 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1201
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1201 is 1515
9999 mem: storing 1515 in location 1194
9999 mem: incrementing refcount of 1515: 5 -> 6
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 1515
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1515
9999 mem: storing 1515 in location 1425
9999 mem: incrementing refcount of 1515: 6 -> 7
 105 run: insert-to:address:shared:duplex-list:character <- next_2 insert-from
9999 mem: location 1425 is 1515
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1515 in location 1193
9999 mem: incrementing refcount of 1515: 7 -> 8
 106 run: jump-if in, 1:offset
9999 mem: location 1193 is 1515
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1193 is 1515
9999 mem: skipping refcount at 1515
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1516 is 100
9999 mem: location 1517 is 0
9999 mem: location 1518 is 1199
9999 mem: location 1193 is 1515
9999 mem: skipping refcount at 1515
9999 type: type deduced to be character$
9998 run: address to copy is 1517
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1517 is 0
9999 mem: storing 0 in location 1194
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1194 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1463
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: decrementing refcount of 1000: 6 -> 5
9999 mem: storing 1120 in location 1417
9999 mem: incrementing refcount of 1120: 0 -> 1
 105 run: *op <- merge 0/insert-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to, 1/coalesce
9999 mem: location 1412 is 1
9999 mem: location 1413 is 3
9999 mem: location 1449 is 1172
9999 mem: location 1410 is 1158
9999 mem: location 1158 is 1
9999 mem: location 1411 is 1159
9999 mem: location 1159 is 4
9999 mem: location 1451 is 1172
9999 mem: location 1425 is 1515
9999 mem: location 1463 is 0
9999 mem: location 1417 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1417 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 0 in location 1121
9999 mem: storing 1 in location 1122
9999 mem: storing 3 in location 1123
9999 mem: storing 1172 in location 1124
9999 mem: storing 1 in location 1125
9999 mem: storing 4 in location 1126
9999 mem: storing 1172 in location 1127
9999 mem: storing 1515 in location 1128
9999 mem: storing 0 in location 1129
9999 mem: storing 1 in location 1130
 105 run: editor <- add-operation editor, op
9999 mem: location 1399 is 1150
9999 mem: location 1417 is 1120
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1150 in location 1388
9999 mem: incrementing refcount of 1150: 12 -> 13
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1389
9999 mem: incrementing refcount of 1120: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1388 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1515
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1392
9999 mem: location 1162 is 0
9999 mem: location 1388 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1390
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1389 is 1120
9999 mem: location 1390 is 1161
9999 mem: location 1161 is 1392
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1236
9999 mem: incrementing refcount of 1120: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1392 in location 1237
9999 mem: incrementing refcount of 1392: 3 -> 4
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1519
9999 mem: storing 1519 in location 1238
9999 mem: incrementing refcount of 1519: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1238 is 1519
9999 mem: skipping refcount at 1519
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1520 is 0
9999 mem: location 1521 is 0
9999 mem: location 1238 is 1519
9999 mem: skipping refcount at 1519
9998 run: address to copy is 1520
9999 mem: storing 1520 in location 1239
 107 run: *val <- copy x
9999 mem: location 1236 is 1120
9999 mem: location 1239 is 1520
9999 mem: storing 1120 in location 1520
9999 mem: incrementing refcount of 1120: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1238 is 1519
9999 mem: skipping refcount at 1519
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1520 is 1120
9999 mem: location 1521 is 0
9999 mem: location 1238 is 1519
9999 mem: skipping refcount at 1519
9999 type: type deduced to be address$
9998 run: address to copy is 1521
9999 mem: storing 1521 in location 1240
 107 run: *next <- copy in
9999 mem: location 1237 is 1392
9999 mem: location 1240 is 1521
9999 mem: storing 1392 in location 1521
9999 mem: incrementing refcount of 1392: 4 -> 5
 107 run: reply result
9999 mem: location 1238 is 1519
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1519
9999 mem: location 1390 is 1161
9999 mem: decrementing refcount of 1392: 5 -> 4
9999 mem: storing 1519 in location 1161
9999 mem: incrementing refcount of 1519: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1388 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1515
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1519
9999 mem: location 1162 is 0
9999 mem: location 1388 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1391
 106 run: *redo <- copy 0
9999 mem: location 1391 is 1162
9999 mem: storing 0 in location 1162
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1388 is 1150
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1150
9999 mem: decrementing refcount of 1150: 13 -> 12
9999 mem: storing 1150 in location 1399
9999 mem: incrementing refcount of 1150: 12 -> 13
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1398 is 1012
9999 mem: location 1399 is 1150
9999 mem: location 1404 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1150
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 79 -> 78
9999 mem: storing 1012 in location 1315
9999 mem: incrementing refcount of 1012: 78 -> 79
9999 mem: decrementing refcount of 1150: 13 -> 12
9999 mem: storing 1150 in location 1317
9999 mem: incrementing refcount of 1150: 12 -> 13
9999 mem: storing 0 in location 1327
 104 run: jump-unless go-render?, 
9999 mem: location 1327 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1317 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1515
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1519
9999 mem: location 1162 is 0
9999 mem: location 1317 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1158
9998 run: its type is number
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1318
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1317 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1515
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1519
9999 mem: location 1162 is 0
9999 mem: location 1317 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 4
9999 mem: storing 4 in location 1319
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1315 is 1012
9999 mem: location 1318 is 1
9999 mem: location 1319 is 4
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1236
9999 mem: incrementing refcount of 1012: 79 -> 80
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1237
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1238
 105 run: jump-unless screen, 
9999 mem: location 1236 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1239
 105 run: *row <- copy new-row
9999 mem: location 1237 is 1
9999 mem: location 1239 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1240
 105 run: *column <- copy new-column
9999 mem: location 1238 is 4
9999 mem: location 1240 is 1016
9999 mem: storing 4 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1236 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 80 -> 79
9999 mem: storing 1012 in location 1315
9999 mem: incrementing refcount of 1012: 79 -> 80
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1316 is 1309
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1309 in location 1271
9999 mem: incrementing refcount of 1309: 3 -> 4
 105 run: jump-unless console, 
9999 mem: location 1271 is 1309
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1271 is 1309
9999 mem: skipping refcount at 1309
9999 mem: location 1310 is 2
9999 mem: location 1311 is 1299
9999 mem: location 1271 is 1309
9999 mem: skipping refcount at 1309
9998 run: address to copy is 1310
9999 mem: storing 1310 in location 1272
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1271 is 1309
9999 mem: skipping refcount at 1309
9999 mem: location 1310 is 2
9999 mem: location 1311 is 1299
9999 mem: location 1271 is 1309
9999 mem: skipping refcount at 1309
9998 run: address to copy is 1311
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1311 is 1299
9999 mem: storing 1299 in location 1273
9999 mem: incrementing refcount of 1299: 2 -> 3
 105 run: max:number <- length *buf
9999 mem: location 1273 is 1299
9999 mem: skipping refcount at 1299
9999 mem: storing 2 in location 1274
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1272 is 1310
9999 mem: location 1310 is 2
9999 mem: location 1274 is 2
9999 mem: storing 1 in location 1275
 105 run: jump-unless done?, 
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1190 in location 1276
9999 mem: incrementing refcount of 1190: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1276 is 1190
9999 mem: skipping refcount at 1190
9999 mem: location 1191 is 0
9999 mem: location 1192 is 0
9999 mem: location 1193 is 0
9999 mem: location 1194 is 0
9999 mem: location 1271 is 1309
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1309
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1320
9999 mem: storing 0 in location 1321
9999 mem: storing 0 in location 1322
9999 mem: storing 0 in location 1323
9999 mem: decrementing refcount of 1309: 4 -> 3
9999 mem: storing 1309 in location 1316
9999 mem: incrementing refcount of 1309: 3 -> 4
9999 mem: storing 1 in location 1324
9999 mem: storing 1 in location 1325
 104 run: jump-unless found?, 
9999 mem: location 1324 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1325 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1315 is 1012
9999 mem: location 1316 is 1309
9999 mem: location 1317 is 1150
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain [
    .          .
    .abcd      .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: check-trace-count-for-label 1, [print-character]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
