9991 parse: --- defining scenario-replace-all-characters
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    1:address:array:character/raw <- new [banana]\n    1:address:array:character/raw <- string-replace 1:address:array:character/raw, 97/a, 122/z\n    2:array:character/raw <- copy *1:address:array:character/raw\n  ": "literal-string"}
9992 load: after rewriting: run [
    1:address:array:character/raw <- new [banana]
    1:address:array:character/raw <- string-replace 1:address:array:character/raw, 97/a, 122/z
    2:array:character/raw <- copy *1:address:array:character/raw
  ]
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    2:string <- [bznznz]\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain [
    2:string <- [bznznz]
  ]
9999 parse: recipe scenario-replace-all-characters has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe scenario-replace-all-characters
9991 transform: --- transform braces for recipe scenario-replace-all-characters
9992 transform: run ...
9992 transform: memory-should-contain ...
9991 transform: --- deduce types for recipe scenario-replace-all-characters
9991 transform: --- resolve ambiguous calls for recipe scenario-replace-all-characters
9991 transform: --- collect surrounding spaces for recipe scenario-replace-all-characters
9991 transform: --- transform names for recipe scenario-replace-all-characters
9991 transform: --- compute instruction operations for recipe scenario-replace-all-characters
9991 transform: --- perform checks for recipe scenario-replace-all-characters
9991 transform: --- convert 'new' to 'allocate' for recipe scenario-replace-all-characters
9991 transform: --- parsing any uninitialized reagents as integers
9991 transform: --- checking type and type_name pointers for recipe string-equal
9991 transform: --- checking type and type_name pointers for recipe new-buffer
9991 transform: --- checking type and type_name pointers for recipe grow-buffer
9991 transform: --- checking type and type_name pointers for recipe buffer-full?
9991 transform: --- checking type and type_name pointers for recipe buffer-append
9991 transform: --- checking type and type_name pointers for recipe integer-to-decimal-string
9991 transform: --- checking type and type_name pointers for recipe buffer-to-array
9991 transform: --- checking type and type_name pointers for recipe string-append
9991 transform: --- checking type and type_name pointers for recipe string-replace
9991 transform: --- checking type and type_name pointers for recipe interpolate
9991 transform: --- checking type and type_name pointers for recipe space?
9991 transform: --- checking type and type_name pointers for recipe trim
9991 transform: --- checking type and type_name pointers for recipe find-next
9991 transform: --- checking type and type_name pointers for recipe find-substring
9991 transform: --- checking type and type_name pointers for recipe match-at
9991 transform: --- checking type and type_name pointers for recipe split
9991 transform: --- checking type and type_name pointers for recipe split-first
9991 transform: --- checking type and type_name pointers for recipe string-copy
9991 transform: --- checking type and type_name pointers for recipe min
9991 transform: --- checking type and type_name pointers for recipe max
9991 transform: --- checking type and type_name pointers for recipe new-channel
9991 transform: --- checking type and type_name pointers for recipe write
9991 transform: --- checking type and type_name pointers for recipe read
9991 transform: --- checking type and type_name pointers for recipe clear-channel
9991 transform: --- checking type and type_name pointers for recipe channel-empty?
9991 transform: --- checking type and type_name pointers for recipe channel-full?
9991 transform: --- checking type and type_name pointers for recipe channel-capacity
9991 transform: --- checking type and type_name pointers for recipe buffer-lines
9991 transform: --- checking type and type_name pointers for recipe new-array
9991 transform: --- checking type and type_name pointers for recipe force-specialization-list-number
9991 transform: --- checking type and type_name pointers for recipe force-specialization-duplex-list-character
9991 transform: --- checking type and type_name pointers for recipe new-stream
9991 transform: --- checking type and type_name pointers for recipe rewind-stream
9991 transform: --- checking type and type_name pointers for recipe read-line
9991 transform: --- checking type and type_name pointers for recipe end-of-stream?
9991 transform: --- checking type and type_name pointers for recipe new-fake-screen
9991 transform: --- checking type and type_name pointers for recipe clear-screen
9991 transform: --- checking type and type_name pointers for recipe sync-screen
9991 transform: --- checking type and type_name pointers for recipe fake-screen-is-empty?
9991 transform: --- checking type and type_name pointers for recipe print-character
9991 transform: --- checking type and type_name pointers for recipe clear-line
9991 transform: --- checking type and type_name pointers for recipe cursor-position
9991 transform: --- checking type and type_name pointers for recipe move-cursor
9991 transform: --- checking type and type_name pointers for recipe cursor-down
9991 transform: --- checking type and type_name pointers for recipe cursor-up
9991 transform: --- checking type and type_name pointers for recipe cursor-right
9991 transform: --- checking type and type_name pointers for recipe cursor-left
9991 transform: --- checking type and type_name pointers for recipe cursor-to-start-of-line
9991 transform: --- checking type and type_name pointers for recipe cursor-to-next-line
9991 transform: --- checking type and type_name pointers for recipe screen-width
9991 transform: --- checking type and type_name pointers for recipe screen-height
9991 transform: --- checking type and type_name pointers for recipe hide-cursor
9991 transform: --- checking type and type_name pointers for recipe show-cursor
9991 transform: --- checking type and type_name pointers for recipe hide-screen
9991 transform: --- checking type and type_name pointers for recipe show-screen
9991 transform: --- checking type and type_name pointers for recipe print-string
9991 transform: --- checking type and type_name pointers for recipe print-integer
9991 transform: --- checking type and type_name pointers for recipe new-fake-console
9991 transform: --- checking type and type_name pointers for recipe read-event
9991 transform: --- checking type and type_name pointers for recipe read-key
9991 transform: --- checking type and type_name pointers for recipe send-keys-to-channel
9991 transform: --- checking type and type_name pointers for recipe wait-for-event
9991 transform: --- checking type and type_name pointers for recipe has-more-events?
9991 transform: --- checking type and type_name pointers for recipe push_2
9991 transform: --- checking type and type_name pointers for recipe first_2
9991 transform: --- checking type and type_name pointers for recipe rest_2
9991 transform: --- checking type and type_name pointers for recipe push-duplex_2
9991 transform: --- checking type and type_name pointers for recipe first-duplex_2
9991 transform: --- checking type and type_name pointers for recipe next-duplex_2
9991 transform: --- checking type and type_name pointers for recipe prev-duplex_2
9991 transform: --- checking type and type_name pointers for recipe insert-duplex_2
9991 transform: --- checking type and type_name pointers for recipe remove-duplex_2
9991 transform: --- checking type and type_name pointers for recipe remove-duplex-between_2
9991 transform: --- checking type and type_name pointers for recipe insert-duplex-range_2
9991 transform: --- checking type and type_name pointers for recipe append-duplex_2
9991 transform: --- checking type and type_name pointers for recipe last-duplex_2
9991 transform: --- checking type and type_name pointers for recipe sandbox
9991 transform: --- checking type and type_name pointers for recipe factorial
9991 transform: --- checking type and type_name pointers for recipe chessboard
9991 transform: --- checking type and type_name pointers for recipe new-board
9991 transform: --- checking type and type_name pointers for recipe new-file
9991 transform: --- checking type and type_name pointers for recipe print-board
9991 transform: --- checking type and type_name pointers for recipe initial-position
9991 transform: --- checking type and type_name pointers for recipe read-move
9991 transform: --- checking type and type_name pointers for recipe read-file
9991 transform: --- checking type and type_name pointers for recipe read-rank
9991 transform: --- checking type and type_name pointers for recipe expect-from-channel
9991 transform: --- checking type and type_name pointers for recipe make-move
9991 transform: --- checking type and type_name pointers for recipe main_2
9991 transform: --- checking type and type_name pointers for recipe new-editor
9991 transform: --- checking type and type_name pointers for recipe insert-text
9991 transform: --- checking type and type_name pointers for recipe render
9991 transform: --- checking type and type_name pointers for recipe clear-line-delimited
9991 transform: --- checking type and type_name pointers for recipe clear-screen-from
9991 transform: --- checking type and type_name pointers for recipe clear-rest-of-screen
9991 transform: --- checking type and type_name pointers for recipe get-color
9991 transform: --- checking type and type_name pointers for recipe editor-event-loop
9991 transform: --- checking type and type_name pointers for recipe move-cursor-in-editor
9991 transform: --- checking type and type_name pointers for recipe snap-cursor
9991 transform: --- checking type and type_name pointers for recipe handle-keyboard-event
9991 transform: --- checking type and type_name pointers for recipe insert-at-cursor
9991 transform: --- checking type and type_name pointers for recipe editor-render
9991 transform: --- checking type and type_name pointers for recipe insert-new-line-and-indent
9991 transform: --- checking type and type_name pointers for recipe line-indent
9991 transform: --- checking type and type_name pointers for recipe draw-horizontal
9991 transform: --- checking type and type_name pointers for recipe delete-before-cursor
9991 transform: --- checking type and type_name pointers for recipe move-cursor-coordinates-left
9991 transform: --- checking type and type_name pointers for recipe previous-line-length
9991 transform: --- checking type and type_name pointers for recipe delete-at-cursor
9991 transform: --- checking type and type_name pointers for recipe move-cursor-coordinates-right
9991 transform: --- checking type and type_name pointers for recipe move-to-previous-line
9991 transform: --- checking type and type_name pointers for recipe move-to-next-line
9991 transform: --- checking type and type_name pointers for recipe move-to-start-of-line
9991 transform: --- checking type and type_name pointers for recipe move-to-end-of-line
9991 transform: --- checking type and type_name pointers for recipe delete-to-start-of-line
9991 transform: --- checking type and type_name pointers for recipe delete-to-end-of-line
9991 transform: --- checking type and type_name pointers for recipe before-start-of-next-line
9991 transform: --- checking type and type_name pointers for recipe before-previous-line
9991 transform: --- checking type and type_name pointers for recipe page-down
9991 transform: --- checking type and type_name pointers for recipe page-up
9991 transform: --- checking type and type_name pointers for recipe new-programming-environment
9991 transform: --- checking type and type_name pointers for recipe event-loop
9991 transform: --- checking type and type_name pointers for recipe resize
9991 transform: --- checking type and type_name pointers for recipe render-all
9991 transform: --- checking type and type_name pointers for recipe render-recipes
9991 transform: --- checking type and type_name pointers for recipe render-sandbox-side
9991 transform: --- checking type and type_name pointers for recipe update-cursor
9991 transform: --- checking type and type_name pointers for recipe render-string
9991 transform: --- checking type and type_name pointers for recipe render-code-string
9991 transform: --- checking type and type_name pointers for recipe maximize
9991 transform: --- checking type and type_name pointers for recipe draw-vertical
9991 transform: --- checking type and type_name pointers for recipe run-sandboxes
9991 transform: --- checking type and type_name pointers for recipe update-recipes
9991 transform: --- checking type and type_name pointers for recipe update-sandbox
9991 transform: --- checking type and type_name pointers for recipe update-status
9991 transform: --- checking type and type_name pointers for recipe save-sandboxes
9991 transform: --- checking type and type_name pointers for recipe render-sandboxes
9991 transform: --- checking type and type_name pointers for recipe restore-sandboxes
9991 transform: --- checking type and type_name pointers for recipe render-screen
9991 transform: --- checking type and type_name pointers for recipe editor-contents
9991 transform: --- checking type and type_name pointers for recipe empty-editor?
9991 transform: --- checking type and type_name pointers for recipe extract-sandbox
9991 transform: --- checking type and type_name pointers for recipe delete-sandbox
9991 transform: --- checking type and type_name pointers for recipe find-click-in-sandbox-output
9991 transform: --- checking type and type_name pointers for recipe toggle-expected-response
9991 transform: --- checking type and type_name pointers for recipe find-click-in-sandbox-code
9991 transform: --- checking type and type_name pointers for recipe add-operation
9991 transform: --- checking type and type_name pointers for recipe first_3
9991 transform: --- checking type and type_name pointers for recipe rest_3
9991 transform: --- checking type and type_name pointers for recipe push_3
9991 transform: --- checking type and type_name pointers for recipe scenario-replace-all-characters
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario-replace-all-characters
 102 run: run [
    1:address:array:character/raw <- new [banana]
    1:address:array:character/raw <- string-replace 1:address:array:character/raw, 97/a, 122/z
    2:array:character/raw <- copy *1:address:array:character/raw
  ]
9991 parse: --- defining run1001
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"banana": "literal-string"}
9993 parse:   product: {"1": <"address" : <"array" : <"character" : <>>>>, "raw": <>}
9992 load: after rewriting: 1:address:array:character/raw <- new [banana]
9993 parse: instruction: string-replace
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"1": <"address" : <"array" : <"character" : <>>>>, "raw": <>}
9993 parse:   ingredient: {"97": "literal", "a": <>}
9993 parse:   ingredient: {"122": "literal", "z": <>}
9993 parse:   product: {"1": <"address" : <"array" : <"character" : <>>>>, "raw": <>}
9992 load: after rewriting: 1:address:array:character/raw <- string-replace 1:address:array:character/raw, 97/a, 122/z
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"1": <"address" : <"array" : <"character" : <>>>>, "raw": <>, "lookup": <>}
9993 parse:   product: {"2": <"array" : <"character" : <>>>, "raw": <>}
9992 load: after rewriting: 2:array:character/raw <- copy *1:address:array:character/raw
9999 parse: recipe run1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1001
9991 transform: --- transform braces for recipe run1001
9992 transform: new ...
9992 transform: string-replace ...
9992 transform: copy ...
9991 transform: --- deduce types for recipe run1001
9991 transform: --- resolve ambiguous calls for recipe run1001
9991 transform: --- collect surrounding spaces for recipe run1001
9991 transform: --- transform names for recipe run1001
9991 transform: --- compute instruction operations for recipe run1001
9991 transform: --- perform checks for recipe run1001
9991 transform: --- convert 'new' to 'allocate' for recipe run1001
9991 transform: --- parsing any uninitialized reagents as integers
9991 transform: --- checking type and type_name pointers for recipe string-equal
9991 transform: --- checking type and type_name pointers for recipe new-buffer
9991 transform: --- checking type and type_name pointers for recipe grow-buffer
9991 transform: --- checking type and type_name pointers for recipe buffer-full?
9991 transform: --- checking type and type_name pointers for recipe buffer-append
9991 transform: --- checking type and type_name pointers for recipe integer-to-decimal-string
9991 transform: --- checking type and type_name pointers for recipe buffer-to-array
9991 transform: --- checking type and type_name pointers for recipe string-append
9991 transform: --- checking type and type_name pointers for recipe string-replace
9991 transform: --- checking type and type_name pointers for recipe interpolate
9991 transform: --- checking type and type_name pointers for recipe space?
9991 transform: --- checking type and type_name pointers for recipe trim
9991 transform: --- checking type and type_name pointers for recipe find-next
9991 transform: --- checking type and type_name pointers for recipe find-substring
9991 transform: --- checking type and type_name pointers for recipe match-at
9991 transform: --- checking type and type_name pointers for recipe split
9991 transform: --- checking type and type_name pointers for recipe split-first
9991 transform: --- checking type and type_name pointers for recipe string-copy
9991 transform: --- checking type and type_name pointers for recipe min
9991 transform: --- checking type and type_name pointers for recipe max
9991 transform: --- checking type and type_name pointers for recipe new-channel
9991 transform: --- checking type and type_name pointers for recipe write
9991 transform: --- checking type and type_name pointers for recipe read
9991 transform: --- checking type and type_name pointers for recipe clear-channel
9991 transform: --- checking type and type_name pointers for recipe channel-empty?
9991 transform: --- checking type and type_name pointers for recipe channel-full?
9991 transform: --- checking type and type_name pointers for recipe channel-capacity
9991 transform: --- checking type and type_name pointers for recipe buffer-lines
9991 transform: --- checking type and type_name pointers for recipe new-array
9991 transform: --- checking type and type_name pointers for recipe force-specialization-list-number
9991 transform: --- checking type and type_name pointers for recipe force-specialization-duplex-list-character
9991 transform: --- checking type and type_name pointers for recipe new-stream
9991 transform: --- checking type and type_name pointers for recipe rewind-stream
9991 transform: --- checking type and type_name pointers for recipe read-line
9991 transform: --- checking type and type_name pointers for recipe end-of-stream?
9991 transform: --- checking type and type_name pointers for recipe new-fake-screen
9991 transform: --- checking type and type_name pointers for recipe clear-screen
9991 transform: --- checking type and type_name pointers for recipe sync-screen
9991 transform: --- checking type and type_name pointers for recipe fake-screen-is-empty?
9991 transform: --- checking type and type_name pointers for recipe print-character
9991 transform: --- checking type and type_name pointers for recipe clear-line
9991 transform: --- checking type and type_name pointers for recipe cursor-position
9991 transform: --- checking type and type_name pointers for recipe move-cursor
9991 transform: --- checking type and type_name pointers for recipe cursor-down
9991 transform: --- checking type and type_name pointers for recipe cursor-up
9991 transform: --- checking type and type_name pointers for recipe cursor-right
9991 transform: --- checking type and type_name pointers for recipe cursor-left
9991 transform: --- checking type and type_name pointers for recipe cursor-to-start-of-line
9991 transform: --- checking type and type_name pointers for recipe cursor-to-next-line
9991 transform: --- checking type and type_name pointers for recipe screen-width
9991 transform: --- checking type and type_name pointers for recipe screen-height
9991 transform: --- checking type and type_name pointers for recipe hide-cursor
9991 transform: --- checking type and type_name pointers for recipe show-cursor
9991 transform: --- checking type and type_name pointers for recipe hide-screen
9991 transform: --- checking type and type_name pointers for recipe show-screen
9991 transform: --- checking type and type_name pointers for recipe print-string
9991 transform: --- checking type and type_name pointers for recipe print-integer
9991 transform: --- checking type and type_name pointers for recipe new-fake-console
9991 transform: --- checking type and type_name pointers for recipe read-event
9991 transform: --- checking type and type_name pointers for recipe read-key
9991 transform: --- checking type and type_name pointers for recipe send-keys-to-channel
9991 transform: --- checking type and type_name pointers for recipe wait-for-event
9991 transform: --- checking type and type_name pointers for recipe has-more-events?
9991 transform: --- checking type and type_name pointers for recipe push_2
9991 transform: --- checking type and type_name pointers for recipe first_2
9991 transform: --- checking type and type_name pointers for recipe rest_2
9991 transform: --- checking type and type_name pointers for recipe push-duplex_2
9991 transform: --- checking type and type_name pointers for recipe first-duplex_2
9991 transform: --- checking type and type_name pointers for recipe next-duplex_2
9991 transform: --- checking type and type_name pointers for recipe prev-duplex_2
9991 transform: --- checking type and type_name pointers for recipe insert-duplex_2
9991 transform: --- checking type and type_name pointers for recipe remove-duplex_2
9991 transform: --- checking type and type_name pointers for recipe remove-duplex-between_2
9991 transform: --- checking type and type_name pointers for recipe insert-duplex-range_2
9991 transform: --- checking type and type_name pointers for recipe append-duplex_2
9991 transform: --- checking type and type_name pointers for recipe last-duplex_2
9991 transform: --- checking type and type_name pointers for recipe sandbox
9991 transform: --- checking type and type_name pointers for recipe factorial
9991 transform: --- checking type and type_name pointers for recipe chessboard
9991 transform: --- checking type and type_name pointers for recipe new-board
9991 transform: --- checking type and type_name pointers for recipe new-file
9991 transform: --- checking type and type_name pointers for recipe print-board
9991 transform: --- checking type and type_name pointers for recipe initial-position
9991 transform: --- checking type and type_name pointers for recipe read-move
9991 transform: --- checking type and type_name pointers for recipe read-file
9991 transform: --- checking type and type_name pointers for recipe read-rank
9991 transform: --- checking type and type_name pointers for recipe expect-from-channel
9991 transform: --- checking type and type_name pointers for recipe make-move
9991 transform: --- checking type and type_name pointers for recipe main_2
9991 transform: --- checking type and type_name pointers for recipe new-editor
9991 transform: --- checking type and type_name pointers for recipe insert-text
9991 transform: --- checking type and type_name pointers for recipe render
9991 transform: --- checking type and type_name pointers for recipe clear-line-delimited
9991 transform: --- checking type and type_name pointers for recipe clear-screen-from
9991 transform: --- checking type and type_name pointers for recipe clear-rest-of-screen
9991 transform: --- checking type and type_name pointers for recipe get-color
9991 transform: --- checking type and type_name pointers for recipe editor-event-loop
9991 transform: --- checking type and type_name pointers for recipe move-cursor-in-editor
9991 transform: --- checking type and type_name pointers for recipe snap-cursor
9991 transform: --- checking type and type_name pointers for recipe handle-keyboard-event
9991 transform: --- checking type and type_name pointers for recipe insert-at-cursor
9991 transform: --- checking type and type_name pointers for recipe editor-render
9991 transform: --- checking type and type_name pointers for recipe insert-new-line-and-indent
9991 transform: --- checking type and type_name pointers for recipe line-indent
9991 transform: --- checking type and type_name pointers for recipe draw-horizontal
9991 transform: --- checking type and type_name pointers for recipe delete-before-cursor
9991 transform: --- checking type and type_name pointers for recipe move-cursor-coordinates-left
9991 transform: --- checking type and type_name pointers for recipe previous-line-length
9991 transform: --- checking type and type_name pointers for recipe delete-at-cursor
9991 transform: --- checking type and type_name pointers for recipe move-cursor-coordinates-right
9991 transform: --- checking type and type_name pointers for recipe move-to-previous-line
9991 transform: --- checking type and type_name pointers for recipe move-to-next-line
9991 transform: --- checking type and type_name pointers for recipe move-to-start-of-line
9991 transform: --- checking type and type_name pointers for recipe move-to-end-of-line
9991 transform: --- checking type and type_name pointers for recipe delete-to-start-of-line
9991 transform: --- checking type and type_name pointers for recipe delete-to-end-of-line
9991 transform: --- checking type and type_name pointers for recipe before-start-of-next-line
9991 transform: --- checking type and type_name pointers for recipe before-previous-line
9991 transform: --- checking type and type_name pointers for recipe page-down
9991 transform: --- checking type and type_name pointers for recipe page-up
9991 transform: --- checking type and type_name pointers for recipe new-programming-environment
9991 transform: --- checking type and type_name pointers for recipe event-loop
9991 transform: --- checking type and type_name pointers for recipe resize
9991 transform: --- checking type and type_name pointers for recipe render-all
9991 transform: --- checking type and type_name pointers for recipe render-recipes
9991 transform: --- checking type and type_name pointers for recipe render-sandbox-side
9991 transform: --- checking type and type_name pointers for recipe update-cursor
9991 transform: --- checking type and type_name pointers for recipe render-string
9991 transform: --- checking type and type_name pointers for recipe render-code-string
9991 transform: --- checking type and type_name pointers for recipe maximize
9991 transform: --- checking type and type_name pointers for recipe draw-vertical
9991 transform: --- checking type and type_name pointers for recipe run-sandboxes
9991 transform: --- checking type and type_name pointers for recipe update-recipes
9991 transform: --- checking type and type_name pointers for recipe update-sandbox
9991 transform: --- checking type and type_name pointers for recipe update-status
9991 transform: --- checking type and type_name pointers for recipe save-sandboxes
9991 transform: --- checking type and type_name pointers for recipe render-sandboxes
9991 transform: --- checking type and type_name pointers for recipe restore-sandboxes
9991 transform: --- checking type and type_name pointers for recipe render-screen
9991 transform: --- checking type and type_name pointers for recipe editor-contents
9991 transform: --- checking type and type_name pointers for recipe empty-editor?
9991 transform: --- checking type and type_name pointers for recipe extract-sandbox
9991 transform: --- checking type and type_name pointers for recipe delete-sandbox
9991 transform: --- checking type and type_name pointers for recipe find-click-in-sandbox-output
9991 transform: --- checking type and type_name pointers for recipe toggle-expected-response
9991 transform: --- checking type and type_name pointers for recipe find-click-in-sandbox-code
9991 transform: --- checking type and type_name pointers for recipe add-operation
9991 transform: --- checking type and type_name pointers for recipe first_3
9991 transform: --- checking type and type_name pointers for recipe rest_3
9991 transform: --- checking type and type_name pointers for recipe push_3
9991 transform: --- checking type and type_name pointers for recipe scenario-replace-all-characters
9991 transform: --- checking type and type_name pointers for recipe run1001
9998 trace: run: incrementing callstack depth to 2
 103 run: 1:address:array:character/raw <- new [banana]
9999 mem: storing 1000 in location 1
 103 run: 1:address:array:character/raw <- string-replace 1:address:array:character/raw, 97/a, 122/z
9999 mem: location 1 is 1000
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: new alloc: 1007
 104 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1000 in location 1009
 104 run: oldc:character <- next-ingredient 
9999 mem: storing 97 in location 1010
 104 run: newc:character <- next-ingredient 
9999 mem: storing 122 in location 1011
 104 run: from:number, _ <- next-ingredient 
9999 mem: storing 0 in location 1012
 104 run: len:number <- length *s
9999 mem: location 1009 is 1000
9999 mem: storing 6 in location 1013
 104 run: i:number <- find-next s, oldc, from
9999 mem: location 1009 is 1000
9999 mem: location 1010 is 97
9999 mem: location 1012 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: new alloc: 1017
 105 run: text:address:array:character <- next-ingredient 
9999 mem: storing 1000 in location 1019
 105 run: pattern:character <- next-ingredient 
9999 mem: storing 97 in location 1020
 105 run: idx:number <- next-ingredient 
9999 mem: storing 0 in location 1021
 105 run: len:number <- length *text
9999 mem: location 1019 is 1000
9999 mem: storing 6 in location 1022
 105 run: eof?:boolean <- greater-or-equal idx, len
9999 mem: location 1021 is 0
9999 mem: location 1022 is 6
9999 mem: storing 0 in location 1023
 105 run: jump-if eof?, 
9999 mem: location 1023 is 0
9998 run: jump-if fell through
 105 run: curr:character <- index *text, idx
9999 mem: location 1019 is 1000
9999 mem: location 1021 is 0
9998 run: address to copy is 1001
9998 run: its type is character
9999 mem: location 1001 is 98
9999 mem: storing 98 in location 1024
 105 run: found?:boolean <- equal curr, pattern
9999 mem: location 1024 is 98
9999 mem: location 1020 is 97
9999 mem: storing 0 in location 1025
 105 run: jump-if found?, 
9999 mem: location 1025 is 0
9998 run: jump-if fell through
 105 run: idx <- add idx, 1
9999 mem: location 1021 is 0
9999 mem: storing 1 in location 1021
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: eof?:boolean <- greater-or-equal idx, len
9999 mem: location 1021 is 1
9999 mem: location 1022 is 6
9999 mem: storing 0 in location 1023
 105 run: jump-if eof?, 
9999 mem: location 1023 is 0
9998 run: jump-if fell through
 105 run: curr:character <- index *text, idx
9999 mem: location 1019 is 1000
9999 mem: location 1021 is 1
9998 run: address to copy is 1002
9998 run: its type is character
9999 mem: location 1002 is 97
9999 mem: storing 97 in location 1024
 105 run: found?:boolean <- equal curr, pattern
9999 mem: location 1024 is 97
9999 mem: location 1020 is 97
9999 mem: storing 1 in location 1025
 105 run: jump-if found?, 
9999 mem: location 1025 is 1
9998 run: jumping to instruction 13
 105 run: reply idx
9999 mem: location 1021 is 1
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1
9999 mem: storing 1 in location 1014
 104 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1014 is 1
9999 mem: location 1013 is 6
9999 mem: storing 0 in location 1015
 104 run: jump-unless done?, 1:offset
9999 mem: location 1015 is 0
9998 run: jumping to instruction 10
 104 run: dest:address:character <- index-address *s, i
9999 mem: location 1009 is 1000
9999 mem: location 1014 is 1
9999 mem: storing 1002 in location 1016
 104 run: *dest <- copy newc
9999 mem: location 1011 is 122
9999 mem: location 1016 is 1002
9999 mem: storing 122 in location 1002
 104 run: i <- add i, 1
9999 mem: location 1014 is 1
9999 mem: storing 2 in location 1014
 104 run: s <- string-replace s, oldc, newc, i
9999 mem: location 1009 is 1000
9999 mem: location 1010 is 97
9999 mem: location 1011 is 122
9999 mem: location 1014 is 2
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: new alloc: 1026
 105 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1000 in location 1028
 105 run: oldc:character <- next-ingredient 
9999 mem: storing 97 in location 1029
 105 run: newc:character <- next-ingredient 
9999 mem: storing 122 in location 1030
 105 run: from:number, _ <- next-ingredient 
9999 mem: storing 2 in location 1031
 105 run: len:number <- length *s
9999 mem: location 1028 is 1000
9999 mem: storing 6 in location 1032
 105 run: i:number <- find-next s, oldc, from
9999 mem: location 1028 is 1000
9999 mem: location 1029 is 97
9999 mem: location 1031 is 2
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
 106 run: text:address:array:character <- next-ingredient 
9999 mem: storing 1000 in location 1019
 106 run: pattern:character <- next-ingredient 
9999 mem: storing 97 in location 1020
 106 run: idx:number <- next-ingredient 
9999 mem: storing 2 in location 1021
 106 run: len:number <- length *text
9999 mem: location 1019 is 1000
9999 mem: storing 6 in location 1022
 106 run: eof?:boolean <- greater-or-equal idx, len
9999 mem: location 1021 is 2
9999 mem: location 1022 is 6
9999 mem: storing 0 in location 1023
 106 run: jump-if eof?, 
9999 mem: location 1023 is 0
9998 run: jump-if fell through
 106 run: curr:character <- index *text, idx
9999 mem: location 1019 is 1000
9999 mem: location 1021 is 2
9998 run: address to copy is 1003
9998 run: its type is character
9999 mem: location 1003 is 110
9999 mem: storing 110 in location 1024
 106 run: found?:boolean <- equal curr, pattern
9999 mem: location 1024 is 110
9999 mem: location 1020 is 97
9999 mem: storing 0 in location 1025
 106 run: jump-if found?, 
9999 mem: location 1025 is 0
9998 run: jump-if fell through
 106 run: idx <- add idx, 1
9999 mem: location 1021 is 2
9999 mem: storing 3 in location 1021
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: eof?:boolean <- greater-or-equal idx, len
9999 mem: location 1021 is 3
9999 mem: location 1022 is 6
9999 mem: storing 0 in location 1023
 106 run: jump-if eof?, 
9999 mem: location 1023 is 0
9998 run: jump-if fell through
 106 run: curr:character <- index *text, idx
9999 mem: location 1019 is 1000
9999 mem: location 1021 is 3
9998 run: address to copy is 1004
9998 run: its type is character
9999 mem: location 1004 is 97
9999 mem: storing 97 in location 1024
 106 run: found?:boolean <- equal curr, pattern
9999 mem: location 1024 is 97
9999 mem: location 1020 is 97
9999 mem: storing 1 in location 1025
 106 run: jump-if found?, 
9999 mem: location 1025 is 1
9998 run: jumping to instruction 13
 106 run: reply idx
9999 mem: location 1021 is 3
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 3
9999 mem: storing 3 in location 1033
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1033 is 3
9999 mem: location 1032 is 6
9999 mem: storing 0 in location 1034
 105 run: jump-unless done?, 1:offset
9999 mem: location 1034 is 0
9998 run: jumping to instruction 10
 105 run: dest:address:character <- index-address *s, i
9999 mem: location 1028 is 1000
9999 mem: location 1033 is 3
9999 mem: storing 1004 in location 1035
 105 run: *dest <- copy newc
9999 mem: location 1030 is 122
9999 mem: location 1035 is 1004
9999 mem: storing 122 in location 1004
 105 run: i <- add i, 1
9999 mem: location 1033 is 3
9999 mem: storing 4 in location 1033
 105 run: s <- string-replace s, oldc, newc, i
9999 mem: location 1028 is 1000
9999 mem: location 1029 is 97
9999 mem: location 1030 is 122
9999 mem: location 1033 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: new alloc: 1036
 106 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1000 in location 1038
 106 run: oldc:character <- next-ingredient 
9999 mem: storing 97 in location 1039
 106 run: newc:character <- next-ingredient 
9999 mem: storing 122 in location 1040
 106 run: from:number, _ <- next-ingredient 
9999 mem: storing 4 in location 1041
 106 run: len:number <- length *s
9999 mem: location 1038 is 1000
9999 mem: storing 6 in location 1042
 106 run: i:number <- find-next s, oldc, from
9999 mem: location 1038 is 1000
9999 mem: location 1039 is 97
9999 mem: location 1041 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
 107 run: text:address:array:character <- next-ingredient 
9999 mem: storing 1000 in location 1019
 107 run: pattern:character <- next-ingredient 
9999 mem: storing 97 in location 1020
 107 run: idx:number <- next-ingredient 
9999 mem: storing 4 in location 1021
 107 run: len:number <- length *text
9999 mem: location 1019 is 1000
9999 mem: storing 6 in location 1022
 107 run: eof?:boolean <- greater-or-equal idx, len
9999 mem: location 1021 is 4
9999 mem: location 1022 is 6
9999 mem: storing 0 in location 1023
 107 run: jump-if eof?, 
9999 mem: location 1023 is 0
9998 run: jump-if fell through
 107 run: curr:character <- index *text, idx
9999 mem: location 1019 is 1000
9999 mem: location 1021 is 4
9998 run: address to copy is 1005
9998 run: its type is character
9999 mem: location 1005 is 110
9999 mem: storing 110 in location 1024
 107 run: found?:boolean <- equal curr, pattern
9999 mem: location 1024 is 110
9999 mem: location 1020 is 97
9999 mem: storing 0 in location 1025
 107 run: jump-if found?, 
9999 mem: location 1025 is 0
9998 run: jump-if fell through
 107 run: idx <- add idx, 1
9999 mem: location 1021 is 4
9999 mem: storing 5 in location 1021
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: eof?:boolean <- greater-or-equal idx, len
9999 mem: location 1021 is 5
9999 mem: location 1022 is 6
9999 mem: storing 0 in location 1023
 107 run: jump-if eof?, 
9999 mem: location 1023 is 0
9998 run: jump-if fell through
 107 run: curr:character <- index *text, idx
9999 mem: location 1019 is 1000
9999 mem: location 1021 is 5
9998 run: address to copy is 1006
9998 run: its type is character
9999 mem: location 1006 is 97
9999 mem: storing 97 in location 1024
 107 run: found?:boolean <- equal curr, pattern
9999 mem: location 1024 is 97
9999 mem: location 1020 is 97
9999 mem: storing 1 in location 1025
 107 run: jump-if found?, 
9999 mem: location 1025 is 1
9998 run: jumping to instruction 13
 107 run: reply idx
9999 mem: location 1021 is 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1043
 106 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1043 is 5
9999 mem: location 1042 is 6
9999 mem: storing 0 in location 1044
 106 run: jump-unless done?, 1:offset
9999 mem: location 1044 is 0
9998 run: jumping to instruction 10
 106 run: dest:address:character <- index-address *s, i
9999 mem: location 1038 is 1000
9999 mem: location 1043 is 5
9999 mem: storing 1006 in location 1045
 106 run: *dest <- copy newc
9999 mem: location 1040 is 122
9999 mem: location 1045 is 1006
9999 mem: storing 122 in location 1006
 106 run: i <- add i, 1
9999 mem: location 1043 is 5
9999 mem: storing 6 in location 1043
 106 run: s <- string-replace s, oldc, newc, i
9999 mem: location 1038 is 1000
9999 mem: location 1039 is 97
9999 mem: location 1040 is 122
9999 mem: location 1043 is 6
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: new alloc: 1046
 107 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1000 in location 1048
 107 run: oldc:character <- next-ingredient 
9999 mem: storing 97 in location 1049
 107 run: newc:character <- next-ingredient 
9999 mem: storing 122 in location 1050
 107 run: from:number, _ <- next-ingredient 
9999 mem: storing 6 in location 1051
 107 run: len:number <- length *s
9999 mem: location 1048 is 1000
9999 mem: storing 6 in location 1052
 107 run: i:number <- find-next s, oldc, from
9999 mem: location 1048 is 1000
9999 mem: location 1049 is 97
9999 mem: location 1051 is 6
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
 108 run: text:address:array:character <- next-ingredient 
9999 mem: storing 1000 in location 1019
 108 run: pattern:character <- next-ingredient 
9999 mem: storing 97 in location 1020
 108 run: idx:number <- next-ingredient 
9999 mem: storing 6 in location 1021
 108 run: len:number <- length *text
9999 mem: location 1019 is 1000
9999 mem: storing 6 in location 1022
 108 run: eof?:boolean <- greater-or-equal idx, len
9999 mem: location 1021 is 6
9999 mem: location 1022 is 6
9999 mem: storing 1 in location 1023
 108 run: jump-if eof?, 
9999 mem: location 1023 is 1
9998 run: jumping to instruction 13
 108 run: reply idx
9999 mem: location 1021 is 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 6
9999 mem: storing 6 in location 1053
 107 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1053 is 6
9999 mem: location 1052 is 6
9999 mem: storing 1 in location 1054
 107 run: jump-unless done?, 1:offset
9999 mem: location 1054 is 1
9998 run: jump-unless fell through
 107 run: reply s/same-as-ingredient:0
9999 mem: location 1048 is 1000
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1038
 106 run: reply s/same-as-ingredient:0
9999 mem: location 1038 is 1000
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1028
 105 run: reply s/same-as-ingredient:0
9999 mem: location 1028 is 1000
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1009
 104 run: reply s/same-as-ingredient:0
9999 mem: location 1009 is 1000
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1
 103 run: 2:array:character/raw <- copy *1:address:array:character/raw
9999 mem: location 1 is 1000
9999 mem: location 1000 is 6
9999 mem: location 1001 is 98
9999 mem: location 1002 is 122
9999 mem: location 1003 is 110
9999 mem: location 1004 is 122
9999 mem: location 1005 is 110
9999 mem: location 1006 is 122
9999 mem: storing 6 in location 2
9999 mem: storing 98 in location 3
9999 mem: storing 122 in location 4
9999 mem: storing 110 in location 5
9999 mem: storing 122 in location 6
9999 mem: storing 110 in location 7
9999 mem: storing 122 in location 8
9999 trace: fall-through: exiting run1001; decrementing callstack depth from 2
 102 run: memory-should-contain [
    2:string <- [bznznz]
  ]
9999 run: checking string length at 2
9999 run: checking location 3
9999 run: checking location 4
9999 run: checking location 5
9999 run: checking location 6
9999 run: checking location 7
9999 run: checking location 8
9999 trace: fall-through: exiting scenario-replace-all-characters; decrementing callstack depth from 1
