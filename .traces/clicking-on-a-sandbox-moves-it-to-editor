9999 parse: instruction: trace-until
9999 parse:   ingredient: {name: "100", properties: ["100": "literal", "app": ]}
9999 parse: instruction: assume-screen
9999 parse:   ingredient: {name: "40", properties: ["40": "literal", "width": ]}
9999 parse:   ingredient: {name: "10", properties: ["10": "literal", "height": ]}
9999 parse: instruction: new
9999 parse:   ingredient: {name: " \nrecipe foo [\n  add 2, 2\n]", properties: [_: "literal-string"]}
9999 parse:   product: {name: "1", properties: ["1": "address":"array":"character"]}
9999 parse: instruction: new
9999 parse:   ingredient: {name: "foo", properties: [_: "literal-string"]}
9999 parse:   product: {name: "2", properties: ["2": "address":"array":"character"]}
9999 parse: instruction: assume-console
9999 parse:   ingredient: {name: "\n    press F4\n  ", properties: [_: "literal-string"]}
9999 parse: instruction: new-programming-environment
9999 parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
9999 parse:   ingredient: {name: "1", properties: ["1": "address":"array":"character"]}
9999 parse:   ingredient: {name: "2", properties: ["2": "address":"array":"character"]}
9999 parse:   product: {name: "3", properties: ["3": "address":"programming-environment-data"]}
9999 parse: instruction: event-loop
9999 parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
9999 parse:   ingredient: {name: "console", properties: ["console": "address"]}
9999 parse:   ingredient: {name: "3", properties: ["3": "address":"programming-environment-data"]}
9999 parse: instruction: screen-should-contain
9999 parse:   ingredient: {name: "\n    .                     run (F4)           .\n    .                    ┊                   .\n    .recipe foo [        ┊━━━━━━━━━━━━━━━━━━━.\n    .  add 2, 2          ┊                  x.\n    .]                   ┊foo                .\n    .┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┊4                  .\n    .                    ┊━━━━━━━━━━━━━━━━━━━.\n    .                    ┊                   .\n  ", properties: [_: "literal-string"]}
9999 parse: instruction: assume-console
9999 parse:   ingredient: {name: "\n    left-click 3, 30\n  ", properties: [_: "literal-string"]}
9999 parse: instruction: run
9999 parse:   ingredient: {name: "\n    event-loop screen:address, console:address, 3:address:programming-environment-data\n  ", properties: [_: "literal-string"]}
9999 parse: instruction: screen-should-contain
9999 parse:   ingredient: {name: "\n    .                     run (F4)           .\n    .                    ┊foo                .\n    .recipe foo [        ┊━━━━━━━━━━━━━━━━━━━.\n    .  add 2, 2          ┊                   .\n    .]                   ┊                   .\n    .┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┊                   .\n    .                    ┊                   .\n    .                    ┊                   .\n  ", properties: [_: "literal-string"]}
9999 parse: instruction: assume-console
9999 parse:   ingredient: {name: "\n    type [0]\n  ", properties: [_: "literal-string"]}
9999 parse: instruction: run
9999 parse:   ingredient: {name: "\n    event-loop screen:address, console:address, 3:address:programming-environment-data\n  ", properties: [_: "literal-string"]}
9999 parse: instruction: screen-should-contain
9999 parse:   ingredient: {name: "\n    .                     run (F4)           .\n    .                    ┊0foo               .\n    .recipe foo [        ┊━━━━━━━━━━━━━━━━━━━.\n    .  add 2, 2          ┊                   .\n    .]                   ┊                   .\n    .┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┊                   .\n    .                    ┊                   .\n    .                    ┊                   .\n  ", properties: [_: "literal-string"]}
9999 after-brace: recipe scenario-clicking-on-a-sandbox-moves-it-to-editor
9999 after-brace: trace-until ...
9999 after-brace: new-fake-screen ...
9999 after-brace: new ...
9999 after-brace: new ...
9999 after-brace: assume-console ...
9999 after-brace: new-programming-environment ...
9999 after-brace: event-loop ...
9999 after-brace: screen-should-contain ...
9999 after-brace: assume-console ...
9999 after-brace: run ...
9999 after-brace: screen-should-contain ...
9999 after-brace: assume-console ...
9999 after-brace: run ...
9999 after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
9999 schedule: scenario-clicking-on-a-sandbox-moves-it-to-editor
 101 run: trace-until 100/app
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 114 
  90 print-character: 117 
  90 print-character: 110 
  90 print-character: 32 
  90 print-character: 40 
  90 print-character: 70 
  90 print-character: 52 
  90 print-character: 41 
  90 print-character: 32 
  90 print-character: 9482 
  90 print-character: 9482 
  90 print-character: 9482 
  90 print-character: 9482 
  90 print-character: 9482 
  90 print-character: 9482 
  90 print-character: 9482 
  90 print-character: 9482 
  90 print-character: 9482 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 114 
  90 print-character: 101 
  90 print-character: 99 
  90 print-character: 105 
  90 print-character: 112 
  90 print-character: 101 
  90 print-character: 32 
  90 print-character: 102 
  90 print-character: 111 
  90 print-character: 111 
  90 print-character: 32 
  90 print-character: 91 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 97 
  90 print-character: 100 
  90 print-character: 100 
  90 print-character: 32 
  90 print-character: 50 
  90 print-character: 44 
  90 print-character: 32 
  90 print-character: 50 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 93 
  90 print-character: 102 
  90 print-character: 111 
  90 print-character: 111 
  10 app: next-event 
  90 print-character: 114 
  90 print-character: 117 
  90 print-character: 110 
  90 print-character: 110 
  90 print-character: 105 
  90 print-character: 110 
  90 print-character: 103 
  90 print-character: 46 
  90 print-character: 46 
  90 print-character: 46 
  90 print-character: 32 
  90 print-character: 32 
 100 run: screen <- render-all screen, env
  10 app: render all 
  11 app: render top menu 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 114 
  90 print-character: 117 
  90 print-character: 110 
  90 print-character: 32 
  90 print-character: 40 
  90 print-character: 70 
  90 print-character: 52 
  90 print-character: 41 
  90 print-character: 32 
  11 app: render divider 
  90 print-character: 9482 
  90 print-character: 9482 
  90 print-character: 9482 
  90 print-character: 9482 
  90 print-character: 9482 
  90 print-character: 9482 
  90 print-character: 9482 
  90 print-character: 9482 
  90 print-character: 9482 
  11 app: render recipes 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 114 
  90 print-character: 101 
  90 print-character: 99 
  90 print-character: 105 
  90 print-character: 112 
  90 print-character: 101 
  90 print-character: 32 
  90 print-character: 102 
  90 print-character: 111 
  90 print-character: 111 
  90 print-character: 32 
  90 print-character: 91 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 97 
  90 print-character: 100 
  90 print-character: 100 
  90 print-character: 32 
  90 print-character: 50 
  90 print-character: 44 
  90 print-character: 32 
  90 print-character: 50 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 93 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 9480 
  90 print-character: 9480 
  90 print-character: 9480 
  90 print-character: 9480 
  90 print-character: 9480 
  90 print-character: 9480 
  90 print-character: 9480 
  90 print-character: 9480 
  90 print-character: 9480 
  90 print-character: 9480 
  90 print-character: 9480 
  90 print-character: 9480 
  90 print-character: 9480 
  90 print-character: 9480 
  90 print-character: 9480 
  90 print-character: 9480 
  90 print-character: 9480 
  90 print-character: 9480 
  90 print-character: 9480 
  90 print-character: 9480 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  11 app: render sandbox side 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 120 
  90 print-character: 102 
  90 print-character: 111 
  90 print-character: 111 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 52 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  11 app: render status 
 100 run: break-if error?, 
 100 run: status:address:array:character <- new [            ]
 100 run: screen <- update-status screen, status, 245/grey
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
 100 run: screen <- update-cursor screen, recipes, current-sandbox, *sandbox-in-focus?
 100 run: loop +next-event:label
 100 run: e:event, console, found?:boolean, quit?:boolean <- read-event console
 100 run: loop-unless found?, 
 100 run: break-if quit?, 
  99 run: screen-should-contain [
    .                     run (F4)           .
    .                    ┊                   .
    .recipe foo [        ┊━━━━━━━━━━━━━━━━━━━.
    .  add 2, 2          ┊                  x.
    .]                   ┊foo                .
    .┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┊4                  .
    .                    ┊━━━━━━━━━━━━━━━━━━━.
    .                    ┊                   .
  ]
  99 run: assume-console [
    left-click 3, 30
  ]
  99 run: run [
    event-loop screen:address, console:address, 3:address:programming-environment-data
  ]
  99 run: event-loop screen:address, console:address, 3:address:programming-environment-data
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
 100 run: screen:address <- next-ingredient 
 100 run: console:address <- next-ingredient 
 100 run: env:address:programming-environment-data <- next-ingredient 
 100 run: recipes:address:editor-data <- get *env, recipes:offset
 100 run: current-sandbox:address:editor-data <- get *env, current-sandbox:offset
 100 run: sandbox-in-focus?:address:boolean <- get-address *env, sandbox-in-focus?:offset
 100 run: render-all-on-no-more-events?:boolean <- copy 0/false
 100 run: e:event, console, found?:boolean, quit?:boolean <- read-event console
 100 run: loop-unless found?, 
 100 run: break-if quit?, 
 100 run: trace 10, [app], [next-event]
  10 app: next-event 
 100 run: maximized?:address:boolean <- get-address *env, maximized?:offset
 100 run: break-unless *maximized?, 
 100 run: k:address:number <- maybe-convert e:event, keycode:variant
 100 run: break-unless k, 
 100 run: c:address:character <- maybe-convert e:event, text:variant
 100 run: break-unless c, 
 100 run: t:address:touch-event <- maybe-convert e:event, touch:variant
 100 run: break-unless t, 
 100 run: touch-type:number <- get *t, type:offset
 100 run: is-left-click?:boolean <- equal touch-type, 65513/mouse-left
 100 run: loop-unless is-left-click?, +next-event:label
 100 run: sandbox-left-margin:number <- get *current-sandbox, left:offset
 100 run: click-column:number <- get *t, column:offset
 100 run: on-sandbox-side?:boolean <- greater-or-equal click-column, sandbox-left-margin
 100 run: break-unless on-sandbox-side?, 
 100 run: first-sandbox:address:sandbox-data <- get *env, sandbox:offset
 100 run: break-unless first-sandbox, 
 100 run: first-sandbox-begins:number <- get *first-sandbox, starting-row-on-screen:offset
 100 run: click-row:number <- get *t, row:offset
 100 run: below-sandbox-editor?:boolean <- greater-or-equal click-row, first-sandbox-begins
 100 run: break-unless below-sandbox-editor?, 
 100 run: sandbox:address:sandbox-data <- find-click-in-sandbox-code env, click-row
 100 run: break-unless sandbox, 
 100 run: sandbox-left-margin:number <- get *current-sandbox, left:offset
 100 run: click-column:number <- get *t, column:offset
 100 run: on-sandbox-side?:boolean <- greater-or-equal click-column, sandbox-left-margin
 100 run: break-unless on-sandbox-side?, 
 100 run: first-sandbox:address:sandbox-data <- get *env, sandbox:offset
 100 run: break-unless first-sandbox, 
 100 run: first-sandbox-begins:number <- get *first-sandbox, starting-row-on-screen:offset
 100 run: click-row:number <- get *t, row:offset
 100 run: below-sandbox-editor?:boolean <- greater-or-equal click-row, first-sandbox-begins
 100 run: break-unless below-sandbox-editor?, 
 100 run: sandbox:address:sandbox-data <- find-click-in-sandbox-output env, click-row
 100 run: break-unless sandbox, 
 100 run: was-delete?:boolean <- delete-sandbox *t, env
 100 run: break-unless was-delete?, 
 100 run: sandbox-left-margin:number <- get *current-sandbox, left:offset
 100 run: click-column:number <- get *t, column:offset
 100 run: on-sandbox-side?:boolean <- greater-or-equal click-column, sandbox-left-margin
 100 run: break-unless on-sandbox-side?, 
 100 run: first-sandbox:address:sandbox-data <- get *env, sandbox:offset
 100 run: break-unless first-sandbox, 
 100 run: first-sandbox-begins:number <- get *first-sandbox, starting-row-on-screen:offset
 100 run: click-row:number <- get *t, row:offset
 100 run: below-sandbox-editor?:boolean <- greater-or-equal click-row, first-sandbox-begins
 100 run: break-unless below-sandbox-editor?, 
 100 run: empty-sandbox-editor?:boolean <- empty-editor? current-sandbox
 100 run: break-unless empty-sandbox-editor?, 
 100 run: sandbox:address:sandbox-data <- extract-sandbox env, click-row
 100 run: text:address:array:character <- get *sandbox, data:offset
 100 run: current-sandbox <- insert-text current-sandbox, text
 100 run: hide-screen screen
 100 run: screen <- render-sandbox-side screen, env
  11 app: render sandbox side 
  90 print-character: 102 
  90 print-character: 111 
  90 print-character: 111 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 9473 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
  90 print-character: 32 
 100 run: screen <- update-cursor screen, recipes, current-sandbox, *sandbox-in-focus?
 100 run: show-screen screen
 100 run: loop +next-event:label
 100 run: e:event, console, found?:boolean, quit?:boolean <- read-event console
 100 run: loop-unless found?, 
 100 run: break-if quit?, 
  98 run: screen-should-contain [
    .                     run (F4)           .
    .                    ┊foo                .
    .recipe foo [        ┊━━━━━━━━━━━━━━━━━━━.
    .  add 2, 2          ┊                   .
    .]                   ┊                   .
    .┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┊                   .
    .                    ┊                   .
    .                    ┊                   .
  ]
  98 run: assume-console [
    type [0]
  ]
  98 run: run [
    event-loop screen:address, console:address, 3:address:programming-environment-data
  ]
  98 run: event-loop screen:address, console:address, 3:address:programming-environment-data
  99 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
  99 run: screen:address <- next-ingredient 
  99 run: console:address <- next-ingredient 
  99 run: env:address:programming-environment-data <- next-ingredient 
  99 run: recipes:address:editor-data <- get *env, recipes:offset
  99 run: current-sandbox:address:editor-data <- get *env, current-sandbox:offset
  99 run: sandbox-in-focus?:address:boolean <- get-address *env, sandbox-in-focus?:offset
  99 run: render-all-on-no-more-events?:boolean <- copy 0/false
  99 run: e:event, console, found?:boolean, quit?:boolean <- read-event console
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
 100 run: x:address:console <- next-ingredient 
 100 run: break-unless x, 
 100 run: idx:address:number <- get-address *x, index:offset
 100 run: buf:address:array:event <- get *x, data:offset
 100 run: max:number <- length *buf
 100 run: done?:boolean <- greater-or-equal *idx, max
 100 run: break-unless done?, 
 100 run: result:event <- index *buf, *idx
 100 run: *idx <- add *idx, 1
 100 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
  99 run: loop-unless found?, 
  99 run: break-if quit?, 
  99 run: trace 10, [app], [next-event]
  10 app: next-event 
  99 run: maximized?:address:boolean <- get-address *env, maximized?:offset
  99 run: break-unless *maximized?, 
  99 run: k:address:number <- maybe-convert e:event, keycode:variant
  99 run: break-unless k, 
  99 run: c:address:character <- maybe-convert e:event, text:variant
  99 run: break-unless c, 
  99 run: maximize?:boolean <- equal *c, 24/ctrl-x
  99 run: break-unless maximize?, 
  99 run: switch-side?:boolean <- equal *c, 14/ctrl-n
  99 run: break-unless switch-side?, 
  99 run: redraw-screen?:boolean <- equal *c, 12/ctrl-l
  99 run: break-unless redraw-screen?, 
  99 run: t:address:touch-event <- maybe-convert e:event, touch:variant
  99 run: break-unless t, 
  99 run: r:address:resize-event <- maybe-convert e:event, resize:variant
  99 run: break-unless r, 
  99 run: hide-screen screen
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
 100 run: screen:address <- next-ingredient 
 100 run: break-unless screen, 
 100 run: reply screen
  99 run: break-if *sandbox-in-focus?, 
  99 run: break-unless *sandbox-in-focus?, 
  99 run: screen, current-sandbox, render?:boolean <- handle-keyboard-event screen, current-sandbox, e:event
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
 100 run: screen:address <- next-ingredient 
 100 run: editor:address:editor-data <- next-ingredient 
 100 run: e:event <- next-ingredient 
 100 run: jump-if editor, 1:offset
 100 run: screen-width:number <- screen-width screen
 100 run: screen-height:number <- screen-height screen
 100 run: left:number <- get *editor, left:offset
 100 run: right:number <- get *editor, right:offset
 100 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
 100 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
 100 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
 100 run: save-row:number <- copy *cursor-row
 100 run: save-column:number <- copy *cursor-column
 100 run: c:address:character <- maybe-convert e, text:variant
 100 run: break-unless c, 
 100 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 100 run: redo?:boolean <- equal *c, 25/ctrl-y
 100 run: break-unless redo?, 
 100 run: undo?:boolean <- equal *c, 26/ctrl-z
 100 run: break-unless undo?, 
 100 run: page-up?:boolean <- equal *c, 2/ctrl-b
 100 run: break-unless page-up?, 
 100 run: page-down?:boolean <- equal *c, 6/ctrl-f
 100 run: break-unless page-down?, 
 100 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
 100 run: break-unless delete-to-end-of-line?, 
 100 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
 100 run: break-unless delete-to-start-of-line?, 
 100 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
 100 run: break-unless move-to-end-of-line?, 
 100 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
 100 run: break-unless move-to-start-of-line?, 
 100 run: delete-previous-character?:boolean <- equal *c, 8/backspace
 100 run: break-unless delete-previous-character?, 
 100 run: tab?:boolean <- equal *c, 9/tab
 100 run: break-unless tab?, 
 100 run: newline?:boolean <- equal *c, 10/newline
 100 run: break-unless newline?, 
 100 run: regular-character?:boolean <- greater-or-equal *c, 32/space
 100 run: jump-if regular-character?, 1:offset
 100 run: top-before:address:duplex-list <- get *editor, top-of-screen:offset
 100 run: cursor-before:address:duplex-list <- copy *before-cursor
 100 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
  90 print-character: 48 
  90 print-character: 102 
  90 print-character: 111 
  90 print-character: 111 
 100 run: top-after:address:duplex-list <- get *editor, top-of-screen:offset
 100 run: undo:address:address:list <- get-address *editor, undo:offset
 100 run: break-unless *undo, 
 100 run: insert-from:address:duplex-list <- next-duplex cursor-before
 100 run: insert-to:address:duplex-list <- next-duplex insert-from
 100 run: op:address:operation <- new operation:type
 100 run: *op <- merge 0/insert-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to, 1/coalesce
 100 run: editor <- add-operation editor, op
 100 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
  99 run: more-events?:boolean <- has-more-events? console
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
 100 run: console:address <- next-ingredient 
 100 run: break-unless console, 
 100 run: reply 0/false
  99 run: break-unless more-events?, 
  99 run: break-if more-events?, 
  99 run: break-unless render-all-on-no-more-events?, 
  99 run: break-unless render?, 
  99 run: screen <- update-cursor screen, recipes, current-sandbox, *sandbox-in-focus?
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
 100 run: screen:address <- next-ingredient 
 100 run: recipes:address:editor-data <- next-ingredient 
 100 run: current-sandbox:address:editor-data <- next-ingredient 
 100 run: sandbox-in-focus?:boolean <- next-ingredient 
 100 run: break-if sandbox-in-focus?, 
 100 run: break-unless sandbox-in-focus?, 
 100 run: cursor-row:number <- get *current-sandbox, cursor-row:offset
 100 run: cursor-column:number <- get *current-sandbox, cursor-column:offset
 100 run: screen <- move-cursor screen, cursor-row, cursor-column
 100 run: reply screen/same-as-ingredient:0
  99 run: show-screen screen
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
 100 run: screen:address <- next-ingredient 
 100 run: break-unless screen, 
 100 run: reply screen
  99 run: loop 
  99 run: e:event, console, found?:boolean, quit?:boolean <- read-event console
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
 100 run: x:address:console <- next-ingredient 
 100 run: break-unless x, 
 100 run: idx:address:number <- get-address *x, index:offset
 100 run: buf:address:array:event <- get *x, data:offset
 100 run: max:number <- length *buf
 100 run: done?:boolean <- greater-or-equal *idx, max
 100 run: break-unless done?, 
 100 run: dummy:address:event <- new event:type
 100 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
  99 run: loop-unless found?, 
  99 run: break-if quit?, 
  97 run: screen-should-contain [
    .                     run (F4)           .
    .                    ┊0foo               .
    .recipe foo [        ┊━━━━━━━━━━━━━━━━━━━.
    .  add 2, 2          ┊                   .
    .]                   ┊                   .
    .┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┊                   .
    .                    ┊                   .
    .                    ┊                   .
  ]
