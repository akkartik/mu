9991 parse: --- defining main
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"10": "literal"}
9993 parse:   product: {"1": "number"}
9992 load: after rewriting: 1:number <- copy 10
9993 parse: label: <label1>
9992 load: after rewriting: <label1>
9993 parse: label: <label1>
9992 load: after rewriting: <label1>
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"10": "literal"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- copy 10
9999 parse: recipe main has a header
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"12": "literal"}
9993 parse:   product: {"2": "number"}
9992 load: after rewriting: 2:number <- copy 12
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"12": "literal"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- copy 12
9990 transform: === transform_all()
9991 transform: --- resolve ambiguous calls for recipe main
9991 transform: --- deduce types for recipe main
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- transform names for recipe main
9991 transform: --- transform braces for recipe main
9991 transform: copy ...
9991 transform: copy ...
9991 transform: copy ...
9991 transform: copy ...
9991 transform: copy ...
9991 transform: copy ...
9991 transform: --- compute instruction operations for recipe main
9991 transform: --- perform checks for recipe main
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: main
 102 run: 1:number <- copy 10
9999 mem: storing 10 in location 1
 102 run: 2:number <- copy 12
9999 mem: storing 12 in location 2
 102 run: 3:number <- copy 12
9999 mem: storing 12 in location 3
 102 run: 2:number <- copy 12
9999 mem: storing 12 in location 2
 102 run: 3:number <- copy 12
9999 mem: storing 12 in location 3
 102 run: 4:number <- copy 10
9999 mem: storing 10 in location 4
9999 trace: fall-through: exiting main; decrementing callstack depth from 1
