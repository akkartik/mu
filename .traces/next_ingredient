parse: instruction: f
parse:   ingredient: {name: "2", value: 0, type: 0, properties: ["2": "literal"]}
parse: instruction: next-ingredient
parse:   product: {name: "12", value: 0, type: 1, properties: ["12": "number"]}
parse: instruction: add
parse:   ingredient: {name: "1", value: 0, type: 0, properties: ["1": "literal"]}
parse:   ingredient: {name: "12", value: 0, type: 1, properties: ["12": "number"]}
parse:   product: {name: "13", value: 0, type: 1, properties: ["13": "number"]}
after-brace: recipe main
after-brace: f ...
after-brace: recipe f
after-brace: next-ingredient ...
after-brace: add ...
new: routine allocated memory from 1000 to 101000
schedule: main
run: instruction main/0
run: f/1001 {name: "2", value: 2, type: 0, properties: ["2": "literal"]}
run: ingredient 0 is 2
run: instruction f/0
run: {name: "12", value: 12, type: 1, properties: ["12": "number"]} <- next-ingredient/34 
run: product 0 is 12
mem: storing 2 in location 12
run: instruction f/1
run: {name: "13", value: 13, type: 1, properties: ["13": "number"]} <- add/2 {name: "1", value: 1, type: 0, properties: ["1": "literal"]}, {name: "12", value: 12, type: 1, properties: ["12": "number"]}
run: ingredient 0 is 1
run: ingredient 1 is 12
mem: location 12 is 2
run: product 0 is 13
mem: storing 3 in location 13
