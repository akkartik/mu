schedule: main
run: -- nil
run: 1 main 0: ((1 string-address) <- new hello, _!)
run: 1000 => (1 string-address)
setm: (1 string-address) <= 1000
setm: size of (1 string-address) is 1
setm: (1 string-address): setting 1 to 1000
run: -- ((1 1000) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !))
run: 2 main 1: ((2 string-address) <- new abc)
run: 1010 => (2 string-address)
setm: (2 string-address) <= 1010
setm: size of (2 string-address) is 1
setm: (2 string-address): setting 2 to 1010
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c))
run: 3 main 2: ((3 string-address) <- interpolate (1 string-address) (2 string-address))
m: (1 string-address)
sizeof: (1 string-address)
m: (2 string-address)
sizeof: (2 string-address)
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c))
run: 4 interpolate 0: ((default-scope scope-address) <- new (scope literal) (60 literal))
sizeof: location
run: 1014 => (default-scope scope-address)
sizeof: (default-scope scope-address)
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60))
run: 5 interpolate 1: ((1 string-address) <- arg)
arg: nil 0 (1000 1010)
run: 1000 => (1 string-address)
setm: (1 string-address) <= 1000
setm: size of (1 string-address) is 1
setm: (1 string-address): setting 1015 to 1000
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000))
run: 6 interpolate 2: ((2 integer) <- len (1 string-address deref))
array-len: (1 string-address deref)
m: (1000 integer global)
sizeof: (1000 integer global)
run: 9 => (2 integer)
setm: (2 integer) <= 9
setm: size of (2 integer) is 1
setm: (2 integer): setting 1016 to 9
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9))
run: 7 interpolate 3: ((3 integer) <- copy (2 integer))
m: (2 integer)
sizeof: (2 integer)
run: 9 => (3 integer)
setm: (3 integer) <= 9
setm: size of (3 integer) is 1
setm: (3 integer): setting 1017 to 9
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 9))
run: 8 interpolate 4: ((4 string-address) (5 boolean) <- arg)
arg: nil 1 (1000 1010)
run: 1010 => (4 string-address)
setm: (4 string-address) <= 1010
setm: size of (4 string-address) is 1
setm: (4 string-address): setting 1018 to 1010
run: t => (5 boolean)
setm: (5 boolean) <= t
setm: size of (5 boolean) is 1
setm: (5 boolean): setting 1019 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 9) (1018 1010) (1019 t))
run: 9 interpolate 5: (jump-unless (5 boolean) (4 offset))
m: (5 boolean)
sizeof: (5 boolean)
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 9) (1018 1010) (1019 t))
run: 10 interpolate 6: ((6 integer) <- len (4 string-address deref))
array-len: (4 string-address deref)
m: (1010 integer global)
sizeof: (1010 integer global)
run: 3 => (6 integer)
setm: (6 integer) <= 3
setm: size of (6 integer) is 1
setm: (6 integer): setting 1020 to 3
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 9) (1018 1010) (1019 t) (1020 3))
run: 11 interpolate 7: ((3 integer) <- add (3 integer) (6 integer))
m: (3 integer)
sizeof: (3 integer)
m: (6 integer)
sizeof: (6 integer)
add: 9 3
m: (3 integer)
sizeof: (3 integer)
m: (6 integer)
sizeof: (6 integer)
run: 12 => (3 integer)
setm: (3 integer) <= 12
setm: size of (3 integer) is 1
setm: (3 integer): setting 1017 to 12
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 12) (1018 1010) (1019 t) (1020 3))
run: 12 interpolate 8: ((3 integer) <- sub (3 integer) (1 literal))
m: (3 integer)
sizeof: (3 integer)
run: 11 => (3 integer)
setm: (3 integer) <= 11
setm: size of (3 integer) is 1
setm: (3 integer): setting 1017 to 11
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3))
run: 13 interpolate 9: (jump (-6 offset))
jump: jumping to 4
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3))
run: 14 interpolate 4: ((4 string-address) (5 boolean) <- arg)
arg: nil 2 (1000 1010)
run: nil => (4 string-address)
setm: (4 string-address) <= nil
setm: size of (4 string-address) is 1
setm: (4 string-address): setting 1018 to nil
run: nil => (5 boolean)
setm: (5 boolean) <= nil
setm: size of (5 boolean) is 1
setm: (5 boolean): setting 1019 to nil
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1020 3))
run: 15 interpolate 5: (jump-unless (5 boolean) (4 offset))
m: (5 boolean)
sizeof: (5 boolean)
jump: checking that nil is not t
jump: jumping to 10
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1020 3))
run: 16 interpolate 10: (_ <- arg (0 literal))
arg: ((0 literal)) 0 (1000 1010)
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1020 3))
run: 17 interpolate 11: ((7 string-address) <- new (string literal) (3 integer))
m: (3 integer)
sizeof: (3 integer)
sizeof: byte
run: 1075 => (7 string-address)
setm: (7 string-address) <= 1075
setm: size of (7 string-address) is 1
setm: (7 string-address): setting 1021 to 1075
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1020 3) (1021 1075) (1075 11))
run: 18 interpolate 12: ((8 integer) <- copy (0 literal))
run: 0 => (8 integer)
setm: (8 integer) <= 0
setm: size of (8 integer) is 1
setm: (8 integer): setting 1022 to 0
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1020 3) (1021 1075) (1022 0) (1075 11))
run: 19 interpolate 13: ((9 integer) <- copy (0 literal))
run: 0 => (9 integer)
setm: (9 integer) <= 0
setm: size of (9 integer) is 1
setm: (9 integer): setting 1023 to 0
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1020 3) (1021 1075) (1022 0) (1023 0) (1075 11))
run: 20 interpolate 14: ((4 string-address) (5 boolean) <- arg)
arg: nil 1 (1000 1010)
run: 1010 => (4 string-address)
setm: (4 string-address) <= 1010
setm: size of (4 string-address) is 1
setm: (4 string-address): setting 1018 to 1010
run: t => (5 boolean)
setm: (5 boolean) <= t
setm: size of (5 boolean) is 1
setm: (5 boolean): setting 1019 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 0) (1023 0) (1075 11))
run: 21 interpolate 15: (jump-unless (5 boolean) (21 offset))
m: (5 boolean)
sizeof: (5 boolean)
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 0) (1023 0) (1075 11))
run: 22 interpolate 16: ((10 boolean) <- lt (9 integer) (2 integer))
m: (9 integer)
sizeof: (9 integer)
m: (2 integer)
sizeof: (2 integer)
run: t => (10 boolean)
setm: (10 boolean) <= t
setm: size of (10 boolean) is 1
setm: (10 boolean): setting 1024 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 0) (1023 0) (1024 t) (1075 11))
run: 23 interpolate 17: (jump-unless (10 boolean) (19 offset))
m: (10 boolean)
sizeof: (10 boolean)
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 0) (1023 0) (1024 t) (1075 11))
run: 24 interpolate 18: ((11 byte) <- index (1 string-address deref) (9 integer))
m: (9 integer)
sizeof: (9 integer)
array-len: (1000 string global)
m: (1000 integer global)
sizeof: (1000 integer global)
sizeof: byte
m: (1001 byte global)
sizeof: (1001 byte global)
run: h => (11 byte)
setm: (11 byte) <= h
setm: size of (11 byte) is 1
setm: (11 byte): setting 1025 to h
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 0) (1023 0) (1024 t) (1025 h) (1075 11))
run: 25 interpolate 19: ((12 boolean) <- eq (11 byte) (_ literal))
m: (11 byte)
sizeof: (11 byte)
run: nil => (12 boolean)
setm: (12 boolean) <= nil
setm: size of (12 boolean) is 1
setm: (12 boolean): setting 1026 to nil
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 0) (1023 0) (1024 t) (1025 h) (1075 11))
run: 26 interpolate 20: (jump-if (12 boolean) (5 offset))
m: (12 boolean)
sizeof: (12 boolean)
jump: checking that nil is t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 0) (1023 0) (1024 t) (1025 h) (1075 11))
run: 27 interpolate 21: ((13 byte-address) <- index-address (7 string-address deref) (8 integer))
m: (8 integer)
sizeof: (8 integer)
array-len: (1075 string global)
m: (1075 integer global)
sizeof: (1075 integer global)
sizeof: byte
run: 1076 => (13 byte-address)
setm: (13 byte-address) <= 1076
setm: size of (13 byte-address) is 1
setm: (13 byte-address): setting 1027 to 1076
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 0) (1023 0) (1024 t) (1025 h) (1027 1076) (1075 11))
run: 28 interpolate 22: ((13 byte-address deref) <- copy (11 byte))
m: (11 byte)
sizeof: (11 byte)
run: h => (13 byte-address deref)
setm: (13 byte-address deref) <= h
setm: size of (13 byte-address deref) is 1
setm: (13 byte-address deref): setting 1076 to h
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 0) (1023 0) (1024 t) (1025 h) (1027 1076) (1075 11) (1076 h))
run: 29 interpolate 23: ((9 integer) <- add (9 integer) (1 literal))
m: (9 integer)
sizeof: (9 integer)
add: 0 1
m: (9 integer)
sizeof: (9 integer)
run: 1 => (9 integer)
setm: (9 integer) <= 1
setm: size of (9 integer) is 1
setm: (9 integer): setting 1023 to 1
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 0) (1023 1) (1024 t) (1025 h) (1027 1076) (1075 11) (1076 h))
run: 30 interpolate 24: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sizeof: (8 integer)
add: 0 1
m: (8 integer)
sizeof: (8 integer)
run: 1 => (8 integer)
setm: (8 integer) <= 1
setm: size of (8 integer) is 1
setm: (8 integer): setting 1022 to 1
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 1) (1023 1) (1024 t) (1025 h) (1027 1076) (1075 11) (1076 h))
run: 31 interpolate 25: (jump (-10 offset))
jump: jumping to 16
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 1) (1023 1) (1024 t) (1025 h) (1027 1076) (1075 11) (1076 h))
run: 32 interpolate 16: ((10 boolean) <- lt (9 integer) (2 integer))
m: (9 integer)
sizeof: (9 integer)
m: (2 integer)
sizeof: (2 integer)
run: t => (10 boolean)
setm: (10 boolean) <= t
setm: size of (10 boolean) is 1
setm: (10 boolean): setting 1024 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 1) (1023 1) (1024 t) (1025 h) (1027 1076) (1075 11) (1076 h))
run: 33 interpolate 17: (jump-unless (10 boolean) (19 offset))
m: (10 boolean)
sizeof: (10 boolean)
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 1) (1023 1) (1024 t) (1025 h) (1027 1076) (1075 11) (1076 h))
run: 34 interpolate 18: ((11 byte) <- index (1 string-address deref) (9 integer))
m: (9 integer)
sizeof: (9 integer)
array-len: (1000 string global)
m: (1000 integer global)
sizeof: (1000 integer global)
sizeof: byte
m: (1002 byte global)
sizeof: (1002 byte global)
run: e => (11 byte)
setm: (11 byte) <= e
setm: size of (11 byte) is 1
setm: (11 byte): setting 1025 to e
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 1) (1023 1) (1024 t) (1025 e) (1027 1076) (1075 11) (1076 h))
run: 35 interpolate 19: ((12 boolean) <- eq (11 byte) (_ literal))
m: (11 byte)
sizeof: (11 byte)
run: nil => (12 boolean)
setm: (12 boolean) <= nil
setm: size of (12 boolean) is 1
setm: (12 boolean): setting 1026 to nil
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 1) (1023 1) (1024 t) (1025 e) (1027 1076) (1075 11) (1076 h))
run: 36 interpolate 20: (jump-if (12 boolean) (5 offset))
m: (12 boolean)
sizeof: (12 boolean)
jump: checking that nil is t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 1) (1023 1) (1024 t) (1025 e) (1027 1076) (1075 11) (1076 h))
run: 37 interpolate 21: ((13 byte-address) <- index-address (7 string-address deref) (8 integer))
m: (8 integer)
sizeof: (8 integer)
array-len: (1075 string global)
m: (1075 integer global)
sizeof: (1075 integer global)
sizeof: byte
run: 1077 => (13 byte-address)
setm: (13 byte-address) <= 1077
setm: size of (13 byte-address) is 1
setm: (13 byte-address): setting 1027 to 1077
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 1) (1023 1) (1024 t) (1025 e) (1027 1077) (1075 11) (1076 h))
run: 38 interpolate 22: ((13 byte-address deref) <- copy (11 byte))
m: (11 byte)
sizeof: (11 byte)
run: e => (13 byte-address deref)
setm: (13 byte-address deref) <= e
setm: size of (13 byte-address deref) is 1
setm: (13 byte-address deref): setting 1077 to e
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 1) (1023 1) (1024 t) (1025 e) (1027 1077) (1075 11) (1076 h) (1077 e))
run: 39 interpolate 23: ((9 integer) <- add (9 integer) (1 literal))
m: (9 integer)
sizeof: (9 integer)
add: 1 1
m: (9 integer)
sizeof: (9 integer)
run: 2 => (9 integer)
setm: (9 integer) <= 2
setm: size of (9 integer) is 1
setm: (9 integer): setting 1023 to 2
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 1) (1023 2) (1024 t) (1025 e) (1027 1077) (1075 11) (1076 h) (1077 e))
run: 40 interpolate 24: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sizeof: (8 integer)
add: 1 1
m: (8 integer)
sizeof: (8 integer)
run: 2 => (8 integer)
setm: (8 integer) <= 2
setm: size of (8 integer) is 1
setm: (8 integer): setting 1022 to 2
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 2) (1023 2) (1024 t) (1025 e) (1027 1077) (1075 11) (1076 h) (1077 e))
run: 41 interpolate 25: (jump (-10 offset))
jump: jumping to 16
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 2) (1023 2) (1024 t) (1025 e) (1027 1077) (1075 11) (1076 h) (1077 e))
run: 42 interpolate 16: ((10 boolean) <- lt (9 integer) (2 integer))
m: (9 integer)
sizeof: (9 integer)
m: (2 integer)
sizeof: (2 integer)
run: t => (10 boolean)
setm: (10 boolean) <= t
setm: size of (10 boolean) is 1
setm: (10 boolean): setting 1024 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 2) (1023 2) (1024 t) (1025 e) (1027 1077) (1075 11) (1076 h) (1077 e))
run: 43 interpolate 17: (jump-unless (10 boolean) (19 offset))
m: (10 boolean)
sizeof: (10 boolean)
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 2) (1023 2) (1024 t) (1025 e) (1027 1077) (1075 11) (1076 h) (1077 e))
run: 44 interpolate 18: ((11 byte) <- index (1 string-address deref) (9 integer))
m: (9 integer)
sizeof: (9 integer)
array-len: (1000 string global)
m: (1000 integer global)
sizeof: (1000 integer global)
sizeof: byte
m: (1003 byte global)
sizeof: (1003 byte global)
run: l => (11 byte)
setm: (11 byte) <= l
setm: size of (11 byte) is 1
setm: (11 byte): setting 1025 to l
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 2) (1023 2) (1024 t) (1025 l) (1027 1077) (1075 11) (1076 h) (1077 e))
run: 45 interpolate 19: ((12 boolean) <- eq (11 byte) (_ literal))
m: (11 byte)
sizeof: (11 byte)
run: nil => (12 boolean)
setm: (12 boolean) <= nil
setm: size of (12 boolean) is 1
setm: (12 boolean): setting 1026 to nil
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 2) (1023 2) (1024 t) (1025 l) (1027 1077) (1075 11) (1076 h) (1077 e))
run: 46 interpolate 20: (jump-if (12 boolean) (5 offset))
m: (12 boolean)
sizeof: (12 boolean)
jump: checking that nil is t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 2) (1023 2) (1024 t) (1025 l) (1027 1077) (1075 11) (1076 h) (1077 e))
run: 47 interpolate 21: ((13 byte-address) <- index-address (7 string-address deref) (8 integer))
m: (8 integer)
sizeof: (8 integer)
array-len: (1075 string global)
m: (1075 integer global)
sizeof: (1075 integer global)
sizeof: byte
run: 1078 => (13 byte-address)
setm: (13 byte-address) <= 1078
setm: size of (13 byte-address) is 1
setm: (13 byte-address): setting 1027 to 1078
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 2) (1023 2) (1024 t) (1025 l) (1027 1078) (1075 11) (1076 h) (1077 e))
run: 48 interpolate 22: ((13 byte-address deref) <- copy (11 byte))
m: (11 byte)
sizeof: (11 byte)
run: l => (13 byte-address deref)
setm: (13 byte-address deref) <= l
setm: size of (13 byte-address deref) is 1
setm: (13 byte-address deref): setting 1078 to l
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 2) (1023 2) (1024 t) (1025 l) (1027 1078) (1075 11) (1076 h) (1077 e) (1078 l))
run: 49 interpolate 23: ((9 integer) <- add (9 integer) (1 literal))
m: (9 integer)
sizeof: (9 integer)
add: 2 1
m: (9 integer)
sizeof: (9 integer)
run: 3 => (9 integer)
setm: (9 integer) <= 3
setm: size of (9 integer) is 1
setm: (9 integer): setting 1023 to 3
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 2) (1023 3) (1024 t) (1025 l) (1027 1078) (1075 11) (1076 h) (1077 e) (1078 l))
run: 50 interpolate 24: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sizeof: (8 integer)
add: 2 1
m: (8 integer)
sizeof: (8 integer)
run: 3 => (8 integer)
setm: (8 integer) <= 3
setm: size of (8 integer) is 1
setm: (8 integer): setting 1022 to 3
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 3) (1023 3) (1024 t) (1025 l) (1027 1078) (1075 11) (1076 h) (1077 e) (1078 l))
run: 51 interpolate 25: (jump (-10 offset))
jump: jumping to 16
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 3) (1023 3) (1024 t) (1025 l) (1027 1078) (1075 11) (1076 h) (1077 e) (1078 l))
run: 52 interpolate 16: ((10 boolean) <- lt (9 integer) (2 integer))
m: (9 integer)
sizeof: (9 integer)
m: (2 integer)
sizeof: (2 integer)
run: t => (10 boolean)
setm: (10 boolean) <= t
setm: size of (10 boolean) is 1
setm: (10 boolean): setting 1024 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 3) (1023 3) (1024 t) (1025 l) (1027 1078) (1075 11) (1076 h) (1077 e) (1078 l))
run: 53 interpolate 17: (jump-unless (10 boolean) (19 offset))
m: (10 boolean)
sizeof: (10 boolean)
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 3) (1023 3) (1024 t) (1025 l) (1027 1078) (1075 11) (1076 h) (1077 e) (1078 l))
run: 54 interpolate 18: ((11 byte) <- index (1 string-address deref) (9 integer))
m: (9 integer)
sizeof: (9 integer)
array-len: (1000 string global)
m: (1000 integer global)
sizeof: (1000 integer global)
sizeof: byte
m: (1004 byte global)
sizeof: (1004 byte global)
run: l => (11 byte)
setm: (11 byte) <= l
setm: size of (11 byte) is 1
setm: (11 byte): setting 1025 to l
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 3) (1023 3) (1024 t) (1025 l) (1027 1078) (1075 11) (1076 h) (1077 e) (1078 l))
run: 55 interpolate 19: ((12 boolean) <- eq (11 byte) (_ literal))
m: (11 byte)
sizeof: (11 byte)
run: nil => (12 boolean)
setm: (12 boolean) <= nil
setm: size of (12 boolean) is 1
setm: (12 boolean): setting 1026 to nil
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 3) (1023 3) (1024 t) (1025 l) (1027 1078) (1075 11) (1076 h) (1077 e) (1078 l))
run: 56 interpolate 20: (jump-if (12 boolean) (5 offset))
m: (12 boolean)
sizeof: (12 boolean)
jump: checking that nil is t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 3) (1023 3) (1024 t) (1025 l) (1027 1078) (1075 11) (1076 h) (1077 e) (1078 l))
run: 57 interpolate 21: ((13 byte-address) <- index-address (7 string-address deref) (8 integer))
m: (8 integer)
sizeof: (8 integer)
array-len: (1075 string global)
m: (1075 integer global)
sizeof: (1075 integer global)
sizeof: byte
run: 1079 => (13 byte-address)
setm: (13 byte-address) <= 1079
setm: size of (13 byte-address) is 1
setm: (13 byte-address): setting 1027 to 1079
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 3) (1023 3) (1024 t) (1025 l) (1027 1079) (1075 11) (1076 h) (1077 e) (1078 l))
run: 58 interpolate 22: ((13 byte-address deref) <- copy (11 byte))
m: (11 byte)
sizeof: (11 byte)
run: l => (13 byte-address deref)
setm: (13 byte-address deref) <= l
setm: size of (13 byte-address deref) is 1
setm: (13 byte-address deref): setting 1079 to l
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 3) (1023 3) (1024 t) (1025 l) (1027 1079) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l))
run: 59 interpolate 23: ((9 integer) <- add (9 integer) (1 literal))
m: (9 integer)
sizeof: (9 integer)
add: 3 1
m: (9 integer)
sizeof: (9 integer)
run: 4 => (9 integer)
setm: (9 integer) <= 4
setm: size of (9 integer) is 1
setm: (9 integer): setting 1023 to 4
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 3) (1023 4) (1024 t) (1025 l) (1027 1079) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l))
run: 60 interpolate 24: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sizeof: (8 integer)
add: 3 1
m: (8 integer)
sizeof: (8 integer)
run: 4 => (8 integer)
setm: (8 integer) <= 4
setm: size of (8 integer) is 1
setm: (8 integer): setting 1022 to 4
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 4) (1023 4) (1024 t) (1025 l) (1027 1079) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l))
run: 61 interpolate 25: (jump (-10 offset))
jump: jumping to 16
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 4) (1023 4) (1024 t) (1025 l) (1027 1079) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l))
run: 62 interpolate 16: ((10 boolean) <- lt (9 integer) (2 integer))
m: (9 integer)
sizeof: (9 integer)
m: (2 integer)
sizeof: (2 integer)
run: t => (10 boolean)
setm: (10 boolean) <= t
setm: size of (10 boolean) is 1
setm: (10 boolean): setting 1024 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 4) (1023 4) (1024 t) (1025 l) (1027 1079) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l))
run: 63 interpolate 17: (jump-unless (10 boolean) (19 offset))
m: (10 boolean)
sizeof: (10 boolean)
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 4) (1023 4) (1024 t) (1025 l) (1027 1079) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l))
run: 64 interpolate 18: ((11 byte) <- index (1 string-address deref) (9 integer))
m: (9 integer)
sizeof: (9 integer)
array-len: (1000 string global)
m: (1000 integer global)
sizeof: (1000 integer global)
sizeof: byte
m: (1005 byte global)
sizeof: (1005 byte global)
run: o => (11 byte)
setm: (11 byte) <= o
setm: size of (11 byte) is 1
setm: (11 byte): setting 1025 to o
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 4) (1023 4) (1024 t) (1025 o) (1027 1079) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l))
run: 65 interpolate 19: ((12 boolean) <- eq (11 byte) (_ literal))
m: (11 byte)
sizeof: (11 byte)
run: nil => (12 boolean)
setm: (12 boolean) <= nil
setm: size of (12 boolean) is 1
setm: (12 boolean): setting 1026 to nil
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 4) (1023 4) (1024 t) (1025 o) (1027 1079) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l))
run: 66 interpolate 20: (jump-if (12 boolean) (5 offset))
m: (12 boolean)
sizeof: (12 boolean)
jump: checking that nil is t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 4) (1023 4) (1024 t) (1025 o) (1027 1079) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l))
run: 67 interpolate 21: ((13 byte-address) <- index-address (7 string-address deref) (8 integer))
m: (8 integer)
sizeof: (8 integer)
array-len: (1075 string global)
m: (1075 integer global)
sizeof: (1075 integer global)
sizeof: byte
run: 1080 => (13 byte-address)
setm: (13 byte-address) <= 1080
setm: size of (13 byte-address) is 1
setm: (13 byte-address): setting 1027 to 1080
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 4) (1023 4) (1024 t) (1025 o) (1027 1080) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l))
run: 68 interpolate 22: ((13 byte-address deref) <- copy (11 byte))
m: (11 byte)
sizeof: (11 byte)
run: o => (13 byte-address deref)
setm: (13 byte-address deref) <= o
setm: size of (13 byte-address deref) is 1
setm: (13 byte-address deref): setting 1080 to o
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 4) (1023 4) (1024 t) (1025 o) (1027 1080) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o))
run: 69 interpolate 23: ((9 integer) <- add (9 integer) (1 literal))
m: (9 integer)
sizeof: (9 integer)
add: 4 1
m: (9 integer)
sizeof: (9 integer)
run: 5 => (9 integer)
setm: (9 integer) <= 5
setm: size of (9 integer) is 1
setm: (9 integer): setting 1023 to 5
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 4) (1023 5) (1024 t) (1025 o) (1027 1080) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o))
run: 70 interpolate 24: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sizeof: (8 integer)
add: 4 1
m: (8 integer)
sizeof: (8 integer)
run: 5 => (8 integer)
setm: (8 integer) <= 5
setm: size of (8 integer) is 1
setm: (8 integer): setting 1022 to 5
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 5) (1023 5) (1024 t) (1025 o) (1027 1080) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o))
run: 71 interpolate 25: (jump (-10 offset))
jump: jumping to 16
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 5) (1023 5) (1024 t) (1025 o) (1027 1080) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o))
run: 72 interpolate 16: ((10 boolean) <- lt (9 integer) (2 integer))
m: (9 integer)
sizeof: (9 integer)
m: (2 integer)
sizeof: (2 integer)
run: t => (10 boolean)
setm: (10 boolean) <= t
setm: size of (10 boolean) is 1
setm: (10 boolean): setting 1024 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 5) (1023 5) (1024 t) (1025 o) (1027 1080) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o))
run: 73 interpolate 17: (jump-unless (10 boolean) (19 offset))
m: (10 boolean)
sizeof: (10 boolean)
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 5) (1023 5) (1024 t) (1025 o) (1027 1080) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o))
run: 74 interpolate 18: ((11 byte) <- index (1 string-address deref) (9 integer))
m: (9 integer)
sizeof: (9 integer)
array-len: (1000 string global)
m: (1000 integer global)
sizeof: (1000 integer global)
sizeof: byte
m: (1006 byte global)
sizeof: (1006 byte global)
run: , => (11 byte)
setm: (11 byte) <= ,
setm: size of (11 byte) is 1
setm: (11 byte): setting 1025 to ,
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 5) (1023 5) (1024 t) (1025 ,) (1027 1080) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o))
run: 75 interpolate 19: ((12 boolean) <- eq (11 byte) (_ literal))
m: (11 byte)
sizeof: (11 byte)
run: nil => (12 boolean)
setm: (12 boolean) <= nil
setm: size of (12 boolean) is 1
setm: (12 boolean): setting 1026 to nil
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 5) (1023 5) (1024 t) (1025 ,) (1027 1080) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o))
run: 76 interpolate 20: (jump-if (12 boolean) (5 offset))
m: (12 boolean)
sizeof: (12 boolean)
jump: checking that nil is t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 5) (1023 5) (1024 t) (1025 ,) (1027 1080) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o))
run: 77 interpolate 21: ((13 byte-address) <- index-address (7 string-address deref) (8 integer))
m: (8 integer)
sizeof: (8 integer)
array-len: (1075 string global)
m: (1075 integer global)
sizeof: (1075 integer global)
sizeof: byte
run: 1081 => (13 byte-address)
setm: (13 byte-address) <= 1081
setm: size of (13 byte-address) is 1
setm: (13 byte-address): setting 1027 to 1081
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 5) (1023 5) (1024 t) (1025 ,) (1027 1081) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o))
run: 78 interpolate 22: ((13 byte-address deref) <- copy (11 byte))
m: (11 byte)
sizeof: (11 byte)
run: , => (13 byte-address deref)
setm: (13 byte-address deref) <= ,
setm: size of (13 byte-address deref) is 1
setm: (13 byte-address deref): setting 1081 to ,
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 5) (1023 5) (1024 t) (1025 ,) (1027 1081) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,))
run: 79 interpolate 23: ((9 integer) <- add (9 integer) (1 literal))
m: (9 integer)
sizeof: (9 integer)
add: 5 1
m: (9 integer)
sizeof: (9 integer)
run: 6 => (9 integer)
setm: (9 integer) <= 6
setm: size of (9 integer) is 1
setm: (9 integer): setting 1023 to 6
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 5) (1023 6) (1024 t) (1025 ,) (1027 1081) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,))
run: 80 interpolate 24: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sizeof: (8 integer)
add: 5 1
m: (8 integer)
sizeof: (8 integer)
run: 6 => (8 integer)
setm: (8 integer) <= 6
setm: size of (8 integer) is 1
setm: (8 integer): setting 1022 to 6
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 6) (1023 6) (1024 t) (1025 ,) (1027 1081) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,))
run: 81 interpolate 25: (jump (-10 offset))
jump: jumping to 16
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 6) (1023 6) (1024 t) (1025 ,) (1027 1081) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,))
run: 82 interpolate 16: ((10 boolean) <- lt (9 integer) (2 integer))
m: (9 integer)
sizeof: (9 integer)
m: (2 integer)
sizeof: (2 integer)
run: t => (10 boolean)
setm: (10 boolean) <= t
setm: size of (10 boolean) is 1
setm: (10 boolean): setting 1024 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 6) (1023 6) (1024 t) (1025 ,) (1027 1081) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,))
run: 83 interpolate 17: (jump-unless (10 boolean) (19 offset))
m: (10 boolean)
sizeof: (10 boolean)
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 6) (1023 6) (1024 t) (1025 ,) (1027 1081) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,))
run: 84 interpolate 18: ((11 byte) <- index (1 string-address deref) (9 integer))
m: (9 integer)
sizeof: (9 integer)
array-len: (1000 string global)
m: (1000 integer global)
sizeof: (1000 integer global)
sizeof: byte
m: (1007 byte global)
sizeof: (1007 byte global)
run:   => (11 byte)
setm: (11 byte) <=  
setm: size of (11 byte) is 1
setm: (11 byte): setting 1025 to  
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 6) (1023 6) (1024 t) (1025  ) (1027 1081) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,))
run: 85 interpolate 19: ((12 boolean) <- eq (11 byte) (_ literal))
m: (11 byte)
sizeof: (11 byte)
run: nil => (12 boolean)
setm: (12 boolean) <= nil
setm: size of (12 boolean) is 1
setm: (12 boolean): setting 1026 to nil
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 6) (1023 6) (1024 t) (1025  ) (1027 1081) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,))
run: 86 interpolate 20: (jump-if (12 boolean) (5 offset))
m: (12 boolean)
sizeof: (12 boolean)
jump: checking that nil is t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 6) (1023 6) (1024 t) (1025  ) (1027 1081) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,))
run: 87 interpolate 21: ((13 byte-address) <- index-address (7 string-address deref) (8 integer))
m: (8 integer)
sizeof: (8 integer)
array-len: (1075 string global)
m: (1075 integer global)
sizeof: (1075 integer global)
sizeof: byte
run: 1082 => (13 byte-address)
setm: (13 byte-address) <= 1082
setm: size of (13 byte-address) is 1
setm: (13 byte-address): setting 1027 to 1082
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 6) (1023 6) (1024 t) (1025  ) (1027 1082) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,))
run: 88 interpolate 22: ((13 byte-address deref) <- copy (11 byte))
m: (11 byte)
sizeof: (11 byte)
run:   => (13 byte-address deref)
setm: (13 byte-address deref) <=  
setm: size of (13 byte-address deref) is 1
setm: (13 byte-address deref): setting 1082 to  
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 6) (1023 6) (1024 t) (1025  ) (1027 1082) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ))
run: 89 interpolate 23: ((9 integer) <- add (9 integer) (1 literal))
m: (9 integer)
sizeof: (9 integer)
add: 6 1
m: (9 integer)
sizeof: (9 integer)
run: 7 => (9 integer)
setm: (9 integer) <= 7
setm: size of (9 integer) is 1
setm: (9 integer): setting 1023 to 7
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 6) (1023 7) (1024 t) (1025  ) (1027 1082) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ))
run: 90 interpolate 24: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sizeof: (8 integer)
add: 6 1
m: (8 integer)
sizeof: (8 integer)
run: 7 => (8 integer)
setm: (8 integer) <= 7
setm: size of (8 integer) is 1
setm: (8 integer): setting 1022 to 7
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 7) (1023 7) (1024 t) (1025  ) (1027 1082) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ))
run: 91 interpolate 25: (jump (-10 offset))
jump: jumping to 16
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 7) (1023 7) (1024 t) (1025  ) (1027 1082) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ))
run: 92 interpolate 16: ((10 boolean) <- lt (9 integer) (2 integer))
m: (9 integer)
sizeof: (9 integer)
m: (2 integer)
sizeof: (2 integer)
run: t => (10 boolean)
setm: (10 boolean) <= t
setm: size of (10 boolean) is 1
setm: (10 boolean): setting 1024 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 7) (1023 7) (1024 t) (1025  ) (1027 1082) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ))
run: 93 interpolate 17: (jump-unless (10 boolean) (19 offset))
m: (10 boolean)
sizeof: (10 boolean)
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 7) (1023 7) (1024 t) (1025  ) (1027 1082) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ))
run: 94 interpolate 18: ((11 byte) <- index (1 string-address deref) (9 integer))
m: (9 integer)
sizeof: (9 integer)
array-len: (1000 string global)
m: (1000 integer global)
sizeof: (1000 integer global)
sizeof: byte
m: (1008 byte global)
sizeof: (1008 byte global)
run: _ => (11 byte)
setm: (11 byte) <= _
setm: size of (11 byte) is 1
setm: (11 byte): setting 1025 to _
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 7) (1023 7) (1024 t) (1025 _) (1027 1082) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ))
run: 95 interpolate 19: ((12 boolean) <- eq (11 byte) (_ literal))
m: (11 byte)
sizeof: (11 byte)
run: t => (12 boolean)
setm: (12 boolean) <= t
setm: size of (12 boolean) is 1
setm: (12 boolean): setting 1026 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 7) (1023 7) (1024 t) (1025 _) (1026 t) (1027 1082) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ))
run: 96 interpolate 20: (jump-if (12 boolean) (5 offset))
m: (12 boolean)
sizeof: (12 boolean)
jump: checking that t is t
jump: jumping to 26
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 7) (1023 7) (1024 t) (1025 _) (1026 t) (1027 1082) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ))
run: 97 interpolate 26: ((14 integer) <- copy (0 literal))
run: 0 => (14 integer)
setm: (14 integer) <= 0
setm: size of (14 integer) is 1
setm: (14 integer): setting 1028 to 0
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 7) (1023 7) (1024 t) (1025 _) (1026 t) (1027 1082) (1028 0) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ))
run: 98 interpolate 27: ((15 boolean) <- lt (14 integer) (6 integer))
m: (14 integer)
sizeof: (14 integer)
m: (6 integer)
sizeof: (6 integer)
run: t => (15 boolean)
setm: (15 boolean) <= t
setm: size of (15 boolean) is 1
setm: (15 boolean): setting 1029 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 7) (1023 7) (1024 t) (1025 _) (1026 t) (1027 1082) (1028 0) (1029 t) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ))
run: 99 interpolate 28: (jump-unless (15 boolean) (6 offset))
m: (15 boolean)
sizeof: (15 boolean)
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 7) (1023 7) (1024 t) (1025 _) (1026 t) (1027 1082) (1028 0) (1029 t) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ))
run: 100 interpolate 29: ((11 byte) <- index (4 string-address deref) (14 integer))
m: (14 integer)
sizeof: (14 integer)
array-len: (1010 string global)
m: (1010 integer global)
sizeof: (1010 integer global)
sizeof: byte
m: (1011 byte global)
sizeof: (1011 byte global)
run: a => (11 byte)
setm: (11 byte) <= a
setm: size of (11 byte) is 1
setm: (11 byte): setting 1025 to a
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 7) (1023 7) (1024 t) (1025 a) (1026 t) (1027 1082) (1028 0) (1029 t) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ))
run: 101 interpolate 30: ((13 byte-address) <- index-address (7 string-address deref) (8 integer))
m: (8 integer)
sizeof: (8 integer)
array-len: (1075 string global)
m: (1075 integer global)
sizeof: (1075 integer global)
sizeof: byte
run: 1083 => (13 byte-address)
setm: (13 byte-address) <= 1083
setm: size of (13 byte-address) is 1
setm: (13 byte-address): setting 1027 to 1083
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 7) (1023 7) (1024 t) (1025 a) (1026 t) (1027 1083) (1028 0) (1029 t) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ))
run: 102 interpolate 31: ((13 byte-address deref) <- copy (11 byte))
m: (11 byte)
sizeof: (11 byte)
run: a => (13 byte-address deref)
setm: (13 byte-address deref) <= a
setm: size of (13 byte-address deref) is 1
setm: (13 byte-address deref): setting 1083 to a
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 7) (1023 7) (1024 t) (1025 a) (1026 t) (1027 1083) (1028 0) (1029 t) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a))
run: 103 interpolate 32: ((14 integer) <- add (14 integer) (1 literal))
m: (14 integer)
sizeof: (14 integer)
add: 0 1
m: (14 integer)
sizeof: (14 integer)
run: 1 => (14 integer)
setm: (14 integer) <= 1
setm: size of (14 integer) is 1
setm: (14 integer): setting 1028 to 1
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 7) (1023 7) (1024 t) (1025 a) (1026 t) (1027 1083) (1028 1) (1029 t) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a))
run: 104 interpolate 33: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sizeof: (8 integer)
add: 7 1
m: (8 integer)
sizeof: (8 integer)
run: 8 => (8 integer)
setm: (8 integer) <= 8
setm: size of (8 integer) is 1
setm: (8 integer): setting 1022 to 8
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 8) (1023 7) (1024 t) (1025 a) (1026 t) (1027 1083) (1028 1) (1029 t) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a))
run: 105 interpolate 34: (jump (-8 offset))
jump: jumping to 27
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 8) (1023 7) (1024 t) (1025 a) (1026 t) (1027 1083) (1028 1) (1029 t) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a))
run: 106 interpolate 27: ((15 boolean) <- lt (14 integer) (6 integer))
m: (14 integer)
sizeof: (14 integer)
m: (6 integer)
sizeof: (6 integer)
run: t => (15 boolean)
setm: (15 boolean) <= t
setm: size of (15 boolean) is 1
setm: (15 boolean): setting 1029 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 8) (1023 7) (1024 t) (1025 a) (1026 t) (1027 1083) (1028 1) (1029 t) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a))
run: 107 interpolate 28: (jump-unless (15 boolean) (6 offset))
m: (15 boolean)
sizeof: (15 boolean)
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 8) (1023 7) (1024 t) (1025 a) (1026 t) (1027 1083) (1028 1) (1029 t) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a))
run: 108 interpolate 29: ((11 byte) <- index (4 string-address deref) (14 integer))
m: (14 integer)
sizeof: (14 integer)
array-len: (1010 string global)
m: (1010 integer global)
sizeof: (1010 integer global)
sizeof: byte
m: (1012 byte global)
sizeof: (1012 byte global)
run: b => (11 byte)
setm: (11 byte) <= b
setm: size of (11 byte) is 1
setm: (11 byte): setting 1025 to b
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 8) (1023 7) (1024 t) (1025 b) (1026 t) (1027 1083) (1028 1) (1029 t) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a))
run: 109 interpolate 30: ((13 byte-address) <- index-address (7 string-address deref) (8 integer))
m: (8 integer)
sizeof: (8 integer)
array-len: (1075 string global)
m: (1075 integer global)
sizeof: (1075 integer global)
sizeof: byte
run: 1084 => (13 byte-address)
setm: (13 byte-address) <= 1084
setm: size of (13 byte-address) is 1
setm: (13 byte-address): setting 1027 to 1084
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 8) (1023 7) (1024 t) (1025 b) (1026 t) (1027 1084) (1028 1) (1029 t) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a))
run: 110 interpolate 31: ((13 byte-address deref) <- copy (11 byte))
m: (11 byte)
sizeof: (11 byte)
run: b => (13 byte-address deref)
setm: (13 byte-address deref) <= b
setm: size of (13 byte-address deref) is 1
setm: (13 byte-address deref): setting 1084 to b
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 8) (1023 7) (1024 t) (1025 b) (1026 t) (1027 1084) (1028 1) (1029 t) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b))
run: 111 interpolate 32: ((14 integer) <- add (14 integer) (1 literal))
m: (14 integer)
sizeof: (14 integer)
add: 1 1
m: (14 integer)
sizeof: (14 integer)
run: 2 => (14 integer)
setm: (14 integer) <= 2
setm: size of (14 integer) is 1
setm: (14 integer): setting 1028 to 2
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 8) (1023 7) (1024 t) (1025 b) (1026 t) (1027 1084) (1028 2) (1029 t) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b))
run: 112 interpolate 33: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sizeof: (8 integer)
add: 8 1
m: (8 integer)
sizeof: (8 integer)
run: 9 => (8 integer)
setm: (8 integer) <= 9
setm: size of (8 integer) is 1
setm: (8 integer): setting 1022 to 9
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 9) (1023 7) (1024 t) (1025 b) (1026 t) (1027 1084) (1028 2) (1029 t) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b))
run: 113 interpolate 34: (jump (-8 offset))
jump: jumping to 27
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 9) (1023 7) (1024 t) (1025 b) (1026 t) (1027 1084) (1028 2) (1029 t) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b))
run: 114 interpolate 27: ((15 boolean) <- lt (14 integer) (6 integer))
m: (14 integer)
sizeof: (14 integer)
m: (6 integer)
sizeof: (6 integer)
run: t => (15 boolean)
setm: (15 boolean) <= t
setm: size of (15 boolean) is 1
setm: (15 boolean): setting 1029 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 9) (1023 7) (1024 t) (1025 b) (1026 t) (1027 1084) (1028 2) (1029 t) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b))
run: 115 interpolate 28: (jump-unless (15 boolean) (6 offset))
m: (15 boolean)
sizeof: (15 boolean)
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 9) (1023 7) (1024 t) (1025 b) (1026 t) (1027 1084) (1028 2) (1029 t) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b))
run: 116 interpolate 29: ((11 byte) <- index (4 string-address deref) (14 integer))
m: (14 integer)
sizeof: (14 integer)
array-len: (1010 string global)
m: (1010 integer global)
sizeof: (1010 integer global)
sizeof: byte
m: (1013 byte global)
sizeof: (1013 byte global)
run: c => (11 byte)
setm: (11 byte) <= c
setm: size of (11 byte) is 1
setm: (11 byte): setting 1025 to c
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 9) (1023 7) (1024 t) (1025 c) (1026 t) (1027 1084) (1028 2) (1029 t) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b))
run: 117 interpolate 30: ((13 byte-address) <- index-address (7 string-address deref) (8 integer))
m: (8 integer)
sizeof: (8 integer)
array-len: (1075 string global)
m: (1075 integer global)
sizeof: (1075 integer global)
sizeof: byte
run: 1085 => (13 byte-address)
setm: (13 byte-address) <= 1085
setm: size of (13 byte-address) is 1
setm: (13 byte-address): setting 1027 to 1085
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 9) (1023 7) (1024 t) (1025 c) (1026 t) (1027 1085) (1028 2) (1029 t) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b))
run: 118 interpolate 31: ((13 byte-address deref) <- copy (11 byte))
m: (11 byte)
sizeof: (11 byte)
run: c => (13 byte-address deref)
setm: (13 byte-address deref) <= c
setm: size of (13 byte-address deref) is 1
setm: (13 byte-address deref): setting 1085 to c
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 9) (1023 7) (1024 t) (1025 c) (1026 t) (1027 1085) (1028 2) (1029 t) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b) (1085 c))
run: 119 interpolate 32: ((14 integer) <- add (14 integer) (1 literal))
m: (14 integer)
sizeof: (14 integer)
add: 2 1
m: (14 integer)
sizeof: (14 integer)
run: 3 => (14 integer)
setm: (14 integer) <= 3
setm: size of (14 integer) is 1
setm: (14 integer): setting 1028 to 3
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 9) (1023 7) (1024 t) (1025 c) (1026 t) (1027 1085) (1028 3) (1029 t) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b) (1085 c))
run: 120 interpolate 33: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sizeof: (8 integer)
add: 9 1
m: (8 integer)
sizeof: (8 integer)
run: 10 => (8 integer)
setm: (8 integer) <= 10
setm: size of (8 integer) is 1
setm: (8 integer): setting 1022 to 10
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 10) (1023 7) (1024 t) (1025 c) (1026 t) (1027 1085) (1028 3) (1029 t) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b) (1085 c))
run: 121 interpolate 34: (jump (-8 offset))
jump: jumping to 27
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 10) (1023 7) (1024 t) (1025 c) (1026 t) (1027 1085) (1028 3) (1029 t) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b) (1085 c))
run: 122 interpolate 27: ((15 boolean) <- lt (14 integer) (6 integer))
m: (14 integer)
sizeof: (14 integer)
m: (6 integer)
sizeof: (6 integer)
run: nil => (15 boolean)
setm: (15 boolean) <= nil
setm: size of (15 boolean) is 1
setm: (15 boolean): setting 1029 to nil
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 10) (1023 7) (1024 t) (1025 c) (1026 t) (1027 1085) (1028 3) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b) (1085 c))
run: 123 interpolate 28: (jump-unless (15 boolean) (6 offset))
m: (15 boolean)
sizeof: (15 boolean)
jump: checking that nil is not t
jump: jumping to 35
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 10) (1023 7) (1024 t) (1025 c) (1026 t) (1027 1085) (1028 3) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b) (1085 c))
run: 124 interpolate 35: ((9 integer) <- add (9 integer) (1 literal))
m: (9 integer)
sizeof: (9 integer)
add: 7 1
m: (9 integer)
sizeof: (9 integer)
run: 8 => (9 integer)
setm: (9 integer) <= 8
setm: size of (9 integer) is 1
setm: (9 integer): setting 1023 to 8
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 10) (1023 8) (1024 t) (1025 c) (1026 t) (1027 1085) (1028 3) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b) (1085 c))
run: 125 interpolate 36: (jump (-23 offset))
jump: jumping to 14
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1018 1010) (1019 t) (1020 3) (1021 1075) (1022 10) (1023 8) (1024 t) (1025 c) (1026 t) (1027 1085) (1028 3) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b) (1085 c))
run: 126 interpolate 14: ((4 string-address) (5 boolean) <- arg)
arg: nil 2 (1000 1010)
run: nil => (4 string-address)
setm: (4 string-address) <= nil
setm: size of (4 string-address) is 1
setm: (4 string-address): setting 1018 to nil
run: nil => (5 boolean)
setm: (5 boolean) <= nil
setm: size of (5 boolean) is 1
setm: (5 boolean): setting 1019 to nil
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1020 3) (1021 1075) (1022 10) (1023 8) (1024 t) (1025 c) (1026 t) (1027 1085) (1028 3) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b) (1085 c))
run: 127 interpolate 15: (jump-unless (5 boolean) (21 offset))
m: (5 boolean)
sizeof: (5 boolean)
jump: checking that nil is not t
jump: jumping to 37
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1020 3) (1021 1075) (1022 10) (1023 8) (1024 t) (1025 c) (1026 t) (1027 1085) (1028 3) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b) (1085 c))
run: 128 interpolate 37: ((10 boolean) <- lt (9 integer) (2 integer))
m: (9 integer)
sizeof: (9 integer)
m: (2 integer)
sizeof: (2 integer)
run: t => (10 boolean)
setm: (10 boolean) <= t
setm: size of (10 boolean) is 1
setm: (10 boolean): setting 1024 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1020 3) (1021 1075) (1022 10) (1023 8) (1024 t) (1025 c) (1026 t) (1027 1085) (1028 3) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b) (1085 c))
run: 129 interpolate 38: (jump-unless (10 boolean) (6 offset))
m: (10 boolean)
sizeof: (10 boolean)
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1020 3) (1021 1075) (1022 10) (1023 8) (1024 t) (1025 c) (1026 t) (1027 1085) (1028 3) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b) (1085 c))
run: 130 interpolate 39: ((11 byte) <- index (1 string-address deref) (9 integer))
m: (9 integer)
sizeof: (9 integer)
array-len: (1000 string global)
m: (1000 integer global)
sizeof: (1000 integer global)
sizeof: byte
m: (1009 byte global)
sizeof: (1009 byte global)
run: ! => (11 byte)
setm: (11 byte) <= !
setm: size of (11 byte) is 1
setm: (11 byte): setting 1025 to !
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1020 3) (1021 1075) (1022 10) (1023 8) (1024 t) (1025 !) (1026 t) (1027 1085) (1028 3) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b) (1085 c))
run: 131 interpolate 40: ((13 byte-address) <- index-address (7 string-address deref) (8 integer))
m: (8 integer)
sizeof: (8 integer)
array-len: (1075 string global)
m: (1075 integer global)
sizeof: (1075 integer global)
sizeof: byte
run: 1086 => (13 byte-address)
setm: (13 byte-address) <= 1086
setm: size of (13 byte-address) is 1
setm: (13 byte-address): setting 1027 to 1086
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1020 3) (1021 1075) (1022 10) (1023 8) (1024 t) (1025 !) (1026 t) (1027 1086) (1028 3) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b) (1085 c))
run: 132 interpolate 41: ((13 byte-address deref) <- copy (11 byte))
m: (11 byte)
sizeof: (11 byte)
run: ! => (13 byte-address deref)
setm: (13 byte-address deref) <= !
setm: size of (13 byte-address deref) is 1
setm: (13 byte-address deref): setting 1086 to !
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1020 3) (1021 1075) (1022 10) (1023 8) (1024 t) (1025 !) (1026 t) (1027 1086) (1028 3) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b) (1085 c) (1086 !))
run: 133 interpolate 42: ((9 integer) <- add (9 integer) (1 literal))
m: (9 integer)
sizeof: (9 integer)
add: 8 1
m: (9 integer)
sizeof: (9 integer)
run: 9 => (9 integer)
setm: (9 integer) <= 9
setm: size of (9 integer) is 1
setm: (9 integer): setting 1023 to 9
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1020 3) (1021 1075) (1022 10) (1023 9) (1024 t) (1025 !) (1026 t) (1027 1086) (1028 3) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b) (1085 c) (1086 !))
run: 134 interpolate 43: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sizeof: (8 integer)
add: 10 1
m: (8 integer)
sizeof: (8 integer)
run: 11 => (8 integer)
setm: (8 integer) <= 11
setm: size of (8 integer) is 1
setm: (8 integer): setting 1022 to 11
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1020 3) (1021 1075) (1022 11) (1023 9) (1024 t) (1025 !) (1026 t) (1027 1086) (1028 3) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b) (1085 c) (1086 !))
run: 135 interpolate 44: (jump (-8 offset))
jump: jumping to 37
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1020 3) (1021 1075) (1022 11) (1023 9) (1024 t) (1025 !) (1026 t) (1027 1086) (1028 3) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b) (1085 c) (1086 !))
run: 136 interpolate 37: ((10 boolean) <- lt (9 integer) (2 integer))
m: (9 integer)
sizeof: (9 integer)
m: (2 integer)
sizeof: (2 integer)
run: nil => (10 boolean)
setm: (10 boolean) <= nil
setm: size of (10 boolean) is 1
setm: (10 boolean): setting 1024 to nil
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1020 3) (1021 1075) (1022 11) (1023 9) (1025 !) (1026 t) (1027 1086) (1028 3) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b) (1085 c) (1086 !))
run: 137 interpolate 38: (jump-unless (10 boolean) (6 offset))
m: (10 boolean)
sizeof: (10 boolean)
jump: checking that nil is not t
jump: jumping to 45
run: -- ((1 1000) (2 1010) (1000 9) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007  ) (1008 _) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 60) (1015 1000) (1016 9) (1017 11) (1020 3) (1021 1075) (1022 11) (1023 9) (1025 !) (1026 t) (1027 1086) (1028 3) (1075 11) (1076 h) (1077 e) (1078 l) (1079 l) (1080 o) (1081 ,) (1082  ) (1083 a) (1084 b) (1085 c) (1086 !))
run: 138 interpolate 45: (reply (7 string-address))
m: (7 string-address)
sizeof: (7 string-address)
reply: ((7 string-address)) ((3 string-address))
reply: 1075 => (3 string-address)
setm: (3 string-address) <= 1075
setm: size of (3 string-address) is 1
setm: (3 string-address): setting 3 to 1075
schedule: done with routine
