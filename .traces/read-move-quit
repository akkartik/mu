parse: instruction: assume-screen
parse:   ingredient: {name: "20", properties: ["20": "literal", "width": ]}
parse:   ingredient: {name: "2", properties: ["2": "literal", "height": ]}
parse: instruction: run
parse:   ingredient: {name: "
    1:address:channel <- init-channel 2:literal
    2:number/routine <- start-running read-move:recipe, 1:address:channel, screen:address
    # 'read-move' is waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number/id
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-quit: routine failed to pause after coming up (before any keys were pressed)]
    # press 'q'
    1:address:channel <- write 1:address:channel, 113:literal  # 'q'
    restart 2:number/routine
    # 'read-move' completes
    wait-for-routine 2:number
    3:number <- routine-state 2:number/id
    4:boolean/completed? <- equal 3:number/routine-state, 1:literal/completed
    assert 4:boolean/completed?, [
F read-move-quit: routine failed to terminate on 'q']
    trace [test], [reached end]
  ", properties: ["
    1:address:channel <- init-channel 2:literal
    2:number/routine <- start-running read-move:recipe, 1:address:channel, screen:address
    # 'read-move' is waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number/id
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-quit: routine failed to pause after coming up (before any keys were pressed)]
    # press 'q'
    1:address:channel <- write 1:address:channel, 113:literal  # 'q'
    restart 2:number/routine
    # 'read-move' completes
    wait-for-routine 2:number
    3:number <- routine-state 2:number/id
    4:boolean/completed? <- equal 3:number/routine-state, 1:literal/completed
    assert 4:boolean/completed?, [
F read-move-quit: routine failed to terminate on 'q']
    trace [test], [reached end]
  ": "literal-string"]}
parse: instruction: trace-should-contain
parse:   ingredient: {name: "
    test: reached end
  ", properties: ["
    test: reached end
  ": "literal-string"]}
after-brace: recipe read-move-quit
after-brace: assume-screen ...
after-brace: run ...
after-brace: trace-should-contain ...
new: routine allocated memory from 1000 to 101000
schedule: read-move-quit
run: screen:address <- assume-screen 20:literal/width, 2:literal/height
run: default-space:address:array:location <- new location:type, 30:literal/capacity
mem: array size is 30
mem: new alloc: 1000
run: result:address:screen <- new screen:type
mem: new alloc: 1031
mem: storing 1031 in location 1002
run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
mem: location 1002 is 1031
mem: location 1031 is 0
mem: location 1032 is 0
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 0
mem: location 1002 is 1031
run: address to copy is 1032
mem: storing 1032 in location 1003
run: width:address:number/deref <- next-ingredient 
mem: location 1003 is 1032
mem: storing 20 in location 1032
run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
mem: location 1002 is 1031
mem: location 1031 is 0
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 0
mem: location 1002 is 1031
run: address to copy is 1031
mem: storing 1031 in location 1004
run: height:address:number/deref <- next-ingredient 
mem: location 1004 is 1031
mem: storing 2 in location 1031
run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
mem: location 1002 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 0
mem: location 1002 is 1031
run: address to copy is 1033
mem: storing 1033 in location 1005
run: row:address:number/deref <- copy 0:literal
mem: location 1005 is 1033
mem: storing 0 in location 1033
run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
mem: location 1002 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 0
mem: location 1002 is 1031
run: address to copy is 1034
mem: storing 1034 in location 1006
run: column:address:number/deref <- copy 0:literal
mem: location 1006 is 1034
mem: storing 0 in location 1034
run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
mem: location 1003 is 1032
mem: location 1032 is 20
mem: location 1004 is 1031
mem: location 1031 is 2
mem: storing 40 in location 1007
run: buf:address:address:array:character <- get-address result:address:screen/deref, data:offset
mem: location 1002 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 0
mem: location 1002 is 1031
run: address to copy is 1035
mem: storing 1035 in location 1008
run: buf:address:address:array:character/deref <- new character:literal, bufsize:number
mem: location 1007 is 40
mem: array size is 40
mem: new alloc: 1036
mem: location 1008 is 1035
mem: storing 1036 in location 1035
run: clear-screen result:address:screen
mem: location 1002 is 1031
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 1077
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 1079
run: break-unless x:address:screen, 
mem: location 1079 is 1031
run: jump-unless fell through
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 1079 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1079 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 1080
run: max:number <- length buf:address:array:character/deref
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1080 is 1036
mem: storing 40 in location 1081
run: i:number <- copy 0:literal
mem: storing 0 in location 1082
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 0
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 0
mem: location 1080 is 1036
mem: location 1082 is 0
mem: storing 1037 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1037
mem: storing 0 in location 1037
run: i:number <- add i:number, 1:literal
mem: location 1082 is 0
mem: storing 1 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 1
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 1
mem: location 1080 is 1036
mem: location 1082 is 1
mem: storing 1038 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1038
mem: storing 0 in location 1038
run: i:number <- add i:number, 1:literal
mem: location 1082 is 1
mem: storing 2 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 2
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 2
mem: location 1080 is 1036
mem: location 1082 is 2
mem: storing 1039 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1039
mem: storing 0 in location 1039
run: i:number <- add i:number, 1:literal
mem: location 1082 is 2
mem: storing 3 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 3
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 3
mem: location 1080 is 1036
mem: location 1082 is 3
mem: storing 1040 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1040
mem: storing 0 in location 1040
run: i:number <- add i:number, 1:literal
mem: location 1082 is 3
mem: storing 4 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 4
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 4
mem: location 1080 is 1036
mem: location 1082 is 4
mem: storing 1041 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1041
mem: storing 0 in location 1041
run: i:number <- add i:number, 1:literal
mem: location 1082 is 4
mem: storing 5 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 5
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 5
mem: location 1080 is 1036
mem: location 1082 is 5
mem: storing 1042 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1042
mem: storing 0 in location 1042
run: i:number <- add i:number, 1:literal
mem: location 1082 is 5
mem: storing 6 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 6
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 6
mem: location 1080 is 1036
mem: location 1082 is 6
mem: storing 1043 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1043
mem: storing 0 in location 1043
run: i:number <- add i:number, 1:literal
mem: location 1082 is 6
mem: storing 7 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 7
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 7
mem: location 1080 is 1036
mem: location 1082 is 7
mem: storing 1044 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1044
mem: storing 0 in location 1044
run: i:number <- add i:number, 1:literal
mem: location 1082 is 7
mem: storing 8 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 8
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 8
mem: location 1080 is 1036
mem: location 1082 is 8
mem: storing 1045 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1045
mem: storing 0 in location 1045
run: i:number <- add i:number, 1:literal
mem: location 1082 is 8
mem: storing 9 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 9
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 9
mem: location 1080 is 1036
mem: location 1082 is 9
mem: storing 1046 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1046
mem: storing 0 in location 1046
run: i:number <- add i:number, 1:literal
mem: location 1082 is 9
mem: storing 10 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 10
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 10
mem: location 1080 is 1036
mem: location 1082 is 10
mem: storing 1047 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1047
mem: storing 0 in location 1047
run: i:number <- add i:number, 1:literal
mem: location 1082 is 10
mem: storing 11 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 11
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 11
mem: location 1080 is 1036
mem: location 1082 is 11
mem: storing 1048 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1048
mem: storing 0 in location 1048
run: i:number <- add i:number, 1:literal
mem: location 1082 is 11
mem: storing 12 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 12
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 12
mem: location 1080 is 1036
mem: location 1082 is 12
mem: storing 1049 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1049
mem: storing 0 in location 1049
run: i:number <- add i:number, 1:literal
mem: location 1082 is 12
mem: storing 13 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 13
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 13
mem: location 1080 is 1036
mem: location 1082 is 13
mem: storing 1050 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1050
mem: storing 0 in location 1050
run: i:number <- add i:number, 1:literal
mem: location 1082 is 13
mem: storing 14 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 14
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 14
mem: location 1080 is 1036
mem: location 1082 is 14
mem: storing 1051 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1051
mem: storing 0 in location 1051
run: i:number <- add i:number, 1:literal
mem: location 1082 is 14
mem: storing 15 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 15
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 15
mem: location 1080 is 1036
mem: location 1082 is 15
mem: storing 1052 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1052
mem: storing 0 in location 1052
run: i:number <- add i:number, 1:literal
mem: location 1082 is 15
mem: storing 16 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 16
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 16
mem: location 1080 is 1036
mem: location 1082 is 16
mem: storing 1053 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1053
mem: storing 0 in location 1053
run: i:number <- add i:number, 1:literal
mem: location 1082 is 16
mem: storing 17 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 17
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 17
mem: location 1080 is 1036
mem: location 1082 is 17
mem: storing 1054 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1054
mem: storing 0 in location 1054
run: i:number <- add i:number, 1:literal
mem: location 1082 is 17
mem: storing 18 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 18
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 18
mem: location 1080 is 1036
mem: location 1082 is 18
mem: storing 1055 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1055
mem: storing 0 in location 1055
run: i:number <- add i:number, 1:literal
mem: location 1082 is 18
mem: storing 19 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 19
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 19
mem: location 1080 is 1036
mem: location 1082 is 19
mem: storing 1056 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1056
mem: storing 0 in location 1056
run: i:number <- add i:number, 1:literal
mem: location 1082 is 19
mem: storing 20 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 20
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 20
mem: location 1080 is 1036
mem: location 1082 is 20
mem: storing 1057 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1057
mem: storing 0 in location 1057
run: i:number <- add i:number, 1:literal
mem: location 1082 is 20
mem: storing 21 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 21
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 21
mem: location 1080 is 1036
mem: location 1082 is 21
mem: storing 1058 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1058
mem: storing 0 in location 1058
run: i:number <- add i:number, 1:literal
mem: location 1082 is 21
mem: storing 22 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 22
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 22
mem: location 1080 is 1036
mem: location 1082 is 22
mem: storing 1059 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1059
mem: storing 0 in location 1059
run: i:number <- add i:number, 1:literal
mem: location 1082 is 22
mem: storing 23 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 23
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 23
mem: location 1080 is 1036
mem: location 1082 is 23
mem: storing 1060 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1060
mem: storing 0 in location 1060
run: i:number <- add i:number, 1:literal
mem: location 1082 is 23
mem: storing 24 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 24
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 24
mem: location 1080 is 1036
mem: location 1082 is 24
mem: storing 1061 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1061
mem: storing 0 in location 1061
run: i:number <- add i:number, 1:literal
mem: location 1082 is 24
mem: storing 25 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 25
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 25
mem: location 1080 is 1036
mem: location 1082 is 25
mem: storing 1062 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1062
mem: storing 0 in location 1062
run: i:number <- add i:number, 1:literal
mem: location 1082 is 25
mem: storing 26 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 26
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 26
mem: location 1080 is 1036
mem: location 1082 is 26
mem: storing 1063 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1063
mem: storing 0 in location 1063
run: i:number <- add i:number, 1:literal
mem: location 1082 is 26
mem: storing 27 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 27
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 27
mem: location 1080 is 1036
mem: location 1082 is 27
mem: storing 1064 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1064
mem: storing 0 in location 1064
run: i:number <- add i:number, 1:literal
mem: location 1082 is 27
mem: storing 28 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 28
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 28
mem: location 1080 is 1036
mem: location 1082 is 28
mem: storing 1065 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1065
mem: storing 0 in location 1065
run: i:number <- add i:number, 1:literal
mem: location 1082 is 28
mem: storing 29 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 29
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 29
mem: location 1080 is 1036
mem: location 1082 is 29
mem: storing 1066 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1066
mem: storing 0 in location 1066
run: i:number <- add i:number, 1:literal
mem: location 1082 is 29
mem: storing 30 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 30
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 30
mem: location 1080 is 1036
mem: location 1082 is 30
mem: storing 1067 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1067
mem: storing 0 in location 1067
run: i:number <- add i:number, 1:literal
mem: location 1082 is 30
mem: storing 31 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 31
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 31
mem: location 1080 is 1036
mem: location 1082 is 31
mem: storing 1068 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1068
mem: storing 0 in location 1068
run: i:number <- add i:number, 1:literal
mem: location 1082 is 31
mem: storing 32 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 32
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 32
mem: location 1080 is 1036
mem: location 1082 is 32
mem: storing 1069 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1069
mem: storing 0 in location 1069
run: i:number <- add i:number, 1:literal
mem: location 1082 is 32
mem: storing 33 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 33
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 33
mem: location 1080 is 1036
mem: location 1082 is 33
mem: storing 1070 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1070
mem: storing 0 in location 1070
run: i:number <- add i:number, 1:literal
mem: location 1082 is 33
mem: storing 34 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 34
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 34
mem: location 1080 is 1036
mem: location 1082 is 34
mem: storing 1071 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1071
mem: storing 0 in location 1071
run: i:number <- add i:number, 1:literal
mem: location 1082 is 34
mem: storing 35 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 35
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 35
mem: location 1080 is 1036
mem: location 1082 is 35
mem: storing 1072 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1072
mem: storing 0 in location 1072
run: i:number <- add i:number, 1:literal
mem: location 1082 is 35
mem: storing 36 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 36
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 36
mem: location 1080 is 1036
mem: location 1082 is 36
mem: storing 1073 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1073
mem: storing 0 in location 1073
run: i:number <- add i:number, 1:literal
mem: location 1082 is 36
mem: storing 37 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 37
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 37
mem: location 1080 is 1036
mem: location 1082 is 37
mem: storing 1074 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1074
mem: storing 0 in location 1074
run: i:number <- add i:number, 1:literal
mem: location 1082 is 37
mem: storing 38 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 38
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 38
mem: location 1080 is 1036
mem: location 1082 is 38
mem: storing 1075 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1075
mem: storing 0 in location 1075
run: i:number <- add i:number, 1:literal
mem: location 1082 is 38
mem: storing 39 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 39
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 39
mem: location 1080 is 1036
mem: location 1082 is 39
mem: storing 1076 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1076
mem: storing 0 in location 1076
run: i:number <- add i:number, 1:literal
mem: location 1082 is 39
mem: storing 40 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 40
mem: location 1081 is 40
mem: storing 1 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 1
run: jumping to instruction 14
run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 1079 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1079 is 1031
run: address to copy is 1033
mem: storing 1033 in location 1085
run: cur:address:number/deref <- copy 0:literal
mem: location 1085 is 1033
mem: storing 0 in location 1033
run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 1079 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1079 is 1031
run: address to copy is 1034
mem: storing 1034 in location 1085
run: cur:address:number/deref <- copy 0:literal
mem: location 1085 is 1034
mem: storing 0 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 1079 is 1031
run: reply result:address:screen
mem: location 1002 is 1031
run: result 0 is 1031
mem: storing 1031 in location 900
run: run [
    1:address:channel <- init-channel 2:literal
    2:number/routine <- start-running read-move:recipe, 1:address:channel, screen:address
    # 'read-move' is waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number/id
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-quit: routine failed to pause after coming up (before any keys were pressed)]
    # press 'q'
    1:address:channel <- write 1:address:channel, 113:literal  # 'q'
    restart 2:number/routine
    # 'read-move' completes
    wait-for-routine 2:number
    3:number <- routine-state 2:number/id
    4:boolean/completed? <- equal 3:number/routine-state, 1:literal/completed
    assert 4:boolean/completed?, [
F read-move-quit: routine failed to terminate on 'q']
    trace [test], [reached end]
  ]
parse: instruction: init-channel
parse:   ingredient: {name: "2", properties: ["2": "literal"]}
parse:   product: {name: "1", properties: ["1": "address":"channel"]}
parse: instruction: start-running
parse:   ingredient: {name: "read-move", properties: ["read-move": "recipe"]}
parse:   ingredient: {name: "1", properties: ["1": "address":"channel"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   product: {name: "2", properties: ["2": "number", "routine": ]}
parse: instruction: wait-for-routine
parse:   ingredient: {name: "2", properties: ["2": "number"]}
parse: instruction: routine-state
parse:   ingredient: {name: "2", properties: ["2": "number", "id": ]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: equal
parse:   ingredient: {name: "3", properties: ["3": "number", "routine-state": ]}
parse:   ingredient: {name: "2", properties: ["2": "literal", "waiting": ]}
parse:   product: {name: "4", properties: ["4": "boolean", "waiting?": ]}
parse: instruction: assert
parse:   ingredient: {name: "4", properties: ["4": "boolean", "waiting?": ]}
parse:   ingredient: {name: "
F read-move-quit: routine failed to pause after coming up (before any keys were pressed)", properties: ["
F read-move-quit: routine failed to pause after coming up (before any keys were pressed)": "literal-string"]}
parse: instruction: write
parse:   ingredient: {name: "1", properties: ["1": "address":"channel"]}
parse:   ingredient: {name: "113", properties: ["113": "literal"]}
parse:   product: {name: "1", properties: ["1": "address":"channel"]}
parse: instruction: restart
parse:   ingredient: {name: "2", properties: ["2": "number", "routine": ]}
parse: instruction: wait-for-routine
parse:   ingredient: {name: "2", properties: ["2": "number"]}
parse: instruction: routine-state
parse:   ingredient: {name: "2", properties: ["2": "number", "id": ]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: equal
parse:   ingredient: {name: "3", properties: ["3": "number", "routine-state": ]}
parse:   ingredient: {name: "1", properties: ["1": "literal", "completed": ]}
parse:   product: {name: "4", properties: ["4": "boolean", "completed?": ]}
parse: instruction: assert
parse:   ingredient: {name: "4", properties: ["4": "boolean", "completed?": ]}
parse:   ingredient: {name: "
F read-move-quit: routine failed to terminate on 'q'", properties: ["
F read-move-quit: routine failed to terminate on 'q'": "literal-string"]}
parse: instruction: trace
parse:   ingredient: {name: "test", properties: ["test": "literal-string"]}
parse:   ingredient: {name: "reached end", properties: ["reached end": "literal-string"]}
after-brace: recipe run1001
after-brace: init-channel ...
after-brace: start-running ...
after-brace: wait-for-routine ...
after-brace: routine-state ...
after-brace: equal ...
after-brace: assert ...
after-brace: write ...
after-brace: restart ...
after-brace: wait-for-routine ...
after-brace: routine-state ...
after-brace: equal ...
after-brace: assert ...
after-brace: trace ...
run: 1:address:channel <- init-channel 2:literal
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 1108
run: result:address:channel <- new channel:type
mem: new alloc: 1139
mem: storing 1139 in location 1110
run: full:address:number <- get-address result:address:channel/deref, first-full:offset
mem: location 1110 is 1139
mem: location 1139 is 0
mem: location 1140 is 0
mem: location 1141 is 0
mem: location 1110 is 1139
run: address to copy is 1139
mem: storing 1139 in location 1111
run: full:address:number/deref <- copy 0:literal
mem: location 1111 is 1139
mem: storing 0 in location 1139
run: free:address:number <- get-address result:address:channel/deref, first-free:offset
mem: location 1110 is 1139
mem: location 1139 is 0
mem: location 1140 is 0
mem: location 1141 is 0
mem: location 1110 is 1139
run: address to copy is 1140
mem: storing 1140 in location 1112
run: free:address:number/deref <- copy 0:literal
mem: location 1112 is 1140
mem: storing 0 in location 1140
run: capacity:number <- next-ingredient 
mem: storing 2 in location 1113
run: capacity:number <- add capacity:number, 1:literal
mem: location 1113 is 2
mem: storing 3 in location 1113
run: dest:address:address:array:location <- get-address result:address:channel/deref, data:offset
mem: location 1110 is 1139
mem: location 1139 is 0
mem: location 1140 is 0
mem: location 1141 is 0
mem: location 1110 is 1139
run: address to copy is 1141
mem: storing 1141 in location 1114
run: dest:address:address:array:location/deref <- new location:type, capacity:number
mem: location 1113 is 3
mem: array size is 3
mem: new alloc: 1142
mem: location 1114 is 1141
mem: storing 1142 in location 1141
run: reply result:address:channel
mem: location 1110 is 1139
run: result 0 is 1139
mem: storing 1139 in location 1
run: 2:number/routine <- start-running read-move:recipe, 1:address:channel, screen:address
mem: location 1 is 1139
mem: location 900 is 1031
new: routine allocated memory from 101000 to 201000
mem: storing 2 in location 2
run: wait-for-routine 2:number
mem: location 2 is 2
run: waiting for routine 2
schedule: read-move
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101000
run: stdin:address:channel <- next-ingredient 
mem: storing 1139 in location 101002
run: screen:address <- next-ingredient 
mem: storing 1031 in location 101003
run: from-file:number, quit?:boolean, error?:boolean <- read-file stdin:address:channel, screen:address
mem: location 101002 is 1139
mem: location 101003 is 1031
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101031
run: stdin:address:channel <- next-ingredient 
mem: storing 1139 in location 101033
run: screen:address <- next-ingredient 
mem: storing 1031 in location 101034
run: c:character, stdin:address:channel <- read stdin:address:channel
mem: location 101033 is 1139
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101062
run: chan:address:channel <- next-ingredient 
mem: storing 1139 in location 101064
run: empty:boolean <- channel-empty? chan:address:channel
mem: location 101064 is 1139
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101093
run: chan:address:channel <- next-ingredient 
mem: storing 1139 in location 101095
run: full:number <- get chan:address:channel/deref, first-full:offset
mem: location 101095 is 1139
mem: location 1139 is 0
mem: location 1140 is 0
mem: location 1141 is 1142
mem: location 101095 is 1139
run: address to copy is 1139
run: its type is 1
mem: location 1139 is 0
mem: storing 0 in location 101096
run: free:number <- get chan:address:channel/deref, first-free:offset
mem: location 101095 is 1139
mem: location 1139 is 0
mem: location 1140 is 0
mem: location 1141 is 1142
mem: location 101095 is 1139
run: address to copy is 1140
run: its type is 1
mem: location 1140 is 0
mem: storing 0 in location 101097
run: result:boolean <- equal full:number, free:number
mem: location 101096 is 0
mem: location 101097 is 0
mem: storing 1 in location 101098
run: reply result:boolean
mem: location 101098 is 1
run: result 0 is 1
mem: storing 1 in location 101065
run: break-unless empty:boolean, 
mem: location 101065 is 1
run: jump-unless fell through
run: free-address:address:number <- get-address chan:address:channel/deref, first-free:offset
mem: location 101064 is 1139
mem: location 1139 is 0
mem: location 1140 is 0
mem: location 1141 is 1142
mem: location 101064 is 1139
run: address to copy is 1140
mem: storing 1140 in location 101066
run: wait-for-location free-address:address:number/deref
mem: location 101066 is 1140
mem: location 1140 is 0
mem: location 101066 is 1140
run: waiting for location 1140 to change from 0
schedule: waking up routine 1
schedule: run1001/read-move-quit
run: 3:number <- routine-state 2:number/id
mem: location 2 is 2
mem: storing 2 in location 3
run: 4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
mem: location 3 is 2
mem: storing 1 in location 4
run: assert 4:boolean/waiting?, [
F read-move-quit: routine failed to pause after coming up (before any keys were pressed)]
mem: location 4 is 1
run: 1:address:channel <- write 1:address:channel, 113:literal
mem: location 1 is 1139
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 1146
run: chan:address:channel <- next-ingredient 
mem: storing 1139 in location 1148
run: val:location <- next-ingredient 
mem: storing 113 in location 1149
run: full:boolean <- channel-full? chan:address:channel
mem: location 1148 is 1139
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 1177
run: chan:address:channel <- next-ingredient 
mem: storing 1139 in location 1179
run: tmp:number <- get chan:address:channel/deref, first-free:offset
mem: location 1179 is 1139
mem: location 1139 is 0
mem: location 1140 is 0
mem: location 1141 is 1142
mem: location 1179 is 1139
run: address to copy is 1140
run: its type is 1
mem: location 1140 is 0
mem: storing 0 in location 1180
run: tmp:number <- add tmp:number, 1:literal
mem: location 1180 is 0
mem: storing 1 in location 1180
run: len:number <- channel-capacity chan:address:channel
mem: location 1179 is 1139
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 1208
run: chan:address:channel <- next-ingredient 
mem: storing 1139 in location 1210
run: q:address:array:location <- get chan:address:channel/deref, data:offset
mem: location 1210 is 1139
mem: location 1139 is 0
mem: location 1140 is 0
mem: location 1141 is 1142
mem: location 1210 is 1139
run: address to copy is 1141
run: its type is 2
mem: location 1141 is 1142
mem: storing 1142 in location 1211
run: result:number <- length q:address:array:location/deref
mem: location 1211 is 1142
mem: location 1142 is 3
mem: location 1143 is 0
mem: location 1144 is 0
mem: location 1145 is 0
mem: location 1211 is 1142
mem: storing 3 in location 1212
run: reply result:number
mem: location 1212 is 3
run: result 0 is 3
mem: storing 3 in location 1181
run: at-end?:boolean <- greater-or-equal tmp:number, len:number
mem: location 1180 is 1
mem: location 1181 is 3
mem: storing 0 in location 1182
run: break-unless at-end?:boolean, 
mem: location 1182 is 0
run: jumping to instruction 9
run: full:number <- get chan:address:channel/deref, first-full:offset
mem: location 1179 is 1139
mem: location 1139 is 0
mem: location 1140 is 0
mem: location 1141 is 1142
mem: location 1179 is 1139
run: address to copy is 1139
run: its type is 1
mem: location 1139 is 0
mem: storing 0 in location 1183
run: result:boolean <- equal full:number, tmp:number
mem: location 1183 is 0
mem: location 1180 is 1
mem: storing 0 in location 1184
run: reply result:boolean
mem: location 1184 is 0
run: result 0 is 0
mem: storing 0 in location 1150
run: break-unless full:boolean, 
mem: location 1150 is 0
run: jumping to instruction 8
run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
mem: location 1148 is 1139
mem: location 1139 is 0
mem: location 1140 is 0
mem: location 1141 is 1142
mem: location 1148 is 1139
run: address to copy is 1141
run: its type is 2
mem: location 1141 is 1142
mem: storing 1142 in location 1152
run: free:address:number <- get-address chan:address:channel/deref, first-free:offset
mem: location 1148 is 1139
mem: location 1139 is 0
mem: location 1140 is 0
mem: location 1141 is 1142
mem: location 1148 is 1139
run: address to copy is 1140
mem: storing 1140 in location 1153
run: dest:address:location <- index-address circular-buffer:address:array:location/deref, free:address:number/deref
mem: location 1152 is 1142
mem: location 1142 is 3
mem: location 1143 is 0
mem: location 1144 is 0
mem: location 1145 is 0
mem: location 1153 is 1140
mem: location 1140 is 0
mem: location 1152 is 1142
mem: location 1153 is 1140
mem: location 1140 is 0
mem: storing 1143 in location 1154
run: dest:address:location/deref <- copy val:location
mem: location 1149 is 113
mem: location 1154 is 1143
mem: storing 113 in location 1143
run: free:address:number/deref <- add free:address:number/deref, 1:literal
mem: location 1153 is 1140
mem: location 1140 is 0
mem: location 1153 is 1140
mem: storing 1 in location 1140
run: len:number <- length circular-buffer:address:array:location/deref
mem: location 1152 is 1142
mem: location 1142 is 3
mem: location 1143 is 113
mem: location 1144 is 0
mem: location 1145 is 0
mem: location 1152 is 1142
mem: storing 3 in location 1155
run: at-end?:boolean <- greater-or-equal free:address:number/deref, len:number
mem: location 1153 is 1140
mem: location 1140 is 1
mem: location 1155 is 3
mem: storing 0 in location 1156
run: break-unless at-end?:boolean, 
mem: location 1156 is 0
run: jumping to instruction 19
run: reply chan:address:channel/same-as-ingredient:0
mem: location 1148 is 1139
run: result 0 is 1139
mem: storing 1139 in location 1
run: restart 2:number/routine
mem: location 2 is 2
run: wait-for-routine 2:number
mem: location 2 is 2
run: waiting for routine 2
schedule: read/read-file/read-move
run: full:address:number <- get-address chan:address:channel/deref, first-full:offset
mem: location 101064 is 1139
mem: location 1139 is 0
mem: location 1140 is 1
mem: location 1141 is 1142
mem: location 101064 is 1139
run: address to copy is 1139
mem: storing 1139 in location 101067
run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
mem: location 101064 is 1139
mem: location 1139 is 0
mem: location 1140 is 1
mem: location 1141 is 1142
mem: location 101064 is 1139
run: address to copy is 1141
run: its type is 2
mem: location 1141 is 1142
mem: storing 1142 in location 101068
run: result:location <- index circular-buffer:address:array:location/deref, full:address:number/deref
mem: location 101068 is 1142
mem: location 1142 is 3
mem: location 1143 is 113
mem: location 1144 is 0
mem: location 1145 is 0
mem: location 101067 is 1139
mem: location 1139 is 0
mem: location 101068 is 1142
mem: location 101067 is 1139
mem: location 1139 is 0
run: address to copy is 1143
run: its type is 1
mem: location 1143 is 113
mem: storing 113 in location 101069
run: full:address:number/deref <- add full:address:number/deref, 1:literal
mem: location 101067 is 1139
mem: location 1139 is 0
mem: location 101067 is 1139
mem: storing 1 in location 1139
run: len:number <- length circular-buffer:address:array:location/deref
mem: location 101068 is 1142
mem: location 1142 is 3
mem: location 1143 is 113
mem: location 1144 is 0
mem: location 1145 is 0
mem: location 101068 is 1142
mem: storing 3 in location 101070
run: at-end?:boolean <- greater-or-equal full:address:number/deref, len:number
mem: location 101067 is 1139
mem: location 1139 is 1
mem: location 101070 is 3
mem: storing 0 in location 101071
run: break-unless at-end?:boolean, 
mem: location 101071 is 0
run: jumping to instruction 17
run: reply result:location, chan:address:channel/same-as-ingredient:0
mem: location 101069 is 113
mem: location 101064 is 1139
run: result 0 is 113
run: result 1 is 1139
mem: storing 113 in location 101035
mem: storing 1139 in location 101033
run: q-pressed?:boolean <- equal c:character, 81:literal
mem: location 101035 is 113
mem: storing 0 in location 101036
run: break-unless q-pressed?:boolean, 
mem: location 101036 is 0
run: jumping to instruction 8
run: q-pressed?:boolean <- equal c:character, 113:literal
mem: location 101035 is 113
mem: storing 1 in location 101036
run: break-unless q-pressed?:boolean, 
mem: location 101036 is 1
run: jump-unless fell through
run: reply 0:literal/dummy, 1:literal/quit, 0:literal/error
run: result 0 is 0
run: result 1 is 1
run: result 2 is 0
mem: storing 0 in location 101004
mem: storing 1 in location 101005
mem: storing 0 in location 101006
run: reply-if quit?:boolean, 1:offset
mem: location 101005 is 1
run: jump-unless fell through
run: reply-if 0:literal/dummy, quit?:boolean, error?:boolean
mem: location 101005 is 1
mem: location 101006 is 0
schedule: waking up routine 1
schedule: run1001/read-move-quit
run: 3:number <- routine-state 2:number/id
mem: location 2 is 2
mem: storing 1 in location 3
run: 4:boolean/completed? <- equal 3:number/routine-state, 1:literal/completed
mem: location 3 is 1
mem: storing 1 in location 4
run: assert 4:boolean/completed?, [
F read-move-quit: routine failed to terminate on 'q']
mem: location 4 is 1
run: trace [test], [reached end]
test: reached end
run: trace-should-contain [
    test: reached end
  ]
