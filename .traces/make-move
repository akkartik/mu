schedule: main
run: 1 main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
sizeof: ((_ location))
run: 1000 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2 main 1: (((1 channel-address)) <- ((init-channel)) ((1 literal)))
run: 3 init-channel 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1031 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4 init-channel 1: (((1 channel-address)) <- ((new)) ((channel literal)))
sizeof: ((_ channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1033 to 1062
run: 5 init-channel 2: (((2 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((2 integer-address))
setm: ((2 integer-address)) <= 1062
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 1034 to 1062
run: 6 init-channel 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1062 to 0
run: 7 init-channel 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((3 integer-address))
setm: ((3 integer-address)) <= 1063
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 1035 to 1063
run: 8 init-channel 5: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 1063 to 0
run: 9 init-channel 6: (((4 integer)) <- ((next-input)))
arg: nil 0 (1)
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1036 to 1
run: 10 init-channel 7: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1036 to 2
run: 11 init-channel 8: (((5 tagged-value-array-address-address)) <- ((get-address)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1064 => ((5 tagged-value-array-address-address))
setm: ((5 tagged-value-array-address-address)) <= 1064
setm: size of ((5 tagged-value-array-address-address)) is 1
setm: ((5 tagged-value-array-address-address)): setting 1037 to 1064
run: 12 init-channel 9: (((5 tagged-value-array-address-address) (deref)) <- ((new)) ((tagged-value-array literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1065 => ((5 tagged-value-array-address-address) (deref))
setm: ((5 tagged-value-array-address-address) (deref)) <= 1065
setm: size of ((5 tagged-value-array-address-address) (deref)) is 1
setm: ((5 tagged-value-array-address-address) (deref)): setting 1064 to 1065
run: 13 init-channel 10: (((reply)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
reply: (((1 channel-address))) (((1 channel-address)))
reply: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1002 to 1062
run: 14 main 2: (((2 terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal)))
run: 15 init-fake-terminal 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
sizeof: ((_ location))
run: 1070 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 16 init-fake-terminal 1: (((1 terminal-address)) <- ((new)) ((terminal literal)))
sizeof: ((_ terminal))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ string-address))
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 1072 to 1101
run: 17 init-fake-terminal 2: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1102 => ((2 integer-address))
setm: ((2 integer-address)) <= 1102
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 1073 to 1102
run: 18 init-fake-terminal 3: (((2 integer-address) (deref)) <- ((next-input)))
arg: nil 0 (20 10)
run: 20 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 20
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1102 to 20
run: 19 init-fake-terminal 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((0 offset)))
run: 1101 => ((3 integer-address))
setm: ((3 integer-address)) <= 1101
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 1074 to 1101
run: 20 init-fake-terminal 5: (((3 integer-address) (deref)) <- ((next-input)))
arg: nil 1 (20 10)
run: 10 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 10
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 1101 to 10
run: 21 init-fake-terminal 6: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((4 integer-address))
setm: ((4 integer-address)) <= 1103
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 1075 to 1103
run: 22 init-fake-terminal 7: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 0
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1103 to 0
run: 23 init-fake-terminal 8: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((5 integer-address))
setm: ((5 integer-address)) <= 1104
setm: size of ((5 integer-address)) is 1
setm: ((5 integer-address)): setting 1076 to 1104
run: 24 init-fake-terminal 9: (((5 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((5 integer-address) (deref))
setm: ((5 integer-address) (deref)) <= 0
setm: size of ((5 integer-address) (deref)) is 1
setm: ((5 integer-address) (deref)): setting 1104 to 0
run: 25 init-fake-terminal 10: (((6 integer)) <- ((multiply)) ((2 integer-address) (deref)) ((3 integer-address) (deref)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
run: 200 => ((6 integer))
setm: ((6 integer)) <= 200
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 1077 to 200
run: 26 init-fake-terminal 11: (((7 string-address-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1105 => ((7 string-address-address))
setm: ((7 string-address-address)) <= 1105
setm: size of ((7 string-address-address)) is 1
setm: ((7 string-address-address)): setting 1078 to 1105
run: 27 init-fake-terminal 12: (((7 string-address-address) (deref)) <- ((new)) ((string literal)) ((6 integer)))
m: ((6 integer))
sizeof: ((6 integer))
sizeof: ((_ byte))
run: 1106 => ((7 string-address-address) (deref))
setm: ((7 string-address-address) (deref)) <= 1106
setm: size of ((7 string-address-address) (deref)) is 1
setm: ((7 string-address-address) (deref)): setting 1105 to 1106
run: 28 init-fake-terminal 13: (((clear-screen)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 29 clear-screen 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1307 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 30 clear-screen 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 1309 to 1101
run: 31 clear-screen 2: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 32 clear-screen 3: (((2 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((2 string-address))
setm: ((2 string-address)) <= 1106
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 1310 to 1106
run: 33 clear-screen 4: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
run: 200 => ((3 integer))
setm: ((3 integer)) <= 200
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1311 to 200
run: 34 clear-screen 5: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 0
run: 35 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 36 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 37 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1107 => ((1 byte-address))
setm: ((1 byte-address)) <= 1107
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1107
run: 38 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1107 to #\space
run: 39 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 1
run: 40 clear-screen 11: (((jump)) ((-6 offset)))
run: 41 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 42 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 43 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1108 => ((1 byte-address))
setm: ((1 byte-address)) <= 1108
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1108
run: 44 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1108 to #\space
run: 45 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 2
run: 46 clear-screen 11: (((jump)) ((-6 offset)))
run: 47 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 48 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 49 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1109 => ((1 byte-address))
setm: ((1 byte-address)) <= 1109
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1109
run: 50 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1109 to #\space
run: 51 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 3
run: 52 clear-screen 11: (((jump)) ((-6 offset)))
run: 53 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 54 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 55 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1110 => ((1 byte-address))
setm: ((1 byte-address)) <= 1110
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1110
run: 56 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1110 to #\space
run: 57 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 4 => ((4 integer))
setm: ((4 integer)) <= 4
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 4
run: 58 clear-screen 11: (((jump)) ((-6 offset)))
run: 59 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 60 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 61 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1111 => ((1 byte-address))
setm: ((1 byte-address)) <= 1111
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1111
run: 62 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1111 to #\space
run: 63 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 5 => ((4 integer))
setm: ((4 integer)) <= 5
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 5
run: 64 clear-screen 11: (((jump)) ((-6 offset)))
run: 65 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 66 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 67 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1112 => ((1 byte-address))
setm: ((1 byte-address)) <= 1112
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1112
run: 68 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1112 to #\space
run: 69 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 6 => ((4 integer))
setm: ((4 integer)) <= 6
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 6
run: 70 clear-screen 11: (((jump)) ((-6 offset)))
run: 71 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 72 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 73 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1113 => ((1 byte-address))
setm: ((1 byte-address)) <= 1113
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1113
run: 74 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1113 to #\space
run: 75 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 7 => ((4 integer))
setm: ((4 integer)) <= 7
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 7
run: 76 clear-screen 11: (((jump)) ((-6 offset)))
run: 77 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 78 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 79 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1114 => ((1 byte-address))
setm: ((1 byte-address)) <= 1114
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1114
run: 80 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1114 to #\space
run: 81 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 8 => ((4 integer))
setm: ((4 integer)) <= 8
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 8
run: 82 clear-screen 11: (((jump)) ((-6 offset)))
run: 83 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 84 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 85 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1115 => ((1 byte-address))
setm: ((1 byte-address)) <= 1115
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1115
run: 86 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1115 to #\space
run: 87 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 9 => ((4 integer))
setm: ((4 integer)) <= 9
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 9
run: 88 clear-screen 11: (((jump)) ((-6 offset)))
run: 89 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 90 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 91 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1116 => ((1 byte-address))
setm: ((1 byte-address)) <= 1116
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1116
run: 92 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1116 to #\space
run: 93 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 10 => ((4 integer))
setm: ((4 integer)) <= 10
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 10
run: 94 clear-screen 11: (((jump)) ((-6 offset)))
run: 95 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 96 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 97 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1117 => ((1 byte-address))
setm: ((1 byte-address)) <= 1117
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1117
run: 98 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1117 to #\space
run: 99 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 11 => ((4 integer))
setm: ((4 integer)) <= 11
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 11
run: 100 clear-screen 11: (((jump)) ((-6 offset)))
run: 101 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 102 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 103 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1118 => ((1 byte-address))
setm: ((1 byte-address)) <= 1118
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1118
run: 104 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1118 to #\space
run: 105 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 12 => ((4 integer))
setm: ((4 integer)) <= 12
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 12
run: 106 clear-screen 11: (((jump)) ((-6 offset)))
run: 107 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 108 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 109 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1119 => ((1 byte-address))
setm: ((1 byte-address)) <= 1119
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1119
run: 110 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1119 to #\space
run: 111 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 13 => ((4 integer))
setm: ((4 integer)) <= 13
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 13
run: 112 clear-screen 11: (((jump)) ((-6 offset)))
run: 113 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 114 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 115 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1120 => ((1 byte-address))
setm: ((1 byte-address)) <= 1120
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1120
run: 116 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1120 to #\space
run: 117 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 14 => ((4 integer))
setm: ((4 integer)) <= 14
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 14
run: 118 clear-screen 11: (((jump)) ((-6 offset)))
run: 119 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 120 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 121 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1121 => ((1 byte-address))
setm: ((1 byte-address)) <= 1121
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1121
run: 122 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1121 to #\space
run: 123 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 15 => ((4 integer))
setm: ((4 integer)) <= 15
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 15
run: 124 clear-screen 11: (((jump)) ((-6 offset)))
run: 125 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 126 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 127 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1122 => ((1 byte-address))
setm: ((1 byte-address)) <= 1122
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1122
run: 128 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1122 to #\space
run: 129 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 16 => ((4 integer))
setm: ((4 integer)) <= 16
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 16
run: 130 clear-screen 11: (((jump)) ((-6 offset)))
run: 131 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 132 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 133 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1123 => ((1 byte-address))
setm: ((1 byte-address)) <= 1123
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1123
run: 134 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1123 to #\space
run: 135 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 17 => ((4 integer))
setm: ((4 integer)) <= 17
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 17
run: 136 clear-screen 11: (((jump)) ((-6 offset)))
run: 137 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 138 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 139 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1124 => ((1 byte-address))
setm: ((1 byte-address)) <= 1124
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1124
run: 140 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1124 to #\space
run: 141 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 18 => ((4 integer))
setm: ((4 integer)) <= 18
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 18
run: 142 clear-screen 11: (((jump)) ((-6 offset)))
run: 143 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 144 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 145 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1125 => ((1 byte-address))
setm: ((1 byte-address)) <= 1125
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1125
run: 146 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1125 to #\space
run: 147 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 19 => ((4 integer))
setm: ((4 integer)) <= 19
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 19
run: 148 clear-screen 11: (((jump)) ((-6 offset)))
run: 149 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 150 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 151 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1126 => ((1 byte-address))
setm: ((1 byte-address)) <= 1126
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1126
run: 152 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1126 to #\space
run: 153 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 20 => ((4 integer))
setm: ((4 integer)) <= 20
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 20
run: 154 clear-screen 11: (((jump)) ((-6 offset)))
run: 155 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 156 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 157 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1127 => ((1 byte-address))
setm: ((1 byte-address)) <= 1127
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1127
run: 158 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1127 to #\space
run: 159 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 21 => ((4 integer))
setm: ((4 integer)) <= 21
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 21
run: 160 clear-screen 11: (((jump)) ((-6 offset)))
run: 161 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 162 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 163 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1128 => ((1 byte-address))
setm: ((1 byte-address)) <= 1128
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1128
run: 164 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1128 to #\space
run: 165 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 22 => ((4 integer))
setm: ((4 integer)) <= 22
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 22
run: 166 clear-screen 11: (((jump)) ((-6 offset)))
run: 167 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 168 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 169 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1129 => ((1 byte-address))
setm: ((1 byte-address)) <= 1129
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1129
run: 170 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1129 to #\space
run: 171 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 23 => ((4 integer))
setm: ((4 integer)) <= 23
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 23
run: 172 clear-screen 11: (((jump)) ((-6 offset)))
run: 173 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 174 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 175 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1130 => ((1 byte-address))
setm: ((1 byte-address)) <= 1130
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1130
run: 176 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1130 to #\space
run: 177 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 24 => ((4 integer))
setm: ((4 integer)) <= 24
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 24
run: 178 clear-screen 11: (((jump)) ((-6 offset)))
run: 179 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 180 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 181 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1131 => ((1 byte-address))
setm: ((1 byte-address)) <= 1131
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1131
run: 182 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1131 to #\space
run: 183 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 25 => ((4 integer))
setm: ((4 integer)) <= 25
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 25
run: 184 clear-screen 11: (((jump)) ((-6 offset)))
run: 185 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 186 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 187 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1132 => ((1 byte-address))
setm: ((1 byte-address)) <= 1132
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1132
run: 188 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1132 to #\space
run: 189 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 26 => ((4 integer))
setm: ((4 integer)) <= 26
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 26
run: 190 clear-screen 11: (((jump)) ((-6 offset)))
run: 191 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 192 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 193 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1133 => ((1 byte-address))
setm: ((1 byte-address)) <= 1133
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1133
run: 194 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1133 to #\space
run: 195 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 27 => ((4 integer))
setm: ((4 integer)) <= 27
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 27
run: 196 clear-screen 11: (((jump)) ((-6 offset)))
run: 197 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 198 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 199 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1134 => ((1 byte-address))
setm: ((1 byte-address)) <= 1134
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1134
run: 200 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1134 to #\space
run: 201 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 28 => ((4 integer))
setm: ((4 integer)) <= 28
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 28
run: 202 clear-screen 11: (((jump)) ((-6 offset)))
run: 203 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 204 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 205 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1135 => ((1 byte-address))
setm: ((1 byte-address)) <= 1135
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1135
run: 206 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1135 to #\space
run: 207 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 29 => ((4 integer))
setm: ((4 integer)) <= 29
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 29
run: 208 clear-screen 11: (((jump)) ((-6 offset)))
run: 209 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 210 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 211 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1136 => ((1 byte-address))
setm: ((1 byte-address)) <= 1136
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1136
run: 212 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1136 to #\space
run: 213 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 30
run: 214 clear-screen 11: (((jump)) ((-6 offset)))
run: 215 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 216 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 217 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1137 => ((1 byte-address))
setm: ((1 byte-address)) <= 1137
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1137
run: 218 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1137 to #\space
run: 219 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 31 => ((4 integer))
setm: ((4 integer)) <= 31
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 31
run: 220 clear-screen 11: (((jump)) ((-6 offset)))
run: 221 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 222 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 223 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1138 => ((1 byte-address))
setm: ((1 byte-address)) <= 1138
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1138
run: 224 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1138 to #\space
run: 225 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 32 => ((4 integer))
setm: ((4 integer)) <= 32
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 32
run: 226 clear-screen 11: (((jump)) ((-6 offset)))
run: 227 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 228 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 229 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1139 => ((1 byte-address))
setm: ((1 byte-address)) <= 1139
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1139
run: 230 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1139 to #\space
run: 231 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 33 => ((4 integer))
setm: ((4 integer)) <= 33
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 33
run: 232 clear-screen 11: (((jump)) ((-6 offset)))
run: 233 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 234 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 235 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1140 => ((1 byte-address))
setm: ((1 byte-address)) <= 1140
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1140
run: 236 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1140 to #\space
run: 237 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 34 => ((4 integer))
setm: ((4 integer)) <= 34
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 34
run: 238 clear-screen 11: (((jump)) ((-6 offset)))
run: 239 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 240 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 241 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1141 => ((1 byte-address))
setm: ((1 byte-address)) <= 1141
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1141
run: 242 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1141 to #\space
run: 243 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 35 => ((4 integer))
setm: ((4 integer)) <= 35
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 35
run: 244 clear-screen 11: (((jump)) ((-6 offset)))
run: 245 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 246 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 247 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1142 => ((1 byte-address))
setm: ((1 byte-address)) <= 1142
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1142
run: 248 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1142 to #\space
run: 249 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 36 => ((4 integer))
setm: ((4 integer)) <= 36
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 36
run: 250 clear-screen 11: (((jump)) ((-6 offset)))
run: 251 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 252 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 253 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1143 => ((1 byte-address))
setm: ((1 byte-address)) <= 1143
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1143
run: 254 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1143 to #\space
run: 255 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 37 => ((4 integer))
setm: ((4 integer)) <= 37
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 37
run: 256 clear-screen 11: (((jump)) ((-6 offset)))
run: 257 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 258 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 259 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1144 => ((1 byte-address))
setm: ((1 byte-address)) <= 1144
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1144
run: 260 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1144 to #\space
run: 261 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 38 => ((4 integer))
setm: ((4 integer)) <= 38
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 38
run: 262 clear-screen 11: (((jump)) ((-6 offset)))
run: 263 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 264 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 265 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1145 => ((1 byte-address))
setm: ((1 byte-address)) <= 1145
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1145
run: 266 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1145 to #\space
run: 267 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 39 => ((4 integer))
setm: ((4 integer)) <= 39
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 39
run: 268 clear-screen 11: (((jump)) ((-6 offset)))
run: 269 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 270 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 271 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1146 => ((1 byte-address))
setm: ((1 byte-address)) <= 1146
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1146
run: 272 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1146 to #\space
run: 273 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 40 => ((4 integer))
setm: ((4 integer)) <= 40
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 40
run: 274 clear-screen 11: (((jump)) ((-6 offset)))
run: 275 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 276 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 277 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1147 => ((1 byte-address))
setm: ((1 byte-address)) <= 1147
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1147
run: 278 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1147 to #\space
run: 279 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 41 => ((4 integer))
setm: ((4 integer)) <= 41
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 41
run: 280 clear-screen 11: (((jump)) ((-6 offset)))
run: 281 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 282 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 283 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1148 => ((1 byte-address))
setm: ((1 byte-address)) <= 1148
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1148
run: 284 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1148 to #\space
run: 285 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 42 => ((4 integer))
setm: ((4 integer)) <= 42
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 42
run: 286 clear-screen 11: (((jump)) ((-6 offset)))
run: 287 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 288 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 289 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1149 => ((1 byte-address))
setm: ((1 byte-address)) <= 1149
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1149
run: 290 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1149 to #\space
run: 291 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 43 => ((4 integer))
setm: ((4 integer)) <= 43
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 43
run: 292 clear-screen 11: (((jump)) ((-6 offset)))
run: 293 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 294 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 295 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1150 => ((1 byte-address))
setm: ((1 byte-address)) <= 1150
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1150
run: 296 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1150 to #\space
run: 297 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 44 => ((4 integer))
setm: ((4 integer)) <= 44
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 44
run: 298 clear-screen 11: (((jump)) ((-6 offset)))
run: 299 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 300 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 301 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1151 => ((1 byte-address))
setm: ((1 byte-address)) <= 1151
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1151
run: 302 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1151 to #\space
run: 303 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 45 => ((4 integer))
setm: ((4 integer)) <= 45
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 45
run: 304 clear-screen 11: (((jump)) ((-6 offset)))
run: 305 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 306 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 307 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1152 => ((1 byte-address))
setm: ((1 byte-address)) <= 1152
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1152
run: 308 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1152 to #\space
run: 309 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 46 => ((4 integer))
setm: ((4 integer)) <= 46
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 46
run: 310 clear-screen 11: (((jump)) ((-6 offset)))
run: 311 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 312 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 313 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1153 => ((1 byte-address))
setm: ((1 byte-address)) <= 1153
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1153
run: 314 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1153 to #\space
run: 315 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 47 => ((4 integer))
setm: ((4 integer)) <= 47
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 47
run: 316 clear-screen 11: (((jump)) ((-6 offset)))
run: 317 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 318 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 319 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1154 => ((1 byte-address))
setm: ((1 byte-address)) <= 1154
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1154
run: 320 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1154 to #\space
run: 321 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 48 => ((4 integer))
setm: ((4 integer)) <= 48
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 48
run: 322 clear-screen 11: (((jump)) ((-6 offset)))
run: 323 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 324 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 325 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1155 => ((1 byte-address))
setm: ((1 byte-address)) <= 1155
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1155
run: 326 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1155 to #\space
run: 327 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 49 => ((4 integer))
setm: ((4 integer)) <= 49
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 49
run: 328 clear-screen 11: (((jump)) ((-6 offset)))
run: 329 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 330 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 331 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1156 => ((1 byte-address))
setm: ((1 byte-address)) <= 1156
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1156
run: 332 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1156 to #\space
run: 333 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 50 => ((4 integer))
setm: ((4 integer)) <= 50
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 50
run: 334 clear-screen 11: (((jump)) ((-6 offset)))
run: 335 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 336 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 337 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1157 => ((1 byte-address))
setm: ((1 byte-address)) <= 1157
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1157
run: 338 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1157 to #\space
run: 339 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 51 => ((4 integer))
setm: ((4 integer)) <= 51
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 51
run: 340 clear-screen 11: (((jump)) ((-6 offset)))
run: 341 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 342 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 343 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1158 => ((1 byte-address))
setm: ((1 byte-address)) <= 1158
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1158
run: 344 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1158 to #\space
run: 345 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 52 => ((4 integer))
setm: ((4 integer)) <= 52
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 52
run: 346 clear-screen 11: (((jump)) ((-6 offset)))
run: 347 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 348 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 349 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1159 => ((1 byte-address))
setm: ((1 byte-address)) <= 1159
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1159
run: 350 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1159 to #\space
run: 351 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 53 => ((4 integer))
setm: ((4 integer)) <= 53
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 53
run: 352 clear-screen 11: (((jump)) ((-6 offset)))
run: 353 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 354 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 355 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1160 => ((1 byte-address))
setm: ((1 byte-address)) <= 1160
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1160
run: 356 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1160 to #\space
run: 357 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 54 => ((4 integer))
setm: ((4 integer)) <= 54
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 54
run: 358 clear-screen 11: (((jump)) ((-6 offset)))
run: 359 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 360 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 361 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1161 => ((1 byte-address))
setm: ((1 byte-address)) <= 1161
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1161
run: 362 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1161 to #\space
run: 363 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 55 => ((4 integer))
setm: ((4 integer)) <= 55
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 55
run: 364 clear-screen 11: (((jump)) ((-6 offset)))
run: 365 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 366 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 367 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1162 => ((1 byte-address))
setm: ((1 byte-address)) <= 1162
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1162
run: 368 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1162 to #\space
run: 369 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 56 => ((4 integer))
setm: ((4 integer)) <= 56
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 56
run: 370 clear-screen 11: (((jump)) ((-6 offset)))
run: 371 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 372 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 373 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1163 => ((1 byte-address))
setm: ((1 byte-address)) <= 1163
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1163
run: 374 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1163 to #\space
run: 375 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 57 => ((4 integer))
setm: ((4 integer)) <= 57
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 57
run: 376 clear-screen 11: (((jump)) ((-6 offset)))
run: 377 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 378 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 379 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1164 => ((1 byte-address))
setm: ((1 byte-address)) <= 1164
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1164
run: 380 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1164 to #\space
run: 381 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 58 => ((4 integer))
setm: ((4 integer)) <= 58
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 58
run: 382 clear-screen 11: (((jump)) ((-6 offset)))
run: 383 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 384 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 385 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1165 => ((1 byte-address))
setm: ((1 byte-address)) <= 1165
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1165
run: 386 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1165 to #\space
run: 387 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 59 => ((4 integer))
setm: ((4 integer)) <= 59
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 59
run: 388 clear-screen 11: (((jump)) ((-6 offset)))
run: 389 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 390 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 391 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1166 => ((1 byte-address))
setm: ((1 byte-address)) <= 1166
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1166
run: 392 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1166 to #\space
run: 393 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 60 => ((4 integer))
setm: ((4 integer)) <= 60
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 60
run: 394 clear-screen 11: (((jump)) ((-6 offset)))
run: 395 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 396 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 397 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1167 => ((1 byte-address))
setm: ((1 byte-address)) <= 1167
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1167
run: 398 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1167 to #\space
run: 399 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 61 => ((4 integer))
setm: ((4 integer)) <= 61
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 61
run: 400 clear-screen 11: (((jump)) ((-6 offset)))
run: 401 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 402 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 403 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1168 => ((1 byte-address))
setm: ((1 byte-address)) <= 1168
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1168
run: 404 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1168 to #\space
run: 405 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 62 => ((4 integer))
setm: ((4 integer)) <= 62
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 62
run: 406 clear-screen 11: (((jump)) ((-6 offset)))
run: 407 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 408 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 409 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1169 => ((1 byte-address))
setm: ((1 byte-address)) <= 1169
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1169
run: 410 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1169 to #\space
run: 411 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 63 => ((4 integer))
setm: ((4 integer)) <= 63
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 63
run: 412 clear-screen 11: (((jump)) ((-6 offset)))
run: 413 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 414 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 415 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1170 => ((1 byte-address))
setm: ((1 byte-address)) <= 1170
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1170
run: 416 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1170 to #\space
run: 417 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 64 => ((4 integer))
setm: ((4 integer)) <= 64
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 64
run: 418 clear-screen 11: (((jump)) ((-6 offset)))
run: 419 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 420 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 421 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1171 => ((1 byte-address))
setm: ((1 byte-address)) <= 1171
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1171
run: 422 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1171 to #\space
run: 423 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 65 => ((4 integer))
setm: ((4 integer)) <= 65
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 65
run: 424 clear-screen 11: (((jump)) ((-6 offset)))
run: 425 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 426 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 427 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1172 => ((1 byte-address))
setm: ((1 byte-address)) <= 1172
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1172
run: 428 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1172 to #\space
run: 429 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 66 => ((4 integer))
setm: ((4 integer)) <= 66
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 66
run: 430 clear-screen 11: (((jump)) ((-6 offset)))
run: 431 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 432 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 433 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1173 => ((1 byte-address))
setm: ((1 byte-address)) <= 1173
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1173
run: 434 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1173 to #\space
run: 435 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 67 => ((4 integer))
setm: ((4 integer)) <= 67
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 67
run: 436 clear-screen 11: (((jump)) ((-6 offset)))
run: 437 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 438 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 439 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1174 => ((1 byte-address))
setm: ((1 byte-address)) <= 1174
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1174
run: 440 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1174 to #\space
run: 441 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 68 => ((4 integer))
setm: ((4 integer)) <= 68
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 68
run: 442 clear-screen 11: (((jump)) ((-6 offset)))
run: 443 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 444 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 445 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1175 => ((1 byte-address))
setm: ((1 byte-address)) <= 1175
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1175
run: 446 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1175 to #\space
run: 447 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 69 => ((4 integer))
setm: ((4 integer)) <= 69
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 69
run: 448 clear-screen 11: (((jump)) ((-6 offset)))
run: 449 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 450 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 451 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1176 => ((1 byte-address))
setm: ((1 byte-address)) <= 1176
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1176
run: 452 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1176 to #\space
run: 453 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 70 => ((4 integer))
setm: ((4 integer)) <= 70
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 70
run: 454 clear-screen 11: (((jump)) ((-6 offset)))
run: 455 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 456 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 457 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1177 => ((1 byte-address))
setm: ((1 byte-address)) <= 1177
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1177
run: 458 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1177 to #\space
run: 459 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 71 => ((4 integer))
setm: ((4 integer)) <= 71
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 71
run: 460 clear-screen 11: (((jump)) ((-6 offset)))
run: 461 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 462 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 463 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1178 => ((1 byte-address))
setm: ((1 byte-address)) <= 1178
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1178
run: 464 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1178 to #\space
run: 465 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 72 => ((4 integer))
setm: ((4 integer)) <= 72
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 72
run: 466 clear-screen 11: (((jump)) ((-6 offset)))
run: 467 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 468 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 469 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1179 => ((1 byte-address))
setm: ((1 byte-address)) <= 1179
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1179
run: 470 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1179 to #\space
run: 471 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 73 => ((4 integer))
setm: ((4 integer)) <= 73
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 73
run: 472 clear-screen 11: (((jump)) ((-6 offset)))
run: 473 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 474 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 475 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1180 => ((1 byte-address))
setm: ((1 byte-address)) <= 1180
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1180
run: 476 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1180 to #\space
run: 477 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 74 => ((4 integer))
setm: ((4 integer)) <= 74
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 74
run: 478 clear-screen 11: (((jump)) ((-6 offset)))
run: 479 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 480 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 481 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1181 => ((1 byte-address))
setm: ((1 byte-address)) <= 1181
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1181
run: 482 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1181 to #\space
run: 483 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 75 => ((4 integer))
setm: ((4 integer)) <= 75
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 75
run: 484 clear-screen 11: (((jump)) ((-6 offset)))
run: 485 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 486 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 487 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1182 => ((1 byte-address))
setm: ((1 byte-address)) <= 1182
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1182
run: 488 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1182 to #\space
run: 489 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 76 => ((4 integer))
setm: ((4 integer)) <= 76
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 76
run: 490 clear-screen 11: (((jump)) ((-6 offset)))
run: 491 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 492 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 493 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1183 => ((1 byte-address))
setm: ((1 byte-address)) <= 1183
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1183
run: 494 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1183 to #\space
run: 495 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 77 => ((4 integer))
setm: ((4 integer)) <= 77
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 77
run: 496 clear-screen 11: (((jump)) ((-6 offset)))
run: 497 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 498 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 499 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1184 => ((1 byte-address))
setm: ((1 byte-address)) <= 1184
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1184
run: 500 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1184 to #\space
schedule: scheduling clear-screen/init-fake-terminal/main for further processing
schedule: clear-screen/init-fake-terminal/main
run: 501 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 78 => ((4 integer))
setm: ((4 integer)) <= 78
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 78
run: 502 clear-screen 11: (((jump)) ((-6 offset)))
run: 503 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 504 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 505 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1185 => ((1 byte-address))
setm: ((1 byte-address)) <= 1185
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1185
run: 506 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1185 to #\space
run: 507 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 79 => ((4 integer))
setm: ((4 integer)) <= 79
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 79
run: 508 clear-screen 11: (((jump)) ((-6 offset)))
run: 509 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 510 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 511 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1186 => ((1 byte-address))
setm: ((1 byte-address)) <= 1186
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1186
run: 512 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1186 to #\space
run: 513 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 80 => ((4 integer))
setm: ((4 integer)) <= 80
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 80
run: 514 clear-screen 11: (((jump)) ((-6 offset)))
run: 515 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 516 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 517 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1187 => ((1 byte-address))
setm: ((1 byte-address)) <= 1187
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1187
run: 518 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1187 to #\space
run: 519 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 81 => ((4 integer))
setm: ((4 integer)) <= 81
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 81
run: 520 clear-screen 11: (((jump)) ((-6 offset)))
run: 521 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 522 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 523 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1188 => ((1 byte-address))
setm: ((1 byte-address)) <= 1188
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1188
run: 524 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1188 to #\space
run: 525 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 82 => ((4 integer))
setm: ((4 integer)) <= 82
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 82
run: 526 clear-screen 11: (((jump)) ((-6 offset)))
run: 527 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 528 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 529 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1189 => ((1 byte-address))
setm: ((1 byte-address)) <= 1189
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1189
run: 530 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1189 to #\space
run: 531 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 83 => ((4 integer))
setm: ((4 integer)) <= 83
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 83
run: 532 clear-screen 11: (((jump)) ((-6 offset)))
run: 533 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 534 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 535 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1190 => ((1 byte-address))
setm: ((1 byte-address)) <= 1190
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1190
run: 536 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1190 to #\space
run: 537 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 84 => ((4 integer))
setm: ((4 integer)) <= 84
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 84
run: 538 clear-screen 11: (((jump)) ((-6 offset)))
run: 539 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 540 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 541 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1191 => ((1 byte-address))
setm: ((1 byte-address)) <= 1191
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1191
run: 542 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1191 to #\space
run: 543 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 85 => ((4 integer))
setm: ((4 integer)) <= 85
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 85
run: 544 clear-screen 11: (((jump)) ((-6 offset)))
run: 545 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 546 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 547 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1192 => ((1 byte-address))
setm: ((1 byte-address)) <= 1192
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1192
run: 548 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1192 to #\space
run: 549 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 86 => ((4 integer))
setm: ((4 integer)) <= 86
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 86
run: 550 clear-screen 11: (((jump)) ((-6 offset)))
run: 551 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 552 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 553 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1193 => ((1 byte-address))
setm: ((1 byte-address)) <= 1193
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1193
run: 554 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1193 to #\space
run: 555 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 87 => ((4 integer))
setm: ((4 integer)) <= 87
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 87
run: 556 clear-screen 11: (((jump)) ((-6 offset)))
run: 557 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 558 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 559 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1194 => ((1 byte-address))
setm: ((1 byte-address)) <= 1194
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1194
run: 560 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1194 to #\space
run: 561 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 88 => ((4 integer))
setm: ((4 integer)) <= 88
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 88
run: 562 clear-screen 11: (((jump)) ((-6 offset)))
run: 563 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 564 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 565 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1195 => ((1 byte-address))
setm: ((1 byte-address)) <= 1195
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1195
run: 566 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1195 to #\space
run: 567 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 89 => ((4 integer))
setm: ((4 integer)) <= 89
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 89
run: 568 clear-screen 11: (((jump)) ((-6 offset)))
run: 569 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 570 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 571 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1196 => ((1 byte-address))
setm: ((1 byte-address)) <= 1196
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1196
run: 572 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1196 to #\space
run: 573 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 90 => ((4 integer))
setm: ((4 integer)) <= 90
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 90
run: 574 clear-screen 11: (((jump)) ((-6 offset)))
run: 575 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 576 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 577 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1197 => ((1 byte-address))
setm: ((1 byte-address)) <= 1197
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1197
run: 578 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1197 to #\space
run: 579 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 91 => ((4 integer))
setm: ((4 integer)) <= 91
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 91
run: 580 clear-screen 11: (((jump)) ((-6 offset)))
run: 581 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 582 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 583 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1198 => ((1 byte-address))
setm: ((1 byte-address)) <= 1198
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1198
run: 584 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1198 to #\space
run: 585 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 92 => ((4 integer))
setm: ((4 integer)) <= 92
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 92
run: 586 clear-screen 11: (((jump)) ((-6 offset)))
run: 587 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 588 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 589 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1199 => ((1 byte-address))
setm: ((1 byte-address)) <= 1199
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1199
run: 590 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1199 to #\space
run: 591 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 93 => ((4 integer))
setm: ((4 integer)) <= 93
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 93
run: 592 clear-screen 11: (((jump)) ((-6 offset)))
run: 593 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 594 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 595 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1200 => ((1 byte-address))
setm: ((1 byte-address)) <= 1200
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1200
run: 596 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1200 to #\space
run: 597 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 94 => ((4 integer))
setm: ((4 integer)) <= 94
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 94
run: 598 clear-screen 11: (((jump)) ((-6 offset)))
run: 599 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 600 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 601 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1201 => ((1 byte-address))
setm: ((1 byte-address)) <= 1201
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1201
run: 602 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1201 to #\space
run: 603 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 95 => ((4 integer))
setm: ((4 integer)) <= 95
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 95
run: 604 clear-screen 11: (((jump)) ((-6 offset)))
run: 605 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 606 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 607 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1202 => ((1 byte-address))
setm: ((1 byte-address)) <= 1202
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1202
run: 608 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1202 to #\space
run: 609 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 96 => ((4 integer))
setm: ((4 integer)) <= 96
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 96
run: 610 clear-screen 11: (((jump)) ((-6 offset)))
run: 611 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 612 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 613 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1203 => ((1 byte-address))
setm: ((1 byte-address)) <= 1203
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1203
run: 614 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1203 to #\space
run: 615 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 97 => ((4 integer))
setm: ((4 integer)) <= 97
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 97
run: 616 clear-screen 11: (((jump)) ((-6 offset)))
run: 617 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 618 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 619 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1204 => ((1 byte-address))
setm: ((1 byte-address)) <= 1204
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1204
run: 620 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1204 to #\space
run: 621 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 98 => ((4 integer))
setm: ((4 integer)) <= 98
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 98
run: 622 clear-screen 11: (((jump)) ((-6 offset)))
run: 623 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 624 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 625 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1205 => ((1 byte-address))
setm: ((1 byte-address)) <= 1205
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1205
run: 626 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1205 to #\space
run: 627 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 99 => ((4 integer))
setm: ((4 integer)) <= 99
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 99
run: 628 clear-screen 11: (((jump)) ((-6 offset)))
run: 629 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 630 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 631 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1206 => ((1 byte-address))
setm: ((1 byte-address)) <= 1206
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1206
run: 632 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1206 to #\space
run: 633 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 100 => ((4 integer))
setm: ((4 integer)) <= 100
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 100
run: 634 clear-screen 11: (((jump)) ((-6 offset)))
run: 635 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 636 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 637 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1207 => ((1 byte-address))
setm: ((1 byte-address)) <= 1207
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1207
run: 638 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1207 to #\space
run: 639 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 101 => ((4 integer))
setm: ((4 integer)) <= 101
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 101
run: 640 clear-screen 11: (((jump)) ((-6 offset)))
run: 641 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 642 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 643 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1208 => ((1 byte-address))
setm: ((1 byte-address)) <= 1208
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1208
run: 644 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1208 to #\space
run: 645 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 102 => ((4 integer))
setm: ((4 integer)) <= 102
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 102
run: 646 clear-screen 11: (((jump)) ((-6 offset)))
run: 647 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 648 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 649 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1209 => ((1 byte-address))
setm: ((1 byte-address)) <= 1209
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1209
run: 650 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1209 to #\space
run: 651 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 103 => ((4 integer))
setm: ((4 integer)) <= 103
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 103
run: 652 clear-screen 11: (((jump)) ((-6 offset)))
run: 653 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 654 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 655 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1210 => ((1 byte-address))
setm: ((1 byte-address)) <= 1210
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1210
run: 656 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1210 to #\space
run: 657 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 104 => ((4 integer))
setm: ((4 integer)) <= 104
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 104
run: 658 clear-screen 11: (((jump)) ((-6 offset)))
run: 659 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 660 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 661 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1211 => ((1 byte-address))
setm: ((1 byte-address)) <= 1211
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1211
run: 662 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1211 to #\space
run: 663 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 105 => ((4 integer))
setm: ((4 integer)) <= 105
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 105
run: 664 clear-screen 11: (((jump)) ((-6 offset)))
run: 665 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 666 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 667 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1212 => ((1 byte-address))
setm: ((1 byte-address)) <= 1212
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1212
run: 668 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1212 to #\space
run: 669 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 106 => ((4 integer))
setm: ((4 integer)) <= 106
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 106
run: 670 clear-screen 11: (((jump)) ((-6 offset)))
run: 671 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 672 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 673 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1213 => ((1 byte-address))
setm: ((1 byte-address)) <= 1213
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1213
run: 674 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1213 to #\space
run: 675 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 107 => ((4 integer))
setm: ((4 integer)) <= 107
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 107
run: 676 clear-screen 11: (((jump)) ((-6 offset)))
run: 677 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 678 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 679 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1214 => ((1 byte-address))
setm: ((1 byte-address)) <= 1214
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1214
run: 680 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1214 to #\space
run: 681 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 108 => ((4 integer))
setm: ((4 integer)) <= 108
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 108
run: 682 clear-screen 11: (((jump)) ((-6 offset)))
run: 683 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 684 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 685 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1215 => ((1 byte-address))
setm: ((1 byte-address)) <= 1215
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1215
run: 686 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1215 to #\space
run: 687 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 109 => ((4 integer))
setm: ((4 integer)) <= 109
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 109
run: 688 clear-screen 11: (((jump)) ((-6 offset)))
run: 689 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 690 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 691 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1216 => ((1 byte-address))
setm: ((1 byte-address)) <= 1216
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1216
run: 692 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1216 to #\space
run: 693 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 110 => ((4 integer))
setm: ((4 integer)) <= 110
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 110
run: 694 clear-screen 11: (((jump)) ((-6 offset)))
run: 695 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 696 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 697 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1217 => ((1 byte-address))
setm: ((1 byte-address)) <= 1217
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1217
run: 698 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1217 to #\space
run: 699 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 111 => ((4 integer))
setm: ((4 integer)) <= 111
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 111
run: 700 clear-screen 11: (((jump)) ((-6 offset)))
run: 701 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 702 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 703 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1218 => ((1 byte-address))
setm: ((1 byte-address)) <= 1218
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1218
run: 704 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1218 to #\space
run: 705 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 112 => ((4 integer))
setm: ((4 integer)) <= 112
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 112
run: 706 clear-screen 11: (((jump)) ((-6 offset)))
run: 707 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 708 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 709 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1219 => ((1 byte-address))
setm: ((1 byte-address)) <= 1219
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1219
run: 710 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1219 to #\space
run: 711 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 113 => ((4 integer))
setm: ((4 integer)) <= 113
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 113
run: 712 clear-screen 11: (((jump)) ((-6 offset)))
run: 713 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 714 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 715 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1220 => ((1 byte-address))
setm: ((1 byte-address)) <= 1220
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1220
run: 716 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1220 to #\space
run: 717 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 114 => ((4 integer))
setm: ((4 integer)) <= 114
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 114
run: 718 clear-screen 11: (((jump)) ((-6 offset)))
run: 719 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 720 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 721 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1221 => ((1 byte-address))
setm: ((1 byte-address)) <= 1221
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1221
run: 722 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1221 to #\space
run: 723 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 115 => ((4 integer))
setm: ((4 integer)) <= 115
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 115
run: 724 clear-screen 11: (((jump)) ((-6 offset)))
run: 725 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 726 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 727 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1222 => ((1 byte-address))
setm: ((1 byte-address)) <= 1222
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1222
run: 728 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1222 to #\space
run: 729 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 116 => ((4 integer))
setm: ((4 integer)) <= 116
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 116
run: 730 clear-screen 11: (((jump)) ((-6 offset)))
run: 731 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 732 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 733 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1223 => ((1 byte-address))
setm: ((1 byte-address)) <= 1223
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1223
run: 734 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1223 to #\space
run: 735 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 117 => ((4 integer))
setm: ((4 integer)) <= 117
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 117
run: 736 clear-screen 11: (((jump)) ((-6 offset)))
run: 737 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 738 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 739 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1224 => ((1 byte-address))
setm: ((1 byte-address)) <= 1224
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1224
run: 740 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1224 to #\space
run: 741 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 118 => ((4 integer))
setm: ((4 integer)) <= 118
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 118
run: 742 clear-screen 11: (((jump)) ((-6 offset)))
run: 743 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 744 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 745 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1225 => ((1 byte-address))
setm: ((1 byte-address)) <= 1225
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1225
run: 746 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1225 to #\space
run: 747 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 119 => ((4 integer))
setm: ((4 integer)) <= 119
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 119
run: 748 clear-screen 11: (((jump)) ((-6 offset)))
run: 749 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 750 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 751 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1226 => ((1 byte-address))
setm: ((1 byte-address)) <= 1226
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1226
run: 752 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1226 to #\space
run: 753 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 120 => ((4 integer))
setm: ((4 integer)) <= 120
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 120
run: 754 clear-screen 11: (((jump)) ((-6 offset)))
run: 755 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 756 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 757 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1227 => ((1 byte-address))
setm: ((1 byte-address)) <= 1227
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1227
run: 758 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1227 to #\space
run: 759 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 121 => ((4 integer))
setm: ((4 integer)) <= 121
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 121
run: 760 clear-screen 11: (((jump)) ((-6 offset)))
run: 761 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 762 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 763 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1228 => ((1 byte-address))
setm: ((1 byte-address)) <= 1228
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1228
run: 764 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1228 to #\space
run: 765 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 122 => ((4 integer))
setm: ((4 integer)) <= 122
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 122
run: 766 clear-screen 11: (((jump)) ((-6 offset)))
run: 767 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 768 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 769 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1229 => ((1 byte-address))
setm: ((1 byte-address)) <= 1229
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1229
run: 770 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1229 to #\space
run: 771 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 123 => ((4 integer))
setm: ((4 integer)) <= 123
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 123
run: 772 clear-screen 11: (((jump)) ((-6 offset)))
run: 773 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 774 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 775 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1230 => ((1 byte-address))
setm: ((1 byte-address)) <= 1230
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1230
run: 776 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1230 to #\space
run: 777 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 124 => ((4 integer))
setm: ((4 integer)) <= 124
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 124
run: 778 clear-screen 11: (((jump)) ((-6 offset)))
run: 779 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 780 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 781 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1231 => ((1 byte-address))
setm: ((1 byte-address)) <= 1231
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1231
run: 782 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1231 to #\space
run: 783 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 125 => ((4 integer))
setm: ((4 integer)) <= 125
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 125
run: 784 clear-screen 11: (((jump)) ((-6 offset)))
run: 785 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 786 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 787 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1232 => ((1 byte-address))
setm: ((1 byte-address)) <= 1232
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1232
run: 788 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1232 to #\space
run: 789 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 126 => ((4 integer))
setm: ((4 integer)) <= 126
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 126
run: 790 clear-screen 11: (((jump)) ((-6 offset)))
run: 791 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 792 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 793 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1233 => ((1 byte-address))
setm: ((1 byte-address)) <= 1233
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1233
run: 794 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1233 to #\space
run: 795 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 127 => ((4 integer))
setm: ((4 integer)) <= 127
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 127
run: 796 clear-screen 11: (((jump)) ((-6 offset)))
run: 797 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 798 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 799 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1234 => ((1 byte-address))
setm: ((1 byte-address)) <= 1234
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1234
run: 800 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1234 to #\space
run: 801 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 128 => ((4 integer))
setm: ((4 integer)) <= 128
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 128
run: 802 clear-screen 11: (((jump)) ((-6 offset)))
run: 803 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 804 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 805 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1235 => ((1 byte-address))
setm: ((1 byte-address)) <= 1235
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1235
run: 806 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1235 to #\space
run: 807 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 129 => ((4 integer))
setm: ((4 integer)) <= 129
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 129
run: 808 clear-screen 11: (((jump)) ((-6 offset)))
run: 809 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 810 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 811 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1236 => ((1 byte-address))
setm: ((1 byte-address)) <= 1236
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1236
run: 812 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1236 to #\space
run: 813 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 130 => ((4 integer))
setm: ((4 integer)) <= 130
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 130
run: 814 clear-screen 11: (((jump)) ((-6 offset)))
run: 815 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 816 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 817 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1237 => ((1 byte-address))
setm: ((1 byte-address)) <= 1237
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1237
run: 818 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1237 to #\space
run: 819 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 131 => ((4 integer))
setm: ((4 integer)) <= 131
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 131
run: 820 clear-screen 11: (((jump)) ((-6 offset)))
run: 821 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 822 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 823 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1238 => ((1 byte-address))
setm: ((1 byte-address)) <= 1238
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1238
run: 824 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1238 to #\space
run: 825 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 132 => ((4 integer))
setm: ((4 integer)) <= 132
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 132
run: 826 clear-screen 11: (((jump)) ((-6 offset)))
run: 827 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 828 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 829 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1239 => ((1 byte-address))
setm: ((1 byte-address)) <= 1239
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1239
run: 830 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1239 to #\space
run: 831 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 133 => ((4 integer))
setm: ((4 integer)) <= 133
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 133
run: 832 clear-screen 11: (((jump)) ((-6 offset)))
run: 833 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 834 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 835 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1240 => ((1 byte-address))
setm: ((1 byte-address)) <= 1240
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1240
run: 836 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1240 to #\space
run: 837 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 134 => ((4 integer))
setm: ((4 integer)) <= 134
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 134
run: 838 clear-screen 11: (((jump)) ((-6 offset)))
run: 839 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 840 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 841 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1241 => ((1 byte-address))
setm: ((1 byte-address)) <= 1241
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1241
run: 842 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1241 to #\space
run: 843 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 135 => ((4 integer))
setm: ((4 integer)) <= 135
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 135
run: 844 clear-screen 11: (((jump)) ((-6 offset)))
run: 845 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 846 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 847 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1242 => ((1 byte-address))
setm: ((1 byte-address)) <= 1242
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1242
run: 848 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1242 to #\space
run: 849 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 136 => ((4 integer))
setm: ((4 integer)) <= 136
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 136
run: 850 clear-screen 11: (((jump)) ((-6 offset)))
run: 851 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 852 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 853 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1243 => ((1 byte-address))
setm: ((1 byte-address)) <= 1243
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1243
run: 854 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1243 to #\space
run: 855 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 137 => ((4 integer))
setm: ((4 integer)) <= 137
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 137
run: 856 clear-screen 11: (((jump)) ((-6 offset)))
run: 857 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 858 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 859 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1244 => ((1 byte-address))
setm: ((1 byte-address)) <= 1244
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1244
run: 860 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1244 to #\space
run: 861 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 138 => ((4 integer))
setm: ((4 integer)) <= 138
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 138
run: 862 clear-screen 11: (((jump)) ((-6 offset)))
run: 863 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 864 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 865 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1245 => ((1 byte-address))
setm: ((1 byte-address)) <= 1245
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1245
run: 866 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1245 to #\space
run: 867 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 139 => ((4 integer))
setm: ((4 integer)) <= 139
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 139
run: 868 clear-screen 11: (((jump)) ((-6 offset)))
run: 869 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 870 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 871 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1246 => ((1 byte-address))
setm: ((1 byte-address)) <= 1246
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1246
run: 872 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1246 to #\space
run: 873 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 140 => ((4 integer))
setm: ((4 integer)) <= 140
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 140
run: 874 clear-screen 11: (((jump)) ((-6 offset)))
run: 875 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 876 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 877 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1247 => ((1 byte-address))
setm: ((1 byte-address)) <= 1247
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1247
run: 878 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1247 to #\space
run: 879 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 141 => ((4 integer))
setm: ((4 integer)) <= 141
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 141
run: 880 clear-screen 11: (((jump)) ((-6 offset)))
run: 881 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 882 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 883 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1248 => ((1 byte-address))
setm: ((1 byte-address)) <= 1248
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1248
run: 884 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1248 to #\space
run: 885 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 142 => ((4 integer))
setm: ((4 integer)) <= 142
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 142
run: 886 clear-screen 11: (((jump)) ((-6 offset)))
run: 887 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 888 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 889 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1249 => ((1 byte-address))
setm: ((1 byte-address)) <= 1249
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1249
run: 890 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1249 to #\space
run: 891 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 143 => ((4 integer))
setm: ((4 integer)) <= 143
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 143
run: 892 clear-screen 11: (((jump)) ((-6 offset)))
run: 893 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 894 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 895 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1250 => ((1 byte-address))
setm: ((1 byte-address)) <= 1250
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1250
run: 896 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1250 to #\space
run: 897 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 144 => ((4 integer))
setm: ((4 integer)) <= 144
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 144
run: 898 clear-screen 11: (((jump)) ((-6 offset)))
run: 899 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 900 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 901 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1251 => ((1 byte-address))
setm: ((1 byte-address)) <= 1251
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1251
run: 902 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1251 to #\space
run: 903 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 145 => ((4 integer))
setm: ((4 integer)) <= 145
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 145
run: 904 clear-screen 11: (((jump)) ((-6 offset)))
run: 905 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 906 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 907 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1252 => ((1 byte-address))
setm: ((1 byte-address)) <= 1252
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1252
run: 908 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1252 to #\space
run: 909 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 146 => ((4 integer))
setm: ((4 integer)) <= 146
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 146
run: 910 clear-screen 11: (((jump)) ((-6 offset)))
run: 911 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 912 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 913 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1253 => ((1 byte-address))
setm: ((1 byte-address)) <= 1253
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1253
run: 914 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1253 to #\space
run: 915 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 147 => ((4 integer))
setm: ((4 integer)) <= 147
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 147
run: 916 clear-screen 11: (((jump)) ((-6 offset)))
run: 917 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 918 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 919 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1254 => ((1 byte-address))
setm: ((1 byte-address)) <= 1254
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1254
run: 920 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1254 to #\space
run: 921 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 148 => ((4 integer))
setm: ((4 integer)) <= 148
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 148
run: 922 clear-screen 11: (((jump)) ((-6 offset)))
run: 923 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 924 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 925 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1255 => ((1 byte-address))
setm: ((1 byte-address)) <= 1255
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1255
run: 926 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1255 to #\space
run: 927 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 149 => ((4 integer))
setm: ((4 integer)) <= 149
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 149
run: 928 clear-screen 11: (((jump)) ((-6 offset)))
run: 929 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 930 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 931 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1256 => ((1 byte-address))
setm: ((1 byte-address)) <= 1256
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1256
run: 932 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1256 to #\space
run: 933 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 150 => ((4 integer))
setm: ((4 integer)) <= 150
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 150
run: 934 clear-screen 11: (((jump)) ((-6 offset)))
run: 935 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 936 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 937 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1257 => ((1 byte-address))
setm: ((1 byte-address)) <= 1257
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1257
run: 938 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1257 to #\space
run: 939 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 151 => ((4 integer))
setm: ((4 integer)) <= 151
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 151
run: 940 clear-screen 11: (((jump)) ((-6 offset)))
run: 941 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 942 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 943 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1258 => ((1 byte-address))
setm: ((1 byte-address)) <= 1258
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1258
run: 944 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1258 to #\space
run: 945 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 152 => ((4 integer))
setm: ((4 integer)) <= 152
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 152
run: 946 clear-screen 11: (((jump)) ((-6 offset)))
run: 947 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 948 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 949 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1259 => ((1 byte-address))
setm: ((1 byte-address)) <= 1259
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1259
run: 950 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1259 to #\space
run: 951 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 153 => ((4 integer))
setm: ((4 integer)) <= 153
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 153
run: 952 clear-screen 11: (((jump)) ((-6 offset)))
run: 953 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 954 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 955 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1260 => ((1 byte-address))
setm: ((1 byte-address)) <= 1260
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1260
run: 956 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1260 to #\space
run: 957 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 154 => ((4 integer))
setm: ((4 integer)) <= 154
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 154
run: 958 clear-screen 11: (((jump)) ((-6 offset)))
run: 959 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 960 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 961 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1261 => ((1 byte-address))
setm: ((1 byte-address)) <= 1261
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1261
run: 962 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1261 to #\space
run: 963 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 155 => ((4 integer))
setm: ((4 integer)) <= 155
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 155
run: 964 clear-screen 11: (((jump)) ((-6 offset)))
run: 965 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 966 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 967 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1262 => ((1 byte-address))
setm: ((1 byte-address)) <= 1262
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1262
run: 968 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1262 to #\space
run: 969 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 156 => ((4 integer))
setm: ((4 integer)) <= 156
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 156
run: 970 clear-screen 11: (((jump)) ((-6 offset)))
run: 971 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 972 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 973 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1263 => ((1 byte-address))
setm: ((1 byte-address)) <= 1263
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1263
run: 974 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1263 to #\space
run: 975 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 157 => ((4 integer))
setm: ((4 integer)) <= 157
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 157
run: 976 clear-screen 11: (((jump)) ((-6 offset)))
run: 977 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 978 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 979 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1264 => ((1 byte-address))
setm: ((1 byte-address)) <= 1264
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1264
run: 980 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1264 to #\space
run: 981 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 158 => ((4 integer))
setm: ((4 integer)) <= 158
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 158
run: 982 clear-screen 11: (((jump)) ((-6 offset)))
run: 983 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 984 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 985 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1265 => ((1 byte-address))
setm: ((1 byte-address)) <= 1265
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1265
run: 986 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1265 to #\space
run: 987 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 159 => ((4 integer))
setm: ((4 integer)) <= 159
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 159
run: 988 clear-screen 11: (((jump)) ((-6 offset)))
run: 989 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 990 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 991 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1266 => ((1 byte-address))
setm: ((1 byte-address)) <= 1266
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1266
run: 992 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1266 to #\space
run: 993 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 160 => ((4 integer))
setm: ((4 integer)) <= 160
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 160
run: 994 clear-screen 11: (((jump)) ((-6 offset)))
run: 995 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 996 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 997 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1267 => ((1 byte-address))
setm: ((1 byte-address)) <= 1267
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1267
run: 998 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1267 to #\space
run: 999 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 161 => ((4 integer))
setm: ((4 integer)) <= 161
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 161
run: 1000 clear-screen 11: (((jump)) ((-6 offset)))
schedule: scheduling clear-screen/init-fake-terminal/main for further processing
schedule: clear-screen/init-fake-terminal/main
run: 1001 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1002 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1003 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1268 => ((1 byte-address))
setm: ((1 byte-address)) <= 1268
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1268
run: 1004 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1268 to #\space
run: 1005 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 162 => ((4 integer))
setm: ((4 integer)) <= 162
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 162
run: 1006 clear-screen 11: (((jump)) ((-6 offset)))
run: 1007 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1008 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1009 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1269 => ((1 byte-address))
setm: ((1 byte-address)) <= 1269
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1269
run: 1010 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1269 to #\space
run: 1011 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 163 => ((4 integer))
setm: ((4 integer)) <= 163
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 163
run: 1012 clear-screen 11: (((jump)) ((-6 offset)))
run: 1013 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1014 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1015 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1270 => ((1 byte-address))
setm: ((1 byte-address)) <= 1270
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1270
run: 1016 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1270 to #\space
run: 1017 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 164 => ((4 integer))
setm: ((4 integer)) <= 164
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 164
run: 1018 clear-screen 11: (((jump)) ((-6 offset)))
run: 1019 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1020 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1021 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1271 => ((1 byte-address))
setm: ((1 byte-address)) <= 1271
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1271
run: 1022 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1271 to #\space
run: 1023 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 165 => ((4 integer))
setm: ((4 integer)) <= 165
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 165
run: 1024 clear-screen 11: (((jump)) ((-6 offset)))
run: 1025 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1026 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1027 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1272 => ((1 byte-address))
setm: ((1 byte-address)) <= 1272
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1272
run: 1028 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1272 to #\space
run: 1029 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 166 => ((4 integer))
setm: ((4 integer)) <= 166
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 166
run: 1030 clear-screen 11: (((jump)) ((-6 offset)))
run: 1031 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1032 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1033 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1273 => ((1 byte-address))
setm: ((1 byte-address)) <= 1273
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1273
run: 1034 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1273 to #\space
run: 1035 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 167 => ((4 integer))
setm: ((4 integer)) <= 167
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 167
run: 1036 clear-screen 11: (((jump)) ((-6 offset)))
run: 1037 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1038 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1039 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1274 => ((1 byte-address))
setm: ((1 byte-address)) <= 1274
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1274
run: 1040 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1274 to #\space
run: 1041 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 168 => ((4 integer))
setm: ((4 integer)) <= 168
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 168
run: 1042 clear-screen 11: (((jump)) ((-6 offset)))
run: 1043 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1044 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1045 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1275 => ((1 byte-address))
setm: ((1 byte-address)) <= 1275
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1275
run: 1046 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1275 to #\space
run: 1047 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 169 => ((4 integer))
setm: ((4 integer)) <= 169
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 169
run: 1048 clear-screen 11: (((jump)) ((-6 offset)))
run: 1049 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1050 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1051 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1276 => ((1 byte-address))
setm: ((1 byte-address)) <= 1276
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1276
run: 1052 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1276 to #\space
run: 1053 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 170 => ((4 integer))
setm: ((4 integer)) <= 170
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 170
run: 1054 clear-screen 11: (((jump)) ((-6 offset)))
run: 1055 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1056 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1057 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1277 => ((1 byte-address))
setm: ((1 byte-address)) <= 1277
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1277
run: 1058 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1277 to #\space
run: 1059 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 171 => ((4 integer))
setm: ((4 integer)) <= 171
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 171
run: 1060 clear-screen 11: (((jump)) ((-6 offset)))
run: 1061 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1062 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1063 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1278 => ((1 byte-address))
setm: ((1 byte-address)) <= 1278
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1278
run: 1064 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1278 to #\space
run: 1065 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 172 => ((4 integer))
setm: ((4 integer)) <= 172
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 172
run: 1066 clear-screen 11: (((jump)) ((-6 offset)))
run: 1067 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1068 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1069 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1279 => ((1 byte-address))
setm: ((1 byte-address)) <= 1279
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1279
run: 1070 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1279 to #\space
run: 1071 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 173 => ((4 integer))
setm: ((4 integer)) <= 173
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 173
run: 1072 clear-screen 11: (((jump)) ((-6 offset)))
run: 1073 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1074 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1075 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1280 => ((1 byte-address))
setm: ((1 byte-address)) <= 1280
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1280
run: 1076 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1280 to #\space
run: 1077 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 174 => ((4 integer))
setm: ((4 integer)) <= 174
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 174
run: 1078 clear-screen 11: (((jump)) ((-6 offset)))
run: 1079 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1080 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1081 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1281 => ((1 byte-address))
setm: ((1 byte-address)) <= 1281
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1281
run: 1082 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1281 to #\space
run: 1083 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 175 => ((4 integer))
setm: ((4 integer)) <= 175
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 175
run: 1084 clear-screen 11: (((jump)) ((-6 offset)))
run: 1085 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1086 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1087 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1282 => ((1 byte-address))
setm: ((1 byte-address)) <= 1282
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1282
run: 1088 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1282 to #\space
run: 1089 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 176 => ((4 integer))
setm: ((4 integer)) <= 176
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 176
run: 1090 clear-screen 11: (((jump)) ((-6 offset)))
run: 1091 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1092 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1093 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1283 => ((1 byte-address))
setm: ((1 byte-address)) <= 1283
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1283
run: 1094 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1283 to #\space
run: 1095 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 177 => ((4 integer))
setm: ((4 integer)) <= 177
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 177
run: 1096 clear-screen 11: (((jump)) ((-6 offset)))
run: 1097 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1098 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1099 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1284 => ((1 byte-address))
setm: ((1 byte-address)) <= 1284
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1284
run: 1100 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1284 to #\space
run: 1101 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 178 => ((4 integer))
setm: ((4 integer)) <= 178
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 178
run: 1102 clear-screen 11: (((jump)) ((-6 offset)))
run: 1103 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1104 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1105 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1285 => ((1 byte-address))
setm: ((1 byte-address)) <= 1285
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1285
run: 1106 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1285 to #\space
run: 1107 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 179 => ((4 integer))
setm: ((4 integer)) <= 179
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 179
run: 1108 clear-screen 11: (((jump)) ((-6 offset)))
run: 1109 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1110 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1111 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1286 => ((1 byte-address))
setm: ((1 byte-address)) <= 1286
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1286
run: 1112 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1286 to #\space
run: 1113 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 180 => ((4 integer))
setm: ((4 integer)) <= 180
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 180
run: 1114 clear-screen 11: (((jump)) ((-6 offset)))
run: 1115 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1116 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1117 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1287 => ((1 byte-address))
setm: ((1 byte-address)) <= 1287
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1287
run: 1118 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1287 to #\space
run: 1119 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 181 => ((4 integer))
setm: ((4 integer)) <= 181
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 181
run: 1120 clear-screen 11: (((jump)) ((-6 offset)))
run: 1121 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1122 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1123 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1288 => ((1 byte-address))
setm: ((1 byte-address)) <= 1288
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1288
run: 1124 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1288 to #\space
run: 1125 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 182 => ((4 integer))
setm: ((4 integer)) <= 182
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 182
run: 1126 clear-screen 11: (((jump)) ((-6 offset)))
run: 1127 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1128 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1129 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1289 => ((1 byte-address))
setm: ((1 byte-address)) <= 1289
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1289
run: 1130 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1289 to #\space
run: 1131 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 183 => ((4 integer))
setm: ((4 integer)) <= 183
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 183
run: 1132 clear-screen 11: (((jump)) ((-6 offset)))
run: 1133 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1134 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1135 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1290 => ((1 byte-address))
setm: ((1 byte-address)) <= 1290
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1290
run: 1136 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1290 to #\space
run: 1137 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 184 => ((4 integer))
setm: ((4 integer)) <= 184
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 184
run: 1138 clear-screen 11: (((jump)) ((-6 offset)))
run: 1139 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1140 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1141 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1291 => ((1 byte-address))
setm: ((1 byte-address)) <= 1291
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1291
run: 1142 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1291 to #\space
run: 1143 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 185 => ((4 integer))
setm: ((4 integer)) <= 185
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 185
run: 1144 clear-screen 11: (((jump)) ((-6 offset)))
run: 1145 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1146 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1147 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1292 => ((1 byte-address))
setm: ((1 byte-address)) <= 1292
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1292
run: 1148 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1292 to #\space
run: 1149 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 186 => ((4 integer))
setm: ((4 integer)) <= 186
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 186
run: 1150 clear-screen 11: (((jump)) ((-6 offset)))
run: 1151 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1152 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1153 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1293 => ((1 byte-address))
setm: ((1 byte-address)) <= 1293
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1293
run: 1154 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1293 to #\space
run: 1155 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 187 => ((4 integer))
setm: ((4 integer)) <= 187
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 187
run: 1156 clear-screen 11: (((jump)) ((-6 offset)))
run: 1157 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1158 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1159 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1294 => ((1 byte-address))
setm: ((1 byte-address)) <= 1294
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1294
run: 1160 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1294 to #\space
run: 1161 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 188 => ((4 integer))
setm: ((4 integer)) <= 188
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 188
run: 1162 clear-screen 11: (((jump)) ((-6 offset)))
run: 1163 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1164 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1165 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1295 => ((1 byte-address))
setm: ((1 byte-address)) <= 1295
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1295
run: 1166 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1295 to #\space
run: 1167 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 189 => ((4 integer))
setm: ((4 integer)) <= 189
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 189
run: 1168 clear-screen 11: (((jump)) ((-6 offset)))
run: 1169 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1170 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1171 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1296 => ((1 byte-address))
setm: ((1 byte-address)) <= 1296
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1296
run: 1172 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1296 to #\space
run: 1173 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 190 => ((4 integer))
setm: ((4 integer)) <= 190
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 190
run: 1174 clear-screen 11: (((jump)) ((-6 offset)))
run: 1175 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1176 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1177 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1297 => ((1 byte-address))
setm: ((1 byte-address)) <= 1297
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1297
run: 1178 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1297 to #\space
run: 1179 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 191 => ((4 integer))
setm: ((4 integer)) <= 191
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 191
run: 1180 clear-screen 11: (((jump)) ((-6 offset)))
run: 1181 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1182 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1183 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1298 => ((1 byte-address))
setm: ((1 byte-address)) <= 1298
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1298
run: 1184 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1298 to #\space
run: 1185 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 192 => ((4 integer))
setm: ((4 integer)) <= 192
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 192
run: 1186 clear-screen 11: (((jump)) ((-6 offset)))
run: 1187 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1188 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1189 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1299 => ((1 byte-address))
setm: ((1 byte-address)) <= 1299
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1299
run: 1190 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1299 to #\space
run: 1191 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 193 => ((4 integer))
setm: ((4 integer)) <= 193
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 193
run: 1192 clear-screen 11: (((jump)) ((-6 offset)))
run: 1193 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1194 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1195 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1300 => ((1 byte-address))
setm: ((1 byte-address)) <= 1300
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1300
run: 1196 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1300 to #\space
run: 1197 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 194 => ((4 integer))
setm: ((4 integer)) <= 194
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 194
run: 1198 clear-screen 11: (((jump)) ((-6 offset)))
run: 1199 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1200 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1201 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1301 => ((1 byte-address))
setm: ((1 byte-address)) <= 1301
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1301
run: 1202 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1301 to #\space
run: 1203 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 195 => ((4 integer))
setm: ((4 integer)) <= 195
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 195
run: 1204 clear-screen 11: (((jump)) ((-6 offset)))
run: 1205 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1206 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1207 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1302 => ((1 byte-address))
setm: ((1 byte-address)) <= 1302
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1302
run: 1208 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1302 to #\space
run: 1209 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 196 => ((4 integer))
setm: ((4 integer)) <= 196
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 196
run: 1210 clear-screen 11: (((jump)) ((-6 offset)))
run: 1211 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1212 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1213 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1303 => ((1 byte-address))
setm: ((1 byte-address)) <= 1303
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1303
run: 1214 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1303 to #\space
run: 1215 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 197 => ((4 integer))
setm: ((4 integer)) <= 197
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 197
run: 1216 clear-screen 11: (((jump)) ((-6 offset)))
run: 1217 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1218 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1219 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1304 => ((1 byte-address))
setm: ((1 byte-address)) <= 1304
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1304
run: 1220 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1304 to #\space
run: 1221 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 198 => ((4 integer))
setm: ((4 integer)) <= 198
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 198
run: 1222 clear-screen 11: (((jump)) ((-6 offset)))
run: 1223 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1224 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1225 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1305 => ((1 byte-address))
setm: ((1 byte-address)) <= 1305
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1305
run: 1226 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1305 to #\space
run: 1227 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 199 => ((4 integer))
setm: ((4 integer)) <= 199
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 199
run: 1228 clear-screen 11: (((jump)) ((-6 offset)))
run: 1229 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to nil
run: 1230 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1231 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1306 => ((1 byte-address))
setm: ((1 byte-address)) <= 1306
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1309 to 1306
run: 1232 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1306 to #\space
run: 1233 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 200 => ((4 integer))
setm: ((4 integer)) <= 200
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1312 to 200
run: 1234 clear-screen 11: (((jump)) ((-6 offset)))
run: 1235 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1313 to t
run: 1236 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1237 clear-screen 12: (((reply)))
reply: nil nil
run: 1238 init-fake-terminal 14: (((reply)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
reply: (((1 terminal-address))) (((2 terminal-address)))
reply: 1101 => ((2 terminal-address))
setm: ((2 terminal-address)) <= 1101
setm: size of ((2 terminal-address)) is 1
setm: ((2 terminal-address)): setting 1003 to 1101
run: 1239 main 3: (((3 list-address)) <- ((init-list)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((Q literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((q literal)) ((K literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((k literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)))
run: 1240 init-list 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1338 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1241 init-list 1: (((1 list-address)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1369 => ((1 list-address))
setm: ((1 list-address)) <= 1369
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1340 to 1369
run: 1242 init-list 2: (((2 list-address)) <- ((copy)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1369 => ((2 list-address))
setm: ((2 list-address)) <= 1369
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 1369
run: 1243 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 0 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\R => ((3 integer))
setm: ((3 integer)) <= #\R
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\R
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1244 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1245 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1371 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1371
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 1371
run: 1246 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1372 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1372
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1371 to 1372
run: 1247 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1248 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1375 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1249 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1369)
run: 1369 => ((1 list-address))
setm: ((1 list-address)) <= 1369
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1377 to 1369
run: 1250 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1371 list-address) (raw))
sizeof: ((1371 list-address) (raw))
run: 1372 => ((2 list-address))
setm: ((2 list-address)) <= 1372
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1378 to 1372
run: 1251 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1372 => ((2 list-address))
setm: ((2 list-address)) <= 1372
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 1372
run: 1252 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1253 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1406 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1254 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1372)
run: 1372 => ((1 list-address))
setm: ((1 list-address)) <= 1372
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1408 to 1372
run: 1255 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1372 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1372
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1409 to 1372
run: 1256 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1372 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1372
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 1372
run: 1257 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\R)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\R))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1372 to integer
setm: ((6 tagged-value-address) (deref)): setting 1373 to #\R
run: 1258 init-list 10: (((jump)) ((-8 offset)))
run: 1259 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 1 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\P => ((3 integer))
setm: ((3 integer)) <= #\P
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\P
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1260 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1261 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1374 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1374
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 1374
run: 1262 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1437 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1437
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1374 to 1437
run: 1263 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1264 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1440 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1265 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1372)
run: 1372 => ((1 list-address))
setm: ((1 list-address)) <= 1372
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1442 to 1372
run: 1266 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1374 list-address) (raw))
sizeof: ((1374 list-address) (raw))
run: 1437 => ((2 list-address))
setm: ((2 list-address)) <= 1437
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1443 to 1437
run: 1267 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1437 => ((2 list-address))
setm: ((2 list-address)) <= 1437
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 1437
run: 1268 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1269 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1471 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1270 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1437)
run: 1437 => ((1 list-address))
setm: ((1 list-address)) <= 1437
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1473 to 1437
run: 1271 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1437 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1437
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1474 to 1437
run: 1272 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1437 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1437
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 1437
run: 1273 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\P))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1437 to integer
setm: ((6 tagged-value-address) (deref)): setting 1438 to #\P
run: 1274 init-list 10: (((jump)) ((-8 offset)))
run: 1275 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 2 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1276 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1277 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1439 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1439
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 1439
run: 1278 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1502 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1502
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1439 to 1502
run: 1279 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1280 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1505 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1281 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1437)
run: 1437 => ((1 list-address))
setm: ((1 list-address)) <= 1437
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1507 to 1437
run: 1282 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1439 list-address) (raw))
sizeof: ((1439 list-address) (raw))
run: 1502 => ((2 list-address))
setm: ((2 list-address)) <= 1502
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1508 to 1502
run: 1283 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1502 => ((2 list-address))
setm: ((2 list-address)) <= 1502
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 1502
run: 1284 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1285 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1536 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1286 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1502)
run: 1502 => ((1 list-address))
setm: ((1 list-address)) <= 1502
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1538 to 1502
run: 1287 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1502 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1502
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1539 to 1502
run: 1288 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1502 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1502
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 1502
run: 1289 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1502 to integer
setm: ((6 tagged-value-address) (deref)): setting 1503 to #\_
run: 1290 init-list 10: (((jump)) ((-8 offset)))
run: 1291 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 3 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1292 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1293 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1504 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1504
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 1504
run: 1294 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1567 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1567
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1504 to 1567
run: 1295 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1296 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1570 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1297 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1502)
run: 1502 => ((1 list-address))
setm: ((1 list-address)) <= 1502
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1572 to 1502
run: 1298 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1504 list-address) (raw))
sizeof: ((1504 list-address) (raw))
run: 1567 => ((2 list-address))
setm: ((2 list-address)) <= 1567
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1573 to 1567
run: 1299 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1567 => ((2 list-address))
setm: ((2 list-address)) <= 1567
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 1567
run: 1300 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1301 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1601 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1302 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1567)
run: 1567 => ((1 list-address))
setm: ((1 list-address)) <= 1567
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1603 to 1567
run: 1303 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1567 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1567
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1604 to 1567
run: 1304 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1567 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1567
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 1567
run: 1305 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1567 to integer
setm: ((6 tagged-value-address) (deref)): setting 1568 to #\_
run: 1306 init-list 10: (((jump)) ((-8 offset)))
run: 1307 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 4 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1308 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1309 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1569 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1569
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 1569
run: 1310 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1632 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1632
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1569 to 1632
run: 1311 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1312 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1635 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1313 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1567)
run: 1567 => ((1 list-address))
setm: ((1 list-address)) <= 1567
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1637 to 1567
run: 1314 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1569 list-address) (raw))
sizeof: ((1569 list-address) (raw))
run: 1632 => ((2 list-address))
setm: ((2 list-address)) <= 1632
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1638 to 1632
run: 1315 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1632 => ((2 list-address))
setm: ((2 list-address)) <= 1632
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 1632
run: 1316 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1317 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1666 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1318 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1632)
run: 1632 => ((1 list-address))
setm: ((1 list-address)) <= 1632
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1668 to 1632
run: 1319 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1632 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1632
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1669 to 1632
run: 1320 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1632 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1632
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 1632
run: 1321 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1632 to integer
setm: ((6 tagged-value-address) (deref)): setting 1633 to #\_
run: 1322 init-list 10: (((jump)) ((-8 offset)))
run: 1323 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 5 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1324 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1325 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1634 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1634
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 1634
run: 1326 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1697 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1697
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1634 to 1697
run: 1327 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1328 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1700 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1329 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1632)
run: 1632 => ((1 list-address))
setm: ((1 list-address)) <= 1632
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1702 to 1632
run: 1330 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1634 list-address) (raw))
sizeof: ((1634 list-address) (raw))
run: 1697 => ((2 list-address))
setm: ((2 list-address)) <= 1697
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1703 to 1697
run: 1331 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1697 => ((2 list-address))
setm: ((2 list-address)) <= 1697
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 1697
run: 1332 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1333 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1731 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1334 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1697)
run: 1697 => ((1 list-address))
setm: ((1 list-address)) <= 1697
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1733 to 1697
run: 1335 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1697 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1697
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1734 to 1697
run: 1336 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1697 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1697
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 1697
run: 1337 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1697 to integer
setm: ((6 tagged-value-address) (deref)): setting 1698 to #\_
run: 1338 init-list 10: (((jump)) ((-8 offset)))
run: 1339 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 6 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\p => ((3 integer))
setm: ((3 integer)) <= #\p
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\p
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1340 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1341 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1699 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1699
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 1699
run: 1342 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1762 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1762
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1699 to 1762
run: 1343 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1344 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1765 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1345 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1697)
run: 1697 => ((1 list-address))
setm: ((1 list-address)) <= 1697
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1767 to 1697
run: 1346 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1699 list-address) (raw))
sizeof: ((1699 list-address) (raw))
run: 1762 => ((2 list-address))
setm: ((2 list-address)) <= 1762
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1768 to 1762
run: 1347 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1762 => ((2 list-address))
setm: ((2 list-address)) <= 1762
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 1762
run: 1348 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1349 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1796 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1350 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1762)
run: 1762 => ((1 list-address))
setm: ((1 list-address)) <= 1762
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1798 to 1762
run: 1351 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1762 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1762
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1799 to 1762
run: 1352 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1762 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1762
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 1762
run: 1353 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\p))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1762 to integer
setm: ((6 tagged-value-address) (deref)): setting 1763 to #\p
run: 1354 init-list 10: (((jump)) ((-8 offset)))
run: 1355 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 7 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\r => ((3 integer))
setm: ((3 integer)) <= #\r
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\r
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1356 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1357 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1764 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1764
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 1764
run: 1358 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1827 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1827
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1764 to 1827
run: 1359 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1360 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1830 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1361 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1762)
run: 1762 => ((1 list-address))
setm: ((1 list-address)) <= 1762
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1832 to 1762
run: 1362 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1764 list-address) (raw))
sizeof: ((1764 list-address) (raw))
run: 1827 => ((2 list-address))
setm: ((2 list-address)) <= 1827
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1833 to 1827
run: 1363 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1827 => ((2 list-address))
setm: ((2 list-address)) <= 1827
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 1827
run: 1364 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1365 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1861 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1366 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1827)
run: 1827 => ((1 list-address))
setm: ((1 list-address)) <= 1827
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1863 to 1827
run: 1367 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1827 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1827
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1864 to 1827
run: 1368 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1827 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1827
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 1827
run: 1369 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\r)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\r))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1827 to integer
setm: ((6 tagged-value-address) (deref)): setting 1828 to #\r
run: 1370 init-list 10: (((jump)) ((-8 offset)))
run: 1371 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 8 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\N => ((3 integer))
setm: ((3 integer)) <= #\N
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\N
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1372 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1373 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1829 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1829
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 1829
run: 1374 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1892 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1892
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1829 to 1892
run: 1375 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1376 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1895 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1377 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1827)
run: 1827 => ((1 list-address))
setm: ((1 list-address)) <= 1827
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1897 to 1827
run: 1378 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1829 list-address) (raw))
sizeof: ((1829 list-address) (raw))
run: 1892 => ((2 list-address))
setm: ((2 list-address)) <= 1892
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1898 to 1892
run: 1379 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1892 => ((2 list-address))
setm: ((2 list-address)) <= 1892
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 1892
run: 1380 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1381 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1926 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1382 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1892)
run: 1892 => ((1 list-address))
setm: ((1 list-address)) <= 1892
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1928 to 1892
run: 1383 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1892 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1892
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1929 to 1892
run: 1384 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1892 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1892
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 1892
run: 1385 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\N)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\N))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1892 to integer
setm: ((6 tagged-value-address) (deref)): setting 1893 to #\N
run: 1386 init-list 10: (((jump)) ((-8 offset)))
run: 1387 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 9 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\P => ((3 integer))
setm: ((3 integer)) <= #\P
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\P
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1388 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1389 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1894 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1894
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 1894
run: 1390 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1957 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1957
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1894 to 1957
run: 1391 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1392 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1960 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1393 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1892)
run: 1892 => ((1 list-address))
setm: ((1 list-address)) <= 1892
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1962 to 1892
run: 1394 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1894 list-address) (raw))
sizeof: ((1894 list-address) (raw))
run: 1957 => ((2 list-address))
setm: ((2 list-address)) <= 1957
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1963 to 1957
run: 1395 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1957 => ((2 list-address))
setm: ((2 list-address)) <= 1957
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 1957
run: 1396 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1397 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1991 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1398 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1957)
run: 1957 => ((1 list-address))
setm: ((1 list-address)) <= 1957
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1993 to 1957
run: 1399 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1957 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1957
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1994 to 1957
run: 1400 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1957 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1957
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 1957
run: 1401 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\P))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1957 to integer
setm: ((6 tagged-value-address) (deref)): setting 1958 to #\P
run: 1402 init-list 10: (((jump)) ((-8 offset)))
run: 1403 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 10 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1404 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1405 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1959 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1959
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 1959
run: 1406 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2022 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2022
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1959 to 2022
run: 1407 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1408 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2025 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1409 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1957)
run: 1957 => ((1 list-address))
setm: ((1 list-address)) <= 1957
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2027 to 1957
run: 1410 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1959 list-address) (raw))
sizeof: ((1959 list-address) (raw))
run: 2022 => ((2 list-address))
setm: ((2 list-address)) <= 2022
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2028 to 2022
run: 1411 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2022 => ((2 list-address))
setm: ((2 list-address)) <= 2022
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 2022
run: 1412 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1413 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2056 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1414 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2022)
run: 2022 => ((1 list-address))
setm: ((1 list-address)) <= 2022
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2058 to 2022
run: 1415 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2022 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2022
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2059 to 2022
run: 1416 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2022 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2022
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 2022
run: 1417 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2022 to integer
setm: ((6 tagged-value-address) (deref)): setting 2023 to #\_
run: 1418 init-list 10: (((jump)) ((-8 offset)))
run: 1419 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 11 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1420 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1421 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2024 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2024
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 2024
run: 1422 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2087 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2087
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2024 to 2087
run: 1423 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1424 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2090 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1425 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2022)
run: 2022 => ((1 list-address))
setm: ((1 list-address)) <= 2022
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2092 to 2022
run: 1426 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2024 list-address) (raw))
sizeof: ((2024 list-address) (raw))
run: 2087 => ((2 list-address))
setm: ((2 list-address)) <= 2087
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2093 to 2087
run: 1427 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2087 => ((2 list-address))
setm: ((2 list-address)) <= 2087
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 2087
run: 1428 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1429 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2121 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1430 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2087)
run: 2087 => ((1 list-address))
setm: ((1 list-address)) <= 2087
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2123 to 2087
run: 1431 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2087 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2087
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2124 to 2087
run: 1432 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2087 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2087
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 2087
run: 1433 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2087 to integer
setm: ((6 tagged-value-address) (deref)): setting 2088 to #\_
run: 1434 init-list 10: (((jump)) ((-8 offset)))
run: 1435 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 12 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1436 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1437 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2089 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2089
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 2089
run: 1438 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2152 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2152
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2089 to 2152
run: 1439 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1440 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2155 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1441 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2087)
run: 2087 => ((1 list-address))
setm: ((1 list-address)) <= 2087
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2157 to 2087
run: 1442 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2089 list-address) (raw))
sizeof: ((2089 list-address) (raw))
run: 2152 => ((2 list-address))
setm: ((2 list-address)) <= 2152
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2158 to 2152
run: 1443 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2152 => ((2 list-address))
setm: ((2 list-address)) <= 2152
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 2152
run: 1444 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1445 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2186 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1446 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2152)
run: 2152 => ((1 list-address))
setm: ((1 list-address)) <= 2152
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2188 to 2152
run: 1447 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2152 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2152
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2189 to 2152
run: 1448 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2152 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2152
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 2152
run: 1449 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2152 to integer
setm: ((6 tagged-value-address) (deref)): setting 2153 to #\_
run: 1450 init-list 10: (((jump)) ((-8 offset)))
run: 1451 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 13 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1452 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1453 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2154 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2154
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 2154
run: 1454 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2217 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2217
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2154 to 2217
run: 1455 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1456 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2220 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1457 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2152)
run: 2152 => ((1 list-address))
setm: ((1 list-address)) <= 2152
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2222 to 2152
run: 1458 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2154 list-address) (raw))
sizeof: ((2154 list-address) (raw))
run: 2217 => ((2 list-address))
setm: ((2 list-address)) <= 2217
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2223 to 2217
run: 1459 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2217 => ((2 list-address))
setm: ((2 list-address)) <= 2217
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 2217
run: 1460 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1461 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2251 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1462 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2217)
run: 2217 => ((1 list-address))
setm: ((1 list-address)) <= 2217
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2253 to 2217
run: 1463 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2217 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2217
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2254 to 2217
run: 1464 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2217 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2217
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 2217
run: 1465 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2217 to integer
setm: ((6 tagged-value-address) (deref)): setting 2218 to #\_
run: 1466 init-list 10: (((jump)) ((-8 offset)))
run: 1467 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 14 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\p => ((3 integer))
setm: ((3 integer)) <= #\p
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\p
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1468 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1469 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2219 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2219
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 2219
run: 1470 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2282 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2282
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2219 to 2282
run: 1471 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1472 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2285 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1473 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2217)
run: 2217 => ((1 list-address))
setm: ((1 list-address)) <= 2217
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2287 to 2217
run: 1474 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2219 list-address) (raw))
sizeof: ((2219 list-address) (raw))
run: 2282 => ((2 list-address))
setm: ((2 list-address)) <= 2282
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2288 to 2282
run: 1475 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2282 => ((2 list-address))
setm: ((2 list-address)) <= 2282
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 2282
run: 1476 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1477 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2316 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1478 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2282)
run: 2282 => ((1 list-address))
setm: ((1 list-address)) <= 2282
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2318 to 2282
run: 1479 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2282 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2282
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2319 to 2282
run: 1480 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2282 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2282
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 2282
run: 1481 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\p))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2282 to integer
setm: ((6 tagged-value-address) (deref)): setting 2283 to #\p
run: 1482 init-list 10: (((jump)) ((-8 offset)))
run: 1483 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 15 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\n => ((3 integer))
setm: ((3 integer)) <= #\n
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\n
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1484 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1485 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2284 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2284
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 2284
run: 1486 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2347 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2347
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2284 to 2347
run: 1487 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1488 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2350 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1489 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2282)
run: 2282 => ((1 list-address))
setm: ((1 list-address)) <= 2282
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2352 to 2282
run: 1490 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2284 list-address) (raw))
sizeof: ((2284 list-address) (raw))
run: 2347 => ((2 list-address))
setm: ((2 list-address)) <= 2347
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2353 to 2347
run: 1491 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2347 => ((2 list-address))
setm: ((2 list-address)) <= 2347
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 2347
run: 1492 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1493 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2381 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1494 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2347)
run: 2347 => ((1 list-address))
setm: ((1 list-address)) <= 2347
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2383 to 2347
run: 1495 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2347 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2347
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2384 to 2347
run: 1496 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2347 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2347
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 2347
run: 1497 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\n)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\n))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2347 to integer
setm: ((6 tagged-value-address) (deref)): setting 2348 to #\n
run: 1498 init-list 10: (((jump)) ((-8 offset)))
run: 1499 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 16 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\B => ((3 integer))
setm: ((3 integer)) <= #\B
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\B
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1500 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
schedule: scheduling init-list/main for further processing
schedule: init-list/main
run: 1501 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2349 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2349
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 2349
run: 1502 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2412 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2412
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2349 to 2412
run: 1503 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1504 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2415 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1505 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2347)
run: 2347 => ((1 list-address))
setm: ((1 list-address)) <= 2347
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2417 to 2347
run: 1506 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2349 list-address) (raw))
sizeof: ((2349 list-address) (raw))
run: 2412 => ((2 list-address))
setm: ((2 list-address)) <= 2412
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2418 to 2412
run: 1507 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2412 => ((2 list-address))
setm: ((2 list-address)) <= 2412
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 2412
run: 1508 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1509 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2446 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1510 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2412)
run: 2412 => ((1 list-address))
setm: ((1 list-address)) <= 2412
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2448 to 2412
run: 1511 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2412 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2412
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2449 to 2412
run: 1512 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2412 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2412
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 2412
run: 1513 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\B)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\B))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2412 to integer
setm: ((6 tagged-value-address) (deref)): setting 2413 to #\B
run: 1514 init-list 10: (((jump)) ((-8 offset)))
run: 1515 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 17 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\P => ((3 integer))
setm: ((3 integer)) <= #\P
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\P
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1516 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1517 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2414 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2414
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 2414
run: 1518 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2477 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2477
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2414 to 2477
run: 1519 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1520 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2480 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1521 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2412)
run: 2412 => ((1 list-address))
setm: ((1 list-address)) <= 2412
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2482 to 2412
run: 1522 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2414 list-address) (raw))
sizeof: ((2414 list-address) (raw))
run: 2477 => ((2 list-address))
setm: ((2 list-address)) <= 2477
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2483 to 2477
run: 1523 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2477 => ((2 list-address))
setm: ((2 list-address)) <= 2477
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 2477
run: 1524 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1525 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2511 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1526 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2477)
run: 2477 => ((1 list-address))
setm: ((1 list-address)) <= 2477
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2513 to 2477
run: 1527 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2477 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2477
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2514 to 2477
run: 1528 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2477 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2477
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 2477
run: 1529 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\P))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2477 to integer
setm: ((6 tagged-value-address) (deref)): setting 2478 to #\P
run: 1530 init-list 10: (((jump)) ((-8 offset)))
run: 1531 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 18 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1532 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1533 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2479 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2479
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 2479
run: 1534 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2542 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2542
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2479 to 2542
run: 1535 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1536 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2545 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1537 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2477)
run: 2477 => ((1 list-address))
setm: ((1 list-address)) <= 2477
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2547 to 2477
run: 1538 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2479 list-address) (raw))
sizeof: ((2479 list-address) (raw))
run: 2542 => ((2 list-address))
setm: ((2 list-address)) <= 2542
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2548 to 2542
run: 1539 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2542 => ((2 list-address))
setm: ((2 list-address)) <= 2542
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 2542
run: 1540 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1541 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2576 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1542 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2542)
run: 2542 => ((1 list-address))
setm: ((1 list-address)) <= 2542
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2578 to 2542
run: 1543 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2542 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2542
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2579 to 2542
run: 1544 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2542 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2542
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 2542
run: 1545 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2542 to integer
setm: ((6 tagged-value-address) (deref)): setting 2543 to #\_
run: 1546 init-list 10: (((jump)) ((-8 offset)))
run: 1547 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 19 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1548 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1549 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2544 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2544
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 2544
run: 1550 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2607 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2607
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2544 to 2607
run: 1551 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1552 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2610 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1553 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2542)
run: 2542 => ((1 list-address))
setm: ((1 list-address)) <= 2542
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2612 to 2542
run: 1554 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2544 list-address) (raw))
sizeof: ((2544 list-address) (raw))
run: 2607 => ((2 list-address))
setm: ((2 list-address)) <= 2607
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2613 to 2607
run: 1555 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2607 => ((2 list-address))
setm: ((2 list-address)) <= 2607
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 2607
run: 1556 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1557 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2641 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1558 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2607)
run: 2607 => ((1 list-address))
setm: ((1 list-address)) <= 2607
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2643 to 2607
run: 1559 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2607 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2607
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2644 to 2607
run: 1560 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2607 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2607
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 2607
run: 1561 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2607 to integer
setm: ((6 tagged-value-address) (deref)): setting 2608 to #\_
run: 1562 init-list 10: (((jump)) ((-8 offset)))
run: 1563 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 20 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1564 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1565 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2609 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2609
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 2609
run: 1566 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2672 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2672
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2609 to 2672
run: 1567 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1568 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2675 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1569 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2607)
run: 2607 => ((1 list-address))
setm: ((1 list-address)) <= 2607
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2677 to 2607
run: 1570 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2609 list-address) (raw))
sizeof: ((2609 list-address) (raw))
run: 2672 => ((2 list-address))
setm: ((2 list-address)) <= 2672
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2678 to 2672
run: 1571 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2672 => ((2 list-address))
setm: ((2 list-address)) <= 2672
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 2672
run: 1572 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1573 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2706 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1574 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2672)
run: 2672 => ((1 list-address))
setm: ((1 list-address)) <= 2672
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2708 to 2672
run: 1575 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2672 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2672
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2709 to 2672
run: 1576 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2672 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2672
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 2672
run: 1577 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2672 to integer
setm: ((6 tagged-value-address) (deref)): setting 2673 to #\_
run: 1578 init-list 10: (((jump)) ((-8 offset)))
run: 1579 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 21 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1580 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1581 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2674 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2674
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 2674
run: 1582 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2737 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2737
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2674 to 2737
run: 1583 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1584 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2740 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1585 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2672)
run: 2672 => ((1 list-address))
setm: ((1 list-address)) <= 2672
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2742 to 2672
run: 1586 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2674 list-address) (raw))
sizeof: ((2674 list-address) (raw))
run: 2737 => ((2 list-address))
setm: ((2 list-address)) <= 2737
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2743 to 2737
run: 1587 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2737 => ((2 list-address))
setm: ((2 list-address)) <= 2737
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 2737
run: 1588 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1589 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2771 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1590 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2737)
run: 2737 => ((1 list-address))
setm: ((1 list-address)) <= 2737
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2773 to 2737
run: 1591 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2737 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2737
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2774 to 2737
run: 1592 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2737 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2737
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 2737
run: 1593 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2737 to integer
setm: ((6 tagged-value-address) (deref)): setting 2738 to #\_
run: 1594 init-list 10: (((jump)) ((-8 offset)))
run: 1595 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 22 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\p => ((3 integer))
setm: ((3 integer)) <= #\p
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\p
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1596 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1597 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2739 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2739
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 2739
run: 1598 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2802 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2802
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2739 to 2802
run: 1599 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1600 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2805 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1601 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2737)
run: 2737 => ((1 list-address))
setm: ((1 list-address)) <= 2737
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2807 to 2737
run: 1602 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2739 list-address) (raw))
sizeof: ((2739 list-address) (raw))
run: 2802 => ((2 list-address))
setm: ((2 list-address)) <= 2802
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2808 to 2802
run: 1603 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2802 => ((2 list-address))
setm: ((2 list-address)) <= 2802
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 2802
run: 1604 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1605 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2836 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1606 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2802)
run: 2802 => ((1 list-address))
setm: ((1 list-address)) <= 2802
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2838 to 2802
run: 1607 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2802 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2802
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2839 to 2802
run: 1608 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2802 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2802
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 2802
run: 1609 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\p))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2802 to integer
setm: ((6 tagged-value-address) (deref)): setting 2803 to #\p
run: 1610 init-list 10: (((jump)) ((-8 offset)))
run: 1611 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 23 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\b => ((3 integer))
setm: ((3 integer)) <= #\b
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\b
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1612 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1613 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2804 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2804
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 2804
run: 1614 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2867 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2867
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2804 to 2867
run: 1615 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1616 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2870 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1617 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2802)
run: 2802 => ((1 list-address))
setm: ((1 list-address)) <= 2802
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2872 to 2802
run: 1618 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2804 list-address) (raw))
sizeof: ((2804 list-address) (raw))
run: 2867 => ((2 list-address))
setm: ((2 list-address)) <= 2867
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2873 to 2867
run: 1619 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2867 => ((2 list-address))
setm: ((2 list-address)) <= 2867
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 2867
run: 1620 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1621 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2901 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1622 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2867)
run: 2867 => ((1 list-address))
setm: ((1 list-address)) <= 2867
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2903 to 2867
run: 1623 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2867 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2867
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2904 to 2867
run: 1624 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2867 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2867
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 2867
run: 1625 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\b)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\b))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2867 to integer
setm: ((6 tagged-value-address) (deref)): setting 2868 to #\b
run: 1626 init-list 10: (((jump)) ((-8 offset)))
run: 1627 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 24 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\Q => ((3 integer))
setm: ((3 integer)) <= #\Q
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\Q
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1628 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1629 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2869 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2869
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 2869
run: 1630 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2932 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2932
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2869 to 2932
run: 1631 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1632 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2935 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1633 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2867)
run: 2867 => ((1 list-address))
setm: ((1 list-address)) <= 2867
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2937 to 2867
run: 1634 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2869 list-address) (raw))
sizeof: ((2869 list-address) (raw))
run: 2932 => ((2 list-address))
setm: ((2 list-address)) <= 2932
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2938 to 2932
run: 1635 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2932 => ((2 list-address))
setm: ((2 list-address)) <= 2932
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 2932
run: 1636 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1637 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2966 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1638 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2932)
run: 2932 => ((1 list-address))
setm: ((1 list-address)) <= 2932
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2968 to 2932
run: 1639 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2932 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2932
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2969 to 2932
run: 1640 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2932 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2932
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 2932
run: 1641 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\Q)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\Q))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2932 to integer
setm: ((6 tagged-value-address) (deref)): setting 2933 to #\Q
run: 1642 init-list 10: (((jump)) ((-8 offset)))
run: 1643 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 25 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\P => ((3 integer))
setm: ((3 integer)) <= #\P
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\P
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1644 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1645 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2934 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2934
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 2934
run: 1646 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2997 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2997
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2934 to 2997
run: 1647 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1648 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3000 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1649 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2932)
run: 2932 => ((1 list-address))
setm: ((1 list-address)) <= 2932
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3002 to 2932
run: 1650 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2934 list-address) (raw))
sizeof: ((2934 list-address) (raw))
run: 2997 => ((2 list-address))
setm: ((2 list-address)) <= 2997
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3003 to 2997
run: 1651 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2997 => ((2 list-address))
setm: ((2 list-address)) <= 2997
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 2997
run: 1652 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1653 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3031 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1654 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2997)
run: 2997 => ((1 list-address))
setm: ((1 list-address)) <= 2997
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3033 to 2997
run: 1655 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2997 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2997
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3034 to 2997
run: 1656 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2997 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2997
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 2997
run: 1657 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\P))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2997 to integer
setm: ((6 tagged-value-address) (deref)): setting 2998 to #\P
run: 1658 init-list 10: (((jump)) ((-8 offset)))
run: 1659 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 26 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1660 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1661 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2999 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2999
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 2999
run: 1662 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3062 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3062
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2999 to 3062
run: 1663 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1664 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3065 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1665 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2997)
run: 2997 => ((1 list-address))
setm: ((1 list-address)) <= 2997
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3067 to 2997
run: 1666 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2999 list-address) (raw))
sizeof: ((2999 list-address) (raw))
run: 3062 => ((2 list-address))
setm: ((2 list-address)) <= 3062
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3068 to 3062
run: 1667 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3062 => ((2 list-address))
setm: ((2 list-address)) <= 3062
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 3062
run: 1668 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1669 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3096 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1670 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3062)
run: 3062 => ((1 list-address))
setm: ((1 list-address)) <= 3062
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3098 to 3062
run: 1671 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3062 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3062
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3099 to 3062
run: 1672 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3062 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3062
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 3062
run: 1673 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3062 to integer
setm: ((6 tagged-value-address) (deref)): setting 3063 to #\_
run: 1674 init-list 10: (((jump)) ((-8 offset)))
run: 1675 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 27 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1676 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1677 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3064 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3064
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 3064
run: 1678 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3127 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3127
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3064 to 3127
run: 1679 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1680 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3130 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1681 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3062)
run: 3062 => ((1 list-address))
setm: ((1 list-address)) <= 3062
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3132 to 3062
run: 1682 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3064 list-address) (raw))
sizeof: ((3064 list-address) (raw))
run: 3127 => ((2 list-address))
setm: ((2 list-address)) <= 3127
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3133 to 3127
run: 1683 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3127 => ((2 list-address))
setm: ((2 list-address)) <= 3127
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 3127
run: 1684 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1685 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3161 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1686 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3127)
run: 3127 => ((1 list-address))
setm: ((1 list-address)) <= 3127
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3163 to 3127
run: 1687 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3127 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3127
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3164 to 3127
run: 1688 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3127 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3127
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 3127
run: 1689 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3127 to integer
setm: ((6 tagged-value-address) (deref)): setting 3128 to #\_
run: 1690 init-list 10: (((jump)) ((-8 offset)))
run: 1691 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 28 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1692 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1693 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3129 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3129
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 3129
run: 1694 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3192 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3192
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3129 to 3192
run: 1695 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1696 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3195 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1697 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3127)
run: 3127 => ((1 list-address))
setm: ((1 list-address)) <= 3127
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3197 to 3127
run: 1698 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3129 list-address) (raw))
sizeof: ((3129 list-address) (raw))
run: 3192 => ((2 list-address))
setm: ((2 list-address)) <= 3192
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3198 to 3192
run: 1699 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3192 => ((2 list-address))
setm: ((2 list-address)) <= 3192
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 3192
run: 1700 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1701 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3226 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1702 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3192)
run: 3192 => ((1 list-address))
setm: ((1 list-address)) <= 3192
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3228 to 3192
run: 1703 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3192 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3192
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3229 to 3192
run: 1704 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3192 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3192
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 3192
run: 1705 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3192 to integer
setm: ((6 tagged-value-address) (deref)): setting 3193 to #\_
run: 1706 init-list 10: (((jump)) ((-8 offset)))
run: 1707 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 29 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1708 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1709 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3194 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3194
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 3194
run: 1710 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3257 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3257
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3194 to 3257
run: 1711 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1712 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3260 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1713 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3192)
run: 3192 => ((1 list-address))
setm: ((1 list-address)) <= 3192
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3262 to 3192
run: 1714 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3194 list-address) (raw))
sizeof: ((3194 list-address) (raw))
run: 3257 => ((2 list-address))
setm: ((2 list-address)) <= 3257
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3263 to 3257
run: 1715 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3257 => ((2 list-address))
setm: ((2 list-address)) <= 3257
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 3257
run: 1716 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1717 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3291 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1718 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3257)
run: 3257 => ((1 list-address))
setm: ((1 list-address)) <= 3257
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3293 to 3257
run: 1719 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3257 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3257
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3294 to 3257
run: 1720 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3257 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3257
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 3257
run: 1721 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3257 to integer
setm: ((6 tagged-value-address) (deref)): setting 3258 to #\_
run: 1722 init-list 10: (((jump)) ((-8 offset)))
run: 1723 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 30 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\p => ((3 integer))
setm: ((3 integer)) <= #\p
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\p
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1724 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1725 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3259 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3259
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 3259
run: 1726 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3322 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3322
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3259 to 3322
run: 1727 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1728 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3325 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1729 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3257)
run: 3257 => ((1 list-address))
setm: ((1 list-address)) <= 3257
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3327 to 3257
run: 1730 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3259 list-address) (raw))
sizeof: ((3259 list-address) (raw))
run: 3322 => ((2 list-address))
setm: ((2 list-address)) <= 3322
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3328 to 3322
run: 1731 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3322 => ((2 list-address))
setm: ((2 list-address)) <= 3322
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 3322
run: 1732 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1733 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3356 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1734 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3322)
run: 3322 => ((1 list-address))
setm: ((1 list-address)) <= 3322
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3358 to 3322
run: 1735 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3322 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3322
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3359 to 3322
run: 1736 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3322 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3322
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 3322
run: 1737 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\p))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3322 to integer
setm: ((6 tagged-value-address) (deref)): setting 3323 to #\p
run: 1738 init-list 10: (((jump)) ((-8 offset)))
run: 1739 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 31 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\q => ((3 integer))
setm: ((3 integer)) <= #\q
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\q
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1740 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1741 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3324 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3324
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 3324
run: 1742 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3387 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3387
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3324 to 3387
run: 1743 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1744 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3390 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1745 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3322)
run: 3322 => ((1 list-address))
setm: ((1 list-address)) <= 3322
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3392 to 3322
run: 1746 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3324 list-address) (raw))
sizeof: ((3324 list-address) (raw))
run: 3387 => ((2 list-address))
setm: ((2 list-address)) <= 3387
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3393 to 3387
run: 1747 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3387 => ((2 list-address))
setm: ((2 list-address)) <= 3387
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 3387
run: 1748 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1749 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3421 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1750 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3387)
run: 3387 => ((1 list-address))
setm: ((1 list-address)) <= 3387
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3423 to 3387
run: 1751 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3387 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3387
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3424 to 3387
run: 1752 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3387 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3387
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 3387
run: 1753 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\q)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\q))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3387 to integer
setm: ((6 tagged-value-address) (deref)): setting 3388 to #\q
run: 1754 init-list 10: (((jump)) ((-8 offset)))
run: 1755 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 32 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\K => ((3 integer))
setm: ((3 integer)) <= #\K
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\K
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1756 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1757 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3389 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3389
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 3389
run: 1758 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3452 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3452
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3389 to 3452
run: 1759 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1760 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3455 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1761 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3387)
run: 3387 => ((1 list-address))
setm: ((1 list-address)) <= 3387
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3457 to 3387
run: 1762 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3389 list-address) (raw))
sizeof: ((3389 list-address) (raw))
run: 3452 => ((2 list-address))
setm: ((2 list-address)) <= 3452
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3458 to 3452
run: 1763 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3452 => ((2 list-address))
setm: ((2 list-address)) <= 3452
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 3452
run: 1764 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1765 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3486 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1766 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3452)
run: 3452 => ((1 list-address))
setm: ((1 list-address)) <= 3452
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3488 to 3452
run: 1767 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3452 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3452
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3489 to 3452
run: 1768 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3452 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3452
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 3452
run: 1769 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\K)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\K))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3452 to integer
setm: ((6 tagged-value-address) (deref)): setting 3453 to #\K
run: 1770 init-list 10: (((jump)) ((-8 offset)))
run: 1771 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 33 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\P => ((3 integer))
setm: ((3 integer)) <= #\P
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\P
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1772 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1773 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3454 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3454
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 3454
run: 1774 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3517 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3517
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3454 to 3517
run: 1775 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1776 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3520 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1777 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3452)
run: 3452 => ((1 list-address))
setm: ((1 list-address)) <= 3452
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3522 to 3452
run: 1778 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3454 list-address) (raw))
sizeof: ((3454 list-address) (raw))
run: 3517 => ((2 list-address))
setm: ((2 list-address)) <= 3517
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3523 to 3517
run: 1779 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3517 => ((2 list-address))
setm: ((2 list-address)) <= 3517
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 3517
run: 1780 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1781 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3551 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1782 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3517)
run: 3517 => ((1 list-address))
setm: ((1 list-address)) <= 3517
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3553 to 3517
run: 1783 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3517 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3517
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3554 to 3517
run: 1784 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3517 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3517
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 3517
run: 1785 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\P))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3517 to integer
setm: ((6 tagged-value-address) (deref)): setting 3518 to #\P
run: 1786 init-list 10: (((jump)) ((-8 offset)))
run: 1787 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 34 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1788 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1789 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3519 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3519
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 3519
run: 1790 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3582 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3582
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3519 to 3582
run: 1791 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1792 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3585 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1793 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3517)
run: 3517 => ((1 list-address))
setm: ((1 list-address)) <= 3517
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3587 to 3517
run: 1794 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3519 list-address) (raw))
sizeof: ((3519 list-address) (raw))
run: 3582 => ((2 list-address))
setm: ((2 list-address)) <= 3582
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3588 to 3582
run: 1795 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3582 => ((2 list-address))
setm: ((2 list-address)) <= 3582
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 3582
run: 1796 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1797 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3616 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1798 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3582)
run: 3582 => ((1 list-address))
setm: ((1 list-address)) <= 3582
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3618 to 3582
run: 1799 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3582 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3582
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3619 to 3582
run: 1800 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3582 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3582
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 3582
run: 1801 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3582 to integer
setm: ((6 tagged-value-address) (deref)): setting 3583 to #\_
run: 1802 init-list 10: (((jump)) ((-8 offset)))
run: 1803 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 35 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1804 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1805 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3584 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3584
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 3584
run: 1806 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3647 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3647
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3584 to 3647
run: 1807 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1808 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3650 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1809 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3582)
run: 3582 => ((1 list-address))
setm: ((1 list-address)) <= 3582
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3652 to 3582
run: 1810 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3584 list-address) (raw))
sizeof: ((3584 list-address) (raw))
run: 3647 => ((2 list-address))
setm: ((2 list-address)) <= 3647
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3653 to 3647
run: 1811 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3647 => ((2 list-address))
setm: ((2 list-address)) <= 3647
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 3647
run: 1812 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1813 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3681 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1814 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3647)
run: 3647 => ((1 list-address))
setm: ((1 list-address)) <= 3647
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3683 to 3647
run: 1815 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3647 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3647
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3684 to 3647
run: 1816 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3647 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3647
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 3647
run: 1817 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3647 to integer
setm: ((6 tagged-value-address) (deref)): setting 3648 to #\_
run: 1818 init-list 10: (((jump)) ((-8 offset)))
run: 1819 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 36 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1820 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1821 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3649 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3649
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 3649
run: 1822 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3712 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3712
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3649 to 3712
run: 1823 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1824 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3715 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1825 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3647)
run: 3647 => ((1 list-address))
setm: ((1 list-address)) <= 3647
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3717 to 3647
run: 1826 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3649 list-address) (raw))
sizeof: ((3649 list-address) (raw))
run: 3712 => ((2 list-address))
setm: ((2 list-address)) <= 3712
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3718 to 3712
run: 1827 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3712 => ((2 list-address))
setm: ((2 list-address)) <= 3712
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 3712
run: 1828 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1829 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3746 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1830 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3712)
run: 3712 => ((1 list-address))
setm: ((1 list-address)) <= 3712
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3748 to 3712
run: 1831 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3712 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3712
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3749 to 3712
run: 1832 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3712 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3712
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 3712
run: 1833 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3712 to integer
setm: ((6 tagged-value-address) (deref)): setting 3713 to #\_
run: 1834 init-list 10: (((jump)) ((-8 offset)))
run: 1835 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 37 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1836 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1837 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3714 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3714
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 3714
run: 1838 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3777 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3777
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3714 to 3777
run: 1839 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1840 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3780 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1841 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3712)
run: 3712 => ((1 list-address))
setm: ((1 list-address)) <= 3712
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3782 to 3712
run: 1842 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3714 list-address) (raw))
sizeof: ((3714 list-address) (raw))
run: 3777 => ((2 list-address))
setm: ((2 list-address)) <= 3777
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3783 to 3777
run: 1843 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3777 => ((2 list-address))
setm: ((2 list-address)) <= 3777
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 3777
run: 1844 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1845 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3811 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1846 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3777)
run: 3777 => ((1 list-address))
setm: ((1 list-address)) <= 3777
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3813 to 3777
run: 1847 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3777 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3777
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3814 to 3777
run: 1848 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3777 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3777
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 3777
run: 1849 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3777 to integer
setm: ((6 tagged-value-address) (deref)): setting 3778 to #\_
run: 1850 init-list 10: (((jump)) ((-8 offset)))
run: 1851 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 38 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\p => ((3 integer))
setm: ((3 integer)) <= #\p
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\p
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1852 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1853 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3779 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3779
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 3779
run: 1854 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3842 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3842
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3779 to 3842
run: 1855 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1856 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3845 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1857 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3777)
run: 3777 => ((1 list-address))
setm: ((1 list-address)) <= 3777
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3847 to 3777
run: 1858 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3779 list-address) (raw))
sizeof: ((3779 list-address) (raw))
run: 3842 => ((2 list-address))
setm: ((2 list-address)) <= 3842
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3848 to 3842
run: 1859 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3842 => ((2 list-address))
setm: ((2 list-address)) <= 3842
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 3842
run: 1860 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1861 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3876 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1862 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3842)
run: 3842 => ((1 list-address))
setm: ((1 list-address)) <= 3842
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3878 to 3842
run: 1863 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3842 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3842
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3879 to 3842
run: 1864 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3842 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3842
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 3842
run: 1865 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\p))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3842 to integer
setm: ((6 tagged-value-address) (deref)): setting 3843 to #\p
run: 1866 init-list 10: (((jump)) ((-8 offset)))
run: 1867 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 39 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\k => ((3 integer))
setm: ((3 integer)) <= #\k
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\k
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1868 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1869 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3844 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3844
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 3844
run: 1870 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3907 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3907
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3844 to 3907
run: 1871 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1872 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3910 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1873 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3842)
run: 3842 => ((1 list-address))
setm: ((1 list-address)) <= 3842
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3912 to 3842
run: 1874 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3844 list-address) (raw))
sizeof: ((3844 list-address) (raw))
run: 3907 => ((2 list-address))
setm: ((2 list-address)) <= 3907
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3913 to 3907
run: 1875 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3907 => ((2 list-address))
setm: ((2 list-address)) <= 3907
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 3907
run: 1876 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1877 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3941 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1878 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3907)
run: 3907 => ((1 list-address))
setm: ((1 list-address)) <= 3907
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3943 to 3907
run: 1879 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3907 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3907
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3944 to 3907
run: 1880 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3907 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3907
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 3907
run: 1881 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\k)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\k))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3907 to integer
setm: ((6 tagged-value-address) (deref)): setting 3908 to #\k
run: 1882 init-list 10: (((jump)) ((-8 offset)))
run: 1883 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 40 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\B => ((3 integer))
setm: ((3 integer)) <= #\B
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\B
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1884 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1885 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3909 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3909
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 3909
run: 1886 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3972 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3972
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3909 to 3972
run: 1887 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1888 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3975 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1889 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3907)
run: 3907 => ((1 list-address))
setm: ((1 list-address)) <= 3907
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3977 to 3907
run: 1890 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3909 list-address) (raw))
sizeof: ((3909 list-address) (raw))
run: 3972 => ((2 list-address))
setm: ((2 list-address)) <= 3972
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3978 to 3972
run: 1891 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3972 => ((2 list-address))
setm: ((2 list-address)) <= 3972
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 3972
run: 1892 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1893 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4006 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1894 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3972)
run: 3972 => ((1 list-address))
setm: ((1 list-address)) <= 3972
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4008 to 3972
run: 1895 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3972 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3972
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4009 to 3972
run: 1896 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3972 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3972
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 3972
run: 1897 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\B)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\B))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3972 to integer
setm: ((6 tagged-value-address) (deref)): setting 3973 to #\B
run: 1898 init-list 10: (((jump)) ((-8 offset)))
run: 1899 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 41 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\P => ((3 integer))
setm: ((3 integer)) <= #\P
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\P
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1900 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1901 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3974 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3974
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 3974
run: 1902 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4037 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4037
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3974 to 4037
run: 1903 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1904 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4040 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1905 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3972)
run: 3972 => ((1 list-address))
setm: ((1 list-address)) <= 3972
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4042 to 3972
run: 1906 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3974 list-address) (raw))
sizeof: ((3974 list-address) (raw))
run: 4037 => ((2 list-address))
setm: ((2 list-address)) <= 4037
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4043 to 4037
run: 1907 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4037 => ((2 list-address))
setm: ((2 list-address)) <= 4037
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 4037
run: 1908 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1909 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4071 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1910 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4037)
run: 4037 => ((1 list-address))
setm: ((1 list-address)) <= 4037
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4073 to 4037
run: 1911 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4037 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4037
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4074 to 4037
run: 1912 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4037 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4037
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 4037
run: 1913 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\P))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4037 to integer
setm: ((6 tagged-value-address) (deref)): setting 4038 to #\P
run: 1914 init-list 10: (((jump)) ((-8 offset)))
run: 1915 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 42 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1916 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1917 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4039 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4039
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 4039
run: 1918 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4102 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4102
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4039 to 4102
run: 1919 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1920 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4105 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1921 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4037)
run: 4037 => ((1 list-address))
setm: ((1 list-address)) <= 4037
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4107 to 4037
run: 1922 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4039 list-address) (raw))
sizeof: ((4039 list-address) (raw))
run: 4102 => ((2 list-address))
setm: ((2 list-address)) <= 4102
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4108 to 4102
run: 1923 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4102 => ((2 list-address))
setm: ((2 list-address)) <= 4102
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 4102
run: 1924 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1925 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4136 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1926 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4102)
run: 4102 => ((1 list-address))
setm: ((1 list-address)) <= 4102
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4138 to 4102
run: 1927 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4102 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4102
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4139 to 4102
run: 1928 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4102 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4102
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 4102
run: 1929 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4102 to integer
setm: ((6 tagged-value-address) (deref)): setting 4103 to #\_
run: 1930 init-list 10: (((jump)) ((-8 offset)))
run: 1931 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 43 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1932 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1933 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4104 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4104
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 4104
run: 1934 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4167 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4167
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4104 to 4167
run: 1935 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1936 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4170 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1937 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4102)
run: 4102 => ((1 list-address))
setm: ((1 list-address)) <= 4102
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4172 to 4102
run: 1938 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4104 list-address) (raw))
sizeof: ((4104 list-address) (raw))
run: 4167 => ((2 list-address))
setm: ((2 list-address)) <= 4167
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4173 to 4167
run: 1939 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4167 => ((2 list-address))
setm: ((2 list-address)) <= 4167
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 4167
run: 1940 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1941 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4201 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1942 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4167)
run: 4167 => ((1 list-address))
setm: ((1 list-address)) <= 4167
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4203 to 4167
run: 1943 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4167 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4167
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4204 to 4167
run: 1944 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4167 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4167
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 4167
run: 1945 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4167 to integer
setm: ((6 tagged-value-address) (deref)): setting 4168 to #\_
run: 1946 init-list 10: (((jump)) ((-8 offset)))
run: 1947 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 44 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1948 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1949 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4169 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4169
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 4169
run: 1950 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4232 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4232
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4169 to 4232
run: 1951 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1952 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4235 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1953 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4167)
run: 4167 => ((1 list-address))
setm: ((1 list-address)) <= 4167
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4237 to 4167
run: 1954 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4169 list-address) (raw))
sizeof: ((4169 list-address) (raw))
run: 4232 => ((2 list-address))
setm: ((2 list-address)) <= 4232
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4238 to 4232
run: 1955 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4232 => ((2 list-address))
setm: ((2 list-address)) <= 4232
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 4232
run: 1956 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1957 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4266 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1958 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4232)
run: 4232 => ((1 list-address))
setm: ((1 list-address)) <= 4232
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4268 to 4232
run: 1959 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4232 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4232
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4269 to 4232
run: 1960 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4232 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4232
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 4232
run: 1961 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4232 to integer
setm: ((6 tagged-value-address) (deref)): setting 4233 to #\_
run: 1962 init-list 10: (((jump)) ((-8 offset)))
run: 1963 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 45 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1964 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1965 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4234 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4234
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 4234
run: 1966 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4297 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4297
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4234 to 4297
run: 1967 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1968 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4300 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1969 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4232)
run: 4232 => ((1 list-address))
setm: ((1 list-address)) <= 4232
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4302 to 4232
run: 1970 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4234 list-address) (raw))
sizeof: ((4234 list-address) (raw))
run: 4297 => ((2 list-address))
setm: ((2 list-address)) <= 4297
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4303 to 4297
run: 1971 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4297 => ((2 list-address))
setm: ((2 list-address)) <= 4297
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 4297
run: 1972 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1973 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4331 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1974 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4297)
run: 4297 => ((1 list-address))
setm: ((1 list-address)) <= 4297
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4333 to 4297
run: 1975 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4297 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4297
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4334 to 4297
run: 1976 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4297 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4297
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 4297
run: 1977 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4297 to integer
setm: ((6 tagged-value-address) (deref)): setting 4298 to #\_
run: 1978 init-list 10: (((jump)) ((-8 offset)))
run: 1979 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 46 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\p => ((3 integer))
setm: ((3 integer)) <= #\p
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\p
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1980 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1981 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4299 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4299
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 4299
run: 1982 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4362 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4362
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4299 to 4362
run: 1983 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1984 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4365 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1985 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4297)
run: 4297 => ((1 list-address))
setm: ((1 list-address)) <= 4297
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4367 to 4297
run: 1986 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4299 list-address) (raw))
sizeof: ((4299 list-address) (raw))
run: 4362 => ((2 list-address))
setm: ((2 list-address)) <= 4362
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4368 to 4362
run: 1987 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4362 => ((2 list-address))
setm: ((2 list-address)) <= 4362
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 4362
run: 1988 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1989 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4396 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1990 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4362)
run: 4362 => ((1 list-address))
setm: ((1 list-address)) <= 4362
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4398 to 4362
run: 1991 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4362 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4362
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4399 to 4362
run: 1992 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4362 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4362
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 4362
run: 1993 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\p))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4362 to integer
setm: ((6 tagged-value-address) (deref)): setting 4363 to #\p
run: 1994 init-list 10: (((jump)) ((-8 offset)))
run: 1995 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 47 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\b => ((3 integer))
setm: ((3 integer)) <= #\b
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\b
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 1996 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1997 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4364 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4364
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 4364
run: 1998 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4427 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4427
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4364 to 4427
run: 1999 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2000 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4430 => ((default-space space-address))
sizeof: ((default-space space-address))
schedule: scheduling list-next/init-list/main for further processing
schedule: list-next/init-list/main
run: 2001 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4362)
run: 4362 => ((1 list-address))
setm: ((1 list-address)) <= 4362
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4432 to 4362
run: 2002 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4364 list-address) (raw))
sizeof: ((4364 list-address) (raw))
run: 4427 => ((2 list-address))
setm: ((2 list-address)) <= 4427
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4433 to 4427
run: 2003 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4427 => ((2 list-address))
setm: ((2 list-address)) <= 4427
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 4427
run: 2004 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2005 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4461 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2006 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4427)
run: 4427 => ((1 list-address))
setm: ((1 list-address)) <= 4427
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4463 to 4427
run: 2007 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4427 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4427
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4464 to 4427
run: 2008 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4427 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4427
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 4427
run: 2009 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\b)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\b))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4427 to integer
setm: ((6 tagged-value-address) (deref)): setting 4428 to #\b
run: 2010 init-list 10: (((jump)) ((-8 offset)))
run: 2011 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 48 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\N => ((3 integer))
setm: ((3 integer)) <= #\N
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\N
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 2012 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2013 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4429 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4429
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 4429
run: 2014 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4492 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4492
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4429 to 4492
run: 2015 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2016 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4495 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2017 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4427)
run: 4427 => ((1 list-address))
setm: ((1 list-address)) <= 4427
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4497 to 4427
run: 2018 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4429 list-address) (raw))
sizeof: ((4429 list-address) (raw))
run: 4492 => ((2 list-address))
setm: ((2 list-address)) <= 4492
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4498 to 4492
run: 2019 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4492 => ((2 list-address))
setm: ((2 list-address)) <= 4492
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 4492
run: 2020 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2021 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4526 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2022 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4492)
run: 4492 => ((1 list-address))
setm: ((1 list-address)) <= 4492
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4528 to 4492
run: 2023 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4492 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4492
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4529 to 4492
run: 2024 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4492 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4492
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 4492
run: 2025 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\N)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\N))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4492 to integer
setm: ((6 tagged-value-address) (deref)): setting 4493 to #\N
run: 2026 init-list 10: (((jump)) ((-8 offset)))
run: 2027 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 49 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\P => ((3 integer))
setm: ((3 integer)) <= #\P
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\P
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 2028 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2029 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4494 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4494
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 4494
run: 2030 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4557 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4557
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4494 to 4557
run: 2031 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2032 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4560 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2033 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4492)
run: 4492 => ((1 list-address))
setm: ((1 list-address)) <= 4492
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4562 to 4492
run: 2034 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4494 list-address) (raw))
sizeof: ((4494 list-address) (raw))
run: 4557 => ((2 list-address))
setm: ((2 list-address)) <= 4557
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4563 to 4557
run: 2035 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4557 => ((2 list-address))
setm: ((2 list-address)) <= 4557
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 4557
run: 2036 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2037 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4591 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2038 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4557)
run: 4557 => ((1 list-address))
setm: ((1 list-address)) <= 4557
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4593 to 4557
run: 2039 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4557 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4557
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4594 to 4557
run: 2040 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4557 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4557
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 4557
run: 2041 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\P))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4557 to integer
setm: ((6 tagged-value-address) (deref)): setting 4558 to #\P
run: 2042 init-list 10: (((jump)) ((-8 offset)))
run: 2043 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 50 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 2044 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2045 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4559 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4559
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 4559
run: 2046 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4622 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4622
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4559 to 4622
run: 2047 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2048 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4625 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2049 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4557)
run: 4557 => ((1 list-address))
setm: ((1 list-address)) <= 4557
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4627 to 4557
run: 2050 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4559 list-address) (raw))
sizeof: ((4559 list-address) (raw))
run: 4622 => ((2 list-address))
setm: ((2 list-address)) <= 4622
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4628 to 4622
run: 2051 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4622 => ((2 list-address))
setm: ((2 list-address)) <= 4622
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 4622
run: 2052 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2053 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4656 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2054 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4622)
run: 4622 => ((1 list-address))
setm: ((1 list-address)) <= 4622
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4658 to 4622
run: 2055 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4622 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4622
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4659 to 4622
run: 2056 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4622 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4622
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 4622
run: 2057 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4622 to integer
setm: ((6 tagged-value-address) (deref)): setting 4623 to #\_
run: 2058 init-list 10: (((jump)) ((-8 offset)))
run: 2059 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 51 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 2060 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2061 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4624 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4624
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 4624
run: 2062 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4687 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4687
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4624 to 4687
run: 2063 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2064 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4690 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2065 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4622)
run: 4622 => ((1 list-address))
setm: ((1 list-address)) <= 4622
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4692 to 4622
run: 2066 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4624 list-address) (raw))
sizeof: ((4624 list-address) (raw))
run: 4687 => ((2 list-address))
setm: ((2 list-address)) <= 4687
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4693 to 4687
run: 2067 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4687 => ((2 list-address))
setm: ((2 list-address)) <= 4687
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 4687
run: 2068 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2069 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4721 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2070 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4687)
run: 4687 => ((1 list-address))
setm: ((1 list-address)) <= 4687
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4723 to 4687
run: 2071 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4687 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4687
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4724 to 4687
run: 2072 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4687 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4687
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 4687
run: 2073 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4687 to integer
setm: ((6 tagged-value-address) (deref)): setting 4688 to #\_
run: 2074 init-list 10: (((jump)) ((-8 offset)))
run: 2075 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 52 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 2076 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2077 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4689 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4689
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 4689
run: 2078 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4752 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4752
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4689 to 4752
run: 2079 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2080 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4755 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2081 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4687)
run: 4687 => ((1 list-address))
setm: ((1 list-address)) <= 4687
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4757 to 4687
run: 2082 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4689 list-address) (raw))
sizeof: ((4689 list-address) (raw))
run: 4752 => ((2 list-address))
setm: ((2 list-address)) <= 4752
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4758 to 4752
run: 2083 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4752 => ((2 list-address))
setm: ((2 list-address)) <= 4752
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 4752
run: 2084 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2085 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4786 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2086 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4752)
run: 4752 => ((1 list-address))
setm: ((1 list-address)) <= 4752
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4788 to 4752
run: 2087 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4752 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4752
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4789 to 4752
run: 2088 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4752 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4752
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 4752
run: 2089 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4752 to integer
setm: ((6 tagged-value-address) (deref)): setting 4753 to #\_
run: 2090 init-list 10: (((jump)) ((-8 offset)))
run: 2091 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 53 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 2092 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2093 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4754 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4754
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 4754
run: 2094 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4817 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4817
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4754 to 4817
run: 2095 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2096 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4820 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2097 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4752)
run: 4752 => ((1 list-address))
setm: ((1 list-address)) <= 4752
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4822 to 4752
run: 2098 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4754 list-address) (raw))
sizeof: ((4754 list-address) (raw))
run: 4817 => ((2 list-address))
setm: ((2 list-address)) <= 4817
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4823 to 4817
run: 2099 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4817 => ((2 list-address))
setm: ((2 list-address)) <= 4817
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 4817
run: 2100 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2101 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4851 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2102 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4817)
run: 4817 => ((1 list-address))
setm: ((1 list-address)) <= 4817
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4853 to 4817
run: 2103 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4817 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4817
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4854 to 4817
run: 2104 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4817 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4817
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 4817
run: 2105 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4817 to integer
setm: ((6 tagged-value-address) (deref)): setting 4818 to #\_
run: 2106 init-list 10: (((jump)) ((-8 offset)))
run: 2107 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 54 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\p => ((3 integer))
setm: ((3 integer)) <= #\p
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\p
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 2108 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2109 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4819 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4819
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 4819
run: 2110 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4882 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4882
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4819 to 4882
run: 2111 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2112 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4885 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2113 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4817)
run: 4817 => ((1 list-address))
setm: ((1 list-address)) <= 4817
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4887 to 4817
run: 2114 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4819 list-address) (raw))
sizeof: ((4819 list-address) (raw))
run: 4882 => ((2 list-address))
setm: ((2 list-address)) <= 4882
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4888 to 4882
run: 2115 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4882 => ((2 list-address))
setm: ((2 list-address)) <= 4882
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 4882
run: 2116 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2117 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4916 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2118 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4882)
run: 4882 => ((1 list-address))
setm: ((1 list-address)) <= 4882
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4918 to 4882
run: 2119 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4882 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4882
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4919 to 4882
run: 2120 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4882 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4882
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 4882
run: 2121 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\p))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4882 to integer
setm: ((6 tagged-value-address) (deref)): setting 4883 to #\p
run: 2122 init-list 10: (((jump)) ((-8 offset)))
run: 2123 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 55 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\n => ((3 integer))
setm: ((3 integer)) <= #\n
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\n
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 2124 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2125 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4884 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4884
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 4884
run: 2126 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4947 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4947
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4884 to 4947
run: 2127 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2128 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4950 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2129 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4882)
run: 4882 => ((1 list-address))
setm: ((1 list-address)) <= 4882
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4952 to 4882
run: 2130 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4884 list-address) (raw))
sizeof: ((4884 list-address) (raw))
run: 4947 => ((2 list-address))
setm: ((2 list-address)) <= 4947
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4953 to 4947
run: 2131 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4947 => ((2 list-address))
setm: ((2 list-address)) <= 4947
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 4947
run: 2132 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2133 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4981 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2134 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4947)
run: 4947 => ((1 list-address))
setm: ((1 list-address)) <= 4947
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4983 to 4947
run: 2135 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4947 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4947
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4984 to 4947
run: 2136 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4947 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4947
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 4947
run: 2137 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\n)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\n))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4947 to integer
setm: ((6 tagged-value-address) (deref)): setting 4948 to #\n
run: 2138 init-list 10: (((jump)) ((-8 offset)))
run: 2139 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 56 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\R => ((3 integer))
setm: ((3 integer)) <= #\R
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\R
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 2140 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2141 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4949 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4949
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 4949
run: 2142 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 5012 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 5012
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4949 to 5012
run: 2143 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2144 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5015 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2145 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4947)
run: 4947 => ((1 list-address))
setm: ((1 list-address)) <= 4947
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5017 to 4947
run: 2146 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4949 list-address) (raw))
sizeof: ((4949 list-address) (raw))
run: 5012 => ((2 list-address))
setm: ((2 list-address)) <= 5012
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5018 to 5012
run: 2147 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 5012 => ((2 list-address))
setm: ((2 list-address)) <= 5012
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 5012
run: 2148 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2149 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5046 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2150 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5012)
run: 5012 => ((1 list-address))
setm: ((1 list-address)) <= 5012
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5048 to 5012
run: 2151 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5012 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5012
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5049 to 5012
run: 2152 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 5012 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 5012
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 5012
run: 2153 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\R)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\R))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 5012 to integer
setm: ((6 tagged-value-address) (deref)): setting 5013 to #\R
run: 2154 init-list 10: (((jump)) ((-8 offset)))
run: 2155 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 57 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\P => ((3 integer))
setm: ((3 integer)) <= #\P
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\P
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 2156 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2157 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 5014 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 5014
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 5014
run: 2158 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 5077 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 5077
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 5014 to 5077
run: 2159 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2160 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5080 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2161 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5012)
run: 5012 => ((1 list-address))
setm: ((1 list-address)) <= 5012
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5082 to 5012
run: 2162 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5014 list-address) (raw))
sizeof: ((5014 list-address) (raw))
run: 5077 => ((2 list-address))
setm: ((2 list-address)) <= 5077
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5083 to 5077
run: 2163 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 5077 => ((2 list-address))
setm: ((2 list-address)) <= 5077
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 5077
run: 2164 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2165 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5111 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2166 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5077)
run: 5077 => ((1 list-address))
setm: ((1 list-address)) <= 5077
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5113 to 5077
run: 2167 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5077 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5077
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5114 to 5077
run: 2168 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 5077 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 5077
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 5077
run: 2169 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\P))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 5077 to integer
setm: ((6 tagged-value-address) (deref)): setting 5078 to #\P
run: 2170 init-list 10: (((jump)) ((-8 offset)))
run: 2171 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 58 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 2172 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2173 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 5079 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 5079
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 5079
run: 2174 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 5142 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 5142
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 5079 to 5142
run: 2175 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2176 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5145 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2177 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5077)
run: 5077 => ((1 list-address))
setm: ((1 list-address)) <= 5077
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5147 to 5077
run: 2178 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5079 list-address) (raw))
sizeof: ((5079 list-address) (raw))
run: 5142 => ((2 list-address))
setm: ((2 list-address)) <= 5142
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5148 to 5142
run: 2179 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 5142 => ((2 list-address))
setm: ((2 list-address)) <= 5142
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 5142
run: 2180 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2181 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5176 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2182 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5142)
run: 5142 => ((1 list-address))
setm: ((1 list-address)) <= 5142
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5178 to 5142
run: 2183 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5142 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5142
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5179 to 5142
run: 2184 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 5142 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 5142
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 5142
run: 2185 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 5142 to integer
setm: ((6 tagged-value-address) (deref)): setting 5143 to #\_
run: 2186 init-list 10: (((jump)) ((-8 offset)))
run: 2187 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 59 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 2188 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2189 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 5144 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 5144
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 5144
run: 2190 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 5207 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 5207
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 5144 to 5207
run: 2191 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2192 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5210 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2193 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5142)
run: 5142 => ((1 list-address))
setm: ((1 list-address)) <= 5142
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5212 to 5142
run: 2194 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5144 list-address) (raw))
sizeof: ((5144 list-address) (raw))
run: 5207 => ((2 list-address))
setm: ((2 list-address)) <= 5207
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5213 to 5207
run: 2195 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 5207 => ((2 list-address))
setm: ((2 list-address)) <= 5207
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 5207
run: 2196 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2197 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5241 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2198 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5207)
run: 5207 => ((1 list-address))
setm: ((1 list-address)) <= 5207
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5243 to 5207
run: 2199 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5207 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5207
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5244 to 5207
run: 2200 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 5207 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 5207
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 5207
run: 2201 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 5207 to integer
setm: ((6 tagged-value-address) (deref)): setting 5208 to #\_
run: 2202 init-list 10: (((jump)) ((-8 offset)))
run: 2203 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 60 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 2204 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2205 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 5209 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 5209
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 5209
run: 2206 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 5272 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 5272
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 5209 to 5272
run: 2207 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2208 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5275 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2209 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5207)
run: 5207 => ((1 list-address))
setm: ((1 list-address)) <= 5207
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5277 to 5207
run: 2210 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5209 list-address) (raw))
sizeof: ((5209 list-address) (raw))
run: 5272 => ((2 list-address))
setm: ((2 list-address)) <= 5272
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5278 to 5272
run: 2211 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 5272 => ((2 list-address))
setm: ((2 list-address)) <= 5272
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 5272
run: 2212 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2213 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5306 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2214 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5272)
run: 5272 => ((1 list-address))
setm: ((1 list-address)) <= 5272
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5308 to 5272
run: 2215 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5272 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5272
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5309 to 5272
run: 2216 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 5272 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 5272
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 5272
run: 2217 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 5272 to integer
setm: ((6 tagged-value-address) (deref)): setting 5273 to #\_
run: 2218 init-list 10: (((jump)) ((-8 offset)))
run: 2219 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 61 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 2220 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2221 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 5274 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 5274
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 5274
run: 2222 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 5337 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 5337
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 5274 to 5337
run: 2223 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2224 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5340 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2225 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5272)
run: 5272 => ((1 list-address))
setm: ((1 list-address)) <= 5272
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5342 to 5272
run: 2226 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5274 list-address) (raw))
sizeof: ((5274 list-address) (raw))
run: 5337 => ((2 list-address))
setm: ((2 list-address)) <= 5337
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5343 to 5337
run: 2227 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 5337 => ((2 list-address))
setm: ((2 list-address)) <= 5337
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 5337
run: 2228 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2229 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5371 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2230 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5337)
run: 5337 => ((1 list-address))
setm: ((1 list-address)) <= 5337
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5373 to 5337
run: 2231 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5337 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5337
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5374 to 5337
run: 2232 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 5337 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 5337
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 5337
run: 2233 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 5337 to integer
setm: ((6 tagged-value-address) (deref)): setting 5338 to #\_
run: 2234 init-list 10: (((jump)) ((-8 offset)))
run: 2235 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 62 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\p => ((3 integer))
setm: ((3 integer)) <= #\p
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\p
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 2236 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2237 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 5339 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 5339
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 5339
run: 2238 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 5402 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 5402
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 5339 to 5402
run: 2239 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2240 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5405 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2241 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5337)
run: 5337 => ((1 list-address))
setm: ((1 list-address)) <= 5337
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5407 to 5337
run: 2242 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5339 list-address) (raw))
sizeof: ((5339 list-address) (raw))
run: 5402 => ((2 list-address))
setm: ((2 list-address)) <= 5402
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5408 to 5402
run: 2243 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 5402 => ((2 list-address))
setm: ((2 list-address)) <= 5402
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 5402
run: 2244 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2245 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5436 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2246 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5402)
run: 5402 => ((1 list-address))
setm: ((1 list-address)) <= 5402
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5438 to 5402
run: 2247 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5402 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5402
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5439 to 5402
run: 2248 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 5402 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 5402
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 5402
run: 2249 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\p))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 5402 to integer
setm: ((6 tagged-value-address) (deref)): setting 5403 to #\p
run: 2250 init-list 10: (((jump)) ((-8 offset)))
run: 2251 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 63 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\r => ((3 integer))
setm: ((3 integer)) <= #\r
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to #\r
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to t
run: 2252 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2253 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 5404 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 5404
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1344 to 5404
run: 2254 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 5467 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 5467
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 5404 to 5467
run: 2255 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2256 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5470 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2257 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5402)
run: 5402 => ((1 list-address))
setm: ((1 list-address)) <= 5402
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5472 to 5402
run: 2258 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5404 list-address) (raw))
sizeof: ((5404 list-address) (raw))
run: 5467 => ((2 list-address))
setm: ((2 list-address)) <= 5467
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5473 to 5467
run: 2259 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 5467 => ((2 list-address))
setm: ((2 list-address)) <= 5467
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1341 to 5467
run: 2260 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 2261 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5501 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2262 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5467)
run: 5467 => ((1 list-address))
setm: ((1 list-address)) <= 5467
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5503 to 5467
run: 2263 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5467 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5467
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5504 to 5467
run: 2264 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 5467 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 5467
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1345 to 5467
run: 2265 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\r)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\r))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 5467 to integer
setm: ((6 tagged-value-address) (deref)): setting 5468 to #\r
run: 2266 init-list 10: (((jump)) ((-8 offset)))
run: 2267 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 64 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: nil => ((3 integer))
setm: ((3 integer)) <= nil
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1342 to nil
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1343 to nil
run: 2268 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2269 init-list 11: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2270 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5532 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2271 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1369)
run: 1369 => ((1 list-address))
setm: ((1 list-address)) <= 1369
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5534 to 1369
run: 2272 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1371 list-address) (raw))
sizeof: ((1371 list-address) (raw))
run: 1372 => ((2 list-address))
setm: ((2 list-address)) <= 1372
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5535 to 1372
run: 2273 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1372 => ((1 list-address))
setm: ((1 list-address)) <= 1372
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1340 to 1372
run: 2274 init-list 12: (((reply)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
reply: (((1 list-address))) (((3 list-address)))
reply: 1372 => ((3 list-address))
setm: ((3 list-address)) <= 1372
setm: size of ((3 list-address)) is 1
setm: ((3 list-address)): setting 1004 to 1372
run: 2275 main 4: (((4 board-address)) <- ((init-board)) ((3 list-address)))
m: ((3 list-address))
sizeof: ((3 list-address))
run: 2276 init-board 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5563 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2277 init-board 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1372)
run: 1372 => ((1 list-address))
setm: ((1 list-address)) <= 1372
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5565 to 1372
run: 2278 init-board 2: (((2 integer)) <- ((list-length)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2279 list-length 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5594 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2280 list-length 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1372)
run: 1372 => ((1 list-address))
setm: ((1 list-address)) <= 1372
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 1372
run: 2281 list-length 2: (((2 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer))
setm: ((2 integer)) <= 0
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 0
run: 2282 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2283 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5625 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2284 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1372)
run: 1372 => ((1 list-address))
setm: ((1 list-address)) <= 1372
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5627 to 1372
run: 2285 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1372 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1372
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5628 to 1372
run: 2286 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 1372 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 1372
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 1372
run: 2287 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2288 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 1 => ((2 integer))
setm: ((2 integer)) <= 1
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 1
run: 2289 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2290 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5656 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2291 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1372)
run: 1372 => ((1 list-address))
setm: ((1 list-address)) <= 1372
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5658 to 1372
run: 2292 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1374 list-address) (raw))
sizeof: ((1374 list-address) (raw))
run: 1437 => ((2 list-address))
setm: ((2 list-address)) <= 1437
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5659 to 1437
run: 2293 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1437 => ((1 list-address))
setm: ((1 list-address)) <= 1437
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 1437
run: 2294 list-length 7: (((jump)) ((-5 offset)))
run: 2295 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2296 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5687 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2297 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1437)
run: 1437 => ((1 list-address))
setm: ((1 list-address)) <= 1437
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5689 to 1437
run: 2298 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1437 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1437
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5690 to 1437
run: 2299 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 1437 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 1437
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 1437
run: 2300 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2301 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 2 => ((2 integer))
setm: ((2 integer)) <= 2
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 2
run: 2302 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2303 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5718 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2304 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1437)
run: 1437 => ((1 list-address))
setm: ((1 list-address)) <= 1437
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5720 to 1437
run: 2305 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1439 list-address) (raw))
sizeof: ((1439 list-address) (raw))
run: 1502 => ((2 list-address))
setm: ((2 list-address)) <= 1502
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5721 to 1502
run: 2306 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1502 => ((1 list-address))
setm: ((1 list-address)) <= 1502
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 1502
run: 2307 list-length 7: (((jump)) ((-5 offset)))
run: 2308 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2309 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5749 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2310 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1502)
run: 1502 => ((1 list-address))
setm: ((1 list-address)) <= 1502
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5751 to 1502
run: 2311 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1502 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1502
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5752 to 1502
run: 2312 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 1502 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 1502
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 1502
run: 2313 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2314 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 3 => ((2 integer))
setm: ((2 integer)) <= 3
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 3
run: 2315 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2316 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5780 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2317 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1502)
run: 1502 => ((1 list-address))
setm: ((1 list-address)) <= 1502
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5782 to 1502
run: 2318 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1504 list-address) (raw))
sizeof: ((1504 list-address) (raw))
run: 1567 => ((2 list-address))
setm: ((2 list-address)) <= 1567
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5783 to 1567
run: 2319 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1567 => ((1 list-address))
setm: ((1 list-address)) <= 1567
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 1567
run: 2320 list-length 7: (((jump)) ((-5 offset)))
run: 2321 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2322 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5811 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2323 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1567)
run: 1567 => ((1 list-address))
setm: ((1 list-address)) <= 1567
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5813 to 1567
run: 2324 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1567 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1567
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5814 to 1567
run: 2325 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 1567 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 1567
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 1567
run: 2326 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2327 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 4 => ((2 integer))
setm: ((2 integer)) <= 4
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 4
run: 2328 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2329 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5842 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2330 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1567)
run: 1567 => ((1 list-address))
setm: ((1 list-address)) <= 1567
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5844 to 1567
run: 2331 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1569 list-address) (raw))
sizeof: ((1569 list-address) (raw))
run: 1632 => ((2 list-address))
setm: ((2 list-address)) <= 1632
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5845 to 1632
run: 2332 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1632 => ((1 list-address))
setm: ((1 list-address)) <= 1632
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 1632
run: 2333 list-length 7: (((jump)) ((-5 offset)))
run: 2334 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2335 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5873 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2336 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1632)
run: 1632 => ((1 list-address))
setm: ((1 list-address)) <= 1632
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5875 to 1632
run: 2337 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1632 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1632
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5876 to 1632
run: 2338 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 1632 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 1632
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 1632
run: 2339 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2340 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 5 => ((2 integer))
setm: ((2 integer)) <= 5
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 5
run: 2341 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2342 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5904 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2343 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1632)
run: 1632 => ((1 list-address))
setm: ((1 list-address)) <= 1632
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5906 to 1632
run: 2344 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1634 list-address) (raw))
sizeof: ((1634 list-address) (raw))
run: 1697 => ((2 list-address))
setm: ((2 list-address)) <= 1697
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5907 to 1697
run: 2345 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1697 => ((1 list-address))
setm: ((1 list-address)) <= 1697
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 1697
run: 2346 list-length 7: (((jump)) ((-5 offset)))
run: 2347 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2348 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5935 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2349 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1697)
run: 1697 => ((1 list-address))
setm: ((1 list-address)) <= 1697
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5937 to 1697
run: 2350 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1697 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1697
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5938 to 1697
run: 2351 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 1697 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 1697
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 1697
run: 2352 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2353 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 6 => ((2 integer))
setm: ((2 integer)) <= 6
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 6
run: 2354 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2355 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5966 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2356 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1697)
run: 1697 => ((1 list-address))
setm: ((1 list-address)) <= 1697
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5968 to 1697
run: 2357 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1699 list-address) (raw))
sizeof: ((1699 list-address) (raw))
run: 1762 => ((2 list-address))
setm: ((2 list-address)) <= 1762
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5969 to 1762
run: 2358 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1762 => ((1 list-address))
setm: ((1 list-address)) <= 1762
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 1762
run: 2359 list-length 7: (((jump)) ((-5 offset)))
run: 2360 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2361 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5997 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2362 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1762)
run: 1762 => ((1 list-address))
setm: ((1 list-address)) <= 1762
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5999 to 1762
run: 2363 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1762 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1762
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6000 to 1762
run: 2364 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 1762 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 1762
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 1762
run: 2365 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2366 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 7 => ((2 integer))
setm: ((2 integer)) <= 7
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 7
run: 2367 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2368 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6028 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2369 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1762)
run: 1762 => ((1 list-address))
setm: ((1 list-address)) <= 1762
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6030 to 1762
run: 2370 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1764 list-address) (raw))
sizeof: ((1764 list-address) (raw))
run: 1827 => ((2 list-address))
setm: ((2 list-address)) <= 1827
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6031 to 1827
run: 2371 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1827 => ((1 list-address))
setm: ((1 list-address)) <= 1827
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 1827
run: 2372 list-length 7: (((jump)) ((-5 offset)))
run: 2373 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2374 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6059 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2375 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1827)
run: 1827 => ((1 list-address))
setm: ((1 list-address)) <= 1827
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6061 to 1827
run: 2376 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1827 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1827
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6062 to 1827
run: 2377 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 1827 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 1827
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 1827
run: 2378 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2379 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 8 => ((2 integer))
setm: ((2 integer)) <= 8
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 8
run: 2380 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2381 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6090 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2382 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1827)
run: 1827 => ((1 list-address))
setm: ((1 list-address)) <= 1827
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6092 to 1827
run: 2383 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1829 list-address) (raw))
sizeof: ((1829 list-address) (raw))
run: 1892 => ((2 list-address))
setm: ((2 list-address)) <= 1892
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6093 to 1892
run: 2384 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1892 => ((1 list-address))
setm: ((1 list-address)) <= 1892
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 1892
run: 2385 list-length 7: (((jump)) ((-5 offset)))
run: 2386 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2387 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6121 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2388 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1892)
run: 1892 => ((1 list-address))
setm: ((1 list-address)) <= 1892
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6123 to 1892
run: 2389 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1892 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1892
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6124 to 1892
run: 2390 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 1892 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 1892
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 1892
run: 2391 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2392 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 9 => ((2 integer))
setm: ((2 integer)) <= 9
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 9
run: 2393 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2394 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6152 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2395 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1892)
run: 1892 => ((1 list-address))
setm: ((1 list-address)) <= 1892
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6154 to 1892
run: 2396 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1894 list-address) (raw))
sizeof: ((1894 list-address) (raw))
run: 1957 => ((2 list-address))
setm: ((2 list-address)) <= 1957
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6155 to 1957
run: 2397 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1957 => ((1 list-address))
setm: ((1 list-address)) <= 1957
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 1957
run: 2398 list-length 7: (((jump)) ((-5 offset)))
run: 2399 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2400 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6183 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2401 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1957)
run: 1957 => ((1 list-address))
setm: ((1 list-address)) <= 1957
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6185 to 1957
run: 2402 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1957 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1957
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6186 to 1957
run: 2403 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 1957 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 1957
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 1957
run: 2404 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2405 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 10 => ((2 integer))
setm: ((2 integer)) <= 10
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 10
run: 2406 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2407 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6214 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2408 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1957)
run: 1957 => ((1 list-address))
setm: ((1 list-address)) <= 1957
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6216 to 1957
run: 2409 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1959 list-address) (raw))
sizeof: ((1959 list-address) (raw))
run: 2022 => ((2 list-address))
setm: ((2 list-address)) <= 2022
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6217 to 2022
run: 2410 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2022 => ((1 list-address))
setm: ((1 list-address)) <= 2022
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 2022
run: 2411 list-length 7: (((jump)) ((-5 offset)))
run: 2412 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2413 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6245 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2414 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2022)
run: 2022 => ((1 list-address))
setm: ((1 list-address)) <= 2022
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6247 to 2022
run: 2415 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2022 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2022
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6248 to 2022
run: 2416 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2022 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2022
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 2022
run: 2417 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2418 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 11 => ((2 integer))
setm: ((2 integer)) <= 11
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 11
run: 2419 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2420 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6276 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2421 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2022)
run: 2022 => ((1 list-address))
setm: ((1 list-address)) <= 2022
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6278 to 2022
run: 2422 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2024 list-address) (raw))
sizeof: ((2024 list-address) (raw))
run: 2087 => ((2 list-address))
setm: ((2 list-address)) <= 2087
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6279 to 2087
run: 2423 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2087 => ((1 list-address))
setm: ((1 list-address)) <= 2087
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 2087
run: 2424 list-length 7: (((jump)) ((-5 offset)))
run: 2425 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2426 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6307 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2427 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2087)
run: 2087 => ((1 list-address))
setm: ((1 list-address)) <= 2087
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6309 to 2087
run: 2428 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2087 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2087
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6310 to 2087
run: 2429 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2087 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2087
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 2087
run: 2430 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2431 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 12 => ((2 integer))
setm: ((2 integer)) <= 12
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 12
run: 2432 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2433 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6338 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2434 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2087)
run: 2087 => ((1 list-address))
setm: ((1 list-address)) <= 2087
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6340 to 2087
run: 2435 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2089 list-address) (raw))
sizeof: ((2089 list-address) (raw))
run: 2152 => ((2 list-address))
setm: ((2 list-address)) <= 2152
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6341 to 2152
run: 2436 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2152 => ((1 list-address))
setm: ((1 list-address)) <= 2152
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 2152
run: 2437 list-length 7: (((jump)) ((-5 offset)))
run: 2438 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2439 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6369 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2440 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2152)
run: 2152 => ((1 list-address))
setm: ((1 list-address)) <= 2152
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6371 to 2152
run: 2441 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2152 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2152
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6372 to 2152
run: 2442 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2152 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2152
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 2152
run: 2443 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2444 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 13 => ((2 integer))
setm: ((2 integer)) <= 13
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 13
run: 2445 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2446 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6400 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2447 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2152)
run: 2152 => ((1 list-address))
setm: ((1 list-address)) <= 2152
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6402 to 2152
run: 2448 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2154 list-address) (raw))
sizeof: ((2154 list-address) (raw))
run: 2217 => ((2 list-address))
setm: ((2 list-address)) <= 2217
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6403 to 2217
run: 2449 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2217 => ((1 list-address))
setm: ((1 list-address)) <= 2217
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 2217
run: 2450 list-length 7: (((jump)) ((-5 offset)))
run: 2451 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2452 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6431 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2453 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2217)
run: 2217 => ((1 list-address))
setm: ((1 list-address)) <= 2217
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6433 to 2217
run: 2454 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2217 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2217
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6434 to 2217
run: 2455 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2217 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2217
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 2217
run: 2456 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2457 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 14 => ((2 integer))
setm: ((2 integer)) <= 14
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 14
run: 2458 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2459 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6462 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2460 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2217)
run: 2217 => ((1 list-address))
setm: ((1 list-address)) <= 2217
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6464 to 2217
run: 2461 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2219 list-address) (raw))
sizeof: ((2219 list-address) (raw))
run: 2282 => ((2 list-address))
setm: ((2 list-address)) <= 2282
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6465 to 2282
run: 2462 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2282 => ((1 list-address))
setm: ((1 list-address)) <= 2282
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 2282
run: 2463 list-length 7: (((jump)) ((-5 offset)))
run: 2464 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2465 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6493 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2466 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2282)
run: 2282 => ((1 list-address))
setm: ((1 list-address)) <= 2282
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6495 to 2282
run: 2467 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2282 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2282
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6496 to 2282
run: 2468 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2282 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2282
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 2282
run: 2469 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2470 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 15 => ((2 integer))
setm: ((2 integer)) <= 15
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 15
run: 2471 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2472 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6524 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2473 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2282)
run: 2282 => ((1 list-address))
setm: ((1 list-address)) <= 2282
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6526 to 2282
run: 2474 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2284 list-address) (raw))
sizeof: ((2284 list-address) (raw))
run: 2347 => ((2 list-address))
setm: ((2 list-address)) <= 2347
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6527 to 2347
run: 2475 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2347 => ((1 list-address))
setm: ((1 list-address)) <= 2347
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 2347
run: 2476 list-length 7: (((jump)) ((-5 offset)))
run: 2477 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2478 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6555 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2479 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2347)
run: 2347 => ((1 list-address))
setm: ((1 list-address)) <= 2347
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6557 to 2347
run: 2480 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2347 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2347
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6558 to 2347
run: 2481 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2347 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2347
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 2347
run: 2482 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2483 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 16 => ((2 integer))
setm: ((2 integer)) <= 16
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 16
run: 2484 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2485 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6586 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2486 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2347)
run: 2347 => ((1 list-address))
setm: ((1 list-address)) <= 2347
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6588 to 2347
run: 2487 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2349 list-address) (raw))
sizeof: ((2349 list-address) (raw))
run: 2412 => ((2 list-address))
setm: ((2 list-address)) <= 2412
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6589 to 2412
run: 2488 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2412 => ((1 list-address))
setm: ((1 list-address)) <= 2412
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 2412
run: 2489 list-length 7: (((jump)) ((-5 offset)))
run: 2490 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2491 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6617 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2492 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2412)
run: 2412 => ((1 list-address))
setm: ((1 list-address)) <= 2412
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6619 to 2412
run: 2493 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2412 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2412
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6620 to 2412
run: 2494 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2412 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2412
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 2412
run: 2495 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2496 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 17 => ((2 integer))
setm: ((2 integer)) <= 17
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 17
run: 2497 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2498 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6648 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2499 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2412)
run: 2412 => ((1 list-address))
setm: ((1 list-address)) <= 2412
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6650 to 2412
run: 2500 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2414 list-address) (raw))
sizeof: ((2414 list-address) (raw))
run: 2477 => ((2 list-address))
setm: ((2 list-address)) <= 2477
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6651 to 2477
schedule: scheduling list-next/list-length/init-board/main for further processing
schedule: list-next/list-length/init-board/main
run: 2501 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2477 => ((1 list-address))
setm: ((1 list-address)) <= 2477
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 2477
run: 2502 list-length 7: (((jump)) ((-5 offset)))
run: 2503 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2504 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6679 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2505 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2477)
run: 2477 => ((1 list-address))
setm: ((1 list-address)) <= 2477
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6681 to 2477
run: 2506 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2477 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2477
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6682 to 2477
run: 2507 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2477 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2477
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 2477
run: 2508 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2509 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 18 => ((2 integer))
setm: ((2 integer)) <= 18
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 18
run: 2510 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2511 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6710 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2512 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2477)
run: 2477 => ((1 list-address))
setm: ((1 list-address)) <= 2477
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6712 to 2477
run: 2513 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2479 list-address) (raw))
sizeof: ((2479 list-address) (raw))
run: 2542 => ((2 list-address))
setm: ((2 list-address)) <= 2542
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6713 to 2542
run: 2514 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2542 => ((1 list-address))
setm: ((1 list-address)) <= 2542
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 2542
run: 2515 list-length 7: (((jump)) ((-5 offset)))
run: 2516 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2517 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6741 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2518 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2542)
run: 2542 => ((1 list-address))
setm: ((1 list-address)) <= 2542
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6743 to 2542
run: 2519 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2542 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2542
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6744 to 2542
run: 2520 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2542 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2542
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 2542
run: 2521 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2522 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 19 => ((2 integer))
setm: ((2 integer)) <= 19
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 19
run: 2523 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2524 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6772 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2525 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2542)
run: 2542 => ((1 list-address))
setm: ((1 list-address)) <= 2542
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6774 to 2542
run: 2526 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2544 list-address) (raw))
sizeof: ((2544 list-address) (raw))
run: 2607 => ((2 list-address))
setm: ((2 list-address)) <= 2607
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6775 to 2607
run: 2527 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2607 => ((1 list-address))
setm: ((1 list-address)) <= 2607
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 2607
run: 2528 list-length 7: (((jump)) ((-5 offset)))
run: 2529 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2530 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6803 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2531 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2607)
run: 2607 => ((1 list-address))
setm: ((1 list-address)) <= 2607
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6805 to 2607
run: 2532 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2607 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2607
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6806 to 2607
run: 2533 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2607 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2607
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 2607
run: 2534 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2535 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 20 => ((2 integer))
setm: ((2 integer)) <= 20
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 20
run: 2536 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2537 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6834 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2538 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2607)
run: 2607 => ((1 list-address))
setm: ((1 list-address)) <= 2607
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6836 to 2607
run: 2539 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2609 list-address) (raw))
sizeof: ((2609 list-address) (raw))
run: 2672 => ((2 list-address))
setm: ((2 list-address)) <= 2672
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6837 to 2672
run: 2540 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2672 => ((1 list-address))
setm: ((1 list-address)) <= 2672
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 2672
run: 2541 list-length 7: (((jump)) ((-5 offset)))
run: 2542 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2543 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6865 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2544 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2672)
run: 2672 => ((1 list-address))
setm: ((1 list-address)) <= 2672
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6867 to 2672
run: 2545 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2672 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2672
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6868 to 2672
run: 2546 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2672 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2672
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 2672
run: 2547 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2548 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 21 => ((2 integer))
setm: ((2 integer)) <= 21
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 21
run: 2549 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2550 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6896 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2551 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2672)
run: 2672 => ((1 list-address))
setm: ((1 list-address)) <= 2672
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6898 to 2672
run: 2552 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2674 list-address) (raw))
sizeof: ((2674 list-address) (raw))
run: 2737 => ((2 list-address))
setm: ((2 list-address)) <= 2737
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6899 to 2737
run: 2553 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2737 => ((1 list-address))
setm: ((1 list-address)) <= 2737
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 2737
run: 2554 list-length 7: (((jump)) ((-5 offset)))
run: 2555 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2556 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6927 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2557 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2737)
run: 2737 => ((1 list-address))
setm: ((1 list-address)) <= 2737
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6929 to 2737
run: 2558 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2737 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2737
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6930 to 2737
run: 2559 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2737 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2737
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 2737
run: 2560 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2561 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 22 => ((2 integer))
setm: ((2 integer)) <= 22
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 22
run: 2562 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2563 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6958 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2564 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2737)
run: 2737 => ((1 list-address))
setm: ((1 list-address)) <= 2737
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6960 to 2737
run: 2565 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2739 list-address) (raw))
sizeof: ((2739 list-address) (raw))
run: 2802 => ((2 list-address))
setm: ((2 list-address)) <= 2802
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6961 to 2802
run: 2566 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2802 => ((1 list-address))
setm: ((1 list-address)) <= 2802
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 2802
run: 2567 list-length 7: (((jump)) ((-5 offset)))
run: 2568 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2569 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6989 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2570 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2802)
run: 2802 => ((1 list-address))
setm: ((1 list-address)) <= 2802
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6991 to 2802
run: 2571 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2802 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2802
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6992 to 2802
run: 2572 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2802 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2802
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 2802
run: 2573 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2574 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 23 => ((2 integer))
setm: ((2 integer)) <= 23
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 23
run: 2575 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2576 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7020 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2577 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2802)
run: 2802 => ((1 list-address))
setm: ((1 list-address)) <= 2802
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7022 to 2802
run: 2578 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2804 list-address) (raw))
sizeof: ((2804 list-address) (raw))
run: 2867 => ((2 list-address))
setm: ((2 list-address)) <= 2867
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7023 to 2867
run: 2579 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2867 => ((1 list-address))
setm: ((1 list-address)) <= 2867
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 2867
run: 2580 list-length 7: (((jump)) ((-5 offset)))
run: 2581 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2582 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7051 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2583 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2867)
run: 2867 => ((1 list-address))
setm: ((1 list-address)) <= 2867
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7053 to 2867
run: 2584 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2867 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2867
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7054 to 2867
run: 2585 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2867 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2867
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 2867
run: 2586 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2587 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 24 => ((2 integer))
setm: ((2 integer)) <= 24
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 24
run: 2588 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2589 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7082 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2590 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2867)
run: 2867 => ((1 list-address))
setm: ((1 list-address)) <= 2867
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7084 to 2867
run: 2591 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2869 list-address) (raw))
sizeof: ((2869 list-address) (raw))
run: 2932 => ((2 list-address))
setm: ((2 list-address)) <= 2932
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7085 to 2932
run: 2592 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2932 => ((1 list-address))
setm: ((1 list-address)) <= 2932
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 2932
run: 2593 list-length 7: (((jump)) ((-5 offset)))
run: 2594 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2595 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7113 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2596 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2932)
run: 2932 => ((1 list-address))
setm: ((1 list-address)) <= 2932
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7115 to 2932
run: 2597 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2932 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2932
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7116 to 2932
run: 2598 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2932 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2932
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 2932
run: 2599 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2600 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 25 => ((2 integer))
setm: ((2 integer)) <= 25
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 25
run: 2601 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2602 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7144 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2603 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2932)
run: 2932 => ((1 list-address))
setm: ((1 list-address)) <= 2932
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7146 to 2932
run: 2604 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2934 list-address) (raw))
sizeof: ((2934 list-address) (raw))
run: 2997 => ((2 list-address))
setm: ((2 list-address)) <= 2997
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7147 to 2997
run: 2605 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2997 => ((1 list-address))
setm: ((1 list-address)) <= 2997
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 2997
run: 2606 list-length 7: (((jump)) ((-5 offset)))
run: 2607 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2608 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7175 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2609 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2997)
run: 2997 => ((1 list-address))
setm: ((1 list-address)) <= 2997
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7177 to 2997
run: 2610 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2997 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2997
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7178 to 2997
run: 2611 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2997 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2997
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 2997
run: 2612 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2613 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 26 => ((2 integer))
setm: ((2 integer)) <= 26
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 26
run: 2614 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2615 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7206 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2616 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2997)
run: 2997 => ((1 list-address))
setm: ((1 list-address)) <= 2997
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7208 to 2997
run: 2617 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2999 list-address) (raw))
sizeof: ((2999 list-address) (raw))
run: 3062 => ((2 list-address))
setm: ((2 list-address)) <= 3062
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7209 to 3062
run: 2618 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3062 => ((1 list-address))
setm: ((1 list-address)) <= 3062
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 3062
run: 2619 list-length 7: (((jump)) ((-5 offset)))
run: 2620 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2621 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7237 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2622 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3062)
run: 3062 => ((1 list-address))
setm: ((1 list-address)) <= 3062
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7239 to 3062
run: 2623 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3062 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3062
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7240 to 3062
run: 2624 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3062 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3062
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 3062
run: 2625 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2626 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 27 => ((2 integer))
setm: ((2 integer)) <= 27
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 27
run: 2627 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2628 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7268 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2629 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3062)
run: 3062 => ((1 list-address))
setm: ((1 list-address)) <= 3062
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7270 to 3062
run: 2630 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3064 list-address) (raw))
sizeof: ((3064 list-address) (raw))
run: 3127 => ((2 list-address))
setm: ((2 list-address)) <= 3127
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7271 to 3127
run: 2631 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3127 => ((1 list-address))
setm: ((1 list-address)) <= 3127
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 3127
run: 2632 list-length 7: (((jump)) ((-5 offset)))
run: 2633 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2634 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7299 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2635 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3127)
run: 3127 => ((1 list-address))
setm: ((1 list-address)) <= 3127
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7301 to 3127
run: 2636 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3127 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3127
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7302 to 3127
run: 2637 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3127 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3127
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 3127
run: 2638 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2639 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 28 => ((2 integer))
setm: ((2 integer)) <= 28
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 28
run: 2640 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2641 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7330 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2642 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3127)
run: 3127 => ((1 list-address))
setm: ((1 list-address)) <= 3127
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7332 to 3127
run: 2643 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3129 list-address) (raw))
sizeof: ((3129 list-address) (raw))
run: 3192 => ((2 list-address))
setm: ((2 list-address)) <= 3192
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7333 to 3192
run: 2644 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3192 => ((1 list-address))
setm: ((1 list-address)) <= 3192
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 3192
run: 2645 list-length 7: (((jump)) ((-5 offset)))
run: 2646 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2647 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7361 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2648 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3192)
run: 3192 => ((1 list-address))
setm: ((1 list-address)) <= 3192
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7363 to 3192
run: 2649 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3192 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3192
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7364 to 3192
run: 2650 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3192 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3192
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 3192
run: 2651 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2652 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 29 => ((2 integer))
setm: ((2 integer)) <= 29
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 29
run: 2653 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2654 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7392 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2655 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3192)
run: 3192 => ((1 list-address))
setm: ((1 list-address)) <= 3192
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7394 to 3192
run: 2656 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3194 list-address) (raw))
sizeof: ((3194 list-address) (raw))
run: 3257 => ((2 list-address))
setm: ((2 list-address)) <= 3257
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7395 to 3257
run: 2657 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3257 => ((1 list-address))
setm: ((1 list-address)) <= 3257
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 3257
run: 2658 list-length 7: (((jump)) ((-5 offset)))
run: 2659 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2660 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7423 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2661 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3257)
run: 3257 => ((1 list-address))
setm: ((1 list-address)) <= 3257
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7425 to 3257
run: 2662 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3257 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3257
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7426 to 3257
run: 2663 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3257 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3257
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 3257
run: 2664 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2665 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 30 => ((2 integer))
setm: ((2 integer)) <= 30
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 30
run: 2666 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2667 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7454 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2668 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3257)
run: 3257 => ((1 list-address))
setm: ((1 list-address)) <= 3257
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7456 to 3257
run: 2669 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3259 list-address) (raw))
sizeof: ((3259 list-address) (raw))
run: 3322 => ((2 list-address))
setm: ((2 list-address)) <= 3322
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7457 to 3322
run: 2670 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3322 => ((1 list-address))
setm: ((1 list-address)) <= 3322
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 3322
run: 2671 list-length 7: (((jump)) ((-5 offset)))
run: 2672 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2673 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7485 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2674 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3322)
run: 3322 => ((1 list-address))
setm: ((1 list-address)) <= 3322
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7487 to 3322
run: 2675 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3322 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3322
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7488 to 3322
run: 2676 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3322 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3322
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 3322
run: 2677 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2678 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 31 => ((2 integer))
setm: ((2 integer)) <= 31
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 31
run: 2679 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2680 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7516 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2681 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3322)
run: 3322 => ((1 list-address))
setm: ((1 list-address)) <= 3322
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7518 to 3322
run: 2682 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3324 list-address) (raw))
sizeof: ((3324 list-address) (raw))
run: 3387 => ((2 list-address))
setm: ((2 list-address)) <= 3387
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7519 to 3387
run: 2683 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3387 => ((1 list-address))
setm: ((1 list-address)) <= 3387
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 3387
run: 2684 list-length 7: (((jump)) ((-5 offset)))
run: 2685 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2686 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7547 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2687 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3387)
run: 3387 => ((1 list-address))
setm: ((1 list-address)) <= 3387
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7549 to 3387
run: 2688 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3387 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3387
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7550 to 3387
run: 2689 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3387 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3387
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 3387
run: 2690 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2691 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 32 => ((2 integer))
setm: ((2 integer)) <= 32
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 32
run: 2692 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2693 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7578 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2694 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3387)
run: 3387 => ((1 list-address))
setm: ((1 list-address)) <= 3387
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7580 to 3387
run: 2695 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3389 list-address) (raw))
sizeof: ((3389 list-address) (raw))
run: 3452 => ((2 list-address))
setm: ((2 list-address)) <= 3452
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7581 to 3452
run: 2696 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3452 => ((1 list-address))
setm: ((1 list-address)) <= 3452
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 3452
run: 2697 list-length 7: (((jump)) ((-5 offset)))
run: 2698 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2699 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7609 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2700 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3452)
run: 3452 => ((1 list-address))
setm: ((1 list-address)) <= 3452
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7611 to 3452
run: 2701 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3452 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3452
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7612 to 3452
run: 2702 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3452 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3452
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 3452
run: 2703 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2704 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 33 => ((2 integer))
setm: ((2 integer)) <= 33
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 33
run: 2705 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2706 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7640 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2707 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3452)
run: 3452 => ((1 list-address))
setm: ((1 list-address)) <= 3452
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7642 to 3452
run: 2708 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3454 list-address) (raw))
sizeof: ((3454 list-address) (raw))
run: 3517 => ((2 list-address))
setm: ((2 list-address)) <= 3517
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7643 to 3517
run: 2709 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3517 => ((1 list-address))
setm: ((1 list-address)) <= 3517
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 3517
run: 2710 list-length 7: (((jump)) ((-5 offset)))
run: 2711 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2712 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7671 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2713 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3517)
run: 3517 => ((1 list-address))
setm: ((1 list-address)) <= 3517
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7673 to 3517
run: 2714 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3517 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3517
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7674 to 3517
run: 2715 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3517 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3517
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 3517
run: 2716 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2717 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 34 => ((2 integer))
setm: ((2 integer)) <= 34
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 34
run: 2718 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2719 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7702 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2720 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3517)
run: 3517 => ((1 list-address))
setm: ((1 list-address)) <= 3517
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7704 to 3517
run: 2721 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3519 list-address) (raw))
sizeof: ((3519 list-address) (raw))
run: 3582 => ((2 list-address))
setm: ((2 list-address)) <= 3582
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7705 to 3582
run: 2722 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3582 => ((1 list-address))
setm: ((1 list-address)) <= 3582
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 3582
run: 2723 list-length 7: (((jump)) ((-5 offset)))
run: 2724 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2725 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7733 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2726 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3582)
run: 3582 => ((1 list-address))
setm: ((1 list-address)) <= 3582
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7735 to 3582
run: 2727 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3582 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3582
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7736 to 3582
run: 2728 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3582 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3582
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 3582
run: 2729 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2730 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 35 => ((2 integer))
setm: ((2 integer)) <= 35
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 35
run: 2731 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2732 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7764 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2733 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3582)
run: 3582 => ((1 list-address))
setm: ((1 list-address)) <= 3582
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7766 to 3582
run: 2734 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3584 list-address) (raw))
sizeof: ((3584 list-address) (raw))
run: 3647 => ((2 list-address))
setm: ((2 list-address)) <= 3647
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7767 to 3647
run: 2735 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3647 => ((1 list-address))
setm: ((1 list-address)) <= 3647
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 3647
run: 2736 list-length 7: (((jump)) ((-5 offset)))
run: 2737 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2738 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7795 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2739 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3647)
run: 3647 => ((1 list-address))
setm: ((1 list-address)) <= 3647
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7797 to 3647
run: 2740 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3647 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3647
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7798 to 3647
run: 2741 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3647 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3647
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 3647
run: 2742 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2743 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 36 => ((2 integer))
setm: ((2 integer)) <= 36
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 36
run: 2744 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2745 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7826 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2746 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3647)
run: 3647 => ((1 list-address))
setm: ((1 list-address)) <= 3647
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7828 to 3647
run: 2747 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3649 list-address) (raw))
sizeof: ((3649 list-address) (raw))
run: 3712 => ((2 list-address))
setm: ((2 list-address)) <= 3712
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7829 to 3712
run: 2748 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3712 => ((1 list-address))
setm: ((1 list-address)) <= 3712
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 3712
run: 2749 list-length 7: (((jump)) ((-5 offset)))
run: 2750 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2751 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7857 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2752 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3712)
run: 3712 => ((1 list-address))
setm: ((1 list-address)) <= 3712
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7859 to 3712
run: 2753 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3712 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3712
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7860 to 3712
run: 2754 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3712 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3712
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 3712
run: 2755 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2756 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 37 => ((2 integer))
setm: ((2 integer)) <= 37
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 37
run: 2757 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2758 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7888 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2759 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3712)
run: 3712 => ((1 list-address))
setm: ((1 list-address)) <= 3712
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7890 to 3712
run: 2760 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3714 list-address) (raw))
sizeof: ((3714 list-address) (raw))
run: 3777 => ((2 list-address))
setm: ((2 list-address)) <= 3777
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7891 to 3777
run: 2761 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3777 => ((1 list-address))
setm: ((1 list-address)) <= 3777
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 3777
run: 2762 list-length 7: (((jump)) ((-5 offset)))
run: 2763 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2764 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7919 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2765 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3777)
run: 3777 => ((1 list-address))
setm: ((1 list-address)) <= 3777
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7921 to 3777
run: 2766 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3777 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3777
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7922 to 3777
run: 2767 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3777 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3777
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 3777
run: 2768 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2769 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 38 => ((2 integer))
setm: ((2 integer)) <= 38
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 38
run: 2770 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2771 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7950 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2772 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3777)
run: 3777 => ((1 list-address))
setm: ((1 list-address)) <= 3777
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7952 to 3777
run: 2773 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3779 list-address) (raw))
sizeof: ((3779 list-address) (raw))
run: 3842 => ((2 list-address))
setm: ((2 list-address)) <= 3842
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7953 to 3842
run: 2774 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3842 => ((1 list-address))
setm: ((1 list-address)) <= 3842
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 3842
run: 2775 list-length 7: (((jump)) ((-5 offset)))
run: 2776 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2777 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7981 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2778 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3842)
run: 3842 => ((1 list-address))
setm: ((1 list-address)) <= 3842
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7983 to 3842
run: 2779 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3842 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3842
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7984 to 3842
run: 2780 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3842 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3842
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 3842
run: 2781 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2782 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 39 => ((2 integer))
setm: ((2 integer)) <= 39
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 39
run: 2783 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2784 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8012 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2785 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3842)
run: 3842 => ((1 list-address))
setm: ((1 list-address)) <= 3842
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8014 to 3842
run: 2786 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3844 list-address) (raw))
sizeof: ((3844 list-address) (raw))
run: 3907 => ((2 list-address))
setm: ((2 list-address)) <= 3907
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8015 to 3907
run: 2787 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3907 => ((1 list-address))
setm: ((1 list-address)) <= 3907
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 3907
run: 2788 list-length 7: (((jump)) ((-5 offset)))
run: 2789 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2790 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8043 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2791 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3907)
run: 3907 => ((1 list-address))
setm: ((1 list-address)) <= 3907
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8045 to 3907
run: 2792 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3907 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3907
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8046 to 3907
run: 2793 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3907 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3907
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 3907
run: 2794 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2795 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 40 => ((2 integer))
setm: ((2 integer)) <= 40
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 40
run: 2796 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2797 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8074 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2798 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3907)
run: 3907 => ((1 list-address))
setm: ((1 list-address)) <= 3907
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8076 to 3907
run: 2799 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3909 list-address) (raw))
sizeof: ((3909 list-address) (raw))
run: 3972 => ((2 list-address))
setm: ((2 list-address)) <= 3972
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8077 to 3972
run: 2800 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3972 => ((1 list-address))
setm: ((1 list-address)) <= 3972
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 3972
run: 2801 list-length 7: (((jump)) ((-5 offset)))
run: 2802 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2803 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8105 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2804 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3972)
run: 3972 => ((1 list-address))
setm: ((1 list-address)) <= 3972
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8107 to 3972
run: 2805 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3972 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3972
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8108 to 3972
run: 2806 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3972 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3972
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 3972
run: 2807 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2808 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 41 => ((2 integer))
setm: ((2 integer)) <= 41
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 41
run: 2809 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2810 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8136 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2811 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3972)
run: 3972 => ((1 list-address))
setm: ((1 list-address)) <= 3972
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8138 to 3972
run: 2812 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3974 list-address) (raw))
sizeof: ((3974 list-address) (raw))
run: 4037 => ((2 list-address))
setm: ((2 list-address)) <= 4037
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8139 to 4037
run: 2813 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4037 => ((1 list-address))
setm: ((1 list-address)) <= 4037
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 4037
run: 2814 list-length 7: (((jump)) ((-5 offset)))
run: 2815 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2816 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8167 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2817 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4037)
run: 4037 => ((1 list-address))
setm: ((1 list-address)) <= 4037
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8169 to 4037
run: 2818 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4037 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4037
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8170 to 4037
run: 2819 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4037 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4037
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 4037
run: 2820 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2821 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 42 => ((2 integer))
setm: ((2 integer)) <= 42
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 42
run: 2822 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2823 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8198 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2824 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4037)
run: 4037 => ((1 list-address))
setm: ((1 list-address)) <= 4037
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8200 to 4037
run: 2825 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4039 list-address) (raw))
sizeof: ((4039 list-address) (raw))
run: 4102 => ((2 list-address))
setm: ((2 list-address)) <= 4102
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8201 to 4102
run: 2826 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4102 => ((1 list-address))
setm: ((1 list-address)) <= 4102
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 4102
run: 2827 list-length 7: (((jump)) ((-5 offset)))
run: 2828 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2829 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8229 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2830 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4102)
run: 4102 => ((1 list-address))
setm: ((1 list-address)) <= 4102
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8231 to 4102
run: 2831 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4102 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4102
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8232 to 4102
run: 2832 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4102 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4102
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 4102
run: 2833 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2834 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 43 => ((2 integer))
setm: ((2 integer)) <= 43
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 43
run: 2835 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2836 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8260 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2837 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4102)
run: 4102 => ((1 list-address))
setm: ((1 list-address)) <= 4102
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8262 to 4102
run: 2838 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4104 list-address) (raw))
sizeof: ((4104 list-address) (raw))
run: 4167 => ((2 list-address))
setm: ((2 list-address)) <= 4167
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8263 to 4167
run: 2839 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4167 => ((1 list-address))
setm: ((1 list-address)) <= 4167
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 4167
run: 2840 list-length 7: (((jump)) ((-5 offset)))
run: 2841 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2842 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8291 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2843 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4167)
run: 4167 => ((1 list-address))
setm: ((1 list-address)) <= 4167
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8293 to 4167
run: 2844 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4167 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4167
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8294 to 4167
run: 2845 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4167 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4167
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 4167
run: 2846 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2847 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 44 => ((2 integer))
setm: ((2 integer)) <= 44
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 44
run: 2848 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2849 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8322 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2850 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4167)
run: 4167 => ((1 list-address))
setm: ((1 list-address)) <= 4167
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8324 to 4167
run: 2851 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4169 list-address) (raw))
sizeof: ((4169 list-address) (raw))
run: 4232 => ((2 list-address))
setm: ((2 list-address)) <= 4232
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8325 to 4232
run: 2852 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4232 => ((1 list-address))
setm: ((1 list-address)) <= 4232
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 4232
run: 2853 list-length 7: (((jump)) ((-5 offset)))
run: 2854 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2855 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8353 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2856 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4232)
run: 4232 => ((1 list-address))
setm: ((1 list-address)) <= 4232
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8355 to 4232
run: 2857 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4232 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4232
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8356 to 4232
run: 2858 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4232 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4232
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 4232
run: 2859 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2860 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 45 => ((2 integer))
setm: ((2 integer)) <= 45
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 45
run: 2861 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2862 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8384 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2863 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4232)
run: 4232 => ((1 list-address))
setm: ((1 list-address)) <= 4232
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8386 to 4232
run: 2864 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4234 list-address) (raw))
sizeof: ((4234 list-address) (raw))
run: 4297 => ((2 list-address))
setm: ((2 list-address)) <= 4297
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8387 to 4297
run: 2865 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4297 => ((1 list-address))
setm: ((1 list-address)) <= 4297
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 4297
run: 2866 list-length 7: (((jump)) ((-5 offset)))
run: 2867 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2868 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8415 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2869 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4297)
run: 4297 => ((1 list-address))
setm: ((1 list-address)) <= 4297
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8417 to 4297
run: 2870 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4297 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4297
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8418 to 4297
run: 2871 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4297 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4297
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 4297
run: 2872 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2873 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 46 => ((2 integer))
setm: ((2 integer)) <= 46
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 46
run: 2874 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2875 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8446 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2876 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4297)
run: 4297 => ((1 list-address))
setm: ((1 list-address)) <= 4297
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8448 to 4297
run: 2877 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4299 list-address) (raw))
sizeof: ((4299 list-address) (raw))
run: 4362 => ((2 list-address))
setm: ((2 list-address)) <= 4362
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8449 to 4362
run: 2878 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4362 => ((1 list-address))
setm: ((1 list-address)) <= 4362
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 4362
run: 2879 list-length 7: (((jump)) ((-5 offset)))
run: 2880 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2881 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8477 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2882 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4362)
run: 4362 => ((1 list-address))
setm: ((1 list-address)) <= 4362
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8479 to 4362
run: 2883 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4362 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4362
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8480 to 4362
run: 2884 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4362 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4362
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 4362
run: 2885 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2886 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 47 => ((2 integer))
setm: ((2 integer)) <= 47
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 47
run: 2887 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2888 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8508 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2889 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4362)
run: 4362 => ((1 list-address))
setm: ((1 list-address)) <= 4362
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8510 to 4362
run: 2890 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4364 list-address) (raw))
sizeof: ((4364 list-address) (raw))
run: 4427 => ((2 list-address))
setm: ((2 list-address)) <= 4427
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8511 to 4427
run: 2891 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4427 => ((1 list-address))
setm: ((1 list-address)) <= 4427
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 4427
run: 2892 list-length 7: (((jump)) ((-5 offset)))
run: 2893 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2894 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8539 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2895 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4427)
run: 4427 => ((1 list-address))
setm: ((1 list-address)) <= 4427
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8541 to 4427
run: 2896 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4427 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4427
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8542 to 4427
run: 2897 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4427 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4427
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 4427
run: 2898 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2899 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 48 => ((2 integer))
setm: ((2 integer)) <= 48
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 48
run: 2900 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2901 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8570 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2902 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4427)
run: 4427 => ((1 list-address))
setm: ((1 list-address)) <= 4427
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8572 to 4427
run: 2903 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4429 list-address) (raw))
sizeof: ((4429 list-address) (raw))
run: 4492 => ((2 list-address))
setm: ((2 list-address)) <= 4492
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8573 to 4492
run: 2904 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4492 => ((1 list-address))
setm: ((1 list-address)) <= 4492
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 4492
run: 2905 list-length 7: (((jump)) ((-5 offset)))
run: 2906 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2907 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8601 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2908 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4492)
run: 4492 => ((1 list-address))
setm: ((1 list-address)) <= 4492
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8603 to 4492
run: 2909 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4492 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4492
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8604 to 4492
run: 2910 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4492 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4492
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 4492
run: 2911 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2912 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 49 => ((2 integer))
setm: ((2 integer)) <= 49
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 49
run: 2913 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2914 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8632 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2915 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4492)
run: 4492 => ((1 list-address))
setm: ((1 list-address)) <= 4492
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8634 to 4492
run: 2916 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4494 list-address) (raw))
sizeof: ((4494 list-address) (raw))
run: 4557 => ((2 list-address))
setm: ((2 list-address)) <= 4557
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8635 to 4557
run: 2917 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4557 => ((1 list-address))
setm: ((1 list-address)) <= 4557
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 4557
run: 2918 list-length 7: (((jump)) ((-5 offset)))
run: 2919 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2920 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8663 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2921 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4557)
run: 4557 => ((1 list-address))
setm: ((1 list-address)) <= 4557
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8665 to 4557
run: 2922 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4557 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4557
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8666 to 4557
run: 2923 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4557 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4557
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 4557
run: 2924 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2925 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 50 => ((2 integer))
setm: ((2 integer)) <= 50
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 50
run: 2926 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2927 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8694 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2928 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4557)
run: 4557 => ((1 list-address))
setm: ((1 list-address)) <= 4557
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8696 to 4557
run: 2929 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4559 list-address) (raw))
sizeof: ((4559 list-address) (raw))
run: 4622 => ((2 list-address))
setm: ((2 list-address)) <= 4622
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8697 to 4622
run: 2930 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4622 => ((1 list-address))
setm: ((1 list-address)) <= 4622
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 4622
run: 2931 list-length 7: (((jump)) ((-5 offset)))
run: 2932 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2933 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8725 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2934 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4622)
run: 4622 => ((1 list-address))
setm: ((1 list-address)) <= 4622
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8727 to 4622
run: 2935 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4622 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4622
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8728 to 4622
run: 2936 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4622 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4622
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 4622
run: 2937 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2938 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 51 => ((2 integer))
setm: ((2 integer)) <= 51
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 51
run: 2939 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2940 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8756 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2941 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4622)
run: 4622 => ((1 list-address))
setm: ((1 list-address)) <= 4622
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8758 to 4622
run: 2942 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4624 list-address) (raw))
sizeof: ((4624 list-address) (raw))
run: 4687 => ((2 list-address))
setm: ((2 list-address)) <= 4687
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8759 to 4687
run: 2943 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4687 => ((1 list-address))
setm: ((1 list-address)) <= 4687
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 4687
run: 2944 list-length 7: (((jump)) ((-5 offset)))
run: 2945 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2946 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8787 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2947 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4687)
run: 4687 => ((1 list-address))
setm: ((1 list-address)) <= 4687
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8789 to 4687
run: 2948 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4687 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4687
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8790 to 4687
run: 2949 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4687 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4687
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 4687
run: 2950 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2951 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 52 => ((2 integer))
setm: ((2 integer)) <= 52
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 52
run: 2952 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2953 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8818 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2954 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4687)
run: 4687 => ((1 list-address))
setm: ((1 list-address)) <= 4687
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8820 to 4687
run: 2955 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4689 list-address) (raw))
sizeof: ((4689 list-address) (raw))
run: 4752 => ((2 list-address))
setm: ((2 list-address)) <= 4752
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8821 to 4752
run: 2956 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4752 => ((1 list-address))
setm: ((1 list-address)) <= 4752
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 4752
run: 2957 list-length 7: (((jump)) ((-5 offset)))
run: 2958 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2959 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8849 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2960 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4752)
run: 4752 => ((1 list-address))
setm: ((1 list-address)) <= 4752
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8851 to 4752
run: 2961 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4752 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4752
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8852 to 4752
run: 2962 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4752 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4752
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 4752
run: 2963 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2964 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 53 => ((2 integer))
setm: ((2 integer)) <= 53
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 53
run: 2965 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2966 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8880 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2967 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4752)
run: 4752 => ((1 list-address))
setm: ((1 list-address)) <= 4752
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8882 to 4752
run: 2968 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4754 list-address) (raw))
sizeof: ((4754 list-address) (raw))
run: 4817 => ((2 list-address))
setm: ((2 list-address)) <= 4817
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8883 to 4817
run: 2969 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4817 => ((1 list-address))
setm: ((1 list-address)) <= 4817
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 4817
run: 2970 list-length 7: (((jump)) ((-5 offset)))
run: 2971 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2972 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8911 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2973 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4817)
run: 4817 => ((1 list-address))
setm: ((1 list-address)) <= 4817
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8913 to 4817
run: 2974 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4817 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4817
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8914 to 4817
run: 2975 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4817 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4817
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 4817
run: 2976 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2977 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 54 => ((2 integer))
setm: ((2 integer)) <= 54
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 54
run: 2978 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2979 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8942 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2980 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4817)
run: 4817 => ((1 list-address))
setm: ((1 list-address)) <= 4817
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8944 to 4817
run: 2981 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4819 list-address) (raw))
sizeof: ((4819 list-address) (raw))
run: 4882 => ((2 list-address))
setm: ((2 list-address)) <= 4882
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8945 to 4882
run: 2982 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4882 => ((1 list-address))
setm: ((1 list-address)) <= 4882
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 4882
run: 2983 list-length 7: (((jump)) ((-5 offset)))
run: 2984 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2985 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8973 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2986 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4882)
run: 4882 => ((1 list-address))
setm: ((1 list-address)) <= 4882
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8975 to 4882
run: 2987 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4882 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4882
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8976 to 4882
run: 2988 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4882 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4882
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 4882
run: 2989 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 2990 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 55 => ((2 integer))
setm: ((2 integer)) <= 55
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 55
run: 2991 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2992 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9004 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2993 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4882)
run: 4882 => ((1 list-address))
setm: ((1 list-address)) <= 4882
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9006 to 4882
run: 2994 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4884 list-address) (raw))
sizeof: ((4884 list-address) (raw))
run: 4947 => ((2 list-address))
setm: ((2 list-address)) <= 4947
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9007 to 4947
run: 2995 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4947 => ((1 list-address))
setm: ((1 list-address)) <= 4947
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 4947
run: 2996 list-length 7: (((jump)) ((-5 offset)))
run: 2997 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2998 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9035 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2999 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4947)
run: 4947 => ((1 list-address))
setm: ((1 list-address)) <= 4947
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9037 to 4947
run: 3000 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4947 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4947
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9038 to 4947
schedule: scheduling list-value-address/list-length/init-board/main for further processing
schedule: list-value-address/list-length/init-board/main
run: 3001 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4947 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4947
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 4947
run: 3002 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 3003 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 56 => ((2 integer))
setm: ((2 integer)) <= 56
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 56
run: 3004 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3005 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9066 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3006 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4947)
run: 4947 => ((1 list-address))
setm: ((1 list-address)) <= 4947
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9068 to 4947
run: 3007 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4949 list-address) (raw))
sizeof: ((4949 list-address) (raw))
run: 5012 => ((2 list-address))
setm: ((2 list-address)) <= 5012
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9069 to 5012
run: 3008 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 5012 => ((1 list-address))
setm: ((1 list-address)) <= 5012
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 5012
run: 3009 list-length 7: (((jump)) ((-5 offset)))
run: 3010 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3011 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9097 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3012 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5012)
run: 5012 => ((1 list-address))
setm: ((1 list-address)) <= 5012
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9099 to 5012
run: 3013 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5012 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5012
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9100 to 5012
run: 3014 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 5012 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 5012
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 5012
run: 3015 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 3016 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 57 => ((2 integer))
setm: ((2 integer)) <= 57
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 57
run: 3017 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3018 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9128 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3019 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5012)
run: 5012 => ((1 list-address))
setm: ((1 list-address)) <= 5012
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9130 to 5012
run: 3020 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5014 list-address) (raw))
sizeof: ((5014 list-address) (raw))
run: 5077 => ((2 list-address))
setm: ((2 list-address)) <= 5077
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9131 to 5077
run: 3021 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 5077 => ((1 list-address))
setm: ((1 list-address)) <= 5077
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 5077
run: 3022 list-length 7: (((jump)) ((-5 offset)))
run: 3023 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3024 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9159 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3025 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5077)
run: 5077 => ((1 list-address))
setm: ((1 list-address)) <= 5077
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9161 to 5077
run: 3026 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5077 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5077
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9162 to 5077
run: 3027 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 5077 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 5077
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 5077
run: 3028 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 3029 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 58 => ((2 integer))
setm: ((2 integer)) <= 58
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 58
run: 3030 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3031 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9190 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3032 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5077)
run: 5077 => ((1 list-address))
setm: ((1 list-address)) <= 5077
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9192 to 5077
run: 3033 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5079 list-address) (raw))
sizeof: ((5079 list-address) (raw))
run: 5142 => ((2 list-address))
setm: ((2 list-address)) <= 5142
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9193 to 5142
run: 3034 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 5142 => ((1 list-address))
setm: ((1 list-address)) <= 5142
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 5142
run: 3035 list-length 7: (((jump)) ((-5 offset)))
run: 3036 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3037 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9221 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3038 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5142)
run: 5142 => ((1 list-address))
setm: ((1 list-address)) <= 5142
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9223 to 5142
run: 3039 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5142 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5142
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9224 to 5142
run: 3040 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 5142 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 5142
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 5142
run: 3041 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 3042 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 59 => ((2 integer))
setm: ((2 integer)) <= 59
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 59
run: 3043 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3044 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9252 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3045 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5142)
run: 5142 => ((1 list-address))
setm: ((1 list-address)) <= 5142
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9254 to 5142
run: 3046 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5144 list-address) (raw))
sizeof: ((5144 list-address) (raw))
run: 5207 => ((2 list-address))
setm: ((2 list-address)) <= 5207
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9255 to 5207
run: 3047 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 5207 => ((1 list-address))
setm: ((1 list-address)) <= 5207
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 5207
run: 3048 list-length 7: (((jump)) ((-5 offset)))
run: 3049 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3050 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9283 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3051 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5207)
run: 5207 => ((1 list-address))
setm: ((1 list-address)) <= 5207
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9285 to 5207
run: 3052 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5207 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5207
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9286 to 5207
run: 3053 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 5207 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 5207
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 5207
run: 3054 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 3055 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 60 => ((2 integer))
setm: ((2 integer)) <= 60
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 60
run: 3056 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3057 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9314 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3058 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5207)
run: 5207 => ((1 list-address))
setm: ((1 list-address)) <= 5207
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9316 to 5207
run: 3059 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5209 list-address) (raw))
sizeof: ((5209 list-address) (raw))
run: 5272 => ((2 list-address))
setm: ((2 list-address)) <= 5272
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9317 to 5272
run: 3060 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 5272 => ((1 list-address))
setm: ((1 list-address)) <= 5272
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 5272
run: 3061 list-length 7: (((jump)) ((-5 offset)))
run: 3062 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3063 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9345 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3064 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5272)
run: 5272 => ((1 list-address))
setm: ((1 list-address)) <= 5272
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9347 to 5272
run: 3065 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5272 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5272
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9348 to 5272
run: 3066 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 5272 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 5272
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 5272
run: 3067 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 3068 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 61 => ((2 integer))
setm: ((2 integer)) <= 61
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 61
run: 3069 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3070 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9376 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3071 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5272)
run: 5272 => ((1 list-address))
setm: ((1 list-address)) <= 5272
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9378 to 5272
run: 3072 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5274 list-address) (raw))
sizeof: ((5274 list-address) (raw))
run: 5337 => ((2 list-address))
setm: ((2 list-address)) <= 5337
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9379 to 5337
run: 3073 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 5337 => ((1 list-address))
setm: ((1 list-address)) <= 5337
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 5337
run: 3074 list-length 7: (((jump)) ((-5 offset)))
run: 3075 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3076 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9407 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3077 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5337)
run: 5337 => ((1 list-address))
setm: ((1 list-address)) <= 5337
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9409 to 5337
run: 3078 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5337 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5337
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9410 to 5337
run: 3079 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 5337 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 5337
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 5337
run: 3080 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 3081 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 62 => ((2 integer))
setm: ((2 integer)) <= 62
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 62
run: 3082 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3083 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9438 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3084 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5337)
run: 5337 => ((1 list-address))
setm: ((1 list-address)) <= 5337
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9440 to 5337
run: 3085 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5339 list-address) (raw))
sizeof: ((5339 list-address) (raw))
run: 5402 => ((2 list-address))
setm: ((2 list-address)) <= 5402
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9441 to 5402
run: 3086 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 5402 => ((1 list-address))
setm: ((1 list-address)) <= 5402
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 5402
run: 3087 list-length 7: (((jump)) ((-5 offset)))
run: 3088 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3089 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9469 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3090 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5402)
run: 5402 => ((1 list-address))
setm: ((1 list-address)) <= 5402
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9471 to 5402
run: 3091 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5402 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5402
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9472 to 5402
run: 3092 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 5402 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 5402
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 5402
run: 3093 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 3094 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 63 => ((2 integer))
setm: ((2 integer)) <= 63
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 63
run: 3095 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3096 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9500 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3097 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5402)
run: 5402 => ((1 list-address))
setm: ((1 list-address)) <= 5402
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9502 to 5402
run: 3098 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5404 list-address) (raw))
sizeof: ((5404 list-address) (raw))
run: 5467 => ((2 list-address))
setm: ((2 list-address)) <= 5467
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9503 to 5467
run: 3099 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 5467 => ((1 list-address))
setm: ((1 list-address)) <= 5467
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to 5467
run: 3100 list-length 7: (((jump)) ((-5 offset)))
run: 3101 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3102 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9531 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3103 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5467)
run: 5467 => ((1 list-address))
setm: ((1 list-address)) <= 5467
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9533 to 5467
run: 3104 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5467 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5467
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9534 to 5467
run: 3105 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 5467 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 5467
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to 5467
run: 3106 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 3107 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 64 => ((2 integer))
setm: ((2 integer)) <= 64
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5597 to 64
run: 3108 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3109 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9562 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3110 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5467)
run: 5467 => ((1 list-address))
setm: ((1 list-address)) <= 5467
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9564 to 5467
run: 3111 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5469 list-address) (raw))
sizeof: ((5469 list-address) (raw))
run: nil => ((2 list-address))
setm: ((2 list-address)) <= nil
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9565 to nil
run: 3112 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: nil => ((1 list-address))
setm: ((1 list-address)) <= nil
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5596 to nil
run: 3113 list-length 7: (((jump)) ((-5 offset)))
run: 3114 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3115 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9593 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3116 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (nil)
run: nil => ((1 list-address))
setm: ((1 list-address)) <= nil
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9595 to nil
run: 3117 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: nil => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= nil
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9596 to nil
run: 3118 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: nil => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= nil
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5598 to nil
run: 3119 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 3120 list-length 8: (((reply)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
reply: (((2 integer))) (((2 integer)))
reply: 64 => ((2 integer))
setm: ((2 integer)) <= 64
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5566 to 64
run: 3121 init-board 3: (((3 boolean)) <- ((equal)) ((2 integer)) ((64 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: t => ((3 boolean))
setm: ((3 boolean)) <= t
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 5567 to t
run: 3122 init-board 4: (((assert)) ((3 boolean)) ((chessboard had incorrect size literal)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 3123 init-board 5: (((4 board-address)) <- ((new)) ((board literal)) ((8 literal)))
sizeof: ((_ file-address))
run: 9624 => ((4 board-address))
setm: ((4 board-address)) <= 9624
setm: size of ((4 board-address)) is 1
setm: ((4 board-address)): setting 5568 to 9624
run: 3124 init-board 6: (((5 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((5 integer))
setm: ((5 integer)) <= 0
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 5569 to 0
run: 3125 init-board 7: (((6 list-address)) <- ((copy)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1372 => ((6 list-address))
setm: ((6 list-address)) <= 1372
setm: size of ((6 list-address)) is 1
setm: ((6 list-address)): setting 5570 to 1372
run: 3126 init-board 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((7 boolean))
setm: ((7 boolean)) <= nil
setm: size of ((7 boolean)) is 1
setm: ((7 boolean)): setting 5571 to nil
run: 3127 init-board 9: (((jump-if)) ((7 boolean)) ((4 offset)))
m: ((7 boolean))
sizeof: ((7 boolean))
run: 3128 init-board 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
run: 9625 => ((8 file-address-address))
setm: ((8 file-address-address)) <= 9625
setm: size of ((8 file-address-address)) is 1
setm: ((8 file-address-address)): setting 5572 to 9625
run: 3129 init-board 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
m: ((6 list-address))
sizeof: ((6 list-address))
run: 3130 init-file 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9633 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3131 init-file 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1372)
run: 1372 => ((1 list-address))
setm: ((1 list-address)) <= 1372
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9635 to 1372
run: 3132 init-file 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
sizeof: ((_ square))
run: 9664 => ((2 file-address))
setm: ((2 file-address)) <= 9664
setm: size of ((2 file-address)) is 1
setm: ((2 file-address)): setting 9636 to 9664
run: 3133 init-file 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer))
setm: ((3 integer)) <= 0
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9637 to 0
run: 3134 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9638 to nil
run: 3135 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3136 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3137 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9673 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3138 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1372)
run: 1372 => ((1 list-address))
setm: ((1 list-address)) <= 1372
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9675 to 1372
run: 3139 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1372 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1372
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9676 to 1372
run: 3140 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 1372 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 1372
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 9639 to 1372
run: 3141 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9664 file) (raw))
m: ((9664 integer) (raw))
sizeof: ((9664 integer) (raw))
sizeof: ((_ square))
run: 9665 => ((6 square-address))
setm: ((6 square-address)) <= 9665
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 9640 to 9665
run: 3142 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((1373 location) (raw))
sizeof: ((1373 location) (raw))
run: #\R => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\R
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 9665 to #\R
run: 3143 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3144 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9704 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3145 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1372)
run: 1372 => ((1 list-address))
setm: ((1 list-address)) <= 1372
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9706 to 1372
run: 3146 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1374 list-address) (raw))
sizeof: ((1374 list-address) (raw))
run: 1437 => ((2 list-address))
setm: ((2 list-address)) <= 1437
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9707 to 1437
run: 3147 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1437 => ((1 list-address))
setm: ((1 list-address)) <= 1437
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9635 to 1437
run: 3148 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9637 to 1
run: 3149 init-file 11: (((jump)) ((-8 offset)))
run: 3150 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9638 to nil
run: 3151 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3152 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3153 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9735 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3154 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1437)
run: 1437 => ((1 list-address))
setm: ((1 list-address)) <= 1437
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9737 to 1437
run: 3155 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1437 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1437
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9738 to 1437
run: 3156 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 1437 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 1437
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 9639 to 1437
run: 3157 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9664 file) (raw))
m: ((9664 integer) (raw))
sizeof: ((9664 integer) (raw))
sizeof: ((_ square))
run: 9666 => ((6 square-address))
setm: ((6 square-address)) <= 9666
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 9640 to 9666
run: 3158 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((1438 location) (raw))
sizeof: ((1438 location) (raw))
run: #\P => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\P
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 9666 to #\P
run: 3159 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3160 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9766 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3161 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1437)
run: 1437 => ((1 list-address))
setm: ((1 list-address)) <= 1437
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9768 to 1437
run: 3162 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1439 list-address) (raw))
sizeof: ((1439 list-address) (raw))
run: 1502 => ((2 list-address))
setm: ((2 list-address)) <= 1502
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9769 to 1502
run: 3163 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1502 => ((1 list-address))
setm: ((1 list-address)) <= 1502
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9635 to 1502
run: 3164 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 2 => ((3 integer))
setm: ((3 integer)) <= 2
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9637 to 2
run: 3165 init-file 11: (((jump)) ((-8 offset)))
run: 3166 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9638 to nil
run: 3167 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3168 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3169 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9797 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3170 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1502)
run: 1502 => ((1 list-address))
setm: ((1 list-address)) <= 1502
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9799 to 1502
run: 3171 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1502 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1502
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9800 to 1502
run: 3172 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 1502 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 1502
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 9639 to 1502
run: 3173 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9664 file) (raw))
m: ((9664 integer) (raw))
sizeof: ((9664 integer) (raw))
sizeof: ((_ square))
run: 9667 => ((6 square-address))
setm: ((6 square-address)) <= 9667
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 9640 to 9667
run: 3174 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((1503 location) (raw))
sizeof: ((1503 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 9667 to #\_
run: 3175 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3176 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9828 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3177 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1502)
run: 1502 => ((1 list-address))
setm: ((1 list-address)) <= 1502
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9830 to 1502
run: 3178 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1504 list-address) (raw))
sizeof: ((1504 list-address) (raw))
run: 1567 => ((2 list-address))
setm: ((2 list-address)) <= 1567
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9831 to 1567
run: 3179 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1567 => ((1 list-address))
setm: ((1 list-address)) <= 1567
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9635 to 1567
run: 3180 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9637 to 3
run: 3181 init-file 11: (((jump)) ((-8 offset)))
run: 3182 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9638 to nil
run: 3183 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3184 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3185 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9859 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3186 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1567)
run: 1567 => ((1 list-address))
setm: ((1 list-address)) <= 1567
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9861 to 1567
run: 3187 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1567 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1567
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9862 to 1567
run: 3188 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 1567 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 1567
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 9639 to 1567
run: 3189 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9664 file) (raw))
m: ((9664 integer) (raw))
sizeof: ((9664 integer) (raw))
sizeof: ((_ square))
run: 9668 => ((6 square-address))
setm: ((6 square-address)) <= 9668
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 9640 to 9668
run: 3190 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((1568 location) (raw))
sizeof: ((1568 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 9668 to #\_
run: 3191 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3192 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9890 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3193 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1567)
run: 1567 => ((1 list-address))
setm: ((1 list-address)) <= 1567
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9892 to 1567
run: 3194 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1569 list-address) (raw))
sizeof: ((1569 list-address) (raw))
run: 1632 => ((2 list-address))
setm: ((2 list-address)) <= 1632
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9893 to 1632
run: 3195 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1632 => ((1 list-address))
setm: ((1 list-address)) <= 1632
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9635 to 1632
run: 3196 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 4 => ((3 integer))
setm: ((3 integer)) <= 4
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9637 to 4
run: 3197 init-file 11: (((jump)) ((-8 offset)))
run: 3198 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9638 to nil
run: 3199 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3200 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3201 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9921 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3202 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1632)
run: 1632 => ((1 list-address))
setm: ((1 list-address)) <= 1632
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9923 to 1632
run: 3203 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1632 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1632
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9924 to 1632
run: 3204 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 1632 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 1632
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 9639 to 1632
run: 3205 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9664 file) (raw))
m: ((9664 integer) (raw))
sizeof: ((9664 integer) (raw))
sizeof: ((_ square))
run: 9669 => ((6 square-address))
setm: ((6 square-address)) <= 9669
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 9640 to 9669
run: 3206 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((1633 location) (raw))
sizeof: ((1633 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 9669 to #\_
run: 3207 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3208 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9952 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3209 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1632)
run: 1632 => ((1 list-address))
setm: ((1 list-address)) <= 1632
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9954 to 1632
run: 3210 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1634 list-address) (raw))
sizeof: ((1634 list-address) (raw))
run: 1697 => ((2 list-address))
setm: ((2 list-address)) <= 1697
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9955 to 1697
run: 3211 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1697 => ((1 list-address))
setm: ((1 list-address)) <= 1697
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9635 to 1697
run: 3212 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 5 => ((3 integer))
setm: ((3 integer)) <= 5
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9637 to 5
run: 3213 init-file 11: (((jump)) ((-8 offset)))
run: 3214 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9638 to nil
run: 3215 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3216 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3217 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9983 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3218 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1697)
run: 1697 => ((1 list-address))
setm: ((1 list-address)) <= 1697
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9985 to 1697
run: 3219 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1697 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1697
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9986 to 1697
run: 3220 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 1697 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 1697
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 9639 to 1697
run: 3221 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9664 file) (raw))
m: ((9664 integer) (raw))
sizeof: ((9664 integer) (raw))
sizeof: ((_ square))
run: 9670 => ((6 square-address))
setm: ((6 square-address)) <= 9670
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 9640 to 9670
run: 3222 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((1698 location) (raw))
sizeof: ((1698 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 9670 to #\_
run: 3223 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3224 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10014 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3225 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1697)
run: 1697 => ((1 list-address))
setm: ((1 list-address)) <= 1697
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10016 to 1697
run: 3226 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1699 list-address) (raw))
sizeof: ((1699 list-address) (raw))
run: 1762 => ((2 list-address))
setm: ((2 list-address)) <= 1762
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10017 to 1762
run: 3227 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1762 => ((1 list-address))
setm: ((1 list-address)) <= 1762
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9635 to 1762
run: 3228 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 6 => ((3 integer))
setm: ((3 integer)) <= 6
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9637 to 6
run: 3229 init-file 11: (((jump)) ((-8 offset)))
run: 3230 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9638 to nil
run: 3231 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3232 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3233 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10045 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3234 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1762)
run: 1762 => ((1 list-address))
setm: ((1 list-address)) <= 1762
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10047 to 1762
run: 3235 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1762 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1762
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10048 to 1762
run: 3236 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 1762 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 1762
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 9639 to 1762
run: 3237 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9664 file) (raw))
m: ((9664 integer) (raw))
sizeof: ((9664 integer) (raw))
sizeof: ((_ square))
run: 9671 => ((6 square-address))
setm: ((6 square-address)) <= 9671
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 9640 to 9671
run: 3238 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((1763 location) (raw))
sizeof: ((1763 location) (raw))
run: #\p => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\p
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 9671 to #\p
run: 3239 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3240 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10076 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3241 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1762)
run: 1762 => ((1 list-address))
setm: ((1 list-address)) <= 1762
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10078 to 1762
run: 3242 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1764 list-address) (raw))
sizeof: ((1764 list-address) (raw))
run: 1827 => ((2 list-address))
setm: ((2 list-address)) <= 1827
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10079 to 1827
run: 3243 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1827 => ((1 list-address))
setm: ((1 list-address)) <= 1827
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9635 to 1827
run: 3244 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 7 => ((3 integer))
setm: ((3 integer)) <= 7
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9637 to 7
run: 3245 init-file 11: (((jump)) ((-8 offset)))
run: 3246 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9638 to nil
run: 3247 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3248 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3249 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10107 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3250 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1827)
run: 1827 => ((1 list-address))
setm: ((1 list-address)) <= 1827
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10109 to 1827
run: 3251 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1827 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1827
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10110 to 1827
run: 3252 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 1827 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 1827
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 9639 to 1827
run: 3253 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9664 file) (raw))
m: ((9664 integer) (raw))
sizeof: ((9664 integer) (raw))
sizeof: ((_ square))
run: 9672 => ((6 square-address))
setm: ((6 square-address)) <= 9672
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 9640 to 9672
run: 3254 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((1828 location) (raw))
sizeof: ((1828 location) (raw))
run: #\r => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\r
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 9672 to #\r
run: 3255 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3256 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10138 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3257 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1827)
run: 1827 => ((1 list-address))
setm: ((1 list-address)) <= 1827
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10140 to 1827
run: 3258 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1829 list-address) (raw))
sizeof: ((1829 list-address) (raw))
run: 1892 => ((2 list-address))
setm: ((2 list-address)) <= 1892
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10141 to 1892
run: 3259 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1892 => ((1 list-address))
setm: ((1 list-address)) <= 1892
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9635 to 1892
run: 3260 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 8 => ((3 integer))
setm: ((3 integer)) <= 8
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9637 to 8
run: 3261 init-file 11: (((jump)) ((-8 offset)))
run: 3262 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9638 to t
run: 3263 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3264 init-file 12: (((reply)) ((2 file-address)) ((1 list-address)))
m: ((2 file-address))
sizeof: ((2 file-address))
m: ((1 list-address))
sizeof: ((1 list-address))
reply: (((2 file-address)) ((1 list-address))) (((8 file-address-address) (deref)) ((6 list-address)))
reply: 9664 => ((8 file-address-address) (deref))
setm: ((8 file-address-address) (deref)) <= 9664
setm: size of ((8 file-address-address) (deref)) is 1
setm: ((8 file-address-address) (deref)): setting 9625 to 9664
reply: 1892 => ((6 list-address))
setm: ((6 list-address)) <= 1892
setm: size of ((6 list-address)) is 1
setm: ((6 list-address)): setting 5570 to 1892
run: 3265 init-board 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: 1 => ((5 integer))
setm: ((5 integer)) <= 1
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 5569 to 1
run: 3266 init-board 13: (((jump)) ((-6 offset)))
run: 3267 init-board 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((7 boolean))
setm: ((7 boolean)) <= nil
setm: size of ((7 boolean)) is 1
setm: ((7 boolean)): setting 5571 to nil
run: 3268 init-board 9: (((jump-if)) ((7 boolean)) ((4 offset)))
m: ((7 boolean))
sizeof: ((7 boolean))
run: 3269 init-board 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
run: 9626 => ((8 file-address-address))
setm: ((8 file-address-address)) <= 9626
setm: size of ((8 file-address-address)) is 1
setm: ((8 file-address-address)): setting 5572 to 9626
run: 3270 init-board 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
m: ((6 list-address))
sizeof: ((6 list-address))
run: 3271 init-file 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10169 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3272 init-file 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1892)
run: 1892 => ((1 list-address))
setm: ((1 list-address)) <= 1892
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10171 to 1892
run: 3273 init-file 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
sizeof: ((_ square))
run: 10200 => ((2 file-address))
setm: ((2 file-address)) <= 10200
setm: size of ((2 file-address)) is 1
setm: ((2 file-address)): setting 10172 to 10200
run: 3274 init-file 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer))
setm: ((3 integer)) <= 0
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10173 to 0
run: 3275 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10174 to nil
run: 3276 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3277 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3278 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10209 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3279 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1892)
run: 1892 => ((1 list-address))
setm: ((1 list-address)) <= 1892
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10211 to 1892
run: 3280 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1892 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1892
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10212 to 1892
run: 3281 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 1892 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 1892
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10175 to 1892
run: 3282 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10200 file) (raw))
m: ((10200 integer) (raw))
sizeof: ((10200 integer) (raw))
sizeof: ((_ square))
run: 10201 => ((6 square-address))
setm: ((6 square-address)) <= 10201
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10176 to 10201
run: 3283 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((1893 location) (raw))
sizeof: ((1893 location) (raw))
run: #\N => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\N
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10201 to #\N
run: 3284 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3285 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10240 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3286 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1892)
run: 1892 => ((1 list-address))
setm: ((1 list-address)) <= 1892
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10242 to 1892
run: 3287 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1894 list-address) (raw))
sizeof: ((1894 list-address) (raw))
run: 1957 => ((2 list-address))
setm: ((2 list-address)) <= 1957
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10243 to 1957
run: 3288 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1957 => ((1 list-address))
setm: ((1 list-address)) <= 1957
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10171 to 1957
run: 3289 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10173 to 1
run: 3290 init-file 11: (((jump)) ((-8 offset)))
run: 3291 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10174 to nil
run: 3292 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3293 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3294 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10271 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3295 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1957)
run: 1957 => ((1 list-address))
setm: ((1 list-address)) <= 1957
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10273 to 1957
run: 3296 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1957 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1957
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10274 to 1957
run: 3297 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 1957 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 1957
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10175 to 1957
run: 3298 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10200 file) (raw))
m: ((10200 integer) (raw))
sizeof: ((10200 integer) (raw))
sizeof: ((_ square))
run: 10202 => ((6 square-address))
setm: ((6 square-address)) <= 10202
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10176 to 10202
run: 3299 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((1958 location) (raw))
sizeof: ((1958 location) (raw))
run: #\P => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\P
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10202 to #\P
run: 3300 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3301 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10302 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3302 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1957)
run: 1957 => ((1 list-address))
setm: ((1 list-address)) <= 1957
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10304 to 1957
run: 3303 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1959 list-address) (raw))
sizeof: ((1959 list-address) (raw))
run: 2022 => ((2 list-address))
setm: ((2 list-address)) <= 2022
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10305 to 2022
run: 3304 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2022 => ((1 list-address))
setm: ((1 list-address)) <= 2022
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10171 to 2022
run: 3305 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 2 => ((3 integer))
setm: ((3 integer)) <= 2
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10173 to 2
run: 3306 init-file 11: (((jump)) ((-8 offset)))
run: 3307 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10174 to nil
run: 3308 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3309 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3310 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10333 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3311 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2022)
run: 2022 => ((1 list-address))
setm: ((1 list-address)) <= 2022
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10335 to 2022
run: 3312 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2022 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2022
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10336 to 2022
run: 3313 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2022 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2022
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10175 to 2022
run: 3314 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10200 file) (raw))
m: ((10200 integer) (raw))
sizeof: ((10200 integer) (raw))
sizeof: ((_ square))
run: 10203 => ((6 square-address))
setm: ((6 square-address)) <= 10203
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10176 to 10203
run: 3315 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2023 location) (raw))
sizeof: ((2023 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10203 to #\_
run: 3316 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3317 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10364 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3318 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2022)
run: 2022 => ((1 list-address))
setm: ((1 list-address)) <= 2022
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10366 to 2022
run: 3319 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2024 list-address) (raw))
sizeof: ((2024 list-address) (raw))
run: 2087 => ((2 list-address))
setm: ((2 list-address)) <= 2087
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10367 to 2087
run: 3320 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2087 => ((1 list-address))
setm: ((1 list-address)) <= 2087
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10171 to 2087
run: 3321 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10173 to 3
run: 3322 init-file 11: (((jump)) ((-8 offset)))
run: 3323 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10174 to nil
run: 3324 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3325 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3326 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10395 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3327 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2087)
run: 2087 => ((1 list-address))
setm: ((1 list-address)) <= 2087
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10397 to 2087
run: 3328 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2087 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2087
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10398 to 2087
run: 3329 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2087 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2087
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10175 to 2087
run: 3330 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10200 file) (raw))
m: ((10200 integer) (raw))
sizeof: ((10200 integer) (raw))
sizeof: ((_ square))
run: 10204 => ((6 square-address))
setm: ((6 square-address)) <= 10204
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10176 to 10204
run: 3331 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2088 location) (raw))
sizeof: ((2088 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10204 to #\_
run: 3332 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3333 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10426 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3334 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2087)
run: 2087 => ((1 list-address))
setm: ((1 list-address)) <= 2087
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10428 to 2087
run: 3335 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2089 list-address) (raw))
sizeof: ((2089 list-address) (raw))
run: 2152 => ((2 list-address))
setm: ((2 list-address)) <= 2152
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10429 to 2152
run: 3336 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2152 => ((1 list-address))
setm: ((1 list-address)) <= 2152
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10171 to 2152
run: 3337 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 4 => ((3 integer))
setm: ((3 integer)) <= 4
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10173 to 4
run: 3338 init-file 11: (((jump)) ((-8 offset)))
run: 3339 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10174 to nil
run: 3340 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3341 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3342 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10457 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3343 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2152)
run: 2152 => ((1 list-address))
setm: ((1 list-address)) <= 2152
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10459 to 2152
run: 3344 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2152 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2152
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10460 to 2152
run: 3345 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2152 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2152
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10175 to 2152
run: 3346 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10200 file) (raw))
m: ((10200 integer) (raw))
sizeof: ((10200 integer) (raw))
sizeof: ((_ square))
run: 10205 => ((6 square-address))
setm: ((6 square-address)) <= 10205
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10176 to 10205
run: 3347 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2153 location) (raw))
sizeof: ((2153 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10205 to #\_
run: 3348 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3349 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10488 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3350 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2152)
run: 2152 => ((1 list-address))
setm: ((1 list-address)) <= 2152
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10490 to 2152
run: 3351 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2154 list-address) (raw))
sizeof: ((2154 list-address) (raw))
run: 2217 => ((2 list-address))
setm: ((2 list-address)) <= 2217
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10491 to 2217
run: 3352 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2217 => ((1 list-address))
setm: ((1 list-address)) <= 2217
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10171 to 2217
run: 3353 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 5 => ((3 integer))
setm: ((3 integer)) <= 5
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10173 to 5
run: 3354 init-file 11: (((jump)) ((-8 offset)))
run: 3355 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10174 to nil
run: 3356 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3357 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3358 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10519 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3359 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2217)
run: 2217 => ((1 list-address))
setm: ((1 list-address)) <= 2217
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10521 to 2217
run: 3360 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2217 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2217
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10522 to 2217
run: 3361 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2217 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2217
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10175 to 2217
run: 3362 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10200 file) (raw))
m: ((10200 integer) (raw))
sizeof: ((10200 integer) (raw))
sizeof: ((_ square))
run: 10206 => ((6 square-address))
setm: ((6 square-address)) <= 10206
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10176 to 10206
run: 3363 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2218 location) (raw))
sizeof: ((2218 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10206 to #\_
run: 3364 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3365 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10550 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3366 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2217)
run: 2217 => ((1 list-address))
setm: ((1 list-address)) <= 2217
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10552 to 2217
run: 3367 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2219 list-address) (raw))
sizeof: ((2219 list-address) (raw))
run: 2282 => ((2 list-address))
setm: ((2 list-address)) <= 2282
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10553 to 2282
run: 3368 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2282 => ((1 list-address))
setm: ((1 list-address)) <= 2282
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10171 to 2282
run: 3369 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 6 => ((3 integer))
setm: ((3 integer)) <= 6
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10173 to 6
run: 3370 init-file 11: (((jump)) ((-8 offset)))
run: 3371 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10174 to nil
run: 3372 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3373 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3374 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10581 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3375 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2282)
run: 2282 => ((1 list-address))
setm: ((1 list-address)) <= 2282
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10583 to 2282
run: 3376 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2282 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2282
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10584 to 2282
run: 3377 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2282 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2282
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10175 to 2282
run: 3378 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10200 file) (raw))
m: ((10200 integer) (raw))
sizeof: ((10200 integer) (raw))
sizeof: ((_ square))
run: 10207 => ((6 square-address))
setm: ((6 square-address)) <= 10207
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10176 to 10207
run: 3379 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2283 location) (raw))
sizeof: ((2283 location) (raw))
run: #\p => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\p
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10207 to #\p
run: 3380 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3381 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10612 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3382 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2282)
run: 2282 => ((1 list-address))
setm: ((1 list-address)) <= 2282
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10614 to 2282
run: 3383 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2284 list-address) (raw))
sizeof: ((2284 list-address) (raw))
run: 2347 => ((2 list-address))
setm: ((2 list-address)) <= 2347
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10615 to 2347
run: 3384 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2347 => ((1 list-address))
setm: ((1 list-address)) <= 2347
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10171 to 2347
run: 3385 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 7 => ((3 integer))
setm: ((3 integer)) <= 7
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10173 to 7
run: 3386 init-file 11: (((jump)) ((-8 offset)))
run: 3387 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10174 to nil
run: 3388 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3389 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3390 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10643 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3391 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2347)
run: 2347 => ((1 list-address))
setm: ((1 list-address)) <= 2347
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10645 to 2347
run: 3392 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2347 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2347
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10646 to 2347
run: 3393 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2347 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2347
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10175 to 2347
run: 3394 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10200 file) (raw))
m: ((10200 integer) (raw))
sizeof: ((10200 integer) (raw))
sizeof: ((_ square))
run: 10208 => ((6 square-address))
setm: ((6 square-address)) <= 10208
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10176 to 10208
run: 3395 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2348 location) (raw))
sizeof: ((2348 location) (raw))
run: #\n => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\n
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10208 to #\n
run: 3396 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3397 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10674 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3398 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2347)
run: 2347 => ((1 list-address))
setm: ((1 list-address)) <= 2347
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10676 to 2347
run: 3399 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2349 list-address) (raw))
sizeof: ((2349 list-address) (raw))
run: 2412 => ((2 list-address))
setm: ((2 list-address)) <= 2412
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10677 to 2412
run: 3400 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2412 => ((1 list-address))
setm: ((1 list-address)) <= 2412
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10171 to 2412
run: 3401 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 8 => ((3 integer))
setm: ((3 integer)) <= 8
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10173 to 8
run: 3402 init-file 11: (((jump)) ((-8 offset)))
run: 3403 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10174 to t
run: 3404 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3405 init-file 12: (((reply)) ((2 file-address)) ((1 list-address)))
m: ((2 file-address))
sizeof: ((2 file-address))
m: ((1 list-address))
sizeof: ((1 list-address))
reply: (((2 file-address)) ((1 list-address))) (((8 file-address-address) (deref)) ((6 list-address)))
reply: 10200 => ((8 file-address-address) (deref))
setm: ((8 file-address-address) (deref)) <= 10200
setm: size of ((8 file-address-address) (deref)) is 1
setm: ((8 file-address-address) (deref)): setting 9626 to 10200
reply: 2412 => ((6 list-address))
setm: ((6 list-address)) <= 2412
setm: size of ((6 list-address)) is 1
setm: ((6 list-address)): setting 5570 to 2412
run: 3406 init-board 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 5569 to 2
run: 3407 init-board 13: (((jump)) ((-6 offset)))
run: 3408 init-board 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((7 boolean))
setm: ((7 boolean)) <= nil
setm: size of ((7 boolean)) is 1
setm: ((7 boolean)): setting 5571 to nil
run: 3409 init-board 9: (((jump-if)) ((7 boolean)) ((4 offset)))
m: ((7 boolean))
sizeof: ((7 boolean))
run: 3410 init-board 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
run: 9627 => ((8 file-address-address))
setm: ((8 file-address-address)) <= 9627
setm: size of ((8 file-address-address)) is 1
setm: ((8 file-address-address)): setting 5572 to 9627
run: 3411 init-board 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
m: ((6 list-address))
sizeof: ((6 list-address))
run: 3412 init-file 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10705 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3413 init-file 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2412)
run: 2412 => ((1 list-address))
setm: ((1 list-address)) <= 2412
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10707 to 2412
run: 3414 init-file 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
sizeof: ((_ square))
run: 10736 => ((2 file-address))
setm: ((2 file-address)) <= 10736
setm: size of ((2 file-address)) is 1
setm: ((2 file-address)): setting 10708 to 10736
run: 3415 init-file 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer))
setm: ((3 integer)) <= 0
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10709 to 0
run: 3416 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10710 to nil
run: 3417 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3418 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3419 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10745 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3420 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2412)
run: 2412 => ((1 list-address))
setm: ((1 list-address)) <= 2412
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10747 to 2412
run: 3421 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2412 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2412
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10748 to 2412
run: 3422 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2412 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2412
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10711 to 2412
run: 3423 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10736 file) (raw))
m: ((10736 integer) (raw))
sizeof: ((10736 integer) (raw))
sizeof: ((_ square))
run: 10737 => ((6 square-address))
setm: ((6 square-address)) <= 10737
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10712 to 10737
run: 3424 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2413 location) (raw))
sizeof: ((2413 location) (raw))
run: #\B => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\B
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10737 to #\B
run: 3425 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3426 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10776 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3427 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2412)
run: 2412 => ((1 list-address))
setm: ((1 list-address)) <= 2412
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10778 to 2412
run: 3428 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2414 list-address) (raw))
sizeof: ((2414 list-address) (raw))
run: 2477 => ((2 list-address))
setm: ((2 list-address)) <= 2477
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10779 to 2477
run: 3429 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2477 => ((1 list-address))
setm: ((1 list-address)) <= 2477
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10707 to 2477
run: 3430 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10709 to 1
run: 3431 init-file 11: (((jump)) ((-8 offset)))
run: 3432 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10710 to nil
run: 3433 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3434 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3435 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10807 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3436 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2477)
run: 2477 => ((1 list-address))
setm: ((1 list-address)) <= 2477
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10809 to 2477
run: 3437 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2477 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2477
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10810 to 2477
run: 3438 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2477 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2477
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10711 to 2477
run: 3439 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10736 file) (raw))
m: ((10736 integer) (raw))
sizeof: ((10736 integer) (raw))
sizeof: ((_ square))
run: 10738 => ((6 square-address))
setm: ((6 square-address)) <= 10738
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10712 to 10738
run: 3440 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2478 location) (raw))
sizeof: ((2478 location) (raw))
run: #\P => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\P
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10738 to #\P
run: 3441 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3442 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10838 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3443 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2477)
run: 2477 => ((1 list-address))
setm: ((1 list-address)) <= 2477
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10840 to 2477
run: 3444 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2479 list-address) (raw))
sizeof: ((2479 list-address) (raw))
run: 2542 => ((2 list-address))
setm: ((2 list-address)) <= 2542
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10841 to 2542
run: 3445 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2542 => ((1 list-address))
setm: ((1 list-address)) <= 2542
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10707 to 2542
run: 3446 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 2 => ((3 integer))
setm: ((3 integer)) <= 2
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10709 to 2
run: 3447 init-file 11: (((jump)) ((-8 offset)))
run: 3448 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10710 to nil
run: 3449 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3450 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3451 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10869 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3452 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2542)
run: 2542 => ((1 list-address))
setm: ((1 list-address)) <= 2542
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10871 to 2542
run: 3453 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2542 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2542
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10872 to 2542
run: 3454 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2542 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2542
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10711 to 2542
run: 3455 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10736 file) (raw))
m: ((10736 integer) (raw))
sizeof: ((10736 integer) (raw))
sizeof: ((_ square))
run: 10739 => ((6 square-address))
setm: ((6 square-address)) <= 10739
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10712 to 10739
run: 3456 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2543 location) (raw))
sizeof: ((2543 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10739 to #\_
run: 3457 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3458 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10900 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3459 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2542)
run: 2542 => ((1 list-address))
setm: ((1 list-address)) <= 2542
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10902 to 2542
run: 3460 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2544 list-address) (raw))
sizeof: ((2544 list-address) (raw))
run: 2607 => ((2 list-address))
setm: ((2 list-address)) <= 2607
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10903 to 2607
run: 3461 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2607 => ((1 list-address))
setm: ((1 list-address)) <= 2607
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10707 to 2607
run: 3462 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10709 to 3
run: 3463 init-file 11: (((jump)) ((-8 offset)))
run: 3464 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10710 to nil
run: 3465 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3466 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3467 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10931 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3468 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2607)
run: 2607 => ((1 list-address))
setm: ((1 list-address)) <= 2607
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10933 to 2607
run: 3469 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2607 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2607
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10934 to 2607
run: 3470 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2607 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2607
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10711 to 2607
run: 3471 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10736 file) (raw))
m: ((10736 integer) (raw))
sizeof: ((10736 integer) (raw))
sizeof: ((_ square))
run: 10740 => ((6 square-address))
setm: ((6 square-address)) <= 10740
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10712 to 10740
run: 3472 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2608 location) (raw))
sizeof: ((2608 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10740 to #\_
run: 3473 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3474 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10962 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3475 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2607)
run: 2607 => ((1 list-address))
setm: ((1 list-address)) <= 2607
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10964 to 2607
run: 3476 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2609 list-address) (raw))
sizeof: ((2609 list-address) (raw))
run: 2672 => ((2 list-address))
setm: ((2 list-address)) <= 2672
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10965 to 2672
run: 3477 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2672 => ((1 list-address))
setm: ((1 list-address)) <= 2672
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10707 to 2672
run: 3478 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 4 => ((3 integer))
setm: ((3 integer)) <= 4
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10709 to 4
run: 3479 init-file 11: (((jump)) ((-8 offset)))
run: 3480 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10710 to nil
run: 3481 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3482 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3483 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10993 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3484 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2672)
run: 2672 => ((1 list-address))
setm: ((1 list-address)) <= 2672
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10995 to 2672
run: 3485 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2672 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2672
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10996 to 2672
run: 3486 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2672 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2672
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10711 to 2672
run: 3487 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10736 file) (raw))
m: ((10736 integer) (raw))
sizeof: ((10736 integer) (raw))
sizeof: ((_ square))
run: 10741 => ((6 square-address))
setm: ((6 square-address)) <= 10741
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10712 to 10741
run: 3488 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2673 location) (raw))
sizeof: ((2673 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10741 to #\_
run: 3489 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3490 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11024 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3491 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2672)
run: 2672 => ((1 list-address))
setm: ((1 list-address)) <= 2672
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11026 to 2672
run: 3492 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2674 list-address) (raw))
sizeof: ((2674 list-address) (raw))
run: 2737 => ((2 list-address))
setm: ((2 list-address)) <= 2737
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11027 to 2737
run: 3493 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2737 => ((1 list-address))
setm: ((1 list-address)) <= 2737
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10707 to 2737
run: 3494 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 5 => ((3 integer))
setm: ((3 integer)) <= 5
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10709 to 5
run: 3495 init-file 11: (((jump)) ((-8 offset)))
run: 3496 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10710 to nil
run: 3497 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3498 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3499 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11055 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3500 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2737)
run: 2737 => ((1 list-address))
setm: ((1 list-address)) <= 2737
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11057 to 2737
schedule: scheduling list-value-address/init-file/init-board/main for further processing
schedule: list-value-address/init-file/init-board/main
run: 3501 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2737 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2737
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11058 to 2737
run: 3502 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2737 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2737
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10711 to 2737
run: 3503 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10736 file) (raw))
m: ((10736 integer) (raw))
sizeof: ((10736 integer) (raw))
sizeof: ((_ square))
run: 10742 => ((6 square-address))
setm: ((6 square-address)) <= 10742
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10712 to 10742
run: 3504 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2738 location) (raw))
sizeof: ((2738 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10742 to #\_
run: 3505 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3506 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11086 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3507 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2737)
run: 2737 => ((1 list-address))
setm: ((1 list-address)) <= 2737
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11088 to 2737
run: 3508 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2739 list-address) (raw))
sizeof: ((2739 list-address) (raw))
run: 2802 => ((2 list-address))
setm: ((2 list-address)) <= 2802
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11089 to 2802
run: 3509 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2802 => ((1 list-address))
setm: ((1 list-address)) <= 2802
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10707 to 2802
run: 3510 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 6 => ((3 integer))
setm: ((3 integer)) <= 6
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10709 to 6
run: 3511 init-file 11: (((jump)) ((-8 offset)))
run: 3512 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10710 to nil
run: 3513 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3514 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3515 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11117 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3516 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2802)
run: 2802 => ((1 list-address))
setm: ((1 list-address)) <= 2802
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11119 to 2802
run: 3517 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2802 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2802
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11120 to 2802
run: 3518 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2802 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2802
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10711 to 2802
run: 3519 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10736 file) (raw))
m: ((10736 integer) (raw))
sizeof: ((10736 integer) (raw))
sizeof: ((_ square))
run: 10743 => ((6 square-address))
setm: ((6 square-address)) <= 10743
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10712 to 10743
run: 3520 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2803 location) (raw))
sizeof: ((2803 location) (raw))
run: #\p => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\p
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10743 to #\p
run: 3521 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3522 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11148 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3523 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2802)
run: 2802 => ((1 list-address))
setm: ((1 list-address)) <= 2802
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11150 to 2802
run: 3524 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2804 list-address) (raw))
sizeof: ((2804 list-address) (raw))
run: 2867 => ((2 list-address))
setm: ((2 list-address)) <= 2867
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11151 to 2867
run: 3525 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2867 => ((1 list-address))
setm: ((1 list-address)) <= 2867
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10707 to 2867
run: 3526 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 7 => ((3 integer))
setm: ((3 integer)) <= 7
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10709 to 7
run: 3527 init-file 11: (((jump)) ((-8 offset)))
run: 3528 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10710 to nil
run: 3529 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3530 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3531 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11179 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3532 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2867)
run: 2867 => ((1 list-address))
setm: ((1 list-address)) <= 2867
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11181 to 2867
run: 3533 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2867 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2867
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11182 to 2867
run: 3534 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2867 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2867
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10711 to 2867
run: 3535 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10736 file) (raw))
m: ((10736 integer) (raw))
sizeof: ((10736 integer) (raw))
sizeof: ((_ square))
run: 10744 => ((6 square-address))
setm: ((6 square-address)) <= 10744
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10712 to 10744
run: 3536 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2868 location) (raw))
sizeof: ((2868 location) (raw))
run: #\b => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\b
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10744 to #\b
run: 3537 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3538 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11210 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3539 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2867)
run: 2867 => ((1 list-address))
setm: ((1 list-address)) <= 2867
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11212 to 2867
run: 3540 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2869 list-address) (raw))
sizeof: ((2869 list-address) (raw))
run: 2932 => ((2 list-address))
setm: ((2 list-address)) <= 2932
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11213 to 2932
run: 3541 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2932 => ((1 list-address))
setm: ((1 list-address)) <= 2932
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10707 to 2932
run: 3542 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 8 => ((3 integer))
setm: ((3 integer)) <= 8
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10709 to 8
run: 3543 init-file 11: (((jump)) ((-8 offset)))
run: 3544 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10710 to t
run: 3545 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3546 init-file 12: (((reply)) ((2 file-address)) ((1 list-address)))
m: ((2 file-address))
sizeof: ((2 file-address))
m: ((1 list-address))
sizeof: ((1 list-address))
reply: (((2 file-address)) ((1 list-address))) (((8 file-address-address) (deref)) ((6 list-address)))
reply: 10736 => ((8 file-address-address) (deref))
setm: ((8 file-address-address) (deref)) <= 10736
setm: size of ((8 file-address-address) (deref)) is 1
setm: ((8 file-address-address) (deref)): setting 9627 to 10736
reply: 2932 => ((6 list-address))
setm: ((6 list-address)) <= 2932
setm: size of ((6 list-address)) is 1
setm: ((6 list-address)): setting 5570 to 2932
run: 3547 init-board 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: 3 => ((5 integer))
setm: ((5 integer)) <= 3
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 5569 to 3
run: 3548 init-board 13: (((jump)) ((-6 offset)))
run: 3549 init-board 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((7 boolean))
setm: ((7 boolean)) <= nil
setm: size of ((7 boolean)) is 1
setm: ((7 boolean)): setting 5571 to nil
run: 3550 init-board 9: (((jump-if)) ((7 boolean)) ((4 offset)))
m: ((7 boolean))
sizeof: ((7 boolean))
run: 3551 init-board 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
run: 9628 => ((8 file-address-address))
setm: ((8 file-address-address)) <= 9628
setm: size of ((8 file-address-address)) is 1
setm: ((8 file-address-address)): setting 5572 to 9628
run: 3552 init-board 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
m: ((6 list-address))
sizeof: ((6 list-address))
run: 3553 init-file 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11241 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3554 init-file 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2932)
run: 2932 => ((1 list-address))
setm: ((1 list-address)) <= 2932
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11243 to 2932
run: 3555 init-file 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
sizeof: ((_ square))
run: 11272 => ((2 file-address))
setm: ((2 file-address)) <= 11272
setm: size of ((2 file-address)) is 1
setm: ((2 file-address)): setting 11244 to 11272
run: 3556 init-file 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer))
setm: ((3 integer)) <= 0
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11245 to 0
run: 3557 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11246 to nil
run: 3558 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3559 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3560 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11281 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3561 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2932)
run: 2932 => ((1 list-address))
setm: ((1 list-address)) <= 2932
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11283 to 2932
run: 3562 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2932 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2932
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11284 to 2932
run: 3563 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2932 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2932
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 11247 to 2932
run: 3564 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11272 file) (raw))
m: ((11272 integer) (raw))
sizeof: ((11272 integer) (raw))
sizeof: ((_ square))
run: 11273 => ((6 square-address))
setm: ((6 square-address)) <= 11273
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 11248 to 11273
run: 3565 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2933 location) (raw))
sizeof: ((2933 location) (raw))
run: #\Q => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\Q
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 11273 to #\Q
run: 3566 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3567 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11312 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3568 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2932)
run: 2932 => ((1 list-address))
setm: ((1 list-address)) <= 2932
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11314 to 2932
run: 3569 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2934 list-address) (raw))
sizeof: ((2934 list-address) (raw))
run: 2997 => ((2 list-address))
setm: ((2 list-address)) <= 2997
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11315 to 2997
run: 3570 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2997 => ((1 list-address))
setm: ((1 list-address)) <= 2997
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11243 to 2997
run: 3571 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11245 to 1
run: 3572 init-file 11: (((jump)) ((-8 offset)))
run: 3573 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11246 to nil
run: 3574 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3575 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3576 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11343 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3577 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2997)
run: 2997 => ((1 list-address))
setm: ((1 list-address)) <= 2997
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11345 to 2997
run: 3578 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2997 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2997
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11346 to 2997
run: 3579 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2997 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2997
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 11247 to 2997
run: 3580 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11272 file) (raw))
m: ((11272 integer) (raw))
sizeof: ((11272 integer) (raw))
sizeof: ((_ square))
run: 11274 => ((6 square-address))
setm: ((6 square-address)) <= 11274
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 11248 to 11274
run: 3581 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2998 location) (raw))
sizeof: ((2998 location) (raw))
run: #\P => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\P
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 11274 to #\P
run: 3582 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3583 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11374 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3584 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2997)
run: 2997 => ((1 list-address))
setm: ((1 list-address)) <= 2997
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11376 to 2997
run: 3585 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2999 list-address) (raw))
sizeof: ((2999 list-address) (raw))
run: 3062 => ((2 list-address))
setm: ((2 list-address)) <= 3062
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11377 to 3062
run: 3586 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3062 => ((1 list-address))
setm: ((1 list-address)) <= 3062
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11243 to 3062
run: 3587 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 2 => ((3 integer))
setm: ((3 integer)) <= 2
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11245 to 2
run: 3588 init-file 11: (((jump)) ((-8 offset)))
run: 3589 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11246 to nil
run: 3590 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3591 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3592 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11405 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3593 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3062)
run: 3062 => ((1 list-address))
setm: ((1 list-address)) <= 3062
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11407 to 3062
run: 3594 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3062 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3062
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11408 to 3062
run: 3595 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3062 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3062
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 11247 to 3062
run: 3596 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11272 file) (raw))
m: ((11272 integer) (raw))
sizeof: ((11272 integer) (raw))
sizeof: ((_ square))
run: 11275 => ((6 square-address))
setm: ((6 square-address)) <= 11275
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 11248 to 11275
run: 3597 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3063 location) (raw))
sizeof: ((3063 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 11275 to #\_
run: 3598 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3599 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11436 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3600 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3062)
run: 3062 => ((1 list-address))
setm: ((1 list-address)) <= 3062
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11438 to 3062
run: 3601 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3064 list-address) (raw))
sizeof: ((3064 list-address) (raw))
run: 3127 => ((2 list-address))
setm: ((2 list-address)) <= 3127
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11439 to 3127
run: 3602 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3127 => ((1 list-address))
setm: ((1 list-address)) <= 3127
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11243 to 3127
run: 3603 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11245 to 3
run: 3604 init-file 11: (((jump)) ((-8 offset)))
run: 3605 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11246 to nil
run: 3606 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3607 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3608 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11467 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3609 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3127)
run: 3127 => ((1 list-address))
setm: ((1 list-address)) <= 3127
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11469 to 3127
run: 3610 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3127 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3127
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11470 to 3127
run: 3611 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3127 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3127
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 11247 to 3127
run: 3612 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11272 file) (raw))
m: ((11272 integer) (raw))
sizeof: ((11272 integer) (raw))
sizeof: ((_ square))
run: 11276 => ((6 square-address))
setm: ((6 square-address)) <= 11276
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 11248 to 11276
run: 3613 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3128 location) (raw))
sizeof: ((3128 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 11276 to #\_
run: 3614 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3615 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11498 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3616 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3127)
run: 3127 => ((1 list-address))
setm: ((1 list-address)) <= 3127
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11500 to 3127
run: 3617 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3129 list-address) (raw))
sizeof: ((3129 list-address) (raw))
run: 3192 => ((2 list-address))
setm: ((2 list-address)) <= 3192
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11501 to 3192
run: 3618 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3192 => ((1 list-address))
setm: ((1 list-address)) <= 3192
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11243 to 3192
run: 3619 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 4 => ((3 integer))
setm: ((3 integer)) <= 4
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11245 to 4
run: 3620 init-file 11: (((jump)) ((-8 offset)))
run: 3621 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11246 to nil
run: 3622 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3623 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3624 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11529 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3625 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3192)
run: 3192 => ((1 list-address))
setm: ((1 list-address)) <= 3192
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11531 to 3192
run: 3626 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3192 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3192
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11532 to 3192
run: 3627 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3192 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3192
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 11247 to 3192
run: 3628 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11272 file) (raw))
m: ((11272 integer) (raw))
sizeof: ((11272 integer) (raw))
sizeof: ((_ square))
run: 11277 => ((6 square-address))
setm: ((6 square-address)) <= 11277
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 11248 to 11277
run: 3629 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3193 location) (raw))
sizeof: ((3193 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 11277 to #\_
run: 3630 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3631 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11560 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3632 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3192)
run: 3192 => ((1 list-address))
setm: ((1 list-address)) <= 3192
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11562 to 3192
run: 3633 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3194 list-address) (raw))
sizeof: ((3194 list-address) (raw))
run: 3257 => ((2 list-address))
setm: ((2 list-address)) <= 3257
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11563 to 3257
run: 3634 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3257 => ((1 list-address))
setm: ((1 list-address)) <= 3257
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11243 to 3257
run: 3635 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 5 => ((3 integer))
setm: ((3 integer)) <= 5
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11245 to 5
run: 3636 init-file 11: (((jump)) ((-8 offset)))
run: 3637 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11246 to nil
run: 3638 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3639 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3640 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11591 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3641 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3257)
run: 3257 => ((1 list-address))
setm: ((1 list-address)) <= 3257
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11593 to 3257
run: 3642 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3257 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3257
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11594 to 3257
run: 3643 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3257 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3257
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 11247 to 3257
run: 3644 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11272 file) (raw))
m: ((11272 integer) (raw))
sizeof: ((11272 integer) (raw))
sizeof: ((_ square))
run: 11278 => ((6 square-address))
setm: ((6 square-address)) <= 11278
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 11248 to 11278
run: 3645 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3258 location) (raw))
sizeof: ((3258 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 11278 to #\_
run: 3646 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3647 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11622 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3648 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3257)
run: 3257 => ((1 list-address))
setm: ((1 list-address)) <= 3257
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11624 to 3257
run: 3649 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3259 list-address) (raw))
sizeof: ((3259 list-address) (raw))
run: 3322 => ((2 list-address))
setm: ((2 list-address)) <= 3322
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11625 to 3322
run: 3650 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3322 => ((1 list-address))
setm: ((1 list-address)) <= 3322
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11243 to 3322
run: 3651 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 6 => ((3 integer))
setm: ((3 integer)) <= 6
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11245 to 6
run: 3652 init-file 11: (((jump)) ((-8 offset)))
run: 3653 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11246 to nil
run: 3654 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3655 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3656 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11653 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3657 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3322)
run: 3322 => ((1 list-address))
setm: ((1 list-address)) <= 3322
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11655 to 3322
run: 3658 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3322 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3322
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11656 to 3322
run: 3659 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3322 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3322
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 11247 to 3322
run: 3660 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11272 file) (raw))
m: ((11272 integer) (raw))
sizeof: ((11272 integer) (raw))
sizeof: ((_ square))
run: 11279 => ((6 square-address))
setm: ((6 square-address)) <= 11279
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 11248 to 11279
run: 3661 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3323 location) (raw))
sizeof: ((3323 location) (raw))
run: #\p => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\p
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 11279 to #\p
run: 3662 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3663 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11684 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3664 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3322)
run: 3322 => ((1 list-address))
setm: ((1 list-address)) <= 3322
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11686 to 3322
run: 3665 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3324 list-address) (raw))
sizeof: ((3324 list-address) (raw))
run: 3387 => ((2 list-address))
setm: ((2 list-address)) <= 3387
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11687 to 3387
run: 3666 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3387 => ((1 list-address))
setm: ((1 list-address)) <= 3387
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11243 to 3387
run: 3667 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 7 => ((3 integer))
setm: ((3 integer)) <= 7
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11245 to 7
run: 3668 init-file 11: (((jump)) ((-8 offset)))
run: 3669 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11246 to nil
run: 3670 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3671 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3672 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11715 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3673 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3387)
run: 3387 => ((1 list-address))
setm: ((1 list-address)) <= 3387
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11717 to 3387
run: 3674 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3387 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3387
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11718 to 3387
run: 3675 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3387 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3387
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 11247 to 3387
run: 3676 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11272 file) (raw))
m: ((11272 integer) (raw))
sizeof: ((11272 integer) (raw))
sizeof: ((_ square))
run: 11280 => ((6 square-address))
setm: ((6 square-address)) <= 11280
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 11248 to 11280
run: 3677 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3388 location) (raw))
sizeof: ((3388 location) (raw))
run: #\q => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\q
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 11280 to #\q
run: 3678 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3679 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11746 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3680 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3387)
run: 3387 => ((1 list-address))
setm: ((1 list-address)) <= 3387
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11748 to 3387
run: 3681 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3389 list-address) (raw))
sizeof: ((3389 list-address) (raw))
run: 3452 => ((2 list-address))
setm: ((2 list-address)) <= 3452
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11749 to 3452
run: 3682 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3452 => ((1 list-address))
setm: ((1 list-address)) <= 3452
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11243 to 3452
run: 3683 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 8 => ((3 integer))
setm: ((3 integer)) <= 8
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11245 to 8
run: 3684 init-file 11: (((jump)) ((-8 offset)))
run: 3685 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11246 to t
run: 3686 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3687 init-file 12: (((reply)) ((2 file-address)) ((1 list-address)))
m: ((2 file-address))
sizeof: ((2 file-address))
m: ((1 list-address))
sizeof: ((1 list-address))
reply: (((2 file-address)) ((1 list-address))) (((8 file-address-address) (deref)) ((6 list-address)))
reply: 11272 => ((8 file-address-address) (deref))
setm: ((8 file-address-address) (deref)) <= 11272
setm: size of ((8 file-address-address) (deref)) is 1
setm: ((8 file-address-address) (deref)): setting 9628 to 11272
reply: 3452 => ((6 list-address))
setm: ((6 list-address)) <= 3452
setm: size of ((6 list-address)) is 1
setm: ((6 list-address)): setting 5570 to 3452
run: 3688 init-board 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 5569 to 4
run: 3689 init-board 13: (((jump)) ((-6 offset)))
run: 3690 init-board 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((7 boolean))
setm: ((7 boolean)) <= nil
setm: size of ((7 boolean)) is 1
setm: ((7 boolean)): setting 5571 to nil
run: 3691 init-board 9: (((jump-if)) ((7 boolean)) ((4 offset)))
m: ((7 boolean))
sizeof: ((7 boolean))
run: 3692 init-board 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
run: 9629 => ((8 file-address-address))
setm: ((8 file-address-address)) <= 9629
setm: size of ((8 file-address-address)) is 1
setm: ((8 file-address-address)): setting 5572 to 9629
run: 3693 init-board 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
m: ((6 list-address))
sizeof: ((6 list-address))
run: 3694 init-file 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11777 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3695 init-file 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3452)
run: 3452 => ((1 list-address))
setm: ((1 list-address)) <= 3452
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11779 to 3452
run: 3696 init-file 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
sizeof: ((_ square))
run: 11808 => ((2 file-address))
setm: ((2 file-address)) <= 11808
setm: size of ((2 file-address)) is 1
setm: ((2 file-address)): setting 11780 to 11808
run: 3697 init-file 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer))
setm: ((3 integer)) <= 0
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11781 to 0
run: 3698 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11782 to nil
run: 3699 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3700 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3701 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11817 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3702 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3452)
run: 3452 => ((1 list-address))
setm: ((1 list-address)) <= 3452
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11819 to 3452
run: 3703 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3452 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3452
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11820 to 3452
run: 3704 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3452 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3452
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 11783 to 3452
run: 3705 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11808 file) (raw))
m: ((11808 integer) (raw))
sizeof: ((11808 integer) (raw))
sizeof: ((_ square))
run: 11809 => ((6 square-address))
setm: ((6 square-address)) <= 11809
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 11784 to 11809
run: 3706 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3453 location) (raw))
sizeof: ((3453 location) (raw))
run: #\K => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\K
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 11809 to #\K
run: 3707 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3708 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11848 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3709 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3452)
run: 3452 => ((1 list-address))
setm: ((1 list-address)) <= 3452
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11850 to 3452
run: 3710 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3454 list-address) (raw))
sizeof: ((3454 list-address) (raw))
run: 3517 => ((2 list-address))
setm: ((2 list-address)) <= 3517
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11851 to 3517
run: 3711 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3517 => ((1 list-address))
setm: ((1 list-address)) <= 3517
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11779 to 3517
run: 3712 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11781 to 1
run: 3713 init-file 11: (((jump)) ((-8 offset)))
run: 3714 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11782 to nil
run: 3715 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3716 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3717 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11879 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3718 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3517)
run: 3517 => ((1 list-address))
setm: ((1 list-address)) <= 3517
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11881 to 3517
run: 3719 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3517 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3517
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11882 to 3517
run: 3720 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3517 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3517
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 11783 to 3517
run: 3721 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11808 file) (raw))
m: ((11808 integer) (raw))
sizeof: ((11808 integer) (raw))
sizeof: ((_ square))
run: 11810 => ((6 square-address))
setm: ((6 square-address)) <= 11810
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 11784 to 11810
run: 3722 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3518 location) (raw))
sizeof: ((3518 location) (raw))
run: #\P => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\P
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 11810 to #\P
run: 3723 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3724 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11910 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3725 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3517)
run: 3517 => ((1 list-address))
setm: ((1 list-address)) <= 3517
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11912 to 3517
run: 3726 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3519 list-address) (raw))
sizeof: ((3519 list-address) (raw))
run: 3582 => ((2 list-address))
setm: ((2 list-address)) <= 3582
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11913 to 3582
run: 3727 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3582 => ((1 list-address))
setm: ((1 list-address)) <= 3582
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11779 to 3582
run: 3728 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 2 => ((3 integer))
setm: ((3 integer)) <= 2
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11781 to 2
run: 3729 init-file 11: (((jump)) ((-8 offset)))
run: 3730 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11782 to nil
run: 3731 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3732 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3733 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11941 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3734 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3582)
run: 3582 => ((1 list-address))
setm: ((1 list-address)) <= 3582
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11943 to 3582
run: 3735 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3582 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3582
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11944 to 3582
run: 3736 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3582 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3582
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 11783 to 3582
run: 3737 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11808 file) (raw))
m: ((11808 integer) (raw))
sizeof: ((11808 integer) (raw))
sizeof: ((_ square))
run: 11811 => ((6 square-address))
setm: ((6 square-address)) <= 11811
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 11784 to 11811
run: 3738 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3583 location) (raw))
sizeof: ((3583 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 11811 to #\_
run: 3739 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3740 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11972 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3741 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3582)
run: 3582 => ((1 list-address))
setm: ((1 list-address)) <= 3582
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11974 to 3582
run: 3742 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3584 list-address) (raw))
sizeof: ((3584 list-address) (raw))
run: 3647 => ((2 list-address))
setm: ((2 list-address)) <= 3647
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11975 to 3647
run: 3743 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3647 => ((1 list-address))
setm: ((1 list-address)) <= 3647
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11779 to 3647
run: 3744 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11781 to 3
run: 3745 init-file 11: (((jump)) ((-8 offset)))
run: 3746 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11782 to nil
run: 3747 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3748 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3749 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12003 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3750 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3647)
run: 3647 => ((1 list-address))
setm: ((1 list-address)) <= 3647
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12005 to 3647
run: 3751 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3647 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3647
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12006 to 3647
run: 3752 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3647 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3647
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 11783 to 3647
run: 3753 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11808 file) (raw))
m: ((11808 integer) (raw))
sizeof: ((11808 integer) (raw))
sizeof: ((_ square))
run: 11812 => ((6 square-address))
setm: ((6 square-address)) <= 11812
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 11784 to 11812
run: 3754 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3648 location) (raw))
sizeof: ((3648 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 11812 to #\_
run: 3755 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3756 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12034 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3757 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3647)
run: 3647 => ((1 list-address))
setm: ((1 list-address)) <= 3647
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12036 to 3647
run: 3758 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3649 list-address) (raw))
sizeof: ((3649 list-address) (raw))
run: 3712 => ((2 list-address))
setm: ((2 list-address)) <= 3712
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12037 to 3712
run: 3759 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3712 => ((1 list-address))
setm: ((1 list-address)) <= 3712
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11779 to 3712
run: 3760 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 4 => ((3 integer))
setm: ((3 integer)) <= 4
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11781 to 4
run: 3761 init-file 11: (((jump)) ((-8 offset)))
run: 3762 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11782 to nil
run: 3763 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3764 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3765 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12065 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3766 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3712)
run: 3712 => ((1 list-address))
setm: ((1 list-address)) <= 3712
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12067 to 3712
run: 3767 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3712 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3712
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12068 to 3712
run: 3768 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3712 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3712
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 11783 to 3712
run: 3769 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11808 file) (raw))
m: ((11808 integer) (raw))
sizeof: ((11808 integer) (raw))
sizeof: ((_ square))
run: 11813 => ((6 square-address))
setm: ((6 square-address)) <= 11813
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 11784 to 11813
run: 3770 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3713 location) (raw))
sizeof: ((3713 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 11813 to #\_
run: 3771 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3772 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12096 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3773 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3712)
run: 3712 => ((1 list-address))
setm: ((1 list-address)) <= 3712
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12098 to 3712
run: 3774 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3714 list-address) (raw))
sizeof: ((3714 list-address) (raw))
run: 3777 => ((2 list-address))
setm: ((2 list-address)) <= 3777
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12099 to 3777
run: 3775 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3777 => ((1 list-address))
setm: ((1 list-address)) <= 3777
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11779 to 3777
run: 3776 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 5 => ((3 integer))
setm: ((3 integer)) <= 5
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11781 to 5
run: 3777 init-file 11: (((jump)) ((-8 offset)))
run: 3778 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11782 to nil
run: 3779 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3780 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3781 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12127 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3782 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3777)
run: 3777 => ((1 list-address))
setm: ((1 list-address)) <= 3777
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12129 to 3777
run: 3783 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3777 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3777
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12130 to 3777
run: 3784 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3777 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3777
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 11783 to 3777
run: 3785 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11808 file) (raw))
m: ((11808 integer) (raw))
sizeof: ((11808 integer) (raw))
sizeof: ((_ square))
run: 11814 => ((6 square-address))
setm: ((6 square-address)) <= 11814
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 11784 to 11814
run: 3786 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3778 location) (raw))
sizeof: ((3778 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 11814 to #\_
run: 3787 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3788 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12158 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3789 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3777)
run: 3777 => ((1 list-address))
setm: ((1 list-address)) <= 3777
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12160 to 3777
run: 3790 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3779 list-address) (raw))
sizeof: ((3779 list-address) (raw))
run: 3842 => ((2 list-address))
setm: ((2 list-address)) <= 3842
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12161 to 3842
run: 3791 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3842 => ((1 list-address))
setm: ((1 list-address)) <= 3842
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11779 to 3842
run: 3792 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 6 => ((3 integer))
setm: ((3 integer)) <= 6
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11781 to 6
run: 3793 init-file 11: (((jump)) ((-8 offset)))
run: 3794 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11782 to nil
run: 3795 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3796 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3797 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12189 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3798 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3842)
run: 3842 => ((1 list-address))
setm: ((1 list-address)) <= 3842
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12191 to 3842
run: 3799 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3842 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3842
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12192 to 3842
run: 3800 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3842 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3842
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 11783 to 3842
run: 3801 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11808 file) (raw))
m: ((11808 integer) (raw))
sizeof: ((11808 integer) (raw))
sizeof: ((_ square))
run: 11815 => ((6 square-address))
setm: ((6 square-address)) <= 11815
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 11784 to 11815
run: 3802 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3843 location) (raw))
sizeof: ((3843 location) (raw))
run: #\p => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\p
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 11815 to #\p
run: 3803 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3804 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12220 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3805 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3842)
run: 3842 => ((1 list-address))
setm: ((1 list-address)) <= 3842
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12222 to 3842
run: 3806 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3844 list-address) (raw))
sizeof: ((3844 list-address) (raw))
run: 3907 => ((2 list-address))
setm: ((2 list-address)) <= 3907
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12223 to 3907
run: 3807 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3907 => ((1 list-address))
setm: ((1 list-address)) <= 3907
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11779 to 3907
run: 3808 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 7 => ((3 integer))
setm: ((3 integer)) <= 7
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11781 to 7
run: 3809 init-file 11: (((jump)) ((-8 offset)))
run: 3810 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11782 to nil
run: 3811 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3812 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3813 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12251 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3814 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3907)
run: 3907 => ((1 list-address))
setm: ((1 list-address)) <= 3907
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12253 to 3907
run: 3815 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3907 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3907
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12254 to 3907
run: 3816 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3907 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3907
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 11783 to 3907
run: 3817 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11808 file) (raw))
m: ((11808 integer) (raw))
sizeof: ((11808 integer) (raw))
sizeof: ((_ square))
run: 11816 => ((6 square-address))
setm: ((6 square-address)) <= 11816
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 11784 to 11816
run: 3818 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3908 location) (raw))
sizeof: ((3908 location) (raw))
run: #\k => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\k
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 11816 to #\k
run: 3819 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3820 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12282 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3821 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3907)
run: 3907 => ((1 list-address))
setm: ((1 list-address)) <= 3907
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12284 to 3907
run: 3822 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3909 list-address) (raw))
sizeof: ((3909 list-address) (raw))
run: 3972 => ((2 list-address))
setm: ((2 list-address)) <= 3972
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12285 to 3972
run: 3823 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3972 => ((1 list-address))
setm: ((1 list-address)) <= 3972
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11779 to 3972
run: 3824 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 8 => ((3 integer))
setm: ((3 integer)) <= 8
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11781 to 8
run: 3825 init-file 11: (((jump)) ((-8 offset)))
run: 3826 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11782 to t
run: 3827 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3828 init-file 12: (((reply)) ((2 file-address)) ((1 list-address)))
m: ((2 file-address))
sizeof: ((2 file-address))
m: ((1 list-address))
sizeof: ((1 list-address))
reply: (((2 file-address)) ((1 list-address))) (((8 file-address-address) (deref)) ((6 list-address)))
reply: 11808 => ((8 file-address-address) (deref))
setm: ((8 file-address-address) (deref)) <= 11808
setm: size of ((8 file-address-address) (deref)) is 1
setm: ((8 file-address-address) (deref)): setting 9629 to 11808
reply: 3972 => ((6 list-address))
setm: ((6 list-address)) <= 3972
setm: size of ((6 list-address)) is 1
setm: ((6 list-address)): setting 5570 to 3972
run: 3829 init-board 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: 5 => ((5 integer))
setm: ((5 integer)) <= 5
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 5569 to 5
run: 3830 init-board 13: (((jump)) ((-6 offset)))
run: 3831 init-board 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((7 boolean))
setm: ((7 boolean)) <= nil
setm: size of ((7 boolean)) is 1
setm: ((7 boolean)): setting 5571 to nil
run: 3832 init-board 9: (((jump-if)) ((7 boolean)) ((4 offset)))
m: ((7 boolean))
sizeof: ((7 boolean))
run: 3833 init-board 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
run: 9630 => ((8 file-address-address))
setm: ((8 file-address-address)) <= 9630
setm: size of ((8 file-address-address)) is 1
setm: ((8 file-address-address)): setting 5572 to 9630
run: 3834 init-board 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
m: ((6 list-address))
sizeof: ((6 list-address))
run: 3835 init-file 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12313 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3836 init-file 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3972)
run: 3972 => ((1 list-address))
setm: ((1 list-address)) <= 3972
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12315 to 3972
run: 3837 init-file 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
sizeof: ((_ square))
run: 12344 => ((2 file-address))
setm: ((2 file-address)) <= 12344
setm: size of ((2 file-address)) is 1
setm: ((2 file-address)): setting 12316 to 12344
run: 3838 init-file 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer))
setm: ((3 integer)) <= 0
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12317 to 0
run: 3839 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12318 to nil
run: 3840 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3841 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3842 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12353 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3843 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3972)
run: 3972 => ((1 list-address))
setm: ((1 list-address)) <= 3972
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12355 to 3972
run: 3844 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3972 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3972
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12356 to 3972
run: 3845 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3972 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3972
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12319 to 3972
run: 3846 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12344 file) (raw))
m: ((12344 integer) (raw))
sizeof: ((12344 integer) (raw))
sizeof: ((_ square))
run: 12345 => ((6 square-address))
setm: ((6 square-address)) <= 12345
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12320 to 12345
run: 3847 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3973 location) (raw))
sizeof: ((3973 location) (raw))
run: #\B => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\B
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12345 to #\B
run: 3848 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3849 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12384 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3850 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3972)
run: 3972 => ((1 list-address))
setm: ((1 list-address)) <= 3972
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12386 to 3972
run: 3851 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3974 list-address) (raw))
sizeof: ((3974 list-address) (raw))
run: 4037 => ((2 list-address))
setm: ((2 list-address)) <= 4037
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12387 to 4037
run: 3852 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4037 => ((1 list-address))
setm: ((1 list-address)) <= 4037
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12315 to 4037
run: 3853 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12317 to 1
run: 3854 init-file 11: (((jump)) ((-8 offset)))
run: 3855 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12318 to nil
run: 3856 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3857 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3858 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12415 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3859 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4037)
run: 4037 => ((1 list-address))
setm: ((1 list-address)) <= 4037
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12417 to 4037
run: 3860 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4037 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4037
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12418 to 4037
run: 3861 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4037 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4037
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12319 to 4037
run: 3862 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12344 file) (raw))
m: ((12344 integer) (raw))
sizeof: ((12344 integer) (raw))
sizeof: ((_ square))
run: 12346 => ((6 square-address))
setm: ((6 square-address)) <= 12346
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12320 to 12346
run: 3863 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4038 location) (raw))
sizeof: ((4038 location) (raw))
run: #\P => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\P
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12346 to #\P
run: 3864 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3865 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12446 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3866 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4037)
run: 4037 => ((1 list-address))
setm: ((1 list-address)) <= 4037
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12448 to 4037
run: 3867 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4039 list-address) (raw))
sizeof: ((4039 list-address) (raw))
run: 4102 => ((2 list-address))
setm: ((2 list-address)) <= 4102
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12449 to 4102
run: 3868 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4102 => ((1 list-address))
setm: ((1 list-address)) <= 4102
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12315 to 4102
run: 3869 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 2 => ((3 integer))
setm: ((3 integer)) <= 2
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12317 to 2
run: 3870 init-file 11: (((jump)) ((-8 offset)))
run: 3871 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12318 to nil
run: 3872 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3873 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3874 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12477 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3875 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4102)
run: 4102 => ((1 list-address))
setm: ((1 list-address)) <= 4102
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12479 to 4102
run: 3876 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4102 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4102
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12480 to 4102
run: 3877 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4102 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4102
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12319 to 4102
run: 3878 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12344 file) (raw))
m: ((12344 integer) (raw))
sizeof: ((12344 integer) (raw))
sizeof: ((_ square))
run: 12347 => ((6 square-address))
setm: ((6 square-address)) <= 12347
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12320 to 12347
run: 3879 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4103 location) (raw))
sizeof: ((4103 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12347 to #\_
run: 3880 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3881 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12508 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3882 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4102)
run: 4102 => ((1 list-address))
setm: ((1 list-address)) <= 4102
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12510 to 4102
run: 3883 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4104 list-address) (raw))
sizeof: ((4104 list-address) (raw))
run: 4167 => ((2 list-address))
setm: ((2 list-address)) <= 4167
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12511 to 4167
run: 3884 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4167 => ((1 list-address))
setm: ((1 list-address)) <= 4167
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12315 to 4167
run: 3885 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12317 to 3
run: 3886 init-file 11: (((jump)) ((-8 offset)))
run: 3887 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12318 to nil
run: 3888 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3889 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3890 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12539 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3891 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4167)
run: 4167 => ((1 list-address))
setm: ((1 list-address)) <= 4167
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12541 to 4167
run: 3892 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4167 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4167
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12542 to 4167
run: 3893 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4167 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4167
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12319 to 4167
run: 3894 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12344 file) (raw))
m: ((12344 integer) (raw))
sizeof: ((12344 integer) (raw))
sizeof: ((_ square))
run: 12348 => ((6 square-address))
setm: ((6 square-address)) <= 12348
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12320 to 12348
run: 3895 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4168 location) (raw))
sizeof: ((4168 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12348 to #\_
run: 3896 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3897 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12570 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3898 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4167)
run: 4167 => ((1 list-address))
setm: ((1 list-address)) <= 4167
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12572 to 4167
run: 3899 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4169 list-address) (raw))
sizeof: ((4169 list-address) (raw))
run: 4232 => ((2 list-address))
setm: ((2 list-address)) <= 4232
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12573 to 4232
run: 3900 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4232 => ((1 list-address))
setm: ((1 list-address)) <= 4232
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12315 to 4232
run: 3901 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 4 => ((3 integer))
setm: ((3 integer)) <= 4
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12317 to 4
run: 3902 init-file 11: (((jump)) ((-8 offset)))
run: 3903 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12318 to nil
run: 3904 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3905 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3906 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12601 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3907 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4232)
run: 4232 => ((1 list-address))
setm: ((1 list-address)) <= 4232
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12603 to 4232
run: 3908 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4232 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4232
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12604 to 4232
run: 3909 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4232 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4232
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12319 to 4232
run: 3910 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12344 file) (raw))
m: ((12344 integer) (raw))
sizeof: ((12344 integer) (raw))
sizeof: ((_ square))
run: 12349 => ((6 square-address))
setm: ((6 square-address)) <= 12349
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12320 to 12349
run: 3911 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4233 location) (raw))
sizeof: ((4233 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12349 to #\_
run: 3912 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3913 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12632 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3914 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4232)
run: 4232 => ((1 list-address))
setm: ((1 list-address)) <= 4232
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12634 to 4232
run: 3915 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4234 list-address) (raw))
sizeof: ((4234 list-address) (raw))
run: 4297 => ((2 list-address))
setm: ((2 list-address)) <= 4297
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12635 to 4297
run: 3916 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4297 => ((1 list-address))
setm: ((1 list-address)) <= 4297
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12315 to 4297
run: 3917 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 5 => ((3 integer))
setm: ((3 integer)) <= 5
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12317 to 5
run: 3918 init-file 11: (((jump)) ((-8 offset)))
run: 3919 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12318 to nil
run: 3920 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3921 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3922 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12663 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3923 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4297)
run: 4297 => ((1 list-address))
setm: ((1 list-address)) <= 4297
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12665 to 4297
run: 3924 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4297 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4297
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12666 to 4297
run: 3925 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4297 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4297
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12319 to 4297
run: 3926 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12344 file) (raw))
m: ((12344 integer) (raw))
sizeof: ((12344 integer) (raw))
sizeof: ((_ square))
run: 12350 => ((6 square-address))
setm: ((6 square-address)) <= 12350
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12320 to 12350
run: 3927 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4298 location) (raw))
sizeof: ((4298 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12350 to #\_
run: 3928 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3929 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12694 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3930 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4297)
run: 4297 => ((1 list-address))
setm: ((1 list-address)) <= 4297
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12696 to 4297
run: 3931 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4299 list-address) (raw))
sizeof: ((4299 list-address) (raw))
run: 4362 => ((2 list-address))
setm: ((2 list-address)) <= 4362
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12697 to 4362
run: 3932 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4362 => ((1 list-address))
setm: ((1 list-address)) <= 4362
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12315 to 4362
run: 3933 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 6 => ((3 integer))
setm: ((3 integer)) <= 6
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12317 to 6
run: 3934 init-file 11: (((jump)) ((-8 offset)))
run: 3935 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12318 to nil
run: 3936 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3937 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3938 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12725 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3939 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4362)
run: 4362 => ((1 list-address))
setm: ((1 list-address)) <= 4362
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12727 to 4362
run: 3940 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4362 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4362
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12728 to 4362
run: 3941 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4362 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4362
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12319 to 4362
run: 3942 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12344 file) (raw))
m: ((12344 integer) (raw))
sizeof: ((12344 integer) (raw))
sizeof: ((_ square))
run: 12351 => ((6 square-address))
setm: ((6 square-address)) <= 12351
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12320 to 12351
run: 3943 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4363 location) (raw))
sizeof: ((4363 location) (raw))
run: #\p => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\p
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12351 to #\p
run: 3944 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3945 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12756 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3946 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4362)
run: 4362 => ((1 list-address))
setm: ((1 list-address)) <= 4362
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12758 to 4362
run: 3947 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4364 list-address) (raw))
sizeof: ((4364 list-address) (raw))
run: 4427 => ((2 list-address))
setm: ((2 list-address)) <= 4427
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12759 to 4427
run: 3948 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4427 => ((1 list-address))
setm: ((1 list-address)) <= 4427
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12315 to 4427
run: 3949 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 7 => ((3 integer))
setm: ((3 integer)) <= 7
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12317 to 7
run: 3950 init-file 11: (((jump)) ((-8 offset)))
run: 3951 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12318 to nil
run: 3952 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3953 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3954 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12787 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3955 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4427)
run: 4427 => ((1 list-address))
setm: ((1 list-address)) <= 4427
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12789 to 4427
run: 3956 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4427 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4427
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12790 to 4427
run: 3957 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4427 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4427
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12319 to 4427
run: 3958 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12344 file) (raw))
m: ((12344 integer) (raw))
sizeof: ((12344 integer) (raw))
sizeof: ((_ square))
run: 12352 => ((6 square-address))
setm: ((6 square-address)) <= 12352
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12320 to 12352
run: 3959 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4428 location) (raw))
sizeof: ((4428 location) (raw))
run: #\b => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\b
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12352 to #\b
run: 3960 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3961 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12818 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3962 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4427)
run: 4427 => ((1 list-address))
setm: ((1 list-address)) <= 4427
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12820 to 4427
run: 3963 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4429 list-address) (raw))
sizeof: ((4429 list-address) (raw))
run: 4492 => ((2 list-address))
setm: ((2 list-address)) <= 4492
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12821 to 4492
run: 3964 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4492 => ((1 list-address))
setm: ((1 list-address)) <= 4492
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12315 to 4492
run: 3965 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 8 => ((3 integer))
setm: ((3 integer)) <= 8
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12317 to 8
run: 3966 init-file 11: (((jump)) ((-8 offset)))
run: 3967 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12318 to t
run: 3968 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3969 init-file 12: (((reply)) ((2 file-address)) ((1 list-address)))
m: ((2 file-address))
sizeof: ((2 file-address))
m: ((1 list-address))
sizeof: ((1 list-address))
reply: (((2 file-address)) ((1 list-address))) (((8 file-address-address) (deref)) ((6 list-address)))
reply: 12344 => ((8 file-address-address) (deref))
setm: ((8 file-address-address) (deref)) <= 12344
setm: size of ((8 file-address-address) (deref)) is 1
setm: ((8 file-address-address) (deref)): setting 9630 to 12344
reply: 4492 => ((6 list-address))
setm: ((6 list-address)) <= 4492
setm: size of ((6 list-address)) is 1
setm: ((6 list-address)): setting 5570 to 4492
run: 3970 init-board 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: 6 => ((5 integer))
setm: ((5 integer)) <= 6
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 5569 to 6
run: 3971 init-board 13: (((jump)) ((-6 offset)))
run: 3972 init-board 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((7 boolean))
setm: ((7 boolean)) <= nil
setm: size of ((7 boolean)) is 1
setm: ((7 boolean)): setting 5571 to nil
run: 3973 init-board 9: (((jump-if)) ((7 boolean)) ((4 offset)))
m: ((7 boolean))
sizeof: ((7 boolean))
run: 3974 init-board 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
run: 9631 => ((8 file-address-address))
setm: ((8 file-address-address)) <= 9631
setm: size of ((8 file-address-address)) is 1
setm: ((8 file-address-address)): setting 5572 to 9631
run: 3975 init-board 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
m: ((6 list-address))
sizeof: ((6 list-address))
run: 3976 init-file 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12849 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3977 init-file 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4492)
run: 4492 => ((1 list-address))
setm: ((1 list-address)) <= 4492
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12851 to 4492
run: 3978 init-file 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
sizeof: ((_ square))
run: 12880 => ((2 file-address))
setm: ((2 file-address)) <= 12880
setm: size of ((2 file-address)) is 1
setm: ((2 file-address)): setting 12852 to 12880
run: 3979 init-file 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer))
setm: ((3 integer)) <= 0
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12853 to 0
run: 3980 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12854 to nil
run: 3981 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3982 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3983 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12889 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3984 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4492)
run: 4492 => ((1 list-address))
setm: ((1 list-address)) <= 4492
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12891 to 4492
run: 3985 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4492 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4492
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12892 to 4492
run: 3986 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4492 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4492
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12855 to 4492
run: 3987 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12880 file) (raw))
m: ((12880 integer) (raw))
sizeof: ((12880 integer) (raw))
sizeof: ((_ square))
run: 12881 => ((6 square-address))
setm: ((6 square-address)) <= 12881
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12856 to 12881
run: 3988 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4493 location) (raw))
sizeof: ((4493 location) (raw))
run: #\N => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\N
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12881 to #\N
run: 3989 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3990 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12920 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3991 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4492)
run: 4492 => ((1 list-address))
setm: ((1 list-address)) <= 4492
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12922 to 4492
run: 3992 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4494 list-address) (raw))
sizeof: ((4494 list-address) (raw))
run: 4557 => ((2 list-address))
setm: ((2 list-address)) <= 4557
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12923 to 4557
run: 3993 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4557 => ((1 list-address))
setm: ((1 list-address)) <= 4557
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12851 to 4557
run: 3994 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12853 to 1
run: 3995 init-file 11: (((jump)) ((-8 offset)))
run: 3996 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12854 to nil
run: 3997 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3998 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3999 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12951 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4000 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4557)
run: 4557 => ((1 list-address))
setm: ((1 list-address)) <= 4557
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12953 to 4557
schedule: scheduling list-value-address/init-file/init-board/main for further processing
schedule: list-value-address/init-file/init-board/main
run: 4001 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4557 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4557
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12954 to 4557
run: 4002 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4557 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4557
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12855 to 4557
run: 4003 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12880 file) (raw))
m: ((12880 integer) (raw))
sizeof: ((12880 integer) (raw))
sizeof: ((_ square))
run: 12882 => ((6 square-address))
setm: ((6 square-address)) <= 12882
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12856 to 12882
run: 4004 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4558 location) (raw))
sizeof: ((4558 location) (raw))
run: #\P => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\P
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12882 to #\P
run: 4005 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4006 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12982 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4007 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4557)
run: 4557 => ((1 list-address))
setm: ((1 list-address)) <= 4557
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12984 to 4557
run: 4008 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4559 list-address) (raw))
sizeof: ((4559 list-address) (raw))
run: 4622 => ((2 list-address))
setm: ((2 list-address)) <= 4622
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12985 to 4622
run: 4009 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4622 => ((1 list-address))
setm: ((1 list-address)) <= 4622
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12851 to 4622
run: 4010 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 2 => ((3 integer))
setm: ((3 integer)) <= 2
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12853 to 2
run: 4011 init-file 11: (((jump)) ((-8 offset)))
run: 4012 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12854 to nil
run: 4013 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4014 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4015 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13013 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4016 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4622)
run: 4622 => ((1 list-address))
setm: ((1 list-address)) <= 4622
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13015 to 4622
run: 4017 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4622 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4622
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 13016 to 4622
run: 4018 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4622 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4622
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12855 to 4622
run: 4019 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12880 file) (raw))
m: ((12880 integer) (raw))
sizeof: ((12880 integer) (raw))
sizeof: ((_ square))
run: 12883 => ((6 square-address))
setm: ((6 square-address)) <= 12883
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12856 to 12883
run: 4020 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4623 location) (raw))
sizeof: ((4623 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12883 to #\_
run: 4021 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4022 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13044 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4023 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4622)
run: 4622 => ((1 list-address))
setm: ((1 list-address)) <= 4622
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13046 to 4622
run: 4024 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4624 list-address) (raw))
sizeof: ((4624 list-address) (raw))
run: 4687 => ((2 list-address))
setm: ((2 list-address)) <= 4687
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 13047 to 4687
run: 4025 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4687 => ((1 list-address))
setm: ((1 list-address)) <= 4687
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12851 to 4687
run: 4026 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12853 to 3
run: 4027 init-file 11: (((jump)) ((-8 offset)))
run: 4028 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12854 to nil
run: 4029 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4030 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4031 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13075 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4032 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4687)
run: 4687 => ((1 list-address))
setm: ((1 list-address)) <= 4687
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13077 to 4687
run: 4033 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4687 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4687
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 13078 to 4687
run: 4034 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4687 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4687
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12855 to 4687
run: 4035 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12880 file) (raw))
m: ((12880 integer) (raw))
sizeof: ((12880 integer) (raw))
sizeof: ((_ square))
run: 12884 => ((6 square-address))
setm: ((6 square-address)) <= 12884
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12856 to 12884
run: 4036 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4688 location) (raw))
sizeof: ((4688 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12884 to #\_
run: 4037 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4038 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13106 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4039 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4687)
run: 4687 => ((1 list-address))
setm: ((1 list-address)) <= 4687
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13108 to 4687
run: 4040 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4689 list-address) (raw))
sizeof: ((4689 list-address) (raw))
run: 4752 => ((2 list-address))
setm: ((2 list-address)) <= 4752
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 13109 to 4752
run: 4041 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4752 => ((1 list-address))
setm: ((1 list-address)) <= 4752
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12851 to 4752
run: 4042 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 4 => ((3 integer))
setm: ((3 integer)) <= 4
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12853 to 4
run: 4043 init-file 11: (((jump)) ((-8 offset)))
run: 4044 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12854 to nil
run: 4045 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4046 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4047 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13137 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4048 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4752)
run: 4752 => ((1 list-address))
setm: ((1 list-address)) <= 4752
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13139 to 4752
run: 4049 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4752 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4752
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 13140 to 4752
run: 4050 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4752 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4752
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12855 to 4752
run: 4051 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12880 file) (raw))
m: ((12880 integer) (raw))
sizeof: ((12880 integer) (raw))
sizeof: ((_ square))
run: 12885 => ((6 square-address))
setm: ((6 square-address)) <= 12885
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12856 to 12885
run: 4052 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4753 location) (raw))
sizeof: ((4753 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12885 to #\_
run: 4053 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4054 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13168 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4055 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4752)
run: 4752 => ((1 list-address))
setm: ((1 list-address)) <= 4752
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13170 to 4752
run: 4056 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4754 list-address) (raw))
sizeof: ((4754 list-address) (raw))
run: 4817 => ((2 list-address))
setm: ((2 list-address)) <= 4817
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 13171 to 4817
run: 4057 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4817 => ((1 list-address))
setm: ((1 list-address)) <= 4817
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12851 to 4817
run: 4058 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 5 => ((3 integer))
setm: ((3 integer)) <= 5
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12853 to 5
run: 4059 init-file 11: (((jump)) ((-8 offset)))
run: 4060 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12854 to nil
run: 4061 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4062 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4063 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13199 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4064 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4817)
run: 4817 => ((1 list-address))
setm: ((1 list-address)) <= 4817
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13201 to 4817
run: 4065 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4817 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4817
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 13202 to 4817
run: 4066 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4817 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4817
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12855 to 4817
run: 4067 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12880 file) (raw))
m: ((12880 integer) (raw))
sizeof: ((12880 integer) (raw))
sizeof: ((_ square))
run: 12886 => ((6 square-address))
setm: ((6 square-address)) <= 12886
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12856 to 12886
run: 4068 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4818 location) (raw))
sizeof: ((4818 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12886 to #\_
run: 4069 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4070 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13230 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4071 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4817)
run: 4817 => ((1 list-address))
setm: ((1 list-address)) <= 4817
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13232 to 4817
run: 4072 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4819 list-address) (raw))
sizeof: ((4819 list-address) (raw))
run: 4882 => ((2 list-address))
setm: ((2 list-address)) <= 4882
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 13233 to 4882
run: 4073 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4882 => ((1 list-address))
setm: ((1 list-address)) <= 4882
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12851 to 4882
run: 4074 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 6 => ((3 integer))
setm: ((3 integer)) <= 6
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12853 to 6
run: 4075 init-file 11: (((jump)) ((-8 offset)))
run: 4076 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12854 to nil
run: 4077 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4078 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4079 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13261 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4080 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4882)
run: 4882 => ((1 list-address))
setm: ((1 list-address)) <= 4882
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13263 to 4882
run: 4081 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4882 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4882
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 13264 to 4882
run: 4082 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4882 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4882
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12855 to 4882
run: 4083 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12880 file) (raw))
m: ((12880 integer) (raw))
sizeof: ((12880 integer) (raw))
sizeof: ((_ square))
run: 12887 => ((6 square-address))
setm: ((6 square-address)) <= 12887
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12856 to 12887
run: 4084 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4883 location) (raw))
sizeof: ((4883 location) (raw))
run: #\p => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\p
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12887 to #\p
run: 4085 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4086 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13292 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4087 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4882)
run: 4882 => ((1 list-address))
setm: ((1 list-address)) <= 4882
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13294 to 4882
run: 4088 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4884 list-address) (raw))
sizeof: ((4884 list-address) (raw))
run: 4947 => ((2 list-address))
setm: ((2 list-address)) <= 4947
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 13295 to 4947
run: 4089 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4947 => ((1 list-address))
setm: ((1 list-address)) <= 4947
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12851 to 4947
run: 4090 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 7 => ((3 integer))
setm: ((3 integer)) <= 7
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12853 to 7
run: 4091 init-file 11: (((jump)) ((-8 offset)))
run: 4092 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12854 to nil
run: 4093 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4094 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4095 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13323 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4096 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4947)
run: 4947 => ((1 list-address))
setm: ((1 list-address)) <= 4947
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13325 to 4947
run: 4097 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4947 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4947
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 13326 to 4947
run: 4098 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4947 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4947
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12855 to 4947
run: 4099 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12880 file) (raw))
m: ((12880 integer) (raw))
sizeof: ((12880 integer) (raw))
sizeof: ((_ square))
run: 12888 => ((6 square-address))
setm: ((6 square-address)) <= 12888
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12856 to 12888
run: 4100 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4948 location) (raw))
sizeof: ((4948 location) (raw))
run: #\n => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\n
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12888 to #\n
run: 4101 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4102 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13354 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4103 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4947)
run: 4947 => ((1 list-address))
setm: ((1 list-address)) <= 4947
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13356 to 4947
run: 4104 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4949 list-address) (raw))
sizeof: ((4949 list-address) (raw))
run: 5012 => ((2 list-address))
setm: ((2 list-address)) <= 5012
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 13357 to 5012
run: 4105 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 5012 => ((1 list-address))
setm: ((1 list-address)) <= 5012
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12851 to 5012
run: 4106 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 8 => ((3 integer))
setm: ((3 integer)) <= 8
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12853 to 8
run: 4107 init-file 11: (((jump)) ((-8 offset)))
run: 4108 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12854 to t
run: 4109 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4110 init-file 12: (((reply)) ((2 file-address)) ((1 list-address)))
m: ((2 file-address))
sizeof: ((2 file-address))
m: ((1 list-address))
sizeof: ((1 list-address))
reply: (((2 file-address)) ((1 list-address))) (((8 file-address-address) (deref)) ((6 list-address)))
reply: 12880 => ((8 file-address-address) (deref))
setm: ((8 file-address-address) (deref)) <= 12880
setm: size of ((8 file-address-address) (deref)) is 1
setm: ((8 file-address-address) (deref)): setting 9631 to 12880
reply: 5012 => ((6 list-address))
setm: ((6 list-address)) <= 5012
setm: size of ((6 list-address)) is 1
setm: ((6 list-address)): setting 5570 to 5012
run: 4111 init-board 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: 7 => ((5 integer))
setm: ((5 integer)) <= 7
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 5569 to 7
run: 4112 init-board 13: (((jump)) ((-6 offset)))
run: 4113 init-board 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((7 boolean))
setm: ((7 boolean)) <= nil
setm: size of ((7 boolean)) is 1
setm: ((7 boolean)): setting 5571 to nil
run: 4114 init-board 9: (((jump-if)) ((7 boolean)) ((4 offset)))
m: ((7 boolean))
sizeof: ((7 boolean))
run: 4115 init-board 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
run: 9632 => ((8 file-address-address))
setm: ((8 file-address-address)) <= 9632
setm: size of ((8 file-address-address)) is 1
setm: ((8 file-address-address)): setting 5572 to 9632
run: 4116 init-board 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
m: ((6 list-address))
sizeof: ((6 list-address))
run: 4117 init-file 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13385 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4118 init-file 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5012)
run: 5012 => ((1 list-address))
setm: ((1 list-address)) <= 5012
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13387 to 5012
run: 4119 init-file 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
sizeof: ((_ square))
run: 13416 => ((2 file-address))
setm: ((2 file-address)) <= 13416
setm: size of ((2 file-address)) is 1
setm: ((2 file-address)): setting 13388 to 13416
run: 4120 init-file 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer))
setm: ((3 integer)) <= 0
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13389 to 0
run: 4121 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13390 to nil
run: 4122 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4123 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4124 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13425 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4125 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5012)
run: 5012 => ((1 list-address))
setm: ((1 list-address)) <= 5012
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13427 to 5012
run: 4126 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5012 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5012
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 13428 to 5012
run: 4127 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 5012 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 5012
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 13391 to 5012
run: 4128 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13416 file) (raw))
m: ((13416 integer) (raw))
sizeof: ((13416 integer) (raw))
sizeof: ((_ square))
run: 13417 => ((6 square-address))
setm: ((6 square-address)) <= 13417
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 13392 to 13417
run: 4129 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((5013 location) (raw))
sizeof: ((5013 location) (raw))
run: #\R => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\R
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 13417 to #\R
run: 4130 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4131 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13456 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4132 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5012)
run: 5012 => ((1 list-address))
setm: ((1 list-address)) <= 5012
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13458 to 5012
run: 4133 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5014 list-address) (raw))
sizeof: ((5014 list-address) (raw))
run: 5077 => ((2 list-address))
setm: ((2 list-address)) <= 5077
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 13459 to 5077
run: 4134 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 5077 => ((1 list-address))
setm: ((1 list-address)) <= 5077
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13387 to 5077
run: 4135 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13389 to 1
run: 4136 init-file 11: (((jump)) ((-8 offset)))
run: 4137 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13390 to nil
run: 4138 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4139 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4140 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13487 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4141 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5077)
run: 5077 => ((1 list-address))
setm: ((1 list-address)) <= 5077
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13489 to 5077
run: 4142 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5077 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5077
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 13490 to 5077
run: 4143 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 5077 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 5077
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 13391 to 5077
run: 4144 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13416 file) (raw))
m: ((13416 integer) (raw))
sizeof: ((13416 integer) (raw))
sizeof: ((_ square))
run: 13418 => ((6 square-address))
setm: ((6 square-address)) <= 13418
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 13392 to 13418
run: 4145 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((5078 location) (raw))
sizeof: ((5078 location) (raw))
run: #\P => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\P
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 13418 to #\P
run: 4146 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4147 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13518 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4148 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5077)
run: 5077 => ((1 list-address))
setm: ((1 list-address)) <= 5077
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13520 to 5077
run: 4149 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5079 list-address) (raw))
sizeof: ((5079 list-address) (raw))
run: 5142 => ((2 list-address))
setm: ((2 list-address)) <= 5142
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 13521 to 5142
run: 4150 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 5142 => ((1 list-address))
setm: ((1 list-address)) <= 5142
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13387 to 5142
run: 4151 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 2 => ((3 integer))
setm: ((3 integer)) <= 2
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13389 to 2
run: 4152 init-file 11: (((jump)) ((-8 offset)))
run: 4153 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13390 to nil
run: 4154 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4155 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4156 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13549 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4157 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5142)
run: 5142 => ((1 list-address))
setm: ((1 list-address)) <= 5142
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13551 to 5142
run: 4158 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5142 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5142
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 13552 to 5142
run: 4159 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 5142 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 5142
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 13391 to 5142
run: 4160 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13416 file) (raw))
m: ((13416 integer) (raw))
sizeof: ((13416 integer) (raw))
sizeof: ((_ square))
run: 13419 => ((6 square-address))
setm: ((6 square-address)) <= 13419
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 13392 to 13419
run: 4161 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((5143 location) (raw))
sizeof: ((5143 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 13419 to #\_
run: 4162 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4163 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13580 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4164 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5142)
run: 5142 => ((1 list-address))
setm: ((1 list-address)) <= 5142
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13582 to 5142
run: 4165 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5144 list-address) (raw))
sizeof: ((5144 list-address) (raw))
run: 5207 => ((2 list-address))
setm: ((2 list-address)) <= 5207
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 13583 to 5207
run: 4166 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 5207 => ((1 list-address))
setm: ((1 list-address)) <= 5207
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13387 to 5207
run: 4167 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13389 to 3
run: 4168 init-file 11: (((jump)) ((-8 offset)))
run: 4169 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13390 to nil
run: 4170 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4171 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4172 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13611 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4173 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5207)
run: 5207 => ((1 list-address))
setm: ((1 list-address)) <= 5207
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13613 to 5207
run: 4174 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5207 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5207
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 13614 to 5207
run: 4175 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 5207 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 5207
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 13391 to 5207
run: 4176 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13416 file) (raw))
m: ((13416 integer) (raw))
sizeof: ((13416 integer) (raw))
sizeof: ((_ square))
run: 13420 => ((6 square-address))
setm: ((6 square-address)) <= 13420
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 13392 to 13420
run: 4177 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((5208 location) (raw))
sizeof: ((5208 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 13420 to #\_
run: 4178 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4179 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13642 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4180 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5207)
run: 5207 => ((1 list-address))
setm: ((1 list-address)) <= 5207
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13644 to 5207
run: 4181 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5209 list-address) (raw))
sizeof: ((5209 list-address) (raw))
run: 5272 => ((2 list-address))
setm: ((2 list-address)) <= 5272
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 13645 to 5272
run: 4182 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 5272 => ((1 list-address))
setm: ((1 list-address)) <= 5272
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13387 to 5272
run: 4183 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 4 => ((3 integer))
setm: ((3 integer)) <= 4
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13389 to 4
run: 4184 init-file 11: (((jump)) ((-8 offset)))
run: 4185 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13390 to nil
run: 4186 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4187 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4188 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13673 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4189 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5272)
run: 5272 => ((1 list-address))
setm: ((1 list-address)) <= 5272
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13675 to 5272
run: 4190 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5272 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5272
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 13676 to 5272
run: 4191 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 5272 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 5272
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 13391 to 5272
run: 4192 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13416 file) (raw))
m: ((13416 integer) (raw))
sizeof: ((13416 integer) (raw))
sizeof: ((_ square))
run: 13421 => ((6 square-address))
setm: ((6 square-address)) <= 13421
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 13392 to 13421
run: 4193 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((5273 location) (raw))
sizeof: ((5273 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 13421 to #\_
run: 4194 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4195 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13704 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4196 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5272)
run: 5272 => ((1 list-address))
setm: ((1 list-address)) <= 5272
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13706 to 5272
run: 4197 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5274 list-address) (raw))
sizeof: ((5274 list-address) (raw))
run: 5337 => ((2 list-address))
setm: ((2 list-address)) <= 5337
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 13707 to 5337
run: 4198 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 5337 => ((1 list-address))
setm: ((1 list-address)) <= 5337
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13387 to 5337
run: 4199 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 5 => ((3 integer))
setm: ((3 integer)) <= 5
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13389 to 5
run: 4200 init-file 11: (((jump)) ((-8 offset)))
run: 4201 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13390 to nil
run: 4202 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4203 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4204 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13735 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4205 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5337)
run: 5337 => ((1 list-address))
setm: ((1 list-address)) <= 5337
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13737 to 5337
run: 4206 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5337 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5337
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 13738 to 5337
run: 4207 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 5337 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 5337
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 13391 to 5337
run: 4208 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13416 file) (raw))
m: ((13416 integer) (raw))
sizeof: ((13416 integer) (raw))
sizeof: ((_ square))
run: 13422 => ((6 square-address))
setm: ((6 square-address)) <= 13422
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 13392 to 13422
run: 4209 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((5338 location) (raw))
sizeof: ((5338 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 13422 to #\_
run: 4210 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4211 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13766 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4212 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5337)
run: 5337 => ((1 list-address))
setm: ((1 list-address)) <= 5337
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13768 to 5337
run: 4213 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5339 list-address) (raw))
sizeof: ((5339 list-address) (raw))
run: 5402 => ((2 list-address))
setm: ((2 list-address)) <= 5402
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 13769 to 5402
run: 4214 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 5402 => ((1 list-address))
setm: ((1 list-address)) <= 5402
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13387 to 5402
run: 4215 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 6 => ((3 integer))
setm: ((3 integer)) <= 6
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13389 to 6
run: 4216 init-file 11: (((jump)) ((-8 offset)))
run: 4217 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13390 to nil
run: 4218 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4219 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4220 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13797 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4221 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5402)
run: 5402 => ((1 list-address))
setm: ((1 list-address)) <= 5402
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13799 to 5402
run: 4222 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5402 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5402
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 13800 to 5402
run: 4223 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 5402 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 5402
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 13391 to 5402
run: 4224 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13416 file) (raw))
m: ((13416 integer) (raw))
sizeof: ((13416 integer) (raw))
sizeof: ((_ square))
run: 13423 => ((6 square-address))
setm: ((6 square-address)) <= 13423
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 13392 to 13423
run: 4225 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((5403 location) (raw))
sizeof: ((5403 location) (raw))
run: #\p => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\p
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 13423 to #\p
run: 4226 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4227 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13828 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4228 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5402)
run: 5402 => ((1 list-address))
setm: ((1 list-address)) <= 5402
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13830 to 5402
run: 4229 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5404 list-address) (raw))
sizeof: ((5404 list-address) (raw))
run: 5467 => ((2 list-address))
setm: ((2 list-address)) <= 5467
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 13831 to 5467
run: 4230 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 5467 => ((1 list-address))
setm: ((1 list-address)) <= 5467
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13387 to 5467
run: 4231 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 7 => ((3 integer))
setm: ((3 integer)) <= 7
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13389 to 7
run: 4232 init-file 11: (((jump)) ((-8 offset)))
run: 4233 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13390 to nil
run: 4234 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4235 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4236 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13859 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4237 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5467)
run: 5467 => ((1 list-address))
setm: ((1 list-address)) <= 5467
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13861 to 5467
run: 4238 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5467 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5467
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 13862 to 5467
run: 4239 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 5467 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 5467
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 13391 to 5467
run: 4240 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13416 file) (raw))
m: ((13416 integer) (raw))
sizeof: ((13416 integer) (raw))
sizeof: ((_ square))
run: 13424 => ((6 square-address))
setm: ((6 square-address)) <= 13424
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 13392 to 13424
run: 4241 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((5468 location) (raw))
sizeof: ((5468 location) (raw))
run: #\r => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\r
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 13424 to #\r
run: 4242 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 4243 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13890 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4244 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5467)
run: 5467 => ((1 list-address))
setm: ((1 list-address)) <= 5467
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13892 to 5467
run: 4245 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5469 list-address) (raw))
sizeof: ((5469 list-address) (raw))
run: nil => ((2 list-address))
setm: ((2 list-address)) <= nil
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 13893 to nil
run: 4246 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: nil => ((1 list-address))
setm: ((1 list-address)) <= nil
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13387 to nil
run: 4247 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 8 => ((3 integer))
setm: ((3 integer)) <= 8
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13389 to 8
run: 4248 init-file 11: (((jump)) ((-8 offset)))
run: 4249 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13390 to t
run: 4250 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4251 init-file 12: (((reply)) ((2 file-address)) ((1 list-address)))
m: ((2 file-address))
sizeof: ((2 file-address))
m: ((1 list-address))
sizeof: ((1 list-address))
reply: (((2 file-address)) ((1 list-address))) (((8 file-address-address) (deref)) ((6 list-address)))
reply: 13416 => ((8 file-address-address) (deref))
setm: ((8 file-address-address) (deref)) <= 13416
setm: size of ((8 file-address-address) (deref)) is 1
setm: ((8 file-address-address) (deref)): setting 9632 to 13416
reply: nil => ((6 list-address))
setm: ((6 list-address)) <= nil
setm: size of ((6 list-address)) is 1
setm: ((6 list-address)): setting 5570 to nil
run: 4252 init-board 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: 8 => ((5 integer))
setm: ((5 integer)) <= 8
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 5569 to 8
run: 4253 init-board 13: (((jump)) ((-6 offset)))
run: 4254 init-board 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((7 boolean))
setm: ((7 boolean)) <= t
setm: size of ((7 boolean)) is 1
setm: ((7 boolean)): setting 5571 to t
run: 4255 init-board 9: (((jump-if)) ((7 boolean)) ((4 offset)))
m: ((7 boolean))
sizeof: ((7 boolean))
run: 4256 init-board 14: (((reply)) ((4 board-address)))
m: ((4 board-address))
sizeof: ((4 board-address))
reply: (((4 board-address))) (((4 board-address)))
reply: 9624 => ((4 board-address))
setm: ((4 board-address)) <= 9624
setm: size of ((4 board-address)) is 1
setm: ((4 board-address)): setting 1005 to 9624
run: 4257 main 5: (((5 move-address)) <- ((new)) ((move literal)))
sizeof: ((_ move))
sizeof: ((_ integer-integer-pair))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer-integer-pair))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13921 => ((5 move-address))
setm: ((5 move-address)) <= 13921
setm: size of ((5 move-address)) is 1
setm: ((5 move-address)): setting 1006 to 13921
run: 4258 main 6: (((6 integer-integer-pair-address)) <- ((get-address)) ((5 move-address) (deref)) ((0 offset)))
run: 13921 => ((6 integer-integer-pair-address))
setm: ((6 integer-integer-pair-address)) <= 13921
setm: size of ((6 integer-integer-pair-address)) is 1
setm: ((6 integer-integer-pair-address)): setting 1007 to 13921
run: 4259 main 7: (((7 integer-address)) <- ((get-address)) ((6 integer-integer-pair-address) (deref)) ((0 offset)))
run: 13921 => ((7 integer-address))
setm: ((7 integer-address)) <= 13921
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1008 to 13921
run: 4260 main 8: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 0
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 13921 to 0
run: 4261 main 9: (((7 integer-address)) <- ((get-address)) ((6 integer-integer-pair-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 13922 => ((7 integer-address))
setm: ((7 integer-address)) <= 13922
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1008 to 13922
run: 4262 main 10: (((7 integer-address) (deref)) <- ((copy)) ((1 literal)))
run: 1 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 1
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 13922 to 1
run: 4263 main 11: (((8 integer-integer-pair-address)) <- ((get-address)) ((5 move-address) (deref)) ((1 offset)))
sizeof: ((_ integer-integer-pair))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13923 => ((8 integer-integer-pair-address))
setm: ((8 integer-integer-pair-address)) <= 13923
setm: size of ((8 integer-integer-pair-address)) is 1
setm: ((8 integer-integer-pair-address)): setting 1009 to 13923
run: 4264 main 12: (((7 integer-address)) <- ((get-address)) ((8 integer-integer-pair-address) (deref)) ((0 offset)))
run: 13923 => ((7 integer-address))
setm: ((7 integer-address)) <= 13923
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1008 to 13923
run: 4265 main 13: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 0
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 13923 to 0
run: 4266 main 14: (((7 integer-address)) <- ((get-address)) ((8 integer-integer-pair-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 13924 => ((7 integer-address))
setm: ((7 integer-address)) <= 13924
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1008 to 13924
run: 4267 main 15: (((7 integer-address) (deref)) <- ((copy)) ((3 literal)))
run: 3 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 3
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 13924 to 3
run: 4268 main 16: (((4 board-address)) <- ((make-move)) ((4 board-address)) ((5 move-address)))
m: ((4 board-address))
sizeof: ((4 board-address))
m: ((5 move-address))
sizeof: ((5 move-address))
run: 4269 make-move 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13925 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4270 make-move 1: (((1 board-address)) <- ((next-input)))
arg: nil 0 (9624 13921)
run: 9624 => ((1 board-address))
setm: ((1 board-address)) <= 9624
setm: size of ((1 board-address)) is 1
setm: ((1 board-address)): setting 13927 to 9624
run: 4271 make-move 2: (((2 move-address)) <- ((next-input)))
arg: nil 1 (9624 13921)
run: 13921 => ((2 move-address))
setm: ((2 move-address)) <= 13921
setm: size of ((2 move-address)) is 1
setm: ((2 move-address)): setting 13928 to 13921
run: 4272 make-move 3: (((3 integer-integer-pair)) <- ((get)) ((2 move-address) (deref)) ((0 offset)))
m: ((13921 integer-integer-pair) (raw))
sizeof: ((13921 integer-integer-pair) (raw))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: #(tagged record (0 1 . nil)) => ((3 integer-integer-pair))
setm: ((3 integer-integer-pair)) <= #(tagged record (0 1 . nil))
setm: size of ((3 integer-integer-pair)) is 2
sizeof: ((3 integer-integer-pair))
sizeof: ((_ integer))
sizeof: ((_ integer))
setm: ((3 integer-integer-pair)): setting 13929 to 0
setm: ((3 integer-integer-pair)): setting 13930 to 1
run: 4273 make-move 4: (((5 integer)) <- ((get)) ((3 integer-integer-pair)) ((0 offset)))
m: ((13929 integer) (raw))
sizeof: ((13929 integer) (raw))
run: 0 => ((5 integer))
setm: ((5 integer)) <= 0
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 13931 to 0
run: 4274 make-move 5: (((6 integer)) <- ((get)) ((3 integer-integer-pair)) ((1 offset)))
sizeof: ((_ integer))
m: ((13930 integer) (raw))
sizeof: ((13930 integer) (raw))
run: 1 => ((6 integer))
setm: ((6 integer)) <= 1
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 13932 to 1
run: 4275 make-move 6: (((7 file-address)) <- ((index)) ((1 board-address) (deref)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9625 file-address) (raw))
sizeof: ((9625 file-address) (raw))
run: 9664 => ((7 file-address))
setm: ((7 file-address)) <= 9664
setm: size of ((7 file-address)) is 1
setm: ((7 file-address)): setting 13933 to 9664
run: 4276 make-move 7: (((8 square-address)) <- ((index-address)) ((7 file-address) (deref)) ((6 integer)))
m: ((6 integer))
sizeof: ((6 integer))
array-len: ((9664 file) (raw))
m: ((9664 integer) (raw))
sizeof: ((9664 integer) (raw))
sizeof: ((_ square))
run: 9666 => ((8 square-address))
setm: ((8 square-address)) <= 9666
setm: size of ((8 square-address)) is 1
setm: ((8 square-address)): setting 13934 to 9666
run: 4277 make-move 8: (((3 integer-integer-pair)) <- ((get)) ((2 move-address) (deref)) ((1 offset)))
sizeof: ((_ integer-integer-pair))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13923 integer-integer-pair) (raw))
sizeof: ((13923 integer-integer-pair) (raw))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: #(tagged record (0 3 . nil)) => ((3 integer-integer-pair))
setm: ((3 integer-integer-pair)) <= #(tagged record (0 3 . nil))
setm: size of ((3 integer-integer-pair)) is 2
sizeof: ((3 integer-integer-pair))
sizeof: ((_ integer))
sizeof: ((_ integer))
setm: ((3 integer-integer-pair)): setting 13929 to 0
setm: ((3 integer-integer-pair)): setting 13930 to 3
run: 4278 make-move 9: (((9 integer)) <- ((get)) ((3 integer-integer-pair)) ((0 offset)))
m: ((13929 integer) (raw))
sizeof: ((13929 integer) (raw))
run: 0 => ((9 integer))
setm: ((9 integer)) <= 0
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 13935 to 0
run: 4279 make-move 10: (((10 integer)) <- ((get)) ((3 integer-integer-pair)) ((1 offset)))
sizeof: ((_ integer))
m: ((13930 integer) (raw))
sizeof: ((13930 integer) (raw))
run: 3 => ((10 integer))
setm: ((10 integer)) <= 3
setm: size of ((10 integer)) is 1
setm: ((10 integer)): setting 13936 to 3
run: 4280 make-move 11: (((7 file-address)) <- ((index)) ((1 board-address) (deref)) ((9 integer)))
m: ((9 integer))
sizeof: ((9 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9625 file-address) (raw))
sizeof: ((9625 file-address) (raw))
run: 9664 => ((7 file-address))
setm: ((7 file-address)) <= 9664
setm: size of ((7 file-address)) is 1
setm: ((7 file-address)): setting 13933 to 9664
run: 4281 make-move 12: (((11 square-address)) <- ((index-address)) ((7 file-address) (deref)) ((10 integer)))
m: ((10 integer))
sizeof: ((10 integer))
array-len: ((9664 file) (raw))
m: ((9664 integer) (raw))
sizeof: ((9664 integer) (raw))
sizeof: ((_ square))
run: 9668 => ((11 square-address))
setm: ((11 square-address)) <= 9668
setm: size of ((11 square-address)) is 1
setm: ((11 square-address)): setting 13937 to 9668
run: 4282 make-move 13: (((11 square-address) (deref)) <- ((copy)) ((8 square-address) (deref)))
m: ((8 square-address) (deref))
sizeof: ((8 square-address) (deref))
run: #\P => ((11 square-address) (deref))
setm: ((11 square-address) (deref)) <= #\P
setm: size of ((11 square-address) (deref)) is 1
setm: ((11 square-address) (deref)): setting 9668 to #\P
run: 4283 make-move 14: (((8 square-address) (deref)) <- ((copy)) ((_ literal)))
run: #\_ => ((8 square-address) (deref))
setm: ((8 square-address) (deref)) <= #\_
setm: size of ((8 square-address) (deref)) is 1
setm: ((8 square-address) (deref)): setting 9666 to #\_
run: 4284 make-move 15: (((reply)) ((1 board-address)))
m: ((1 board-address))
sizeof: ((1 board-address))
reply: (((1 board-address))) (((4 board-address)))
reply: 9624 => ((4 board-address))
setm: ((4 board-address)) <= 9624
setm: size of ((4 board-address)) is 1
setm: ((4 board-address)): setting 1005 to 9624
run: 4285 main 17: (((print-board)) ((2 terminal-address)) ((4 board-address)))
m: ((2 terminal-address))
sizeof: ((2 terminal-address))
m: ((4 board-address))
sizeof: ((4 board-address))
run: 4286 print-board 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13956 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4287 print-board 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 9624)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 13958 to 1101
run: 4288 print-board 2: (((2 board-address)) <- ((next-input)))
arg: nil 1 (1101 9624)
run: 9624 => ((2 board-address))
setm: ((2 board-address)) <= 9624
setm: size of ((2 board-address)) is 1
setm: ((2 board-address)): setting 13959 to 9624
run: 4289 print-board 3: (((3 integer)) <- ((copy)) ((7 literal)))
run: 7 => ((3 integer))
setm: ((3 integer)) <= 7
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13960 to 7
run: 4290 print-board 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 4291 print-board 5: (((jump-if)) ((4 boolean)) ((16 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4292 print-board 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 8 => ((5 integer))
setm: ((5 integer)) <= 8
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 13962 to 8
run: 4293 print-board 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((5 integer))
sizeof: ((5 integer))
run: 4294 print-integer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13987 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4295 print-integer 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 8)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 13989 to 1101
run: 4296 print-integer 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1101 8)
run: 8 => ((2 integer))
setm: ((2 integer)) <= 8
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 13990 to 8
run: 4297 print-integer 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
run: 4298 integer-to-decimal-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14018 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4299 integer-to-decimal-string 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (8)
run: 8 => ((1 integer))
setm: ((1 integer)) <= 8
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 14020 to 8
run: 4300 integer-to-decimal-string 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 14021 to nil
run: 4301 integer-to-decimal-string 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 4302 integer-to-decimal-string 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 14023 to nil
run: 4303 integer-to-decimal-string 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 14024 to nil
run: 4304 integer-to-decimal-string 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4305 integer-to-decimal-string 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: 4306 init-buffer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14049 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4307 init-buffer 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
sizeof: ((_ buffer))
sizeof: ((_ integer))
sizeof: ((_ string-address))
run: 14080 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 14080
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 14051 to 14080
run: 4308 init-buffer 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 14080 => ((2 integer-address))
setm: ((2 integer-address)) <= 14080
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 14052 to 14080
run: 4309 init-buffer 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 14080 to 0
run: 4310 init-buffer 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 14081 => ((3 string-address-address))
setm: ((3 string-address-address)) <= 14081
setm: size of ((3 string-address-address)) is 1
setm: ((3 string-address-address)): setting 14053 to 14081
run: 4311 init-buffer 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 14054 to 30
run: 4312 init-buffer 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ byte))
run: 14082 => ((3 string-address-address) (deref))
setm: ((3 string-address-address) (deref)) <= 14082
setm: size of ((3 string-address-address) (deref)) is 1
setm: ((3 string-address-address) (deref)): setting 14081 to 14082
run: 4313 init-buffer 7: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 14080 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 14080
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 14025 to 14080
run: 4314 integer-to-decimal-string 12: (((7 character)) <- ((copy)) ((0 literal)))
run: #\0 => ((7 character))
setm: ((7 character)) <= #\0
setm: size of ((7 character)) is 1
setm: ((7 character)): setting 14026 to #\0
run: 4315 integer-to-decimal-string 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 48 => ((8 integer))
setm: ((8 integer)) <= 48
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 14027 to 48
run: 4316 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 14028 to nil
run: 4317 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 4318 integer-to-decimal-string 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
m: ((1 integer))
sizeof: ((1 integer))
m: ((1 integer))
sizeof: ((1 integer))
run: 0 => ((1 integer))
setm: ((1 integer)) <= 0
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 14020 to 0
run: 8 => ((10 integer))
setm: ((10 integer)) <= 8
setm: size of ((10 integer)) is 1
setm: ((10 integer)): setting 14029 to 8
run: 4319 integer-to-decimal-string 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((10 integer))
sizeof: ((10 integer))
run: 56 => ((11 integer))
setm: ((11 integer)) <= 56
setm: size of ((11 integer)) is 1
setm: ((11 integer)): setting 14030 to 56
run: 4320 integer-to-decimal-string 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
m: ((11 integer))
sizeof: ((11 integer))
run: #\8 => ((12 character))
setm: ((12 character)) <= #\8
setm: size of ((12 character)) is 1
setm: ((12 character)): setting 14031 to #\8
run: 4321 integer-to-decimal-string 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
m: ((6 buffer-address))
sizeof: ((6 buffer-address))
m: ((12 character))
sizeof: ((12 character))
run: 4322 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14113 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4323 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (14080 #\8)
run: 14080 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 14080
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 14115 to 14080
run: 4324 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (14080 #\8)
run: #\8 => ((2 character))
setm: ((2 character)) <= #\8
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14116 to #\8
run: 4325 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 4326 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14144 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4327 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (14080)
run: 14080 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 14080
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 14146 to 14080
run: 4328 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((14080 integer) (raw))
sizeof: ((14080 integer) (raw))
run: 0 => ((2 integer))
setm: ((2 integer)) <= 0
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 14147 to 0
run: 4329 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((14081 string-address) (raw))
sizeof: ((14081 string-address) (raw))
run: 14082 => ((3 string-address))
setm: ((3 string-address)) <= 14082
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 14148 to 14082
run: 4330 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((14082 integer) (raw))
sizeof: ((14082 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 14149 to 30
run: 4331 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 14150 to nil
run: 4332 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 14117 to nil
run: 4333 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 4334 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 14080 => ((4 integer-address))
setm: ((4 integer-address)) <= 14080
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14118 to 14080
run: 4335 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((14081 string-address) (raw))
sizeof: ((14081 string-address) (raw))
run: 14082 => ((5 string-address))
setm: ((5 string-address)) <= 14082
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 14119 to 14082
run: 4336 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((14082 string) (raw))
m: ((14082 integer) (raw))
sizeof: ((14082 integer) (raw))
sizeof: ((_ byte))
run: 14083 => ((6 byte-address))
setm: ((6 byte-address)) <= 14083
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 14120 to 14083
run: 4337 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\8 => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\8
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 14083 to #\8
run: 4338 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 14080 to 1
run: 4339 append 11: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 14080 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 14080
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 14025 to 14080
run: 4340 integer-to-decimal-string 20: (((jump)) ((-7 offset)))
run: 4341 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 14028 to t
run: 4342 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 4343 integer-to-decimal-string 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4344 integer-to-decimal-string 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
m: ((14080 integer) (raw))
sizeof: ((14080 integer) (raw))
run: 1 => ((13 integer))
setm: ((13 integer)) <= 1
setm: size of ((13 integer)) is 1
setm: ((13 integer)): setting 14032 to 1
run: 4345 integer-to-decimal-string 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((14081 string-address) (raw))
sizeof: ((14081 string-address) (raw))
run: 14082 => ((14 string-address))
setm: ((14 string-address)) <= 14082
setm: size of ((14 string-address)) is 1
setm: ((14 string-address)): setting 14033 to 14082
run: 4346 integer-to-decimal-string 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
m: ((13 integer))
sizeof: ((13 integer))
sizeof: ((_ byte))
run: 14175 => ((15 string-address))
setm: ((15 string-address)) <= 14175
setm: size of ((15 string-address)) is 1
setm: ((15 string-address)): setting 14034 to 14175
run: 4347 integer-to-decimal-string 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
m: ((13 integer))
sizeof: ((13 integer))
run: 0 => ((16 integer))
setm: ((16 integer)) <= 0
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 14035 to 0
run: 4348 integer-to-decimal-string 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((17 integer))
setm: ((17 integer)) <= 0
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 14036 to 0
run: 4349 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 14028 to nil
run: 4350 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 4351 integer-to-decimal-string 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
m: ((16 integer))
sizeof: ((16 integer))
array-len: ((14082 string) (raw))
m: ((14082 integer) (raw))
sizeof: ((14082 integer) (raw))
sizeof: ((_ byte))
m: ((14083 byte) (raw))
sizeof: ((14083 byte) (raw))
run: #\8 => ((18 byte))
setm: ((18 byte)) <= #\8
setm: size of ((18 byte)) is 1
setm: ((18 byte)): setting 14037 to #\8
run: 4352 integer-to-decimal-string 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
m: ((17 integer))
sizeof: ((17 integer))
array-len: ((14175 string) (raw))
m: ((14175 integer) (raw))
sizeof: ((14175 integer) (raw))
sizeof: ((_ byte))
run: 14176 => ((19 byte-address))
setm: ((19 byte-address)) <= 14176
setm: size of ((19 byte-address)) is 1
setm: ((19 byte-address)): setting 14038 to 14176
run: 4353 integer-to-decimal-string 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
m: ((18 byte))
sizeof: ((18 byte))
run: #\8 => ((19 byte-address) (deref))
setm: ((19 byte-address) (deref)) <= #\8
setm: size of ((19 byte-address) (deref)) is 1
setm: ((19 byte-address) (deref)): setting 14176 to #\8
run: 4354 integer-to-decimal-string 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: -1 => ((16 integer))
setm: ((16 integer)) <= -1
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 14035 to -1
run: 4355 integer-to-decimal-string 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
m: ((17 integer))
sizeof: ((17 integer))
run: 1 => ((17 integer))
setm: ((17 integer)) <= 1
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 14036 to 1
run: 4356 integer-to-decimal-string 35: (((jump)) ((-8 offset)))
run: 4357 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 14028 to t
run: 4358 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 4359 integer-to-decimal-string 36: (((reply)) ((15 string-address)))
m: ((15 string-address))
sizeof: ((15 string-address))
reply: (((15 string-address))) (((3 string-address)))
reply: 14175 => ((3 string-address))
setm: ((3 string-address)) <= 14175
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 13991 to 14175
run: 4360 print-integer 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((3 string-address))
sizeof: ((3 string-address))
run: 4361 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14177 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4362 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 14175)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14179 to 1101
run: 4363 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 14175)
run: 14175 => ((2 string-address))
setm: ((2 string-address)) <= 14175
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 14180 to 14175
run: 4364 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((14175 integer) (raw))
sizeof: ((14175 integer) (raw))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 14181 to 1
run: 4365 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 14182 to 0
run: 4366 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 14183 to nil
run: 4367 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4368 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((14175 string) (raw))
m: ((14175 integer) (raw))
sizeof: ((14175 integer) (raw))
sizeof: ((_ byte))
m: ((14176 byte) (raw))
sizeof: ((14176 byte) (raw))
run: #\8 => ((6 character))
setm: ((6 character)) <= #\8
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 14184 to #\8
run: 4369 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 4370 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14208 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4371 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\8)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14210 to 1101
run: 4372 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\8)
run: #\8 => ((2 character))
setm: ((2 character)) <= #\8
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14211 to #\8
run: 4373 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4374 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14212 to 1103
run: 4375 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14213 to 1104
run: 4376 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14214 to 20
run: 4377 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14215 to 0
run: 4378 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14216 to 0
run: 4379 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14217 to 1106
run: 4380 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1107 => ((9 byte-address))
setm: ((9 byte-address)) <= 1107
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14218 to 1107
run: 4381 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\8 => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\8
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1107 to #\8
run: 4382 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 1
run: 4383 print-character 13: (((reply)))
reply: nil nil
run: 4384 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 14182 to 1
run: 4385 print-string 10: (((jump)) ((-6 offset)))
run: 4386 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 14183 to t
run: 4387 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4388 print-board 8: (((6 string-address)) <- ((new))  | )
run: 14239 => ((6 string-address))
setm: ((6 string-address)) <= 14239
setm: size of ((6 string-address)) is 1
setm: ((6 string-address)): setting 13963 to 14239
run: 4389 print-board 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 string-address))
sizeof: ((6 string-address))
run: 4390 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14243 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4391 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 14239)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14245 to 1101
run: 4392 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 14239)
run: 14239 => ((2 string-address))
setm: ((2 string-address)) <= 14239
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 14246 to 14239
run: 4393 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((14239 integer) (raw))
sizeof: ((14239 integer) (raw))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 14247 to 3
run: 4394 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 14248 to 0
run: 4395 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 14249 to nil
run: 4396 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4397 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((14239 string) (raw))
m: ((14239 integer) (raw))
sizeof: ((14239 integer) (raw))
sizeof: ((_ byte))
m: ((14240 byte) (raw))
sizeof: ((14240 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 14250 to #\space
run: 4398 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 4399 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14274 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4400 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14276 to 1101
run: 4401 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14277 to #\space
run: 4402 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4403 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14278 to 1103
run: 4404 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14279 to 1104
run: 4405 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14280 to 20
run: 4406 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14281 to 0
run: 4407 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14282 to 1
run: 4408 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14283 to 1106
run: 4409 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1108 => ((9 byte-address))
setm: ((9 byte-address)) <= 1108
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14284 to 1108
run: 4410 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1108 to #\space
run: 4411 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 2
run: 4412 print-character 13: (((reply)))
reply: nil nil
run: 4413 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 14248 to 1
run: 4414 print-string 10: (((jump)) ((-6 offset)))
run: 4415 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 14249 to nil
run: 4416 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4417 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((14239 string) (raw))
m: ((14239 integer) (raw))
sizeof: ((14239 integer) (raw))
sizeof: ((_ byte))
m: ((14241 byte) (raw))
sizeof: ((14241 byte) (raw))
run: #\| => ((6 character))
setm: ((6 character)) <= #\|
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 14250 to #\|
run: 4418 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 4419 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14305 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4420 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\|)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14307 to 1101
run: 4421 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\|)
run: #\| => ((2 character))
setm: ((2 character)) <= #\|
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14308 to #\|
run: 4422 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4423 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14309 to 1103
run: 4424 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14310 to 1104
run: 4425 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14311 to 20
run: 4426 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14312 to 0
run: 4427 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((7 integer))
setm: ((7 integer)) <= 2
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14313 to 2
run: 4428 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14314 to 1106
run: 4429 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1109 => ((9 byte-address))
setm: ((9 byte-address)) <= 1109
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14315 to 1109
run: 4430 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\| => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\|
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1109 to #\|
run: 4431 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 3
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 3
run: 4432 print-character 13: (((reply)))
reply: nil nil
run: 4433 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 14248 to 2
run: 4434 print-string 10: (((jump)) ((-6 offset)))
run: 4435 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 14249 to nil
run: 4436 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4437 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((14239 string) (raw))
m: ((14239 integer) (raw))
sizeof: ((14239 integer) (raw))
sizeof: ((_ byte))
m: ((14242 byte) (raw))
sizeof: ((14242 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 14250 to #\space
run: 4438 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 4439 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14336 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4440 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14338 to 1101
run: 4441 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14339 to #\space
run: 4442 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4443 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14340 to 1103
run: 4444 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14341 to 1104
run: 4445 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14342 to 20
run: 4446 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14343 to 0
run: 4447 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((7 integer))
setm: ((7 integer)) <= 3
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14344 to 3
run: 4448 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14345 to 1106
run: 4449 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1110 => ((9 byte-address))
setm: ((9 byte-address)) <= 1110
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14346 to 1110
run: 4450 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1110 to #\space
run: 4451 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 4
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 4
run: 4452 print-character 13: (((reply)))
reply: nil nil
run: 4453 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 14248 to 3
run: 4454 print-string 10: (((jump)) ((-6 offset)))
run: 4455 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 14249 to t
run: 4456 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4457 print-board 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 0
run: 4458 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 4459 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4460 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9625 file-address) (raw))
sizeof: ((9625 file-address) (raw))
run: 9664 => ((8 file-address))
setm: ((8 file-address)) <= 9664
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 9664
run: 4461 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9664 file) (raw))
m: ((9664 integer) (raw))
sizeof: ((9664 integer) (raw))
sizeof: ((_ square))
m: ((9672 square) (raw))
sizeof: ((9672 square) (raw))
run: #\r => ((6 square))
setm: ((6 square)) <= #\r
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\r
run: 4462 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 4463 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14367 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4464 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\r)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14369 to 1101
run: 4465 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\r)
run: #\r => ((2 character))
setm: ((2 character)) <= #\r
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14370 to #\r
run: 4466 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4467 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14371 to 1103
run: 4468 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14372 to 1104
run: 4469 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14373 to 20
run: 4470 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14374 to 0
run: 4471 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((7 integer))
setm: ((7 integer)) <= 4
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14375 to 4
run: 4472 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14376 to 1106
run: 4473 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1111 => ((9 byte-address))
setm: ((9 byte-address)) <= 1111
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14377 to 1111
run: 4474 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\r => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\r
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1111 to #\r
run: 4475 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 5 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 5
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 5
run: 4476 print-character 13: (((reply)))
reply: nil nil
run: 4477 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4478 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14398 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4479 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14400 to 1101
run: 4480 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14401 to #\space
run: 4481 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4482 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14402 to 1103
run: 4483 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14403 to 1104
run: 4484 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14404 to 20
run: 4485 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14405 to 0
run: 4486 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 5 => ((7 integer))
setm: ((7 integer)) <= 5
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14406 to 5
run: 4487 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14407 to 1106
run: 4488 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1112 => ((9 byte-address))
setm: ((9 byte-address)) <= 1112
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14408 to 1112
run: 4489 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1112 to #\space
run: 4490 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 6 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 6
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 6
run: 4491 print-character 13: (((reply)))
reply: nil nil
run: 4492 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 1
run: 4493 print-board 18: (((jump)) ((-8 offset)))
run: 4494 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 4495 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4496 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9626 file-address) (raw))
sizeof: ((9626 file-address) (raw))
run: 10200 => ((8 file-address))
setm: ((8 file-address)) <= 10200
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 10200
run: 4497 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10200 file) (raw))
m: ((10200 integer) (raw))
sizeof: ((10200 integer) (raw))
sizeof: ((_ square))
m: ((10208 square) (raw))
sizeof: ((10208 square) (raw))
run: #\n => ((6 square))
setm: ((6 square)) <= #\n
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\n
run: 4498 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 4499 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14429 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4500 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\n)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14431 to 1101
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: 4501 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\n)
run: #\n => ((2 character))
setm: ((2 character)) <= #\n
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14432 to #\n
run: 4502 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4503 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14433 to 1103
run: 4504 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14434 to 1104
run: 4505 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14435 to 20
run: 4506 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14436 to 0
run: 4507 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 6 => ((7 integer))
setm: ((7 integer)) <= 6
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14437 to 6
run: 4508 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14438 to 1106
run: 4509 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1113 => ((9 byte-address))
setm: ((9 byte-address)) <= 1113
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14439 to 1113
run: 4510 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\n => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\n
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1113 to #\n
run: 4511 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 7 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 7
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 7
run: 4512 print-character 13: (((reply)))
reply: nil nil
run: 4513 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4514 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14460 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4515 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14462 to 1101
run: 4516 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14463 to #\space
run: 4517 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4518 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14464 to 1103
run: 4519 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14465 to 1104
run: 4520 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14466 to 20
run: 4521 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14467 to 0
run: 4522 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 7 => ((7 integer))
setm: ((7 integer)) <= 7
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14468 to 7
run: 4523 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14469 to 1106
run: 4524 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1114 => ((9 byte-address))
setm: ((9 byte-address)) <= 1114
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14470 to 1114
run: 4525 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1114 to #\space
run: 4526 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 8 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 8
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 8
run: 4527 print-character 13: (((reply)))
reply: nil nil
run: 4528 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 2 => ((7 integer))
setm: ((7 integer)) <= 2
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 2
run: 4529 print-board 18: (((jump)) ((-8 offset)))
run: 4530 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 4531 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4532 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9627 file-address) (raw))
sizeof: ((9627 file-address) (raw))
run: 10736 => ((8 file-address))
setm: ((8 file-address)) <= 10736
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 10736
run: 4533 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10736 file) (raw))
m: ((10736 integer) (raw))
sizeof: ((10736 integer) (raw))
sizeof: ((_ square))
m: ((10744 square) (raw))
sizeof: ((10744 square) (raw))
run: #\b => ((6 square))
setm: ((6 square)) <= #\b
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\b
run: 4534 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 4535 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14491 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4536 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\b)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14493 to 1101
run: 4537 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\b)
run: #\b => ((2 character))
setm: ((2 character)) <= #\b
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14494 to #\b
run: 4538 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4539 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14495 to 1103
run: 4540 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14496 to 1104
run: 4541 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14497 to 20
run: 4542 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14498 to 0
run: 4543 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 8 => ((7 integer))
setm: ((7 integer)) <= 8
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14499 to 8
run: 4544 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14500 to 1106
run: 4545 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1115 => ((9 byte-address))
setm: ((9 byte-address)) <= 1115
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14501 to 1115
run: 4546 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\b => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\b
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1115 to #\b
run: 4547 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 9 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 9
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 9
run: 4548 print-character 13: (((reply)))
reply: nil nil
run: 4549 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4550 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14522 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4551 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14524 to 1101
run: 4552 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14525 to #\space
run: 4553 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4554 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14526 to 1103
run: 4555 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14527 to 1104
run: 4556 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14528 to 20
run: 4557 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14529 to 0
run: 4558 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 9 => ((7 integer))
setm: ((7 integer)) <= 9
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14530 to 9
run: 4559 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14531 to 1106
run: 4560 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1116 => ((9 byte-address))
setm: ((9 byte-address)) <= 1116
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14532 to 1116
run: 4561 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1116 to #\space
run: 4562 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 10 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 10
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 10
run: 4563 print-character 13: (((reply)))
reply: nil nil
run: 4564 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 3 => ((7 integer))
setm: ((7 integer)) <= 3
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 3
run: 4565 print-board 18: (((jump)) ((-8 offset)))
run: 4566 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 4567 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4568 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9628 file-address) (raw))
sizeof: ((9628 file-address) (raw))
run: 11272 => ((8 file-address))
setm: ((8 file-address)) <= 11272
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 11272
run: 4569 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11272 file) (raw))
m: ((11272 integer) (raw))
sizeof: ((11272 integer) (raw))
sizeof: ((_ square))
m: ((11280 square) (raw))
sizeof: ((11280 square) (raw))
run: #\q => ((6 square))
setm: ((6 square)) <= #\q
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\q
run: 4570 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 4571 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14553 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4572 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\q)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14555 to 1101
run: 4573 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\q)
run: #\q => ((2 character))
setm: ((2 character)) <= #\q
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14556 to #\q
run: 4574 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4575 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14557 to 1103
run: 4576 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14558 to 1104
run: 4577 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14559 to 20
run: 4578 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14560 to 0
run: 4579 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 10 => ((7 integer))
setm: ((7 integer)) <= 10
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14561 to 10
run: 4580 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14562 to 1106
run: 4581 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1117 => ((9 byte-address))
setm: ((9 byte-address)) <= 1117
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14563 to 1117
run: 4582 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\q => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\q
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1117 to #\q
run: 4583 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 11 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 11
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 11
run: 4584 print-character 13: (((reply)))
reply: nil nil
run: 4585 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4586 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14584 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4587 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14586 to 1101
run: 4588 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14587 to #\space
run: 4589 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4590 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14588 to 1103
run: 4591 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14589 to 1104
run: 4592 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14590 to 20
run: 4593 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14591 to 0
run: 4594 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 11 => ((7 integer))
setm: ((7 integer)) <= 11
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14592 to 11
run: 4595 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14593 to 1106
run: 4596 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1118 => ((9 byte-address))
setm: ((9 byte-address)) <= 1118
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14594 to 1118
run: 4597 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1118 to #\space
run: 4598 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 12 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 12
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 12
run: 4599 print-character 13: (((reply)))
reply: nil nil
run: 4600 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 4 => ((7 integer))
setm: ((7 integer)) <= 4
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 4
run: 4601 print-board 18: (((jump)) ((-8 offset)))
run: 4602 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 4603 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4604 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9629 file-address) (raw))
sizeof: ((9629 file-address) (raw))
run: 11808 => ((8 file-address))
setm: ((8 file-address)) <= 11808
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 11808
run: 4605 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11808 file) (raw))
m: ((11808 integer) (raw))
sizeof: ((11808 integer) (raw))
sizeof: ((_ square))
m: ((11816 square) (raw))
sizeof: ((11816 square) (raw))
run: #\k => ((6 square))
setm: ((6 square)) <= #\k
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\k
run: 4606 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 4607 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14615 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4608 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\k)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14617 to 1101
run: 4609 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\k)
run: #\k => ((2 character))
setm: ((2 character)) <= #\k
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14618 to #\k
run: 4610 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4611 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14619 to 1103
run: 4612 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14620 to 1104
run: 4613 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14621 to 20
run: 4614 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14622 to 0
run: 4615 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 12 => ((7 integer))
setm: ((7 integer)) <= 12
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14623 to 12
run: 4616 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14624 to 1106
run: 4617 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1119 => ((9 byte-address))
setm: ((9 byte-address)) <= 1119
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14625 to 1119
run: 4618 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\k => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\k
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1119 to #\k
run: 4619 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 13 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 13
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 13
run: 4620 print-character 13: (((reply)))
reply: nil nil
run: 4621 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4622 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14646 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4623 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14648 to 1101
run: 4624 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14649 to #\space
run: 4625 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4626 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14650 to 1103
run: 4627 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14651 to 1104
run: 4628 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14652 to 20
run: 4629 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14653 to 0
run: 4630 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 13 => ((7 integer))
setm: ((7 integer)) <= 13
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14654 to 13
run: 4631 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14655 to 1106
run: 4632 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1120 => ((9 byte-address))
setm: ((9 byte-address)) <= 1120
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14656 to 1120
run: 4633 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1120 to #\space
run: 4634 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 14 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 14
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 14
run: 4635 print-character 13: (((reply)))
reply: nil nil
run: 4636 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 5 => ((7 integer))
setm: ((7 integer)) <= 5
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 5
run: 4637 print-board 18: (((jump)) ((-8 offset)))
run: 4638 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 4639 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4640 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9630 file-address) (raw))
sizeof: ((9630 file-address) (raw))
run: 12344 => ((8 file-address))
setm: ((8 file-address)) <= 12344
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 12344
run: 4641 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12344 file) (raw))
m: ((12344 integer) (raw))
sizeof: ((12344 integer) (raw))
sizeof: ((_ square))
m: ((12352 square) (raw))
sizeof: ((12352 square) (raw))
run: #\b => ((6 square))
setm: ((6 square)) <= #\b
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\b
run: 4642 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 4643 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14677 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4644 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\b)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14679 to 1101
run: 4645 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\b)
run: #\b => ((2 character))
setm: ((2 character)) <= #\b
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14680 to #\b
run: 4646 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4647 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14681 to 1103
run: 4648 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14682 to 1104
run: 4649 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14683 to 20
run: 4650 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14684 to 0
run: 4651 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 14 => ((7 integer))
setm: ((7 integer)) <= 14
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14685 to 14
run: 4652 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14686 to 1106
run: 4653 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1121 => ((9 byte-address))
setm: ((9 byte-address)) <= 1121
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14687 to 1121
run: 4654 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\b => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\b
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1121 to #\b
run: 4655 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 15 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 15
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 15
run: 4656 print-character 13: (((reply)))
reply: nil nil
run: 4657 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4658 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14708 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4659 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14710 to 1101
run: 4660 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14711 to #\space
run: 4661 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4662 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14712 to 1103
run: 4663 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14713 to 1104
run: 4664 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14714 to 20
run: 4665 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14715 to 0
run: 4666 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 15 => ((7 integer))
setm: ((7 integer)) <= 15
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14716 to 15
run: 4667 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14717 to 1106
run: 4668 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1122 => ((9 byte-address))
setm: ((9 byte-address)) <= 1122
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14718 to 1122
run: 4669 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1122 to #\space
run: 4670 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 16 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 16
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 16
run: 4671 print-character 13: (((reply)))
reply: nil nil
run: 4672 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 6 => ((7 integer))
setm: ((7 integer)) <= 6
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 6
run: 4673 print-board 18: (((jump)) ((-8 offset)))
run: 4674 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 4675 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4676 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9631 file-address) (raw))
sizeof: ((9631 file-address) (raw))
run: 12880 => ((8 file-address))
setm: ((8 file-address)) <= 12880
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 12880
run: 4677 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12880 file) (raw))
m: ((12880 integer) (raw))
sizeof: ((12880 integer) (raw))
sizeof: ((_ square))
m: ((12888 square) (raw))
sizeof: ((12888 square) (raw))
run: #\n => ((6 square))
setm: ((6 square)) <= #\n
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\n
run: 4678 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 4679 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14739 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4680 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\n)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14741 to 1101
run: 4681 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\n)
run: #\n => ((2 character))
setm: ((2 character)) <= #\n
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14742 to #\n
run: 4682 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4683 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14743 to 1103
run: 4684 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14744 to 1104
run: 4685 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14745 to 20
run: 4686 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14746 to 0
run: 4687 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 16 => ((7 integer))
setm: ((7 integer)) <= 16
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14747 to 16
run: 4688 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14748 to 1106
run: 4689 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1123 => ((9 byte-address))
setm: ((9 byte-address)) <= 1123
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14749 to 1123
run: 4690 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\n => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\n
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1123 to #\n
run: 4691 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 17 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 17
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 17
run: 4692 print-character 13: (((reply)))
reply: nil nil
run: 4693 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4694 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14770 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4695 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14772 to 1101
run: 4696 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14773 to #\space
run: 4697 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4698 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14774 to 1103
run: 4699 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14775 to 1104
run: 4700 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14776 to 20
run: 4701 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14777 to 0
run: 4702 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 17 => ((7 integer))
setm: ((7 integer)) <= 17
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14778 to 17
run: 4703 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14779 to 1106
run: 4704 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1124 => ((9 byte-address))
setm: ((9 byte-address)) <= 1124
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14780 to 1124
run: 4705 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1124 to #\space
run: 4706 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 18 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 18
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 18
run: 4707 print-character 13: (((reply)))
reply: nil nil
run: 4708 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 7 => ((7 integer))
setm: ((7 integer)) <= 7
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 7
run: 4709 print-board 18: (((jump)) ((-8 offset)))
run: 4710 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 4711 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4712 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9632 file-address) (raw))
sizeof: ((9632 file-address) (raw))
run: 13416 => ((8 file-address))
setm: ((8 file-address)) <= 13416
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 13416
run: 4713 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13416 file) (raw))
m: ((13416 integer) (raw))
sizeof: ((13416 integer) (raw))
sizeof: ((_ square))
m: ((13424 square) (raw))
sizeof: ((13424 square) (raw))
run: #\r => ((6 square))
setm: ((6 square)) <= #\r
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\r
run: 4714 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 4715 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14801 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4716 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\r)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14803 to 1101
run: 4717 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\r)
run: #\r => ((2 character))
setm: ((2 character)) <= #\r
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14804 to #\r
run: 4718 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4719 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14805 to 1103
run: 4720 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14806 to 1104
run: 4721 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14807 to 20
run: 4722 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14808 to 0
run: 4723 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 18 => ((7 integer))
setm: ((7 integer)) <= 18
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14809 to 18
run: 4724 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14810 to 1106
run: 4725 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1125 => ((9 byte-address))
setm: ((9 byte-address)) <= 1125
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14811 to 1125
run: 4726 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\r => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\r
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1125 to #\r
run: 4727 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 19 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 19
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 19
run: 4728 print-character 13: (((reply)))
reply: nil nil
run: 4729 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4730 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14832 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4731 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14834 to 1101
run: 4732 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14835 to #\space
run: 4733 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4734 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14836 to 1103
run: 4735 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14837 to 1104
run: 4736 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14838 to 20
run: 4737 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14839 to 0
run: 4738 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 19 => ((7 integer))
setm: ((7 integer)) <= 19
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14840 to 19
run: 4739 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14841 to 1106
run: 4740 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1126 => ((9 byte-address))
setm: ((9 byte-address)) <= 1126
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14842 to 1126
run: 4741 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1126 to #\space
run: 4742 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 20 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 20
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 20
run: 4743 print-character 13: (((reply)))
reply: nil nil
run: 4744 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 8 => ((7 integer))
setm: ((7 integer)) <= 8
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 8
run: 4745 print-board 18: (((jump)) ((-8 offset)))
run: 4746 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to t
run: 4747 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4748 print-board 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 6 => ((3 integer))
setm: ((3 integer)) <= 6
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13960 to 6
run: 4749 print-board 20: (((cursor-to-next-line)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4750 cursor-to-next-line 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14863 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4751 cursor-to-next-line 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14865 to 1101
run: 4752 cursor-to-next-line 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4753 cursor-to-next-line 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((2 integer-address))
setm: ((2 integer-address)) <= 1103
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 14866 to 1103
run: 4754 cursor-to-next-line 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 1 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 1
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1103 to 1
run: 4755 cursor-to-next-line 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((3 integer-address))
setm: ((3 integer-address)) <= 1104
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14867 to 1104
run: 4756 cursor-to-next-line 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 1104 to 0
run: 4757 cursor-to-next-line 7: (((reply)))
reply: nil nil
run: 4758 print-board 21: (((jump)) ((-18 offset)))
run: 4759 print-board 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 4760 print-board 5: (((jump-if)) ((4 boolean)) ((16 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4761 print-board 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 7 => ((5 integer))
setm: ((5 integer)) <= 7
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 13962 to 7
run: 4762 print-board 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((5 integer))
sizeof: ((5 integer))
run: 4763 print-integer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14894 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4764 print-integer 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 7)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14896 to 1101
run: 4765 print-integer 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1101 7)
run: 7 => ((2 integer))
setm: ((2 integer)) <= 7
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 14897 to 7
run: 4766 print-integer 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
run: 4767 integer-to-decimal-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14925 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4768 integer-to-decimal-string 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (7)
run: 7 => ((1 integer))
setm: ((1 integer)) <= 7
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 14927 to 7
run: 4769 integer-to-decimal-string 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 14928 to nil
run: 4770 integer-to-decimal-string 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 4771 integer-to-decimal-string 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 14930 to nil
run: 4772 integer-to-decimal-string 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 14931 to nil
run: 4773 integer-to-decimal-string 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4774 integer-to-decimal-string 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: 4775 init-buffer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14956 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4776 init-buffer 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
sizeof: ((_ buffer))
sizeof: ((_ integer))
sizeof: ((_ string-address))
run: 14987 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 14987
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 14958 to 14987
run: 4777 init-buffer 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 14987 => ((2 integer-address))
setm: ((2 integer-address)) <= 14987
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 14959 to 14987
run: 4778 init-buffer 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 14987 to 0
run: 4779 init-buffer 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 14988 => ((3 string-address-address))
setm: ((3 string-address-address)) <= 14988
setm: size of ((3 string-address-address)) is 1
setm: ((3 string-address-address)): setting 14960 to 14988
run: 4780 init-buffer 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 14961 to 30
run: 4781 init-buffer 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ byte))
run: 14989 => ((3 string-address-address) (deref))
setm: ((3 string-address-address) (deref)) <= 14989
setm: size of ((3 string-address-address) (deref)) is 1
setm: ((3 string-address-address) (deref)): setting 14988 to 14989
run: 4782 init-buffer 7: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 14987 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 14987
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 14932 to 14987
run: 4783 integer-to-decimal-string 12: (((7 character)) <- ((copy)) ((0 literal)))
run: #\0 => ((7 character))
setm: ((7 character)) <= #\0
setm: size of ((7 character)) is 1
setm: ((7 character)): setting 14933 to #\0
run: 4784 integer-to-decimal-string 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 48 => ((8 integer))
setm: ((8 integer)) <= 48
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 14934 to 48
run: 4785 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 14935 to nil
run: 4786 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 4787 integer-to-decimal-string 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
m: ((1 integer))
sizeof: ((1 integer))
m: ((1 integer))
sizeof: ((1 integer))
run: 0 => ((1 integer))
setm: ((1 integer)) <= 0
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 14927 to 0
run: 7 => ((10 integer))
setm: ((10 integer)) <= 7
setm: size of ((10 integer)) is 1
setm: ((10 integer)): setting 14936 to 7
run: 4788 integer-to-decimal-string 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((10 integer))
sizeof: ((10 integer))
run: 55 => ((11 integer))
setm: ((11 integer)) <= 55
setm: size of ((11 integer)) is 1
setm: ((11 integer)): setting 14937 to 55
run: 4789 integer-to-decimal-string 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
m: ((11 integer))
sizeof: ((11 integer))
run: #\7 => ((12 character))
setm: ((12 character)) <= #\7
setm: size of ((12 character)) is 1
setm: ((12 character)): setting 14938 to #\7
run: 4790 integer-to-decimal-string 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
m: ((6 buffer-address))
sizeof: ((6 buffer-address))
m: ((12 character))
sizeof: ((12 character))
run: 4791 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15020 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4792 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (14987 #\7)
run: 14987 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 14987
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 15022 to 14987
run: 4793 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (14987 #\7)
run: #\7 => ((2 character))
setm: ((2 character)) <= #\7
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15023 to #\7
run: 4794 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 4795 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15051 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4796 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (14987)
run: 14987 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 14987
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 15053 to 14987
run: 4797 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((14987 integer) (raw))
sizeof: ((14987 integer) (raw))
run: 0 => ((2 integer))
setm: ((2 integer)) <= 0
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 15054 to 0
run: 4798 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((14988 string-address) (raw))
sizeof: ((14988 string-address) (raw))
run: 14989 => ((3 string-address))
setm: ((3 string-address)) <= 14989
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 15055 to 14989
run: 4799 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((14989 integer) (raw))
sizeof: ((14989 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 15056 to 30
run: 4800 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 15057 to nil
run: 4801 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 15024 to nil
run: 4802 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 4803 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 14987 => ((4 integer-address))
setm: ((4 integer-address)) <= 14987
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15025 to 14987
run: 4804 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((14988 string-address) (raw))
sizeof: ((14988 string-address) (raw))
run: 14989 => ((5 string-address))
setm: ((5 string-address)) <= 14989
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 15026 to 14989
run: 4805 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((14989 string) (raw))
m: ((14989 integer) (raw))
sizeof: ((14989 integer) (raw))
sizeof: ((_ byte))
run: 14990 => ((6 byte-address))
setm: ((6 byte-address)) <= 14990
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 15027 to 14990
run: 4806 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\7 => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\7
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 14990 to #\7
run: 4807 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 14987 to 1
run: 4808 append 11: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 14987 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 14987
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 14932 to 14987
run: 4809 integer-to-decimal-string 20: (((jump)) ((-7 offset)))
run: 4810 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 14935 to t
run: 4811 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 4812 integer-to-decimal-string 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4813 integer-to-decimal-string 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
m: ((14987 integer) (raw))
sizeof: ((14987 integer) (raw))
run: 1 => ((13 integer))
setm: ((13 integer)) <= 1
setm: size of ((13 integer)) is 1
setm: ((13 integer)): setting 14939 to 1
run: 4814 integer-to-decimal-string 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((14988 string-address) (raw))
sizeof: ((14988 string-address) (raw))
run: 14989 => ((14 string-address))
setm: ((14 string-address)) <= 14989
setm: size of ((14 string-address)) is 1
setm: ((14 string-address)): setting 14940 to 14989
run: 4815 integer-to-decimal-string 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
m: ((13 integer))
sizeof: ((13 integer))
sizeof: ((_ byte))
run: 15082 => ((15 string-address))
setm: ((15 string-address)) <= 15082
setm: size of ((15 string-address)) is 1
setm: ((15 string-address)): setting 14941 to 15082
run: 4816 integer-to-decimal-string 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
m: ((13 integer))
sizeof: ((13 integer))
run: 0 => ((16 integer))
setm: ((16 integer)) <= 0
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 14942 to 0
run: 4817 integer-to-decimal-string 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((17 integer))
setm: ((17 integer)) <= 0
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 14943 to 0
run: 4818 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 14935 to nil
run: 4819 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 4820 integer-to-decimal-string 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
m: ((16 integer))
sizeof: ((16 integer))
array-len: ((14989 string) (raw))
m: ((14989 integer) (raw))
sizeof: ((14989 integer) (raw))
sizeof: ((_ byte))
m: ((14990 byte) (raw))
sizeof: ((14990 byte) (raw))
run: #\7 => ((18 byte))
setm: ((18 byte)) <= #\7
setm: size of ((18 byte)) is 1
setm: ((18 byte)): setting 14944 to #\7
run: 4821 integer-to-decimal-string 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
m: ((17 integer))
sizeof: ((17 integer))
array-len: ((15082 string) (raw))
m: ((15082 integer) (raw))
sizeof: ((15082 integer) (raw))
sizeof: ((_ byte))
run: 15083 => ((19 byte-address))
setm: ((19 byte-address)) <= 15083
setm: size of ((19 byte-address)) is 1
setm: ((19 byte-address)): setting 14945 to 15083
run: 4822 integer-to-decimal-string 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
m: ((18 byte))
sizeof: ((18 byte))
run: #\7 => ((19 byte-address) (deref))
setm: ((19 byte-address) (deref)) <= #\7
setm: size of ((19 byte-address) (deref)) is 1
setm: ((19 byte-address) (deref)): setting 15083 to #\7
run: 4823 integer-to-decimal-string 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: -1 => ((16 integer))
setm: ((16 integer)) <= -1
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 14942 to -1
run: 4824 integer-to-decimal-string 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
m: ((17 integer))
sizeof: ((17 integer))
run: 1 => ((17 integer))
setm: ((17 integer)) <= 1
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 14943 to 1
run: 4825 integer-to-decimal-string 35: (((jump)) ((-8 offset)))
run: 4826 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 14935 to t
run: 4827 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 4828 integer-to-decimal-string 36: (((reply)) ((15 string-address)))
m: ((15 string-address))
sizeof: ((15 string-address))
reply: (((15 string-address))) (((3 string-address)))
reply: 15082 => ((3 string-address))
setm: ((3 string-address)) <= 15082
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 14898 to 15082
run: 4829 print-integer 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((3 string-address))
sizeof: ((3 string-address))
run: 4830 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15084 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4831 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 15082)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15086 to 1101
run: 4832 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 15082)
run: 15082 => ((2 string-address))
setm: ((2 string-address)) <= 15082
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 15087 to 15082
run: 4833 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((15082 integer) (raw))
sizeof: ((15082 integer) (raw))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 15088 to 1
run: 4834 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 15089 to 0
run: 4835 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 15090 to nil
run: 4836 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4837 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((15082 string) (raw))
m: ((15082 integer) (raw))
sizeof: ((15082 integer) (raw))
sizeof: ((_ byte))
m: ((15083 byte) (raw))
sizeof: ((15083 byte) (raw))
run: #\7 => ((6 character))
setm: ((6 character)) <= #\7
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 15091 to #\7
run: 4838 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 4839 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15115 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4840 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\7)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15117 to 1101
run: 4841 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\7)
run: #\7 => ((2 character))
setm: ((2 character)) <= #\7
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15118 to #\7
run: 4842 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4843 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15119 to 1103
run: 4844 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15120 to 1104
run: 4845 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15121 to 20
run: 4846 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15122 to 20
run: 4847 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 20 => ((7 integer))
setm: ((7 integer)) <= 20
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15123 to 20
run: 4848 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15124 to 1106
run: 4849 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1127 => ((9 byte-address))
setm: ((9 byte-address)) <= 1127
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15125 to 1127
run: 4850 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\7 => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\7
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1127 to #\7
run: 4851 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 1
run: 4852 print-character 13: (((reply)))
reply: nil nil
run: 4853 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 15089 to 1
run: 4854 print-string 10: (((jump)) ((-6 offset)))
run: 4855 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 15090 to t
run: 4856 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4857 print-board 8: (((6 string-address)) <- ((new))  | )
run: 15146 => ((6 string-address))
setm: ((6 string-address)) <= 15146
setm: size of ((6 string-address)) is 1
setm: ((6 string-address)): setting 13963 to 15146
run: 4858 print-board 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 string-address))
sizeof: ((6 string-address))
run: 4859 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15150 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4860 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 15146)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15152 to 1101
run: 4861 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 15146)
run: 15146 => ((2 string-address))
setm: ((2 string-address)) <= 15146
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 15153 to 15146
run: 4862 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((15146 integer) (raw))
sizeof: ((15146 integer) (raw))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 15154 to 3
run: 4863 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 15155 to 0
run: 4864 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 15156 to nil
run: 4865 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4866 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((15146 string) (raw))
m: ((15146 integer) (raw))
sizeof: ((15146 integer) (raw))
sizeof: ((_ byte))
m: ((15147 byte) (raw))
sizeof: ((15147 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 15157 to #\space
run: 4867 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 4868 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15181 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4869 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15183 to 1101
run: 4870 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15184 to #\space
run: 4871 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4872 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15185 to 1103
run: 4873 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15186 to 1104
run: 4874 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15187 to 20
run: 4875 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15188 to 20
run: 4876 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 21 => ((7 integer))
setm: ((7 integer)) <= 21
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15189 to 21
run: 4877 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15190 to 1106
run: 4878 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1128 => ((9 byte-address))
setm: ((9 byte-address)) <= 1128
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15191 to 1128
run: 4879 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1128 to #\space
run: 4880 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 2
run: 4881 print-character 13: (((reply)))
reply: nil nil
run: 4882 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 15155 to 1
run: 4883 print-string 10: (((jump)) ((-6 offset)))
run: 4884 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 15156 to nil
run: 4885 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4886 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((15146 string) (raw))
m: ((15146 integer) (raw))
sizeof: ((15146 integer) (raw))
sizeof: ((_ byte))
m: ((15148 byte) (raw))
sizeof: ((15148 byte) (raw))
run: #\| => ((6 character))
setm: ((6 character)) <= #\|
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 15157 to #\|
run: 4887 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 4888 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15212 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4889 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\|)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15214 to 1101
run: 4890 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\|)
run: #\| => ((2 character))
setm: ((2 character)) <= #\|
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15215 to #\|
run: 4891 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4892 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15216 to 1103
run: 4893 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15217 to 1104
run: 4894 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15218 to 20
run: 4895 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15219 to 20
run: 4896 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 22 => ((7 integer))
setm: ((7 integer)) <= 22
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15220 to 22
run: 4897 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15221 to 1106
run: 4898 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1129 => ((9 byte-address))
setm: ((9 byte-address)) <= 1129
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15222 to 1129
run: 4899 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\| => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\|
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1129 to #\|
run: 4900 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 3
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 3
run: 4901 print-character 13: (((reply)))
reply: nil nil
run: 4902 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 15155 to 2
run: 4903 print-string 10: (((jump)) ((-6 offset)))
run: 4904 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 15156 to nil
run: 4905 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4906 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((15146 string) (raw))
m: ((15146 integer) (raw))
sizeof: ((15146 integer) (raw))
sizeof: ((_ byte))
m: ((15149 byte) (raw))
sizeof: ((15149 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 15157 to #\space
run: 4907 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 4908 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15243 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4909 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15245 to 1101
run: 4910 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15246 to #\space
run: 4911 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4912 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15247 to 1103
run: 4913 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15248 to 1104
run: 4914 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15249 to 20
run: 4915 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15250 to 20
run: 4916 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 23 => ((7 integer))
setm: ((7 integer)) <= 23
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15251 to 23
run: 4917 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15252 to 1106
run: 4918 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1130 => ((9 byte-address))
setm: ((9 byte-address)) <= 1130
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15253 to 1130
run: 4919 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1130 to #\space
run: 4920 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 4
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 4
run: 4921 print-character 13: (((reply)))
reply: nil nil
run: 4922 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 15155 to 3
run: 4923 print-string 10: (((jump)) ((-6 offset)))
run: 4924 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 15156 to t
run: 4925 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4926 print-board 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 0
run: 4927 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 4928 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4929 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9625 file-address) (raw))
sizeof: ((9625 file-address) (raw))
run: 9664 => ((8 file-address))
setm: ((8 file-address)) <= 9664
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 9664
run: 4930 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9664 file) (raw))
m: ((9664 integer) (raw))
sizeof: ((9664 integer) (raw))
sizeof: ((_ square))
m: ((9671 square) (raw))
sizeof: ((9671 square) (raw))
run: #\p => ((6 square))
setm: ((6 square)) <= #\p
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\p
run: 4931 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 4932 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15274 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4933 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\p)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15276 to 1101
run: 4934 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\p)
run: #\p => ((2 character))
setm: ((2 character)) <= #\p
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15277 to #\p
run: 4935 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4936 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15278 to 1103
run: 4937 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15279 to 1104
run: 4938 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15280 to 20
run: 4939 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15281 to 20
run: 4940 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 24 => ((7 integer))
setm: ((7 integer)) <= 24
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15282 to 24
run: 4941 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15283 to 1106
run: 4942 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1131 => ((9 byte-address))
setm: ((9 byte-address)) <= 1131
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15284 to 1131
run: 4943 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\p => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\p
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1131 to #\p
run: 4944 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 5 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 5
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 5
run: 4945 print-character 13: (((reply)))
reply: nil nil
run: 4946 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4947 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15305 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4948 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15307 to 1101
run: 4949 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15308 to #\space
run: 4950 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4951 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15309 to 1103
run: 4952 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15310 to 1104
run: 4953 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15311 to 20
run: 4954 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15312 to 20
run: 4955 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 25 => ((7 integer))
setm: ((7 integer)) <= 25
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15313 to 25
run: 4956 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15314 to 1106
run: 4957 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1132 => ((9 byte-address))
setm: ((9 byte-address)) <= 1132
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15315 to 1132
run: 4958 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1132 to #\space
run: 4959 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 6 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 6
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 6
run: 4960 print-character 13: (((reply)))
reply: nil nil
run: 4961 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 1
run: 4962 print-board 18: (((jump)) ((-8 offset)))
run: 4963 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 4964 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4965 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9626 file-address) (raw))
sizeof: ((9626 file-address) (raw))
run: 10200 => ((8 file-address))
setm: ((8 file-address)) <= 10200
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 10200
run: 4966 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10200 file) (raw))
m: ((10200 integer) (raw))
sizeof: ((10200 integer) (raw))
sizeof: ((_ square))
m: ((10207 square) (raw))
sizeof: ((10207 square) (raw))
run: #\p => ((6 square))
setm: ((6 square)) <= #\p
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\p
run: 4967 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 4968 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15336 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4969 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\p)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15338 to 1101
run: 4970 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\p)
run: #\p => ((2 character))
setm: ((2 character)) <= #\p
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15339 to #\p
run: 4971 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4972 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15340 to 1103
run: 4973 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15341 to 1104
run: 4974 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15342 to 20
run: 4975 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15343 to 20
run: 4976 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 26 => ((7 integer))
setm: ((7 integer)) <= 26
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15344 to 26
run: 4977 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15345 to 1106
run: 4978 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1133 => ((9 byte-address))
setm: ((9 byte-address)) <= 1133
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15346 to 1133
run: 4979 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\p => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\p
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1133 to #\p
run: 4980 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 7 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 7
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 7
run: 4981 print-character 13: (((reply)))
reply: nil nil
run: 4982 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4983 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15367 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4984 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15369 to 1101
run: 4985 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15370 to #\space
run: 4986 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4987 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15371 to 1103
run: 4988 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15372 to 1104
run: 4989 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15373 to 20
run: 4990 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15374 to 20
run: 4991 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 27 => ((7 integer))
setm: ((7 integer)) <= 27
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15375 to 27
run: 4992 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15376 to 1106
run: 4993 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1134 => ((9 byte-address))
setm: ((9 byte-address)) <= 1134
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15377 to 1134
run: 4994 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1134 to #\space
run: 4995 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 8 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 8
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 8
run: 4996 print-character 13: (((reply)))
reply: nil nil
run: 4997 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 2 => ((7 integer))
setm: ((7 integer)) <= 2
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 2
run: 4998 print-board 18: (((jump)) ((-8 offset)))
run: 4999 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 5000 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
schedule: scheduling print-board/main for further processing
schedule: print-board/main
run: 5001 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9627 file-address) (raw))
sizeof: ((9627 file-address) (raw))
run: 10736 => ((8 file-address))
setm: ((8 file-address)) <= 10736
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 10736
run: 5002 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10736 file) (raw))
m: ((10736 integer) (raw))
sizeof: ((10736 integer) (raw))
sizeof: ((_ square))
m: ((10743 square) (raw))
sizeof: ((10743 square) (raw))
run: #\p => ((6 square))
setm: ((6 square)) <= #\p
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\p
run: 5003 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5004 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15398 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5005 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\p)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15400 to 1101
run: 5006 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\p)
run: #\p => ((2 character))
setm: ((2 character)) <= #\p
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15401 to #\p
run: 5007 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5008 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15402 to 1103
run: 5009 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15403 to 1104
run: 5010 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15404 to 20
run: 5011 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15405 to 20
run: 5012 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 28 => ((7 integer))
setm: ((7 integer)) <= 28
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15406 to 28
run: 5013 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15407 to 1106
run: 5014 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1135 => ((9 byte-address))
setm: ((9 byte-address)) <= 1135
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15408 to 1135
run: 5015 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\p => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\p
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1135 to #\p
run: 5016 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 9 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 9
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 9
run: 5017 print-character 13: (((reply)))
reply: nil nil
run: 5018 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5019 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15429 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5020 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15431 to 1101
run: 5021 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15432 to #\space
run: 5022 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5023 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15433 to 1103
run: 5024 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15434 to 1104
run: 5025 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15435 to 20
run: 5026 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15436 to 20
run: 5027 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 29 => ((7 integer))
setm: ((7 integer)) <= 29
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15437 to 29
run: 5028 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15438 to 1106
run: 5029 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1136 => ((9 byte-address))
setm: ((9 byte-address)) <= 1136
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15439 to 1136
run: 5030 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1136 to #\space
run: 5031 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 10 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 10
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 10
run: 5032 print-character 13: (((reply)))
reply: nil nil
run: 5033 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 3 => ((7 integer))
setm: ((7 integer)) <= 3
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 3
run: 5034 print-board 18: (((jump)) ((-8 offset)))
run: 5035 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 5036 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5037 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9628 file-address) (raw))
sizeof: ((9628 file-address) (raw))
run: 11272 => ((8 file-address))
setm: ((8 file-address)) <= 11272
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 11272
run: 5038 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11272 file) (raw))
m: ((11272 integer) (raw))
sizeof: ((11272 integer) (raw))
sizeof: ((_ square))
m: ((11279 square) (raw))
sizeof: ((11279 square) (raw))
run: #\p => ((6 square))
setm: ((6 square)) <= #\p
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\p
run: 5039 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5040 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15460 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5041 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\p)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15462 to 1101
run: 5042 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\p)
run: #\p => ((2 character))
setm: ((2 character)) <= #\p
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15463 to #\p
run: 5043 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5044 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15464 to 1103
run: 5045 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15465 to 1104
run: 5046 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15466 to 20
run: 5047 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15467 to 20
run: 5048 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 30 => ((7 integer))
setm: ((7 integer)) <= 30
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15468 to 30
run: 5049 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15469 to 1106
run: 5050 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1137 => ((9 byte-address))
setm: ((9 byte-address)) <= 1137
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15470 to 1137
run: 5051 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\p => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\p
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1137 to #\p
run: 5052 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 11 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 11
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 11
run: 5053 print-character 13: (((reply)))
reply: nil nil
run: 5054 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5055 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15491 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5056 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15493 to 1101
run: 5057 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15494 to #\space
run: 5058 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5059 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15495 to 1103
run: 5060 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15496 to 1104
run: 5061 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15497 to 20
run: 5062 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15498 to 20
run: 5063 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 31 => ((7 integer))
setm: ((7 integer)) <= 31
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15499 to 31
run: 5064 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15500 to 1106
run: 5065 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1138 => ((9 byte-address))
setm: ((9 byte-address)) <= 1138
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15501 to 1138
run: 5066 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1138 to #\space
run: 5067 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 12 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 12
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 12
run: 5068 print-character 13: (((reply)))
reply: nil nil
run: 5069 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 4 => ((7 integer))
setm: ((7 integer)) <= 4
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 4
run: 5070 print-board 18: (((jump)) ((-8 offset)))
run: 5071 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 5072 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5073 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9629 file-address) (raw))
sizeof: ((9629 file-address) (raw))
run: 11808 => ((8 file-address))
setm: ((8 file-address)) <= 11808
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 11808
run: 5074 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11808 file) (raw))
m: ((11808 integer) (raw))
sizeof: ((11808 integer) (raw))
sizeof: ((_ square))
m: ((11815 square) (raw))
sizeof: ((11815 square) (raw))
run: #\p => ((6 square))
setm: ((6 square)) <= #\p
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\p
run: 5075 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5076 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15522 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5077 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\p)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15524 to 1101
run: 5078 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\p)
run: #\p => ((2 character))
setm: ((2 character)) <= #\p
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15525 to #\p
run: 5079 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5080 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15526 to 1103
run: 5081 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15527 to 1104
run: 5082 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15528 to 20
run: 5083 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15529 to 20
run: 5084 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 32 => ((7 integer))
setm: ((7 integer)) <= 32
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15530 to 32
run: 5085 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15531 to 1106
run: 5086 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1139 => ((9 byte-address))
setm: ((9 byte-address)) <= 1139
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15532 to 1139
run: 5087 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\p => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\p
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1139 to #\p
run: 5088 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 13 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 13
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 13
run: 5089 print-character 13: (((reply)))
reply: nil nil
run: 5090 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5091 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15553 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5092 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15555 to 1101
run: 5093 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15556 to #\space
run: 5094 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5095 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15557 to 1103
run: 5096 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15558 to 1104
run: 5097 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15559 to 20
run: 5098 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15560 to 20
run: 5099 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 33 => ((7 integer))
setm: ((7 integer)) <= 33
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15561 to 33
run: 5100 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15562 to 1106
run: 5101 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1140 => ((9 byte-address))
setm: ((9 byte-address)) <= 1140
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15563 to 1140
run: 5102 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1140 to #\space
run: 5103 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 14 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 14
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 14
run: 5104 print-character 13: (((reply)))
reply: nil nil
run: 5105 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 5 => ((7 integer))
setm: ((7 integer)) <= 5
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 5
run: 5106 print-board 18: (((jump)) ((-8 offset)))
run: 5107 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 5108 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5109 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9630 file-address) (raw))
sizeof: ((9630 file-address) (raw))
run: 12344 => ((8 file-address))
setm: ((8 file-address)) <= 12344
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 12344
run: 5110 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12344 file) (raw))
m: ((12344 integer) (raw))
sizeof: ((12344 integer) (raw))
sizeof: ((_ square))
m: ((12351 square) (raw))
sizeof: ((12351 square) (raw))
run: #\p => ((6 square))
setm: ((6 square)) <= #\p
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\p
run: 5111 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5112 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15584 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5113 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\p)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15586 to 1101
run: 5114 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\p)
run: #\p => ((2 character))
setm: ((2 character)) <= #\p
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15587 to #\p
run: 5115 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5116 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15588 to 1103
run: 5117 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15589 to 1104
run: 5118 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15590 to 20
run: 5119 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15591 to 20
run: 5120 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 34 => ((7 integer))
setm: ((7 integer)) <= 34
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15592 to 34
run: 5121 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15593 to 1106
run: 5122 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1141 => ((9 byte-address))
setm: ((9 byte-address)) <= 1141
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15594 to 1141
run: 5123 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\p => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\p
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1141 to #\p
run: 5124 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 15 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 15
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 15
run: 5125 print-character 13: (((reply)))
reply: nil nil
run: 5126 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5127 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15615 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5128 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15617 to 1101
run: 5129 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15618 to #\space
run: 5130 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5131 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15619 to 1103
run: 5132 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15620 to 1104
run: 5133 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15621 to 20
run: 5134 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15622 to 20
run: 5135 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 35 => ((7 integer))
setm: ((7 integer)) <= 35
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15623 to 35
run: 5136 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15624 to 1106
run: 5137 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1142 => ((9 byte-address))
setm: ((9 byte-address)) <= 1142
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15625 to 1142
run: 5138 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1142 to #\space
run: 5139 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 16 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 16
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 16
run: 5140 print-character 13: (((reply)))
reply: nil nil
run: 5141 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 6 => ((7 integer))
setm: ((7 integer)) <= 6
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 6
run: 5142 print-board 18: (((jump)) ((-8 offset)))
run: 5143 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 5144 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5145 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9631 file-address) (raw))
sizeof: ((9631 file-address) (raw))
run: 12880 => ((8 file-address))
setm: ((8 file-address)) <= 12880
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 12880
run: 5146 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12880 file) (raw))
m: ((12880 integer) (raw))
sizeof: ((12880 integer) (raw))
sizeof: ((_ square))
m: ((12887 square) (raw))
sizeof: ((12887 square) (raw))
run: #\p => ((6 square))
setm: ((6 square)) <= #\p
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\p
run: 5147 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5148 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15646 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5149 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\p)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15648 to 1101
run: 5150 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\p)
run: #\p => ((2 character))
setm: ((2 character)) <= #\p
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15649 to #\p
run: 5151 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5152 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15650 to 1103
run: 5153 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15651 to 1104
run: 5154 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15652 to 20
run: 5155 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15653 to 20
run: 5156 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 36 => ((7 integer))
setm: ((7 integer)) <= 36
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15654 to 36
run: 5157 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15655 to 1106
run: 5158 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1143 => ((9 byte-address))
setm: ((9 byte-address)) <= 1143
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15656 to 1143
run: 5159 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\p => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\p
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1143 to #\p
run: 5160 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 17 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 17
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 17
run: 5161 print-character 13: (((reply)))
reply: nil nil
run: 5162 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5163 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15677 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5164 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15679 to 1101
run: 5165 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15680 to #\space
run: 5166 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5167 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15681 to 1103
run: 5168 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15682 to 1104
run: 5169 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15683 to 20
run: 5170 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15684 to 20
run: 5171 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 37 => ((7 integer))
setm: ((7 integer)) <= 37
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15685 to 37
run: 5172 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15686 to 1106
run: 5173 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1144 => ((9 byte-address))
setm: ((9 byte-address)) <= 1144
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15687 to 1144
run: 5174 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1144 to #\space
run: 5175 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 18 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 18
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 18
run: 5176 print-character 13: (((reply)))
reply: nil nil
run: 5177 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 7 => ((7 integer))
setm: ((7 integer)) <= 7
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 7
run: 5178 print-board 18: (((jump)) ((-8 offset)))
run: 5179 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 5180 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5181 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9632 file-address) (raw))
sizeof: ((9632 file-address) (raw))
run: 13416 => ((8 file-address))
setm: ((8 file-address)) <= 13416
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 13416
run: 5182 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13416 file) (raw))
m: ((13416 integer) (raw))
sizeof: ((13416 integer) (raw))
sizeof: ((_ square))
m: ((13423 square) (raw))
sizeof: ((13423 square) (raw))
run: #\p => ((6 square))
setm: ((6 square)) <= #\p
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\p
run: 5183 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5184 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15708 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5185 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\p)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15710 to 1101
run: 5186 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\p)
run: #\p => ((2 character))
setm: ((2 character)) <= #\p
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15711 to #\p
run: 5187 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5188 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15712 to 1103
run: 5189 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15713 to 1104
run: 5190 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15714 to 20
run: 5191 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15715 to 20
run: 5192 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 38 => ((7 integer))
setm: ((7 integer)) <= 38
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15716 to 38
run: 5193 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15717 to 1106
run: 5194 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1145 => ((9 byte-address))
setm: ((9 byte-address)) <= 1145
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15718 to 1145
run: 5195 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\p => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\p
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1145 to #\p
run: 5196 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 19 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 19
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 19
run: 5197 print-character 13: (((reply)))
reply: nil nil
run: 5198 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5199 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15739 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5200 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15741 to 1101
run: 5201 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15742 to #\space
run: 5202 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5203 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15743 to 1103
run: 5204 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15744 to 1104
run: 5205 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15745 to 20
run: 5206 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15746 to 20
run: 5207 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 39 => ((7 integer))
setm: ((7 integer)) <= 39
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15747 to 39
run: 5208 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15748 to 1106
run: 5209 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1146 => ((9 byte-address))
setm: ((9 byte-address)) <= 1146
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15749 to 1146
run: 5210 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1146 to #\space
run: 5211 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 20 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 20
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 20
run: 5212 print-character 13: (((reply)))
reply: nil nil
run: 5213 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 8 => ((7 integer))
setm: ((7 integer)) <= 8
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 8
run: 5214 print-board 18: (((jump)) ((-8 offset)))
run: 5215 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to t
run: 5216 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5217 print-board 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 5 => ((3 integer))
setm: ((3 integer)) <= 5
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13960 to 5
run: 5218 print-board 20: (((cursor-to-next-line)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5219 cursor-to-next-line 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15770 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5220 cursor-to-next-line 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15772 to 1101
run: 5221 cursor-to-next-line 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5222 cursor-to-next-line 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((2 integer-address))
setm: ((2 integer-address)) <= 1103
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 15773 to 1103
run: 5223 cursor-to-next-line 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 2 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 2
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1103 to 2
run: 5224 cursor-to-next-line 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((3 integer-address))
setm: ((3 integer-address)) <= 1104
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15774 to 1104
run: 5225 cursor-to-next-line 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 1104 to 0
run: 5226 cursor-to-next-line 7: (((reply)))
reply: nil nil
run: 5227 print-board 21: (((jump)) ((-18 offset)))
run: 5228 print-board 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 5229 print-board 5: (((jump-if)) ((4 boolean)) ((16 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5230 print-board 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 6 => ((5 integer))
setm: ((5 integer)) <= 6
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 13962 to 6
run: 5231 print-board 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((5 integer))
sizeof: ((5 integer))
run: 5232 print-integer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15801 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5233 print-integer 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 6)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15803 to 1101
run: 5234 print-integer 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1101 6)
run: 6 => ((2 integer))
setm: ((2 integer)) <= 6
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 15804 to 6
run: 5235 print-integer 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
run: 5236 integer-to-decimal-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15832 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5237 integer-to-decimal-string 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (6)
run: 6 => ((1 integer))
setm: ((1 integer)) <= 6
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 15834 to 6
run: 5238 integer-to-decimal-string 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 15835 to nil
run: 5239 integer-to-decimal-string 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 5240 integer-to-decimal-string 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 15837 to nil
run: 5241 integer-to-decimal-string 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 15838 to nil
run: 5242 integer-to-decimal-string 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5243 integer-to-decimal-string 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: 5244 init-buffer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15863 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5245 init-buffer 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
sizeof: ((_ buffer))
sizeof: ((_ integer))
sizeof: ((_ string-address))
run: 15894 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 15894
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 15865 to 15894
run: 5246 init-buffer 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 15894 => ((2 integer-address))
setm: ((2 integer-address)) <= 15894
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 15866 to 15894
run: 5247 init-buffer 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 15894 to 0
run: 5248 init-buffer 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 15895 => ((3 string-address-address))
setm: ((3 string-address-address)) <= 15895
setm: size of ((3 string-address-address)) is 1
setm: ((3 string-address-address)): setting 15867 to 15895
run: 5249 init-buffer 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 15868 to 30
run: 5250 init-buffer 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ byte))
run: 15896 => ((3 string-address-address) (deref))
setm: ((3 string-address-address) (deref)) <= 15896
setm: size of ((3 string-address-address) (deref)) is 1
setm: ((3 string-address-address) (deref)): setting 15895 to 15896
run: 5251 init-buffer 7: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 15894 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 15894
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 15839 to 15894
run: 5252 integer-to-decimal-string 12: (((7 character)) <- ((copy)) ((0 literal)))
run: #\0 => ((7 character))
setm: ((7 character)) <= #\0
setm: size of ((7 character)) is 1
setm: ((7 character)): setting 15840 to #\0
run: 5253 integer-to-decimal-string 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 48 => ((8 integer))
setm: ((8 integer)) <= 48
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 15841 to 48
run: 5254 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 15842 to nil
run: 5255 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 5256 integer-to-decimal-string 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
m: ((1 integer))
sizeof: ((1 integer))
m: ((1 integer))
sizeof: ((1 integer))
run: 0 => ((1 integer))
setm: ((1 integer)) <= 0
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 15834 to 0
run: 6 => ((10 integer))
setm: ((10 integer)) <= 6
setm: size of ((10 integer)) is 1
setm: ((10 integer)): setting 15843 to 6
run: 5257 integer-to-decimal-string 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((10 integer))
sizeof: ((10 integer))
run: 54 => ((11 integer))
setm: ((11 integer)) <= 54
setm: size of ((11 integer)) is 1
setm: ((11 integer)): setting 15844 to 54
run: 5258 integer-to-decimal-string 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
m: ((11 integer))
sizeof: ((11 integer))
run: #\6 => ((12 character))
setm: ((12 character)) <= #\6
setm: size of ((12 character)) is 1
setm: ((12 character)): setting 15845 to #\6
run: 5259 integer-to-decimal-string 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
m: ((6 buffer-address))
sizeof: ((6 buffer-address))
m: ((12 character))
sizeof: ((12 character))
run: 5260 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15927 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5261 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (15894 #\6)
run: 15894 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 15894
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 15929 to 15894
run: 5262 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (15894 #\6)
run: #\6 => ((2 character))
setm: ((2 character)) <= #\6
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15930 to #\6
run: 5263 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 5264 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15958 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5265 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (15894)
run: 15894 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 15894
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 15960 to 15894
run: 5266 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((15894 integer) (raw))
sizeof: ((15894 integer) (raw))
run: 0 => ((2 integer))
setm: ((2 integer)) <= 0
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 15961 to 0
run: 5267 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((15895 string-address) (raw))
sizeof: ((15895 string-address) (raw))
run: 15896 => ((3 string-address))
setm: ((3 string-address)) <= 15896
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 15962 to 15896
run: 5268 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((15896 integer) (raw))
sizeof: ((15896 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 15963 to 30
run: 5269 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 15964 to nil
run: 5270 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 15931 to nil
run: 5271 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 5272 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 15894 => ((4 integer-address))
setm: ((4 integer-address)) <= 15894
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15932 to 15894
run: 5273 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((15895 string-address) (raw))
sizeof: ((15895 string-address) (raw))
run: 15896 => ((5 string-address))
setm: ((5 string-address)) <= 15896
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 15933 to 15896
run: 5274 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((15896 string) (raw))
m: ((15896 integer) (raw))
sizeof: ((15896 integer) (raw))
sizeof: ((_ byte))
run: 15897 => ((6 byte-address))
setm: ((6 byte-address)) <= 15897
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 15934 to 15897
run: 5275 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\6 => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\6
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 15897 to #\6
run: 5276 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 15894 to 1
run: 5277 append 11: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 15894 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 15894
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 15839 to 15894
run: 5278 integer-to-decimal-string 20: (((jump)) ((-7 offset)))
run: 5279 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 15842 to t
run: 5280 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 5281 integer-to-decimal-string 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5282 integer-to-decimal-string 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
m: ((15894 integer) (raw))
sizeof: ((15894 integer) (raw))
run: 1 => ((13 integer))
setm: ((13 integer)) <= 1
setm: size of ((13 integer)) is 1
setm: ((13 integer)): setting 15846 to 1
run: 5283 integer-to-decimal-string 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((15895 string-address) (raw))
sizeof: ((15895 string-address) (raw))
run: 15896 => ((14 string-address))
setm: ((14 string-address)) <= 15896
setm: size of ((14 string-address)) is 1
setm: ((14 string-address)): setting 15847 to 15896
run: 5284 integer-to-decimal-string 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
m: ((13 integer))
sizeof: ((13 integer))
sizeof: ((_ byte))
run: 15989 => ((15 string-address))
setm: ((15 string-address)) <= 15989
setm: size of ((15 string-address)) is 1
setm: ((15 string-address)): setting 15848 to 15989
run: 5285 integer-to-decimal-string 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
m: ((13 integer))
sizeof: ((13 integer))
run: 0 => ((16 integer))
setm: ((16 integer)) <= 0
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 15849 to 0
run: 5286 integer-to-decimal-string 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((17 integer))
setm: ((17 integer)) <= 0
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 15850 to 0
run: 5287 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 15842 to nil
run: 5288 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 5289 integer-to-decimal-string 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
m: ((16 integer))
sizeof: ((16 integer))
array-len: ((15896 string) (raw))
m: ((15896 integer) (raw))
sizeof: ((15896 integer) (raw))
sizeof: ((_ byte))
m: ((15897 byte) (raw))
sizeof: ((15897 byte) (raw))
run: #\6 => ((18 byte))
setm: ((18 byte)) <= #\6
setm: size of ((18 byte)) is 1
setm: ((18 byte)): setting 15851 to #\6
run: 5290 integer-to-decimal-string 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
m: ((17 integer))
sizeof: ((17 integer))
array-len: ((15989 string) (raw))
m: ((15989 integer) (raw))
sizeof: ((15989 integer) (raw))
sizeof: ((_ byte))
run: 15990 => ((19 byte-address))
setm: ((19 byte-address)) <= 15990
setm: size of ((19 byte-address)) is 1
setm: ((19 byte-address)): setting 15852 to 15990
run: 5291 integer-to-decimal-string 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
m: ((18 byte))
sizeof: ((18 byte))
run: #\6 => ((19 byte-address) (deref))
setm: ((19 byte-address) (deref)) <= #\6
setm: size of ((19 byte-address) (deref)) is 1
setm: ((19 byte-address) (deref)): setting 15990 to #\6
run: 5292 integer-to-decimal-string 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: -1 => ((16 integer))
setm: ((16 integer)) <= -1
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 15849 to -1
run: 5293 integer-to-decimal-string 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
m: ((17 integer))
sizeof: ((17 integer))
run: 1 => ((17 integer))
setm: ((17 integer)) <= 1
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 15850 to 1
run: 5294 integer-to-decimal-string 35: (((jump)) ((-8 offset)))
run: 5295 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 15842 to t
run: 5296 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 5297 integer-to-decimal-string 36: (((reply)) ((15 string-address)))
m: ((15 string-address))
sizeof: ((15 string-address))
reply: (((15 string-address))) (((3 string-address)))
reply: 15989 => ((3 string-address))
setm: ((3 string-address)) <= 15989
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 15805 to 15989
run: 5298 print-integer 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((3 string-address))
sizeof: ((3 string-address))
run: 5299 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15991 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5300 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 15989)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15993 to 1101
run: 5301 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 15989)
run: 15989 => ((2 string-address))
setm: ((2 string-address)) <= 15989
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 15994 to 15989
run: 5302 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((15989 integer) (raw))
sizeof: ((15989 integer) (raw))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 15995 to 1
run: 5303 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 15996 to 0
run: 5304 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 15997 to nil
run: 5305 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5306 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((15989 string) (raw))
m: ((15989 integer) (raw))
sizeof: ((15989 integer) (raw))
sizeof: ((_ byte))
m: ((15990 byte) (raw))
sizeof: ((15990 byte) (raw))
run: #\6 => ((6 character))
setm: ((6 character)) <= #\6
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 15998 to #\6
run: 5307 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 5308 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16022 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5309 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\6)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16024 to 1101
run: 5310 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\6)
run: #\6 => ((2 character))
setm: ((2 character)) <= #\6
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16025 to #\6
run: 5311 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5312 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16026 to 1103
run: 5313 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16027 to 1104
run: 5314 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16028 to 20
run: 5315 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16029 to 40
run: 5316 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 40 => ((7 integer))
setm: ((7 integer)) <= 40
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16030 to 40
run: 5317 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16031 to 1106
run: 5318 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1147 => ((9 byte-address))
setm: ((9 byte-address)) <= 1147
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16032 to 1147
run: 5319 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\6 => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\6
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1147 to #\6
run: 5320 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 1
run: 5321 print-character 13: (((reply)))
reply: nil nil
run: 5322 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 15996 to 1
run: 5323 print-string 10: (((jump)) ((-6 offset)))
run: 5324 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 15997 to t
run: 5325 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5326 print-board 8: (((6 string-address)) <- ((new))  | )
run: 16053 => ((6 string-address))
setm: ((6 string-address)) <= 16053
setm: size of ((6 string-address)) is 1
setm: ((6 string-address)): setting 13963 to 16053
run: 5327 print-board 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 string-address))
sizeof: ((6 string-address))
run: 5328 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16057 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5329 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 16053)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16059 to 1101
run: 5330 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 16053)
run: 16053 => ((2 string-address))
setm: ((2 string-address)) <= 16053
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 16060 to 16053
run: 5331 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((16053 integer) (raw))
sizeof: ((16053 integer) (raw))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 16061 to 3
run: 5332 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 16062 to 0
run: 5333 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 16063 to nil
run: 5334 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5335 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((16053 string) (raw))
m: ((16053 integer) (raw))
sizeof: ((16053 integer) (raw))
sizeof: ((_ byte))
m: ((16054 byte) (raw))
sizeof: ((16054 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 16064 to #\space
run: 5336 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 5337 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16088 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5338 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16090 to 1101
run: 5339 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16091 to #\space
run: 5340 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5341 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16092 to 1103
run: 5342 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16093 to 1104
run: 5343 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16094 to 20
run: 5344 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16095 to 40
run: 5345 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 41 => ((7 integer))
setm: ((7 integer)) <= 41
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16096 to 41
run: 5346 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16097 to 1106
run: 5347 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1148 => ((9 byte-address))
setm: ((9 byte-address)) <= 1148
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16098 to 1148
run: 5348 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1148 to #\space
run: 5349 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 2
run: 5350 print-character 13: (((reply)))
reply: nil nil
run: 5351 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 16062 to 1
run: 5352 print-string 10: (((jump)) ((-6 offset)))
run: 5353 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 16063 to nil
run: 5354 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5355 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((16053 string) (raw))
m: ((16053 integer) (raw))
sizeof: ((16053 integer) (raw))
sizeof: ((_ byte))
m: ((16055 byte) (raw))
sizeof: ((16055 byte) (raw))
run: #\| => ((6 character))
setm: ((6 character)) <= #\|
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 16064 to #\|
run: 5356 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 5357 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16119 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5358 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\|)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16121 to 1101
run: 5359 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\|)
run: #\| => ((2 character))
setm: ((2 character)) <= #\|
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16122 to #\|
run: 5360 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5361 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16123 to 1103
run: 5362 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16124 to 1104
run: 5363 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16125 to 20
run: 5364 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16126 to 40
run: 5365 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 42 => ((7 integer))
setm: ((7 integer)) <= 42
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16127 to 42
run: 5366 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16128 to 1106
run: 5367 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1149 => ((9 byte-address))
setm: ((9 byte-address)) <= 1149
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16129 to 1149
run: 5368 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\| => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\|
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1149 to #\|
run: 5369 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 3
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 3
run: 5370 print-character 13: (((reply)))
reply: nil nil
run: 5371 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 16062 to 2
run: 5372 print-string 10: (((jump)) ((-6 offset)))
run: 5373 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 16063 to nil
run: 5374 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5375 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((16053 string) (raw))
m: ((16053 integer) (raw))
sizeof: ((16053 integer) (raw))
sizeof: ((_ byte))
m: ((16056 byte) (raw))
sizeof: ((16056 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 16064 to #\space
run: 5376 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 5377 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16150 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5378 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16152 to 1101
run: 5379 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16153 to #\space
run: 5380 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5381 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16154 to 1103
run: 5382 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16155 to 1104
run: 5383 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16156 to 20
run: 5384 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16157 to 40
run: 5385 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 43 => ((7 integer))
setm: ((7 integer)) <= 43
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16158 to 43
run: 5386 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16159 to 1106
run: 5387 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1150 => ((9 byte-address))
setm: ((9 byte-address)) <= 1150
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16160 to 1150
run: 5388 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1150 to #\space
run: 5389 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 4
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 4
run: 5390 print-character 13: (((reply)))
reply: nil nil
run: 5391 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 16062 to 3
run: 5392 print-string 10: (((jump)) ((-6 offset)))
run: 5393 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 16063 to t
run: 5394 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5395 print-board 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 0
run: 5396 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 5397 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5398 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9625 file-address) (raw))
sizeof: ((9625 file-address) (raw))
run: 9664 => ((8 file-address))
setm: ((8 file-address)) <= 9664
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 9664
run: 5399 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9664 file) (raw))
m: ((9664 integer) (raw))
sizeof: ((9664 integer) (raw))
sizeof: ((_ square))
m: ((9670 square) (raw))
sizeof: ((9670 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 5400 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5401 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16181 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5402 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16183 to 1101
run: 5403 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16184 to #\_
run: 5404 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5405 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16185 to 1103
run: 5406 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16186 to 1104
run: 5407 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16187 to 20
run: 5408 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16188 to 40
run: 5409 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 44 => ((7 integer))
setm: ((7 integer)) <= 44
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16189 to 44
run: 5410 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16190 to 1106
run: 5411 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1151 => ((9 byte-address))
setm: ((9 byte-address)) <= 1151
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16191 to 1151
run: 5412 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1151 to #\_
run: 5413 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 5 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 5
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 5
run: 5414 print-character 13: (((reply)))
reply: nil nil
run: 5415 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5416 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16212 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5417 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16214 to 1101
run: 5418 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16215 to #\space
run: 5419 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5420 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16216 to 1103
run: 5421 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16217 to 1104
run: 5422 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16218 to 20
run: 5423 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16219 to 40
run: 5424 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 45 => ((7 integer))
setm: ((7 integer)) <= 45
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16220 to 45
run: 5425 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16221 to 1106
run: 5426 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1152 => ((9 byte-address))
setm: ((9 byte-address)) <= 1152
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16222 to 1152
run: 5427 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1152 to #\space
run: 5428 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 6 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 6
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 6
run: 5429 print-character 13: (((reply)))
reply: nil nil
run: 5430 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 1
run: 5431 print-board 18: (((jump)) ((-8 offset)))
run: 5432 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 5433 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5434 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9626 file-address) (raw))
sizeof: ((9626 file-address) (raw))
run: 10200 => ((8 file-address))
setm: ((8 file-address)) <= 10200
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 10200
run: 5435 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10200 file) (raw))
m: ((10200 integer) (raw))
sizeof: ((10200 integer) (raw))
sizeof: ((_ square))
m: ((10206 square) (raw))
sizeof: ((10206 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 5436 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5437 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16243 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5438 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16245 to 1101
run: 5439 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16246 to #\_
run: 5440 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5441 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16247 to 1103
run: 5442 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16248 to 1104
run: 5443 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16249 to 20
run: 5444 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16250 to 40
run: 5445 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 46 => ((7 integer))
setm: ((7 integer)) <= 46
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16251 to 46
run: 5446 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16252 to 1106
run: 5447 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1153 => ((9 byte-address))
setm: ((9 byte-address)) <= 1153
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16253 to 1153
run: 5448 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1153 to #\_
run: 5449 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 7 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 7
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 7
run: 5450 print-character 13: (((reply)))
reply: nil nil
run: 5451 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5452 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16274 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5453 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16276 to 1101
run: 5454 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16277 to #\space
run: 5455 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5456 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16278 to 1103
run: 5457 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16279 to 1104
run: 5458 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16280 to 20
run: 5459 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16281 to 40
run: 5460 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 47 => ((7 integer))
setm: ((7 integer)) <= 47
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16282 to 47
run: 5461 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16283 to 1106
run: 5462 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1154 => ((9 byte-address))
setm: ((9 byte-address)) <= 1154
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16284 to 1154
run: 5463 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1154 to #\space
run: 5464 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 8 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 8
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 8
run: 5465 print-character 13: (((reply)))
reply: nil nil
run: 5466 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 2 => ((7 integer))
setm: ((7 integer)) <= 2
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 2
run: 5467 print-board 18: (((jump)) ((-8 offset)))
run: 5468 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 5469 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5470 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9627 file-address) (raw))
sizeof: ((9627 file-address) (raw))
run: 10736 => ((8 file-address))
setm: ((8 file-address)) <= 10736
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 10736
run: 5471 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10736 file) (raw))
m: ((10736 integer) (raw))
sizeof: ((10736 integer) (raw))
sizeof: ((_ square))
m: ((10742 square) (raw))
sizeof: ((10742 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 5472 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5473 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16305 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5474 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16307 to 1101
run: 5475 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16308 to #\_
run: 5476 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5477 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16309 to 1103
run: 5478 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16310 to 1104
run: 5479 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16311 to 20
run: 5480 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16312 to 40
run: 5481 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 48 => ((7 integer))
setm: ((7 integer)) <= 48
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16313 to 48
run: 5482 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16314 to 1106
run: 5483 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1155 => ((9 byte-address))
setm: ((9 byte-address)) <= 1155
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16315 to 1155
run: 5484 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1155 to #\_
run: 5485 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 9 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 9
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 9
run: 5486 print-character 13: (((reply)))
reply: nil nil
run: 5487 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5488 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16336 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5489 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16338 to 1101
run: 5490 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16339 to #\space
run: 5491 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5492 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16340 to 1103
run: 5493 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16341 to 1104
run: 5494 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16342 to 20
run: 5495 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16343 to 40
run: 5496 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 49 => ((7 integer))
setm: ((7 integer)) <= 49
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16344 to 49
run: 5497 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16345 to 1106
run: 5498 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1156 => ((9 byte-address))
setm: ((9 byte-address)) <= 1156
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16346 to 1156
run: 5499 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1156 to #\space
run: 5500 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 10 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 10
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 10
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: 5501 print-character 13: (((reply)))
reply: nil nil
run: 5502 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 3 => ((7 integer))
setm: ((7 integer)) <= 3
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 3
run: 5503 print-board 18: (((jump)) ((-8 offset)))
run: 5504 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 5505 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5506 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9628 file-address) (raw))
sizeof: ((9628 file-address) (raw))
run: 11272 => ((8 file-address))
setm: ((8 file-address)) <= 11272
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 11272
run: 5507 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11272 file) (raw))
m: ((11272 integer) (raw))
sizeof: ((11272 integer) (raw))
sizeof: ((_ square))
m: ((11278 square) (raw))
sizeof: ((11278 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 5508 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5509 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16367 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5510 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16369 to 1101
run: 5511 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16370 to #\_
run: 5512 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5513 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16371 to 1103
run: 5514 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16372 to 1104
run: 5515 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16373 to 20
run: 5516 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16374 to 40
run: 5517 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 50 => ((7 integer))
setm: ((7 integer)) <= 50
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16375 to 50
run: 5518 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16376 to 1106
run: 5519 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1157 => ((9 byte-address))
setm: ((9 byte-address)) <= 1157
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16377 to 1157
run: 5520 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1157 to #\_
run: 5521 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 11 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 11
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 11
run: 5522 print-character 13: (((reply)))
reply: nil nil
run: 5523 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5524 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16398 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5525 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16400 to 1101
run: 5526 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16401 to #\space
run: 5527 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5528 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16402 to 1103
run: 5529 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16403 to 1104
run: 5530 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16404 to 20
run: 5531 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16405 to 40
run: 5532 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 51 => ((7 integer))
setm: ((7 integer)) <= 51
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16406 to 51
run: 5533 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16407 to 1106
run: 5534 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1158 => ((9 byte-address))
setm: ((9 byte-address)) <= 1158
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16408 to 1158
run: 5535 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1158 to #\space
run: 5536 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 12 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 12
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 12
run: 5537 print-character 13: (((reply)))
reply: nil nil
run: 5538 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 4 => ((7 integer))
setm: ((7 integer)) <= 4
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 4
run: 5539 print-board 18: (((jump)) ((-8 offset)))
run: 5540 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 5541 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5542 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9629 file-address) (raw))
sizeof: ((9629 file-address) (raw))
run: 11808 => ((8 file-address))
setm: ((8 file-address)) <= 11808
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 11808
run: 5543 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11808 file) (raw))
m: ((11808 integer) (raw))
sizeof: ((11808 integer) (raw))
sizeof: ((_ square))
m: ((11814 square) (raw))
sizeof: ((11814 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 5544 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5545 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16429 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5546 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16431 to 1101
run: 5547 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16432 to #\_
run: 5548 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5549 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16433 to 1103
run: 5550 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16434 to 1104
run: 5551 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16435 to 20
run: 5552 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16436 to 40
run: 5553 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 52 => ((7 integer))
setm: ((7 integer)) <= 52
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16437 to 52
run: 5554 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16438 to 1106
run: 5555 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1159 => ((9 byte-address))
setm: ((9 byte-address)) <= 1159
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16439 to 1159
run: 5556 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1159 to #\_
run: 5557 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 13 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 13
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 13
run: 5558 print-character 13: (((reply)))
reply: nil nil
run: 5559 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5560 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16460 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5561 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16462 to 1101
run: 5562 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16463 to #\space
run: 5563 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5564 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16464 to 1103
run: 5565 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16465 to 1104
run: 5566 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16466 to 20
run: 5567 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16467 to 40
run: 5568 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 53 => ((7 integer))
setm: ((7 integer)) <= 53
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16468 to 53
run: 5569 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16469 to 1106
run: 5570 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1160 => ((9 byte-address))
setm: ((9 byte-address)) <= 1160
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16470 to 1160
run: 5571 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1160 to #\space
run: 5572 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 14 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 14
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 14
run: 5573 print-character 13: (((reply)))
reply: nil nil
run: 5574 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 5 => ((7 integer))
setm: ((7 integer)) <= 5
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 5
run: 5575 print-board 18: (((jump)) ((-8 offset)))
run: 5576 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 5577 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5578 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9630 file-address) (raw))
sizeof: ((9630 file-address) (raw))
run: 12344 => ((8 file-address))
setm: ((8 file-address)) <= 12344
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 12344
run: 5579 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12344 file) (raw))
m: ((12344 integer) (raw))
sizeof: ((12344 integer) (raw))
sizeof: ((_ square))
m: ((12350 square) (raw))
sizeof: ((12350 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 5580 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5581 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16491 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5582 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16493 to 1101
run: 5583 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16494 to #\_
run: 5584 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5585 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16495 to 1103
run: 5586 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16496 to 1104
run: 5587 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16497 to 20
run: 5588 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16498 to 40
run: 5589 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 54 => ((7 integer))
setm: ((7 integer)) <= 54
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16499 to 54
run: 5590 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16500 to 1106
run: 5591 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1161 => ((9 byte-address))
setm: ((9 byte-address)) <= 1161
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16501 to 1161
run: 5592 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1161 to #\_
run: 5593 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 15 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 15
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 15
run: 5594 print-character 13: (((reply)))
reply: nil nil
run: 5595 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5596 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16522 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5597 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16524 to 1101
run: 5598 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16525 to #\space
run: 5599 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5600 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16526 to 1103
run: 5601 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16527 to 1104
run: 5602 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16528 to 20
run: 5603 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16529 to 40
run: 5604 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 55 => ((7 integer))
setm: ((7 integer)) <= 55
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16530 to 55
run: 5605 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16531 to 1106
run: 5606 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1162 => ((9 byte-address))
setm: ((9 byte-address)) <= 1162
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16532 to 1162
run: 5607 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1162 to #\space
run: 5608 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 16 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 16
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 16
run: 5609 print-character 13: (((reply)))
reply: nil nil
run: 5610 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 6 => ((7 integer))
setm: ((7 integer)) <= 6
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 6
run: 5611 print-board 18: (((jump)) ((-8 offset)))
run: 5612 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 5613 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5614 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9631 file-address) (raw))
sizeof: ((9631 file-address) (raw))
run: 12880 => ((8 file-address))
setm: ((8 file-address)) <= 12880
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 12880
run: 5615 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12880 file) (raw))
m: ((12880 integer) (raw))
sizeof: ((12880 integer) (raw))
sizeof: ((_ square))
m: ((12886 square) (raw))
sizeof: ((12886 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 5616 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5617 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16553 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5618 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16555 to 1101
run: 5619 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16556 to #\_
run: 5620 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5621 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16557 to 1103
run: 5622 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16558 to 1104
run: 5623 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16559 to 20
run: 5624 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16560 to 40
run: 5625 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 56 => ((7 integer))
setm: ((7 integer)) <= 56
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16561 to 56
run: 5626 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16562 to 1106
run: 5627 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1163 => ((9 byte-address))
setm: ((9 byte-address)) <= 1163
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16563 to 1163
run: 5628 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1163 to #\_
run: 5629 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 17 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 17
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 17
run: 5630 print-character 13: (((reply)))
reply: nil nil
run: 5631 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5632 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16584 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5633 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16586 to 1101
run: 5634 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16587 to #\space
run: 5635 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5636 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16588 to 1103
run: 5637 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16589 to 1104
run: 5638 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16590 to 20
run: 5639 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16591 to 40
run: 5640 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 57 => ((7 integer))
setm: ((7 integer)) <= 57
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16592 to 57
run: 5641 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16593 to 1106
run: 5642 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1164 => ((9 byte-address))
setm: ((9 byte-address)) <= 1164
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16594 to 1164
run: 5643 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1164 to #\space
run: 5644 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 18 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 18
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 18
run: 5645 print-character 13: (((reply)))
reply: nil nil
run: 5646 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 7 => ((7 integer))
setm: ((7 integer)) <= 7
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 7
run: 5647 print-board 18: (((jump)) ((-8 offset)))
run: 5648 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 5649 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5650 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9632 file-address) (raw))
sizeof: ((9632 file-address) (raw))
run: 13416 => ((8 file-address))
setm: ((8 file-address)) <= 13416
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 13416
run: 5651 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13416 file) (raw))
m: ((13416 integer) (raw))
sizeof: ((13416 integer) (raw))
sizeof: ((_ square))
m: ((13422 square) (raw))
sizeof: ((13422 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 5652 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5653 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16615 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5654 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16617 to 1101
run: 5655 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16618 to #\_
run: 5656 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5657 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16619 to 1103
run: 5658 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16620 to 1104
run: 5659 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16621 to 20
run: 5660 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16622 to 40
run: 5661 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 58 => ((7 integer))
setm: ((7 integer)) <= 58
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16623 to 58
run: 5662 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16624 to 1106
run: 5663 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1165 => ((9 byte-address))
setm: ((9 byte-address)) <= 1165
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16625 to 1165
run: 5664 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1165 to #\_
run: 5665 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 19 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 19
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 19
run: 5666 print-character 13: (((reply)))
reply: nil nil
run: 5667 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5668 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16646 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5669 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16648 to 1101
run: 5670 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16649 to #\space
run: 5671 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5672 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16650 to 1103
run: 5673 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16651 to 1104
run: 5674 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16652 to 20
run: 5675 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16653 to 40
run: 5676 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 59 => ((7 integer))
setm: ((7 integer)) <= 59
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16654 to 59
run: 5677 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16655 to 1106
run: 5678 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1166 => ((9 byte-address))
setm: ((9 byte-address)) <= 1166
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16656 to 1166
run: 5679 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1166 to #\space
run: 5680 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 20 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 20
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 20
run: 5681 print-character 13: (((reply)))
reply: nil nil
run: 5682 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 8 => ((7 integer))
setm: ((7 integer)) <= 8
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 8
run: 5683 print-board 18: (((jump)) ((-8 offset)))
run: 5684 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to t
run: 5685 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5686 print-board 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 4 => ((3 integer))
setm: ((3 integer)) <= 4
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13960 to 4
run: 5687 print-board 20: (((cursor-to-next-line)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5688 cursor-to-next-line 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16677 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5689 cursor-to-next-line 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16679 to 1101
run: 5690 cursor-to-next-line 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5691 cursor-to-next-line 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((2 integer-address))
setm: ((2 integer-address)) <= 1103
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 16680 to 1103
run: 5692 cursor-to-next-line 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 3 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 3
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1103 to 3
run: 5693 cursor-to-next-line 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((3 integer-address))
setm: ((3 integer-address)) <= 1104
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16681 to 1104
run: 5694 cursor-to-next-line 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 1104 to 0
run: 5695 cursor-to-next-line 7: (((reply)))
reply: nil nil
run: 5696 print-board 21: (((jump)) ((-18 offset)))
run: 5697 print-board 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 5698 print-board 5: (((jump-if)) ((4 boolean)) ((16 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5699 print-board 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 5 => ((5 integer))
setm: ((5 integer)) <= 5
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 13962 to 5
run: 5700 print-board 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((5 integer))
sizeof: ((5 integer))
run: 5701 print-integer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16708 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5702 print-integer 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 5)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16710 to 1101
run: 5703 print-integer 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1101 5)
run: 5 => ((2 integer))
setm: ((2 integer)) <= 5
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 16711 to 5
run: 5704 print-integer 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
run: 5705 integer-to-decimal-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16739 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5706 integer-to-decimal-string 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (5)
run: 5 => ((1 integer))
setm: ((1 integer)) <= 5
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 16741 to 5
run: 5707 integer-to-decimal-string 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 16742 to nil
run: 5708 integer-to-decimal-string 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 5709 integer-to-decimal-string 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 16744 to nil
run: 5710 integer-to-decimal-string 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 16745 to nil
run: 5711 integer-to-decimal-string 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5712 integer-to-decimal-string 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: 5713 init-buffer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16770 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5714 init-buffer 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
sizeof: ((_ buffer))
sizeof: ((_ integer))
sizeof: ((_ string-address))
run: 16801 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 16801
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 16772 to 16801
run: 5715 init-buffer 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 16801 => ((2 integer-address))
setm: ((2 integer-address)) <= 16801
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 16773 to 16801
run: 5716 init-buffer 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 16801 to 0
run: 5717 init-buffer 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 16802 => ((3 string-address-address))
setm: ((3 string-address-address)) <= 16802
setm: size of ((3 string-address-address)) is 1
setm: ((3 string-address-address)): setting 16774 to 16802
run: 5718 init-buffer 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 16775 to 30
run: 5719 init-buffer 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ byte))
run: 16803 => ((3 string-address-address) (deref))
setm: ((3 string-address-address) (deref)) <= 16803
setm: size of ((3 string-address-address) (deref)) is 1
setm: ((3 string-address-address) (deref)): setting 16802 to 16803
run: 5720 init-buffer 7: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 16801 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 16801
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 16746 to 16801
run: 5721 integer-to-decimal-string 12: (((7 character)) <- ((copy)) ((0 literal)))
run: #\0 => ((7 character))
setm: ((7 character)) <= #\0
setm: size of ((7 character)) is 1
setm: ((7 character)): setting 16747 to #\0
run: 5722 integer-to-decimal-string 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 48 => ((8 integer))
setm: ((8 integer)) <= 48
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 16748 to 48
run: 5723 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 16749 to nil
run: 5724 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 5725 integer-to-decimal-string 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
m: ((1 integer))
sizeof: ((1 integer))
m: ((1 integer))
sizeof: ((1 integer))
run: 0 => ((1 integer))
setm: ((1 integer)) <= 0
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 16741 to 0
run: 5 => ((10 integer))
setm: ((10 integer)) <= 5
setm: size of ((10 integer)) is 1
setm: ((10 integer)): setting 16750 to 5
run: 5726 integer-to-decimal-string 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((10 integer))
sizeof: ((10 integer))
run: 53 => ((11 integer))
setm: ((11 integer)) <= 53
setm: size of ((11 integer)) is 1
setm: ((11 integer)): setting 16751 to 53
run: 5727 integer-to-decimal-string 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
m: ((11 integer))
sizeof: ((11 integer))
run: #\5 => ((12 character))
setm: ((12 character)) <= #\5
setm: size of ((12 character)) is 1
setm: ((12 character)): setting 16752 to #\5
run: 5728 integer-to-decimal-string 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
m: ((6 buffer-address))
sizeof: ((6 buffer-address))
m: ((12 character))
sizeof: ((12 character))
run: 5729 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16834 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5730 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (16801 #\5)
run: 16801 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 16801
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 16836 to 16801
run: 5731 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (16801 #\5)
run: #\5 => ((2 character))
setm: ((2 character)) <= #\5
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16837 to #\5
run: 5732 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 5733 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16865 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5734 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (16801)
run: 16801 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 16801
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 16867 to 16801
run: 5735 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((16801 integer) (raw))
sizeof: ((16801 integer) (raw))
run: 0 => ((2 integer))
setm: ((2 integer)) <= 0
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 16868 to 0
run: 5736 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((16802 string-address) (raw))
sizeof: ((16802 string-address) (raw))
run: 16803 => ((3 string-address))
setm: ((3 string-address)) <= 16803
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 16869 to 16803
run: 5737 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((16803 integer) (raw))
sizeof: ((16803 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 16870 to 30
run: 5738 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 16871 to nil
run: 5739 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 16838 to nil
run: 5740 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 5741 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 16801 => ((4 integer-address))
setm: ((4 integer-address)) <= 16801
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16839 to 16801
run: 5742 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((16802 string-address) (raw))
sizeof: ((16802 string-address) (raw))
run: 16803 => ((5 string-address))
setm: ((5 string-address)) <= 16803
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 16840 to 16803
run: 5743 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((16803 string) (raw))
m: ((16803 integer) (raw))
sizeof: ((16803 integer) (raw))
sizeof: ((_ byte))
run: 16804 => ((6 byte-address))
setm: ((6 byte-address)) <= 16804
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 16841 to 16804
run: 5744 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\5 => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\5
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 16804 to #\5
run: 5745 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 16801 to 1
run: 5746 append 11: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 16801 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 16801
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 16746 to 16801
run: 5747 integer-to-decimal-string 20: (((jump)) ((-7 offset)))
run: 5748 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 16749 to t
run: 5749 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 5750 integer-to-decimal-string 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5751 integer-to-decimal-string 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
m: ((16801 integer) (raw))
sizeof: ((16801 integer) (raw))
run: 1 => ((13 integer))
setm: ((13 integer)) <= 1
setm: size of ((13 integer)) is 1
setm: ((13 integer)): setting 16753 to 1
run: 5752 integer-to-decimal-string 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((16802 string-address) (raw))
sizeof: ((16802 string-address) (raw))
run: 16803 => ((14 string-address))
setm: ((14 string-address)) <= 16803
setm: size of ((14 string-address)) is 1
setm: ((14 string-address)): setting 16754 to 16803
run: 5753 integer-to-decimal-string 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
m: ((13 integer))
sizeof: ((13 integer))
sizeof: ((_ byte))
run: 16896 => ((15 string-address))
setm: ((15 string-address)) <= 16896
setm: size of ((15 string-address)) is 1
setm: ((15 string-address)): setting 16755 to 16896
run: 5754 integer-to-decimal-string 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
m: ((13 integer))
sizeof: ((13 integer))
run: 0 => ((16 integer))
setm: ((16 integer)) <= 0
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 16756 to 0
run: 5755 integer-to-decimal-string 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((17 integer))
setm: ((17 integer)) <= 0
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 16757 to 0
run: 5756 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 16749 to nil
run: 5757 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 5758 integer-to-decimal-string 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
m: ((16 integer))
sizeof: ((16 integer))
array-len: ((16803 string) (raw))
m: ((16803 integer) (raw))
sizeof: ((16803 integer) (raw))
sizeof: ((_ byte))
m: ((16804 byte) (raw))
sizeof: ((16804 byte) (raw))
run: #\5 => ((18 byte))
setm: ((18 byte)) <= #\5
setm: size of ((18 byte)) is 1
setm: ((18 byte)): setting 16758 to #\5
run: 5759 integer-to-decimal-string 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
m: ((17 integer))
sizeof: ((17 integer))
array-len: ((16896 string) (raw))
m: ((16896 integer) (raw))
sizeof: ((16896 integer) (raw))
sizeof: ((_ byte))
run: 16897 => ((19 byte-address))
setm: ((19 byte-address)) <= 16897
setm: size of ((19 byte-address)) is 1
setm: ((19 byte-address)): setting 16759 to 16897
run: 5760 integer-to-decimal-string 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
m: ((18 byte))
sizeof: ((18 byte))
run: #\5 => ((19 byte-address) (deref))
setm: ((19 byte-address) (deref)) <= #\5
setm: size of ((19 byte-address) (deref)) is 1
setm: ((19 byte-address) (deref)): setting 16897 to #\5
run: 5761 integer-to-decimal-string 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: -1 => ((16 integer))
setm: ((16 integer)) <= -1
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 16756 to -1
run: 5762 integer-to-decimal-string 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
m: ((17 integer))
sizeof: ((17 integer))
run: 1 => ((17 integer))
setm: ((17 integer)) <= 1
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 16757 to 1
run: 5763 integer-to-decimal-string 35: (((jump)) ((-8 offset)))
run: 5764 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 16749 to t
run: 5765 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 5766 integer-to-decimal-string 36: (((reply)) ((15 string-address)))
m: ((15 string-address))
sizeof: ((15 string-address))
reply: (((15 string-address))) (((3 string-address)))
reply: 16896 => ((3 string-address))
setm: ((3 string-address)) <= 16896
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 16712 to 16896
run: 5767 print-integer 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((3 string-address))
sizeof: ((3 string-address))
run: 5768 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16898 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5769 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 16896)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16900 to 1101
run: 5770 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 16896)
run: 16896 => ((2 string-address))
setm: ((2 string-address)) <= 16896
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 16901 to 16896
run: 5771 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((16896 integer) (raw))
sizeof: ((16896 integer) (raw))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 16902 to 1
run: 5772 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 16903 to 0
run: 5773 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 16904 to nil
run: 5774 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5775 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((16896 string) (raw))
m: ((16896 integer) (raw))
sizeof: ((16896 integer) (raw))
sizeof: ((_ byte))
m: ((16897 byte) (raw))
sizeof: ((16897 byte) (raw))
run: #\5 => ((6 character))
setm: ((6 character)) <= #\5
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 16905 to #\5
run: 5776 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 5777 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16929 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5778 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\5)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16931 to 1101
run: 5779 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\5)
run: #\5 => ((2 character))
setm: ((2 character)) <= #\5
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16932 to #\5
run: 5780 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5781 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16933 to 1103
run: 5782 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16934 to 1104
run: 5783 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16935 to 20
run: 5784 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16936 to 60
run: 5785 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 60 => ((7 integer))
setm: ((7 integer)) <= 60
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16937 to 60
run: 5786 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16938 to 1106
run: 5787 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1167 => ((9 byte-address))
setm: ((9 byte-address)) <= 1167
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16939 to 1167
run: 5788 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\5 => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\5
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1167 to #\5
run: 5789 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 1
run: 5790 print-character 13: (((reply)))
reply: nil nil
run: 5791 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 16903 to 1
run: 5792 print-string 10: (((jump)) ((-6 offset)))
run: 5793 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 16904 to t
run: 5794 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5795 print-board 8: (((6 string-address)) <- ((new))  | )
run: 16960 => ((6 string-address))
setm: ((6 string-address)) <= 16960
setm: size of ((6 string-address)) is 1
setm: ((6 string-address)): setting 13963 to 16960
run: 5796 print-board 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 string-address))
sizeof: ((6 string-address))
run: 5797 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16964 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5798 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 16960)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16966 to 1101
run: 5799 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 16960)
run: 16960 => ((2 string-address))
setm: ((2 string-address)) <= 16960
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 16967 to 16960
run: 5800 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((16960 integer) (raw))
sizeof: ((16960 integer) (raw))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 16968 to 3
run: 5801 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 16969 to 0
run: 5802 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 16970 to nil
run: 5803 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5804 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((16960 string) (raw))
m: ((16960 integer) (raw))
sizeof: ((16960 integer) (raw))
sizeof: ((_ byte))
m: ((16961 byte) (raw))
sizeof: ((16961 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 16971 to #\space
run: 5805 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 5806 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16995 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5807 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16997 to 1101
run: 5808 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16998 to #\space
run: 5809 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5810 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16999 to 1103
run: 5811 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17000 to 1104
run: 5812 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17001 to 20
run: 5813 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17002 to 60
run: 5814 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 61 => ((7 integer))
setm: ((7 integer)) <= 61
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17003 to 61
run: 5815 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17004 to 1106
run: 5816 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1168 => ((9 byte-address))
setm: ((9 byte-address)) <= 1168
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17005 to 1168
run: 5817 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1168 to #\space
run: 5818 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 2
run: 5819 print-character 13: (((reply)))
reply: nil nil
run: 5820 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 16969 to 1
run: 5821 print-string 10: (((jump)) ((-6 offset)))
run: 5822 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 16970 to nil
run: 5823 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5824 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((16960 string) (raw))
m: ((16960 integer) (raw))
sizeof: ((16960 integer) (raw))
sizeof: ((_ byte))
m: ((16962 byte) (raw))
sizeof: ((16962 byte) (raw))
run: #\| => ((6 character))
setm: ((6 character)) <= #\|
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 16971 to #\|
run: 5825 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 5826 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17026 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5827 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\|)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17028 to 1101
run: 5828 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\|)
run: #\| => ((2 character))
setm: ((2 character)) <= #\|
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17029 to #\|
run: 5829 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5830 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17030 to 1103
run: 5831 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17031 to 1104
run: 5832 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17032 to 20
run: 5833 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17033 to 60
run: 5834 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 62 => ((7 integer))
setm: ((7 integer)) <= 62
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17034 to 62
run: 5835 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17035 to 1106
run: 5836 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1169 => ((9 byte-address))
setm: ((9 byte-address)) <= 1169
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17036 to 1169
run: 5837 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\| => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\|
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1169 to #\|
run: 5838 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 3
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 3
run: 5839 print-character 13: (((reply)))
reply: nil nil
run: 5840 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 16969 to 2
run: 5841 print-string 10: (((jump)) ((-6 offset)))
run: 5842 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 16970 to nil
run: 5843 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5844 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((16960 string) (raw))
m: ((16960 integer) (raw))
sizeof: ((16960 integer) (raw))
sizeof: ((_ byte))
m: ((16963 byte) (raw))
sizeof: ((16963 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 16971 to #\space
run: 5845 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 5846 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17057 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5847 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17059 to 1101
run: 5848 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17060 to #\space
run: 5849 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5850 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17061 to 1103
run: 5851 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17062 to 1104
run: 5852 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17063 to 20
run: 5853 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17064 to 60
run: 5854 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 63 => ((7 integer))
setm: ((7 integer)) <= 63
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17065 to 63
run: 5855 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17066 to 1106
run: 5856 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1170 => ((9 byte-address))
setm: ((9 byte-address)) <= 1170
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17067 to 1170
run: 5857 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1170 to #\space
run: 5858 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 4
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 4
run: 5859 print-character 13: (((reply)))
reply: nil nil
run: 5860 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 16969 to 3
run: 5861 print-string 10: (((jump)) ((-6 offset)))
run: 5862 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 16970 to t
run: 5863 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5864 print-board 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 0
run: 5865 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 5866 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5867 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9625 file-address) (raw))
sizeof: ((9625 file-address) (raw))
run: 9664 => ((8 file-address))
setm: ((8 file-address)) <= 9664
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 9664
run: 5868 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9664 file) (raw))
m: ((9664 integer) (raw))
sizeof: ((9664 integer) (raw))
sizeof: ((_ square))
m: ((9669 square) (raw))
sizeof: ((9669 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 5869 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5870 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17088 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5871 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17090 to 1101
run: 5872 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17091 to #\_
run: 5873 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5874 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17092 to 1103
run: 5875 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17093 to 1104
run: 5876 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17094 to 20
run: 5877 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17095 to 60
run: 5878 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 64 => ((7 integer))
setm: ((7 integer)) <= 64
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17096 to 64
run: 5879 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17097 to 1106
run: 5880 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1171 => ((9 byte-address))
setm: ((9 byte-address)) <= 1171
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17098 to 1171
run: 5881 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1171 to #\_
run: 5882 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 5 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 5
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 5
run: 5883 print-character 13: (((reply)))
reply: nil nil
run: 5884 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5885 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17119 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5886 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17121 to 1101
run: 5887 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17122 to #\space
run: 5888 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5889 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17123 to 1103
run: 5890 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17124 to 1104
run: 5891 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17125 to 20
run: 5892 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17126 to 60
run: 5893 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 65 => ((7 integer))
setm: ((7 integer)) <= 65
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17127 to 65
run: 5894 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17128 to 1106
run: 5895 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1172 => ((9 byte-address))
setm: ((9 byte-address)) <= 1172
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17129 to 1172
run: 5896 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1172 to #\space
run: 5897 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 6 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 6
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 6
run: 5898 print-character 13: (((reply)))
reply: nil nil
run: 5899 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 1
run: 5900 print-board 18: (((jump)) ((-8 offset)))
run: 5901 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 5902 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5903 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9626 file-address) (raw))
sizeof: ((9626 file-address) (raw))
run: 10200 => ((8 file-address))
setm: ((8 file-address)) <= 10200
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 10200
run: 5904 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10200 file) (raw))
m: ((10200 integer) (raw))
sizeof: ((10200 integer) (raw))
sizeof: ((_ square))
m: ((10205 square) (raw))
sizeof: ((10205 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 5905 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5906 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17150 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5907 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17152 to 1101
run: 5908 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17153 to #\_
run: 5909 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5910 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17154 to 1103
run: 5911 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17155 to 1104
run: 5912 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17156 to 20
run: 5913 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17157 to 60
run: 5914 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 66 => ((7 integer))
setm: ((7 integer)) <= 66
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17158 to 66
run: 5915 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17159 to 1106
run: 5916 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1173 => ((9 byte-address))
setm: ((9 byte-address)) <= 1173
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17160 to 1173
run: 5917 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1173 to #\_
run: 5918 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 7 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 7
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 7
run: 5919 print-character 13: (((reply)))
reply: nil nil
run: 5920 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5921 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17181 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5922 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17183 to 1101
run: 5923 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17184 to #\space
run: 5924 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5925 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17185 to 1103
run: 5926 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17186 to 1104
run: 5927 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17187 to 20
run: 5928 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17188 to 60
run: 5929 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 67 => ((7 integer))
setm: ((7 integer)) <= 67
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17189 to 67
run: 5930 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17190 to 1106
run: 5931 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1174 => ((9 byte-address))
setm: ((9 byte-address)) <= 1174
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17191 to 1174
run: 5932 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1174 to #\space
run: 5933 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 8 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 8
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 8
run: 5934 print-character 13: (((reply)))
reply: nil nil
run: 5935 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 2 => ((7 integer))
setm: ((7 integer)) <= 2
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 2
run: 5936 print-board 18: (((jump)) ((-8 offset)))
run: 5937 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 5938 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5939 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9627 file-address) (raw))
sizeof: ((9627 file-address) (raw))
run: 10736 => ((8 file-address))
setm: ((8 file-address)) <= 10736
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 10736
run: 5940 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10736 file) (raw))
m: ((10736 integer) (raw))
sizeof: ((10736 integer) (raw))
sizeof: ((_ square))
m: ((10741 square) (raw))
sizeof: ((10741 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 5941 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5942 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17212 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5943 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17214 to 1101
run: 5944 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17215 to #\_
run: 5945 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5946 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17216 to 1103
run: 5947 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17217 to 1104
run: 5948 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17218 to 20
run: 5949 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17219 to 60
run: 5950 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 68 => ((7 integer))
setm: ((7 integer)) <= 68
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17220 to 68
run: 5951 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17221 to 1106
run: 5952 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1175 => ((9 byte-address))
setm: ((9 byte-address)) <= 1175
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17222 to 1175
run: 5953 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1175 to #\_
run: 5954 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 9 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 9
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 9
run: 5955 print-character 13: (((reply)))
reply: nil nil
run: 5956 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5957 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17243 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5958 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17245 to 1101
run: 5959 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17246 to #\space
run: 5960 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5961 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17247 to 1103
run: 5962 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17248 to 1104
run: 5963 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17249 to 20
run: 5964 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17250 to 60
run: 5965 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 69 => ((7 integer))
setm: ((7 integer)) <= 69
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17251 to 69
run: 5966 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17252 to 1106
run: 5967 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1176 => ((9 byte-address))
setm: ((9 byte-address)) <= 1176
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17253 to 1176
run: 5968 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1176 to #\space
run: 5969 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 10 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 10
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 10
run: 5970 print-character 13: (((reply)))
reply: nil nil
run: 5971 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 3 => ((7 integer))
setm: ((7 integer)) <= 3
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 3
run: 5972 print-board 18: (((jump)) ((-8 offset)))
run: 5973 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 5974 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5975 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9628 file-address) (raw))
sizeof: ((9628 file-address) (raw))
run: 11272 => ((8 file-address))
setm: ((8 file-address)) <= 11272
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 11272
run: 5976 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11272 file) (raw))
m: ((11272 integer) (raw))
sizeof: ((11272 integer) (raw))
sizeof: ((_ square))
m: ((11277 square) (raw))
sizeof: ((11277 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 5977 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5978 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17274 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5979 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17276 to 1101
run: 5980 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17277 to #\_
run: 5981 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5982 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17278 to 1103
run: 5983 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17279 to 1104
run: 5984 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17280 to 20
run: 5985 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17281 to 60
run: 5986 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 70 => ((7 integer))
setm: ((7 integer)) <= 70
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17282 to 70
run: 5987 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17283 to 1106
run: 5988 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1177 => ((9 byte-address))
setm: ((9 byte-address)) <= 1177
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17284 to 1177
run: 5989 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1177 to #\_
run: 5990 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 11 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 11
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 11
run: 5991 print-character 13: (((reply)))
reply: nil nil
run: 5992 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5993 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17305 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5994 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17307 to 1101
run: 5995 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17308 to #\space
run: 5996 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5997 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17309 to 1103
run: 5998 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17310 to 1104
run: 5999 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17311 to 20
run: 6000 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17312 to 60
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: 6001 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 71 => ((7 integer))
setm: ((7 integer)) <= 71
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17313 to 71
run: 6002 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17314 to 1106
run: 6003 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1178 => ((9 byte-address))
setm: ((9 byte-address)) <= 1178
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17315 to 1178
run: 6004 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1178 to #\space
run: 6005 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 12 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 12
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 12
run: 6006 print-character 13: (((reply)))
reply: nil nil
run: 6007 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 4 => ((7 integer))
setm: ((7 integer)) <= 4
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 4
run: 6008 print-board 18: (((jump)) ((-8 offset)))
run: 6009 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 6010 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6011 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9629 file-address) (raw))
sizeof: ((9629 file-address) (raw))
run: 11808 => ((8 file-address))
setm: ((8 file-address)) <= 11808
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 11808
run: 6012 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11808 file) (raw))
m: ((11808 integer) (raw))
sizeof: ((11808 integer) (raw))
sizeof: ((_ square))
m: ((11813 square) (raw))
sizeof: ((11813 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 6013 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6014 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17336 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6015 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17338 to 1101
run: 6016 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17339 to #\_
run: 6017 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6018 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17340 to 1103
run: 6019 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17341 to 1104
run: 6020 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17342 to 20
run: 6021 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17343 to 60
run: 6022 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 72 => ((7 integer))
setm: ((7 integer)) <= 72
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17344 to 72
run: 6023 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17345 to 1106
run: 6024 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1179 => ((9 byte-address))
setm: ((9 byte-address)) <= 1179
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17346 to 1179
run: 6025 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1179 to #\_
run: 6026 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 13 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 13
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 13
run: 6027 print-character 13: (((reply)))
reply: nil nil
run: 6028 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6029 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17367 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6030 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17369 to 1101
run: 6031 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17370 to #\space
run: 6032 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6033 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17371 to 1103
run: 6034 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17372 to 1104
run: 6035 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17373 to 20
run: 6036 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17374 to 60
run: 6037 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 73 => ((7 integer))
setm: ((7 integer)) <= 73
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17375 to 73
run: 6038 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17376 to 1106
run: 6039 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1180 => ((9 byte-address))
setm: ((9 byte-address)) <= 1180
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17377 to 1180
run: 6040 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1180 to #\space
run: 6041 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 14 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 14
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 14
run: 6042 print-character 13: (((reply)))
reply: nil nil
run: 6043 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 5 => ((7 integer))
setm: ((7 integer)) <= 5
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 5
run: 6044 print-board 18: (((jump)) ((-8 offset)))
run: 6045 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 6046 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6047 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9630 file-address) (raw))
sizeof: ((9630 file-address) (raw))
run: 12344 => ((8 file-address))
setm: ((8 file-address)) <= 12344
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 12344
run: 6048 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12344 file) (raw))
m: ((12344 integer) (raw))
sizeof: ((12344 integer) (raw))
sizeof: ((_ square))
m: ((12349 square) (raw))
sizeof: ((12349 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 6049 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6050 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17398 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6051 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17400 to 1101
run: 6052 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17401 to #\_
run: 6053 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6054 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17402 to 1103
run: 6055 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17403 to 1104
run: 6056 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17404 to 20
run: 6057 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17405 to 60
run: 6058 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 74 => ((7 integer))
setm: ((7 integer)) <= 74
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17406 to 74
run: 6059 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17407 to 1106
run: 6060 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1181 => ((9 byte-address))
setm: ((9 byte-address)) <= 1181
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17408 to 1181
run: 6061 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1181 to #\_
run: 6062 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 15 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 15
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 15
run: 6063 print-character 13: (((reply)))
reply: nil nil
run: 6064 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6065 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17429 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6066 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17431 to 1101
run: 6067 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17432 to #\space
run: 6068 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6069 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17433 to 1103
run: 6070 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17434 to 1104
run: 6071 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17435 to 20
run: 6072 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17436 to 60
run: 6073 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 75 => ((7 integer))
setm: ((7 integer)) <= 75
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17437 to 75
run: 6074 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17438 to 1106
run: 6075 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1182 => ((9 byte-address))
setm: ((9 byte-address)) <= 1182
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17439 to 1182
run: 6076 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1182 to #\space
run: 6077 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 16 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 16
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 16
run: 6078 print-character 13: (((reply)))
reply: nil nil
run: 6079 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 6 => ((7 integer))
setm: ((7 integer)) <= 6
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 6
run: 6080 print-board 18: (((jump)) ((-8 offset)))
run: 6081 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 6082 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6083 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9631 file-address) (raw))
sizeof: ((9631 file-address) (raw))
run: 12880 => ((8 file-address))
setm: ((8 file-address)) <= 12880
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 12880
run: 6084 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12880 file) (raw))
m: ((12880 integer) (raw))
sizeof: ((12880 integer) (raw))
sizeof: ((_ square))
m: ((12885 square) (raw))
sizeof: ((12885 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 6085 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6086 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17460 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6087 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17462 to 1101
run: 6088 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17463 to #\_
run: 6089 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6090 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17464 to 1103
run: 6091 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17465 to 1104
run: 6092 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17466 to 20
run: 6093 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17467 to 60
run: 6094 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 76 => ((7 integer))
setm: ((7 integer)) <= 76
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17468 to 76
run: 6095 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17469 to 1106
run: 6096 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1183 => ((9 byte-address))
setm: ((9 byte-address)) <= 1183
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17470 to 1183
run: 6097 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1183 to #\_
run: 6098 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 17 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 17
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 17
run: 6099 print-character 13: (((reply)))
reply: nil nil
run: 6100 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6101 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17491 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6102 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17493 to 1101
run: 6103 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17494 to #\space
run: 6104 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6105 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17495 to 1103
run: 6106 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17496 to 1104
run: 6107 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17497 to 20
run: 6108 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17498 to 60
run: 6109 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 77 => ((7 integer))
setm: ((7 integer)) <= 77
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17499 to 77
run: 6110 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17500 to 1106
run: 6111 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1184 => ((9 byte-address))
setm: ((9 byte-address)) <= 1184
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17501 to 1184
run: 6112 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1184 to #\space
run: 6113 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 18 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 18
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 18
run: 6114 print-character 13: (((reply)))
reply: nil nil
run: 6115 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 7 => ((7 integer))
setm: ((7 integer)) <= 7
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 7
run: 6116 print-board 18: (((jump)) ((-8 offset)))
run: 6117 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 6118 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6119 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9632 file-address) (raw))
sizeof: ((9632 file-address) (raw))
run: 13416 => ((8 file-address))
setm: ((8 file-address)) <= 13416
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 13416
run: 6120 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13416 file) (raw))
m: ((13416 integer) (raw))
sizeof: ((13416 integer) (raw))
sizeof: ((_ square))
m: ((13421 square) (raw))
sizeof: ((13421 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 6121 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6122 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17522 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6123 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17524 to 1101
run: 6124 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17525 to #\_
run: 6125 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6126 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17526 to 1103
run: 6127 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17527 to 1104
run: 6128 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17528 to 20
run: 6129 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17529 to 60
run: 6130 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 78 => ((7 integer))
setm: ((7 integer)) <= 78
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17530 to 78
run: 6131 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17531 to 1106
run: 6132 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1185 => ((9 byte-address))
setm: ((9 byte-address)) <= 1185
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17532 to 1185
run: 6133 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1185 to #\_
run: 6134 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 19 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 19
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 19
run: 6135 print-character 13: (((reply)))
reply: nil nil
run: 6136 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6137 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17553 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6138 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17555 to 1101
run: 6139 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17556 to #\space
run: 6140 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6141 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17557 to 1103
run: 6142 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17558 to 1104
run: 6143 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17559 to 20
run: 6144 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17560 to 60
run: 6145 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 79 => ((7 integer))
setm: ((7 integer)) <= 79
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17561 to 79
run: 6146 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17562 to 1106
run: 6147 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1186 => ((9 byte-address))
setm: ((9 byte-address)) <= 1186
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17563 to 1186
run: 6148 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1186 to #\space
run: 6149 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 20 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 20
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 20
run: 6150 print-character 13: (((reply)))
reply: nil nil
run: 6151 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 8 => ((7 integer))
setm: ((7 integer)) <= 8
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 8
run: 6152 print-board 18: (((jump)) ((-8 offset)))
run: 6153 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to t
run: 6154 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6155 print-board 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13960 to 3
run: 6156 print-board 20: (((cursor-to-next-line)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6157 cursor-to-next-line 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17584 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6158 cursor-to-next-line 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17586 to 1101
run: 6159 cursor-to-next-line 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6160 cursor-to-next-line 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((2 integer-address))
setm: ((2 integer-address)) <= 1103
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 17587 to 1103
run: 6161 cursor-to-next-line 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 4 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 4
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1103 to 4
run: 6162 cursor-to-next-line 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((3 integer-address))
setm: ((3 integer-address)) <= 1104
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17588 to 1104
run: 6163 cursor-to-next-line 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 1104 to 0
run: 6164 cursor-to-next-line 7: (((reply)))
reply: nil nil
run: 6165 print-board 21: (((jump)) ((-18 offset)))
run: 6166 print-board 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 6167 print-board 5: (((jump-if)) ((4 boolean)) ((16 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6168 print-board 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 13962 to 4
run: 6169 print-board 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((5 integer))
sizeof: ((5 integer))
run: 6170 print-integer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17615 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6171 print-integer 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 4)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17617 to 1101
run: 6172 print-integer 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1101 4)
run: 4 => ((2 integer))
setm: ((2 integer)) <= 4
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 17618 to 4
run: 6173 print-integer 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
run: 6174 integer-to-decimal-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17646 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6175 integer-to-decimal-string 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (4)
run: 4 => ((1 integer))
setm: ((1 integer)) <= 4
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 17648 to 4
run: 6176 integer-to-decimal-string 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 17649 to nil
run: 6177 integer-to-decimal-string 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 6178 integer-to-decimal-string 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 17651 to nil
run: 6179 integer-to-decimal-string 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 17652 to nil
run: 6180 integer-to-decimal-string 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6181 integer-to-decimal-string 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: 6182 init-buffer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17677 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6183 init-buffer 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
sizeof: ((_ buffer))
sizeof: ((_ integer))
sizeof: ((_ string-address))
run: 17708 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 17708
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 17679 to 17708
run: 6184 init-buffer 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 17708 => ((2 integer-address))
setm: ((2 integer-address)) <= 17708
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 17680 to 17708
run: 6185 init-buffer 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 17708 to 0
run: 6186 init-buffer 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 17709 => ((3 string-address-address))
setm: ((3 string-address-address)) <= 17709
setm: size of ((3 string-address-address)) is 1
setm: ((3 string-address-address)): setting 17681 to 17709
run: 6187 init-buffer 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 17682 to 30
run: 6188 init-buffer 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ byte))
run: 17710 => ((3 string-address-address) (deref))
setm: ((3 string-address-address) (deref)) <= 17710
setm: size of ((3 string-address-address) (deref)) is 1
setm: ((3 string-address-address) (deref)): setting 17709 to 17710
run: 6189 init-buffer 7: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 17708 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 17708
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 17653 to 17708
run: 6190 integer-to-decimal-string 12: (((7 character)) <- ((copy)) ((0 literal)))
run: #\0 => ((7 character))
setm: ((7 character)) <= #\0
setm: size of ((7 character)) is 1
setm: ((7 character)): setting 17654 to #\0
run: 6191 integer-to-decimal-string 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 48 => ((8 integer))
setm: ((8 integer)) <= 48
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 17655 to 48
run: 6192 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 17656 to nil
run: 6193 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 6194 integer-to-decimal-string 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
m: ((1 integer))
sizeof: ((1 integer))
m: ((1 integer))
sizeof: ((1 integer))
run: 0 => ((1 integer))
setm: ((1 integer)) <= 0
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 17648 to 0
run: 4 => ((10 integer))
setm: ((10 integer)) <= 4
setm: size of ((10 integer)) is 1
setm: ((10 integer)): setting 17657 to 4
run: 6195 integer-to-decimal-string 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((10 integer))
sizeof: ((10 integer))
run: 52 => ((11 integer))
setm: ((11 integer)) <= 52
setm: size of ((11 integer)) is 1
setm: ((11 integer)): setting 17658 to 52
run: 6196 integer-to-decimal-string 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
m: ((11 integer))
sizeof: ((11 integer))
run: #\4 => ((12 character))
setm: ((12 character)) <= #\4
setm: size of ((12 character)) is 1
setm: ((12 character)): setting 17659 to #\4
run: 6197 integer-to-decimal-string 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
m: ((6 buffer-address))
sizeof: ((6 buffer-address))
m: ((12 character))
sizeof: ((12 character))
run: 6198 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17741 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6199 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (17708 #\4)
run: 17708 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 17708
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 17743 to 17708
run: 6200 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (17708 #\4)
run: #\4 => ((2 character))
setm: ((2 character)) <= #\4
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17744 to #\4
run: 6201 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 6202 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17772 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6203 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (17708)
run: 17708 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 17708
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 17774 to 17708
run: 6204 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((17708 integer) (raw))
sizeof: ((17708 integer) (raw))
run: 0 => ((2 integer))
setm: ((2 integer)) <= 0
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 17775 to 0
run: 6205 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((17709 string-address) (raw))
sizeof: ((17709 string-address) (raw))
run: 17710 => ((3 string-address))
setm: ((3 string-address)) <= 17710
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 17776 to 17710
run: 6206 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((17710 integer) (raw))
sizeof: ((17710 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 17777 to 30
run: 6207 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 17778 to nil
run: 6208 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 17745 to nil
run: 6209 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 6210 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 17708 => ((4 integer-address))
setm: ((4 integer-address)) <= 17708
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17746 to 17708
run: 6211 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((17709 string-address) (raw))
sizeof: ((17709 string-address) (raw))
run: 17710 => ((5 string-address))
setm: ((5 string-address)) <= 17710
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 17747 to 17710
run: 6212 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((17710 string) (raw))
m: ((17710 integer) (raw))
sizeof: ((17710 integer) (raw))
sizeof: ((_ byte))
run: 17711 => ((6 byte-address))
setm: ((6 byte-address)) <= 17711
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 17748 to 17711
run: 6213 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\4 => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\4
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 17711 to #\4
run: 6214 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 17708 to 1
run: 6215 append 11: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 17708 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 17708
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 17653 to 17708
run: 6216 integer-to-decimal-string 20: (((jump)) ((-7 offset)))
run: 6217 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 17656 to t
run: 6218 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 6219 integer-to-decimal-string 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6220 integer-to-decimal-string 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
m: ((17708 integer) (raw))
sizeof: ((17708 integer) (raw))
run: 1 => ((13 integer))
setm: ((13 integer)) <= 1
setm: size of ((13 integer)) is 1
setm: ((13 integer)): setting 17660 to 1
run: 6221 integer-to-decimal-string 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((17709 string-address) (raw))
sizeof: ((17709 string-address) (raw))
run: 17710 => ((14 string-address))
setm: ((14 string-address)) <= 17710
setm: size of ((14 string-address)) is 1
setm: ((14 string-address)): setting 17661 to 17710
run: 6222 integer-to-decimal-string 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
m: ((13 integer))
sizeof: ((13 integer))
sizeof: ((_ byte))
run: 17803 => ((15 string-address))
setm: ((15 string-address)) <= 17803
setm: size of ((15 string-address)) is 1
setm: ((15 string-address)): setting 17662 to 17803
run: 6223 integer-to-decimal-string 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
m: ((13 integer))
sizeof: ((13 integer))
run: 0 => ((16 integer))
setm: ((16 integer)) <= 0
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 17663 to 0
run: 6224 integer-to-decimal-string 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((17 integer))
setm: ((17 integer)) <= 0
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 17664 to 0
run: 6225 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 17656 to nil
run: 6226 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 6227 integer-to-decimal-string 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
m: ((16 integer))
sizeof: ((16 integer))
array-len: ((17710 string) (raw))
m: ((17710 integer) (raw))
sizeof: ((17710 integer) (raw))
sizeof: ((_ byte))
m: ((17711 byte) (raw))
sizeof: ((17711 byte) (raw))
run: #\4 => ((18 byte))
setm: ((18 byte)) <= #\4
setm: size of ((18 byte)) is 1
setm: ((18 byte)): setting 17665 to #\4
run: 6228 integer-to-decimal-string 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
m: ((17 integer))
sizeof: ((17 integer))
array-len: ((17803 string) (raw))
m: ((17803 integer) (raw))
sizeof: ((17803 integer) (raw))
sizeof: ((_ byte))
run: 17804 => ((19 byte-address))
setm: ((19 byte-address)) <= 17804
setm: size of ((19 byte-address)) is 1
setm: ((19 byte-address)): setting 17666 to 17804
run: 6229 integer-to-decimal-string 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
m: ((18 byte))
sizeof: ((18 byte))
run: #\4 => ((19 byte-address) (deref))
setm: ((19 byte-address) (deref)) <= #\4
setm: size of ((19 byte-address) (deref)) is 1
setm: ((19 byte-address) (deref)): setting 17804 to #\4
run: 6230 integer-to-decimal-string 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: -1 => ((16 integer))
setm: ((16 integer)) <= -1
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 17663 to -1
run: 6231 integer-to-decimal-string 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
m: ((17 integer))
sizeof: ((17 integer))
run: 1 => ((17 integer))
setm: ((17 integer)) <= 1
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 17664 to 1
run: 6232 integer-to-decimal-string 35: (((jump)) ((-8 offset)))
run: 6233 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 17656 to t
run: 6234 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 6235 integer-to-decimal-string 36: (((reply)) ((15 string-address)))
m: ((15 string-address))
sizeof: ((15 string-address))
reply: (((15 string-address))) (((3 string-address)))
reply: 17803 => ((3 string-address))
setm: ((3 string-address)) <= 17803
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 17619 to 17803
run: 6236 print-integer 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((3 string-address))
sizeof: ((3 string-address))
run: 6237 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17805 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6238 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 17803)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17807 to 1101
run: 6239 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 17803)
run: 17803 => ((2 string-address))
setm: ((2 string-address)) <= 17803
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 17808 to 17803
run: 6240 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((17803 integer) (raw))
sizeof: ((17803 integer) (raw))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 17809 to 1
run: 6241 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 17810 to 0
run: 6242 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 17811 to nil
run: 6243 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6244 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((17803 string) (raw))
m: ((17803 integer) (raw))
sizeof: ((17803 integer) (raw))
sizeof: ((_ byte))
m: ((17804 byte) (raw))
sizeof: ((17804 byte) (raw))
run: #\4 => ((6 character))
setm: ((6 character)) <= #\4
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 17812 to #\4
run: 6245 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 6246 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17836 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6247 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\4)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17838 to 1101
run: 6248 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\4)
run: #\4 => ((2 character))
setm: ((2 character)) <= #\4
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17839 to #\4
run: 6249 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6250 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17840 to 1103
run: 6251 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17841 to 1104
run: 6252 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17842 to 20
run: 6253 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17843 to 80
run: 6254 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 80 => ((7 integer))
setm: ((7 integer)) <= 80
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17844 to 80
run: 6255 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17845 to 1106
run: 6256 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1187 => ((9 byte-address))
setm: ((9 byte-address)) <= 1187
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17846 to 1187
run: 6257 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\4 => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\4
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1187 to #\4
run: 6258 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 1
run: 6259 print-character 13: (((reply)))
reply: nil nil
run: 6260 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 17810 to 1
run: 6261 print-string 10: (((jump)) ((-6 offset)))
run: 6262 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 17811 to t
run: 6263 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6264 print-board 8: (((6 string-address)) <- ((new))  | )
run: 17867 => ((6 string-address))
setm: ((6 string-address)) <= 17867
setm: size of ((6 string-address)) is 1
setm: ((6 string-address)): setting 13963 to 17867
run: 6265 print-board 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 string-address))
sizeof: ((6 string-address))
run: 6266 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17871 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6267 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 17867)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17873 to 1101
run: 6268 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 17867)
run: 17867 => ((2 string-address))
setm: ((2 string-address)) <= 17867
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 17874 to 17867
run: 6269 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((17867 integer) (raw))
sizeof: ((17867 integer) (raw))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 17875 to 3
run: 6270 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 17876 to 0
run: 6271 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 17877 to nil
run: 6272 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6273 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((17867 string) (raw))
m: ((17867 integer) (raw))
sizeof: ((17867 integer) (raw))
sizeof: ((_ byte))
m: ((17868 byte) (raw))
sizeof: ((17868 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 17878 to #\space
run: 6274 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 6275 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17902 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6276 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17904 to 1101
run: 6277 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17905 to #\space
run: 6278 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6279 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17906 to 1103
run: 6280 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17907 to 1104
run: 6281 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17908 to 20
run: 6282 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17909 to 80
run: 6283 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 81 => ((7 integer))
setm: ((7 integer)) <= 81
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17910 to 81
run: 6284 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17911 to 1106
run: 6285 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1188 => ((9 byte-address))
setm: ((9 byte-address)) <= 1188
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17912 to 1188
run: 6286 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1188 to #\space
run: 6287 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 2
run: 6288 print-character 13: (((reply)))
reply: nil nil
run: 6289 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 17876 to 1
run: 6290 print-string 10: (((jump)) ((-6 offset)))
run: 6291 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 17877 to nil
run: 6292 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6293 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((17867 string) (raw))
m: ((17867 integer) (raw))
sizeof: ((17867 integer) (raw))
sizeof: ((_ byte))
m: ((17869 byte) (raw))
sizeof: ((17869 byte) (raw))
run: #\| => ((6 character))
setm: ((6 character)) <= #\|
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 17878 to #\|
run: 6294 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 6295 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17933 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6296 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\|)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17935 to 1101
run: 6297 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\|)
run: #\| => ((2 character))
setm: ((2 character)) <= #\|
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17936 to #\|
run: 6298 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6299 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17937 to 1103
run: 6300 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17938 to 1104
run: 6301 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17939 to 20
run: 6302 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17940 to 80
run: 6303 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 82 => ((7 integer))
setm: ((7 integer)) <= 82
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17941 to 82
run: 6304 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17942 to 1106
run: 6305 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1189 => ((9 byte-address))
setm: ((9 byte-address)) <= 1189
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17943 to 1189
run: 6306 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\| => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\|
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1189 to #\|
run: 6307 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 3
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 3
run: 6308 print-character 13: (((reply)))
reply: nil nil
run: 6309 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 17876 to 2
run: 6310 print-string 10: (((jump)) ((-6 offset)))
run: 6311 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 17877 to nil
run: 6312 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6313 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((17867 string) (raw))
m: ((17867 integer) (raw))
sizeof: ((17867 integer) (raw))
sizeof: ((_ byte))
m: ((17870 byte) (raw))
sizeof: ((17870 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 17878 to #\space
run: 6314 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 6315 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17964 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6316 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17966 to 1101
run: 6317 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17967 to #\space
run: 6318 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6319 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17968 to 1103
run: 6320 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17969 to 1104
run: 6321 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17970 to 20
run: 6322 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17971 to 80
run: 6323 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 83 => ((7 integer))
setm: ((7 integer)) <= 83
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17972 to 83
run: 6324 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17973 to 1106
run: 6325 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1190 => ((9 byte-address))
setm: ((9 byte-address)) <= 1190
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17974 to 1190
run: 6326 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1190 to #\space
run: 6327 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 4
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 4
run: 6328 print-character 13: (((reply)))
reply: nil nil
run: 6329 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 17876 to 3
run: 6330 print-string 10: (((jump)) ((-6 offset)))
run: 6331 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 17877 to t
run: 6332 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6333 print-board 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 0
run: 6334 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 6335 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6336 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9625 file-address) (raw))
sizeof: ((9625 file-address) (raw))
run: 9664 => ((8 file-address))
setm: ((8 file-address)) <= 9664
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 9664
run: 6337 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9664 file) (raw))
m: ((9664 integer) (raw))
sizeof: ((9664 integer) (raw))
sizeof: ((_ square))
m: ((9668 square) (raw))
sizeof: ((9668 square) (raw))
run: #\P => ((6 square))
setm: ((6 square)) <= #\P
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\P
run: 6338 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6339 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17995 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6340 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\P)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17997 to 1101
run: 6341 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\P)
run: #\P => ((2 character))
setm: ((2 character)) <= #\P
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17998 to #\P
run: 6342 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6343 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17999 to 1103
run: 6344 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18000 to 1104
run: 6345 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18001 to 20
run: 6346 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18002 to 80
run: 6347 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 84 => ((7 integer))
setm: ((7 integer)) <= 84
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18003 to 84
run: 6348 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18004 to 1106
run: 6349 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1191 => ((9 byte-address))
setm: ((9 byte-address)) <= 1191
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18005 to 1191
run: 6350 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\P => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\P
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1191 to #\P
run: 6351 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 5 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 5
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 5
run: 6352 print-character 13: (((reply)))
reply: nil nil
run: 6353 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6354 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18026 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6355 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18028 to 1101
run: 6356 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18029 to #\space
run: 6357 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6358 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18030 to 1103
run: 6359 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18031 to 1104
run: 6360 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18032 to 20
run: 6361 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18033 to 80
run: 6362 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 85 => ((7 integer))
setm: ((7 integer)) <= 85
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18034 to 85
run: 6363 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18035 to 1106
run: 6364 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1192 => ((9 byte-address))
setm: ((9 byte-address)) <= 1192
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18036 to 1192
run: 6365 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1192 to #\space
run: 6366 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 6 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 6
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 6
run: 6367 print-character 13: (((reply)))
reply: nil nil
run: 6368 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 1
run: 6369 print-board 18: (((jump)) ((-8 offset)))
run: 6370 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 6371 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6372 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9626 file-address) (raw))
sizeof: ((9626 file-address) (raw))
run: 10200 => ((8 file-address))
setm: ((8 file-address)) <= 10200
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 10200
run: 6373 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10200 file) (raw))
m: ((10200 integer) (raw))
sizeof: ((10200 integer) (raw))
sizeof: ((_ square))
m: ((10204 square) (raw))
sizeof: ((10204 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 6374 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6375 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18057 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6376 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18059 to 1101
run: 6377 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18060 to #\_
run: 6378 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6379 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18061 to 1103
run: 6380 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18062 to 1104
run: 6381 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18063 to 20
run: 6382 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18064 to 80
run: 6383 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 86 => ((7 integer))
setm: ((7 integer)) <= 86
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18065 to 86
run: 6384 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18066 to 1106
run: 6385 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1193 => ((9 byte-address))
setm: ((9 byte-address)) <= 1193
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18067 to 1193
run: 6386 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1193 to #\_
run: 6387 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 7 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 7
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 7
run: 6388 print-character 13: (((reply)))
reply: nil nil
run: 6389 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6390 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18088 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6391 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18090 to 1101
run: 6392 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18091 to #\space
run: 6393 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6394 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18092 to 1103
run: 6395 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18093 to 1104
run: 6396 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18094 to 20
run: 6397 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18095 to 80
run: 6398 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 87 => ((7 integer))
setm: ((7 integer)) <= 87
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18096 to 87
run: 6399 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18097 to 1106
run: 6400 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1194 => ((9 byte-address))
setm: ((9 byte-address)) <= 1194
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18098 to 1194
run: 6401 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1194 to #\space
run: 6402 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 8 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 8
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 8
run: 6403 print-character 13: (((reply)))
reply: nil nil
run: 6404 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 2 => ((7 integer))
setm: ((7 integer)) <= 2
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 2
run: 6405 print-board 18: (((jump)) ((-8 offset)))
run: 6406 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 6407 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6408 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9627 file-address) (raw))
sizeof: ((9627 file-address) (raw))
run: 10736 => ((8 file-address))
setm: ((8 file-address)) <= 10736
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 10736
run: 6409 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10736 file) (raw))
m: ((10736 integer) (raw))
sizeof: ((10736 integer) (raw))
sizeof: ((_ square))
m: ((10740 square) (raw))
sizeof: ((10740 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 6410 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6411 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18119 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6412 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18121 to 1101
run: 6413 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18122 to #\_
run: 6414 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6415 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18123 to 1103
run: 6416 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18124 to 1104
run: 6417 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18125 to 20
run: 6418 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18126 to 80
run: 6419 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 88 => ((7 integer))
setm: ((7 integer)) <= 88
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18127 to 88
run: 6420 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18128 to 1106
run: 6421 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1195 => ((9 byte-address))
setm: ((9 byte-address)) <= 1195
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18129 to 1195
run: 6422 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1195 to #\_
run: 6423 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 9 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 9
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 9
run: 6424 print-character 13: (((reply)))
reply: nil nil
run: 6425 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6426 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18150 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6427 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18152 to 1101
run: 6428 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18153 to #\space
run: 6429 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6430 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18154 to 1103
run: 6431 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18155 to 1104
run: 6432 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18156 to 20
run: 6433 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18157 to 80
run: 6434 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 89 => ((7 integer))
setm: ((7 integer)) <= 89
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18158 to 89
run: 6435 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18159 to 1106
run: 6436 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1196 => ((9 byte-address))
setm: ((9 byte-address)) <= 1196
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18160 to 1196
run: 6437 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1196 to #\space
run: 6438 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 10 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 10
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 10
run: 6439 print-character 13: (((reply)))
reply: nil nil
run: 6440 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 3 => ((7 integer))
setm: ((7 integer)) <= 3
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 3
run: 6441 print-board 18: (((jump)) ((-8 offset)))
run: 6442 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 6443 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6444 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9628 file-address) (raw))
sizeof: ((9628 file-address) (raw))
run: 11272 => ((8 file-address))
setm: ((8 file-address)) <= 11272
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 11272
run: 6445 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11272 file) (raw))
m: ((11272 integer) (raw))
sizeof: ((11272 integer) (raw))
sizeof: ((_ square))
m: ((11276 square) (raw))
sizeof: ((11276 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 6446 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6447 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18181 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6448 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18183 to 1101
run: 6449 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18184 to #\_
run: 6450 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6451 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18185 to 1103
run: 6452 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18186 to 1104
run: 6453 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18187 to 20
run: 6454 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18188 to 80
run: 6455 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 90 => ((7 integer))
setm: ((7 integer)) <= 90
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18189 to 90
run: 6456 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18190 to 1106
run: 6457 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1197 => ((9 byte-address))
setm: ((9 byte-address)) <= 1197
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18191 to 1197
run: 6458 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1197 to #\_
run: 6459 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 11 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 11
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 11
run: 6460 print-character 13: (((reply)))
reply: nil nil
run: 6461 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6462 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18212 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6463 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18214 to 1101
run: 6464 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18215 to #\space
run: 6465 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6466 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18216 to 1103
run: 6467 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18217 to 1104
run: 6468 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18218 to 20
run: 6469 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18219 to 80
run: 6470 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 91 => ((7 integer))
setm: ((7 integer)) <= 91
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18220 to 91
run: 6471 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18221 to 1106
run: 6472 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1198 => ((9 byte-address))
setm: ((9 byte-address)) <= 1198
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18222 to 1198
run: 6473 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1198 to #\space
run: 6474 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 12 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 12
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 12
run: 6475 print-character 13: (((reply)))
reply: nil nil
run: 6476 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 4 => ((7 integer))
setm: ((7 integer)) <= 4
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 4
run: 6477 print-board 18: (((jump)) ((-8 offset)))
run: 6478 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 6479 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6480 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9629 file-address) (raw))
sizeof: ((9629 file-address) (raw))
run: 11808 => ((8 file-address))
setm: ((8 file-address)) <= 11808
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 11808
run: 6481 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11808 file) (raw))
m: ((11808 integer) (raw))
sizeof: ((11808 integer) (raw))
sizeof: ((_ square))
m: ((11812 square) (raw))
sizeof: ((11812 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 6482 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6483 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18243 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6484 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18245 to 1101
run: 6485 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18246 to #\_
run: 6486 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6487 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18247 to 1103
run: 6488 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18248 to 1104
run: 6489 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18249 to 20
run: 6490 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18250 to 80
run: 6491 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 92 => ((7 integer))
setm: ((7 integer)) <= 92
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18251 to 92
run: 6492 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18252 to 1106
run: 6493 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1199 => ((9 byte-address))
setm: ((9 byte-address)) <= 1199
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18253 to 1199
run: 6494 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1199 to #\_
run: 6495 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 13 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 13
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 13
run: 6496 print-character 13: (((reply)))
reply: nil nil
run: 6497 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6498 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18274 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6499 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18276 to 1101
run: 6500 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18277 to #\space
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: 6501 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6502 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18278 to 1103
run: 6503 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18279 to 1104
run: 6504 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18280 to 20
run: 6505 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18281 to 80
run: 6506 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 93 => ((7 integer))
setm: ((7 integer)) <= 93
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18282 to 93
run: 6507 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18283 to 1106
run: 6508 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1200 => ((9 byte-address))
setm: ((9 byte-address)) <= 1200
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18284 to 1200
run: 6509 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1200 to #\space
run: 6510 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 14 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 14
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 14
run: 6511 print-character 13: (((reply)))
reply: nil nil
run: 6512 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 5 => ((7 integer))
setm: ((7 integer)) <= 5
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 5
run: 6513 print-board 18: (((jump)) ((-8 offset)))
run: 6514 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 6515 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6516 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9630 file-address) (raw))
sizeof: ((9630 file-address) (raw))
run: 12344 => ((8 file-address))
setm: ((8 file-address)) <= 12344
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 12344
run: 6517 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12344 file) (raw))
m: ((12344 integer) (raw))
sizeof: ((12344 integer) (raw))
sizeof: ((_ square))
m: ((12348 square) (raw))
sizeof: ((12348 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 6518 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6519 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18305 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6520 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18307 to 1101
run: 6521 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18308 to #\_
run: 6522 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6523 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18309 to 1103
run: 6524 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18310 to 1104
run: 6525 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18311 to 20
run: 6526 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18312 to 80
run: 6527 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 94 => ((7 integer))
setm: ((7 integer)) <= 94
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18313 to 94
run: 6528 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18314 to 1106
run: 6529 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1201 => ((9 byte-address))
setm: ((9 byte-address)) <= 1201
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18315 to 1201
run: 6530 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1201 to #\_
run: 6531 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 15 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 15
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 15
run: 6532 print-character 13: (((reply)))
reply: nil nil
run: 6533 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6534 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18336 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6535 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18338 to 1101
run: 6536 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18339 to #\space
run: 6537 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6538 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18340 to 1103
run: 6539 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18341 to 1104
run: 6540 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18342 to 20
run: 6541 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18343 to 80
run: 6542 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 95 => ((7 integer))
setm: ((7 integer)) <= 95
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18344 to 95
run: 6543 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18345 to 1106
run: 6544 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1202 => ((9 byte-address))
setm: ((9 byte-address)) <= 1202
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18346 to 1202
run: 6545 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1202 to #\space
run: 6546 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 16 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 16
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 16
run: 6547 print-character 13: (((reply)))
reply: nil nil
run: 6548 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 6 => ((7 integer))
setm: ((7 integer)) <= 6
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 6
run: 6549 print-board 18: (((jump)) ((-8 offset)))
run: 6550 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 6551 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6552 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9631 file-address) (raw))
sizeof: ((9631 file-address) (raw))
run: 12880 => ((8 file-address))
setm: ((8 file-address)) <= 12880
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 12880
run: 6553 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12880 file) (raw))
m: ((12880 integer) (raw))
sizeof: ((12880 integer) (raw))
sizeof: ((_ square))
m: ((12884 square) (raw))
sizeof: ((12884 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 6554 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6555 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18367 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6556 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18369 to 1101
run: 6557 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18370 to #\_
run: 6558 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6559 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18371 to 1103
run: 6560 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18372 to 1104
run: 6561 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18373 to 20
run: 6562 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18374 to 80
run: 6563 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 96 => ((7 integer))
setm: ((7 integer)) <= 96
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18375 to 96
run: 6564 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18376 to 1106
run: 6565 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1203 => ((9 byte-address))
setm: ((9 byte-address)) <= 1203
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18377 to 1203
run: 6566 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1203 to #\_
run: 6567 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 17 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 17
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 17
run: 6568 print-character 13: (((reply)))
reply: nil nil
run: 6569 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6570 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18398 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6571 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18400 to 1101
run: 6572 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18401 to #\space
run: 6573 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6574 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18402 to 1103
run: 6575 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18403 to 1104
run: 6576 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18404 to 20
run: 6577 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18405 to 80
run: 6578 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 97 => ((7 integer))
setm: ((7 integer)) <= 97
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18406 to 97
run: 6579 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18407 to 1106
run: 6580 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1204 => ((9 byte-address))
setm: ((9 byte-address)) <= 1204
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18408 to 1204
run: 6581 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1204 to #\space
run: 6582 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 18 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 18
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 18
run: 6583 print-character 13: (((reply)))
reply: nil nil
run: 6584 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 7 => ((7 integer))
setm: ((7 integer)) <= 7
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 7
run: 6585 print-board 18: (((jump)) ((-8 offset)))
run: 6586 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 6587 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6588 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9632 file-address) (raw))
sizeof: ((9632 file-address) (raw))
run: 13416 => ((8 file-address))
setm: ((8 file-address)) <= 13416
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 13416
run: 6589 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13416 file) (raw))
m: ((13416 integer) (raw))
sizeof: ((13416 integer) (raw))
sizeof: ((_ square))
m: ((13420 square) (raw))
sizeof: ((13420 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 6590 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6591 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18429 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6592 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18431 to 1101
run: 6593 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18432 to #\_
run: 6594 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6595 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18433 to 1103
run: 6596 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18434 to 1104
run: 6597 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18435 to 20
run: 6598 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18436 to 80
run: 6599 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 98 => ((7 integer))
setm: ((7 integer)) <= 98
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18437 to 98
run: 6600 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18438 to 1106
run: 6601 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1205 => ((9 byte-address))
setm: ((9 byte-address)) <= 1205
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18439 to 1205
run: 6602 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1205 to #\_
run: 6603 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 19 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 19
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 19
run: 6604 print-character 13: (((reply)))
reply: nil nil
run: 6605 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6606 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18460 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6607 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18462 to 1101
run: 6608 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18463 to #\space
run: 6609 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6610 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18464 to 1103
run: 6611 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18465 to 1104
run: 6612 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18466 to 20
run: 6613 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18467 to 80
run: 6614 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 99 => ((7 integer))
setm: ((7 integer)) <= 99
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18468 to 99
run: 6615 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18469 to 1106
run: 6616 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1206 => ((9 byte-address))
setm: ((9 byte-address)) <= 1206
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18470 to 1206
run: 6617 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1206 to #\space
run: 6618 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 20 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 20
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 20
run: 6619 print-character 13: (((reply)))
reply: nil nil
run: 6620 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 8 => ((7 integer))
setm: ((7 integer)) <= 8
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 8
run: 6621 print-board 18: (((jump)) ((-8 offset)))
run: 6622 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to t
run: 6623 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6624 print-board 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 2 => ((3 integer))
setm: ((3 integer)) <= 2
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13960 to 2
run: 6625 print-board 20: (((cursor-to-next-line)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6626 cursor-to-next-line 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18491 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6627 cursor-to-next-line 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18493 to 1101
run: 6628 cursor-to-next-line 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6629 cursor-to-next-line 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((2 integer-address))
setm: ((2 integer-address)) <= 1103
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 18494 to 1103
run: 6630 cursor-to-next-line 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 5 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 5
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1103 to 5
run: 6631 cursor-to-next-line 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((3 integer-address))
setm: ((3 integer-address)) <= 1104
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18495 to 1104
run: 6632 cursor-to-next-line 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 1104 to 0
run: 6633 cursor-to-next-line 7: (((reply)))
reply: nil nil
run: 6634 print-board 21: (((jump)) ((-18 offset)))
run: 6635 print-board 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 6636 print-board 5: (((jump-if)) ((4 boolean)) ((16 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6637 print-board 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 3 => ((5 integer))
setm: ((5 integer)) <= 3
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 13962 to 3
run: 6638 print-board 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((5 integer))
sizeof: ((5 integer))
run: 6639 print-integer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18522 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6640 print-integer 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 3)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18524 to 1101
run: 6641 print-integer 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1101 3)
run: 3 => ((2 integer))
setm: ((2 integer)) <= 3
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 18525 to 3
run: 6642 print-integer 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
run: 6643 integer-to-decimal-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18553 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6644 integer-to-decimal-string 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (3)
run: 3 => ((1 integer))
setm: ((1 integer)) <= 3
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 18555 to 3
run: 6645 integer-to-decimal-string 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 18556 to nil
run: 6646 integer-to-decimal-string 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 6647 integer-to-decimal-string 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 18558 to nil
run: 6648 integer-to-decimal-string 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 18559 to nil
run: 6649 integer-to-decimal-string 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6650 integer-to-decimal-string 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: 6651 init-buffer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18584 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6652 init-buffer 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
sizeof: ((_ buffer))
sizeof: ((_ integer))
sizeof: ((_ string-address))
run: 18615 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 18615
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 18586 to 18615
run: 6653 init-buffer 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 18615 => ((2 integer-address))
setm: ((2 integer-address)) <= 18615
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 18587 to 18615
run: 6654 init-buffer 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 18615 to 0
run: 6655 init-buffer 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 18616 => ((3 string-address-address))
setm: ((3 string-address-address)) <= 18616
setm: size of ((3 string-address-address)) is 1
setm: ((3 string-address-address)): setting 18588 to 18616
run: 6656 init-buffer 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 18589 to 30
run: 6657 init-buffer 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ byte))
run: 18617 => ((3 string-address-address) (deref))
setm: ((3 string-address-address) (deref)) <= 18617
setm: size of ((3 string-address-address) (deref)) is 1
setm: ((3 string-address-address) (deref)): setting 18616 to 18617
run: 6658 init-buffer 7: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 18615 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 18615
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 18560 to 18615
run: 6659 integer-to-decimal-string 12: (((7 character)) <- ((copy)) ((0 literal)))
run: #\0 => ((7 character))
setm: ((7 character)) <= #\0
setm: size of ((7 character)) is 1
setm: ((7 character)): setting 18561 to #\0
run: 6660 integer-to-decimal-string 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 48 => ((8 integer))
setm: ((8 integer)) <= 48
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 18562 to 48
run: 6661 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 18563 to nil
run: 6662 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 6663 integer-to-decimal-string 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
m: ((1 integer))
sizeof: ((1 integer))
m: ((1 integer))
sizeof: ((1 integer))
run: 0 => ((1 integer))
setm: ((1 integer)) <= 0
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 18555 to 0
run: 3 => ((10 integer))
setm: ((10 integer)) <= 3
setm: size of ((10 integer)) is 1
setm: ((10 integer)): setting 18564 to 3
run: 6664 integer-to-decimal-string 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((10 integer))
sizeof: ((10 integer))
run: 51 => ((11 integer))
setm: ((11 integer)) <= 51
setm: size of ((11 integer)) is 1
setm: ((11 integer)): setting 18565 to 51
run: 6665 integer-to-decimal-string 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
m: ((11 integer))
sizeof: ((11 integer))
run: #\3 => ((12 character))
setm: ((12 character)) <= #\3
setm: size of ((12 character)) is 1
setm: ((12 character)): setting 18566 to #\3
run: 6666 integer-to-decimal-string 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
m: ((6 buffer-address))
sizeof: ((6 buffer-address))
m: ((12 character))
sizeof: ((12 character))
run: 6667 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18648 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6668 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (18615 #\3)
run: 18615 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 18615
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 18650 to 18615
run: 6669 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (18615 #\3)
run: #\3 => ((2 character))
setm: ((2 character)) <= #\3
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18651 to #\3
run: 6670 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 6671 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18679 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6672 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (18615)
run: 18615 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 18615
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 18681 to 18615
run: 6673 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((18615 integer) (raw))
sizeof: ((18615 integer) (raw))
run: 0 => ((2 integer))
setm: ((2 integer)) <= 0
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 18682 to 0
run: 6674 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((18616 string-address) (raw))
sizeof: ((18616 string-address) (raw))
run: 18617 => ((3 string-address))
setm: ((3 string-address)) <= 18617
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 18683 to 18617
run: 6675 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((18617 integer) (raw))
sizeof: ((18617 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 18684 to 30
run: 6676 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 18685 to nil
run: 6677 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 18652 to nil
run: 6678 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 6679 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 18615 => ((4 integer-address))
setm: ((4 integer-address)) <= 18615
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18653 to 18615
run: 6680 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((18616 string-address) (raw))
sizeof: ((18616 string-address) (raw))
run: 18617 => ((5 string-address))
setm: ((5 string-address)) <= 18617
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 18654 to 18617
run: 6681 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((18617 string) (raw))
m: ((18617 integer) (raw))
sizeof: ((18617 integer) (raw))
sizeof: ((_ byte))
run: 18618 => ((6 byte-address))
setm: ((6 byte-address)) <= 18618
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 18655 to 18618
run: 6682 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\3 => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\3
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 18618 to #\3
run: 6683 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 18615 to 1
run: 6684 append 11: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 18615 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 18615
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 18560 to 18615
run: 6685 integer-to-decimal-string 20: (((jump)) ((-7 offset)))
run: 6686 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 18563 to t
run: 6687 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 6688 integer-to-decimal-string 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6689 integer-to-decimal-string 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
m: ((18615 integer) (raw))
sizeof: ((18615 integer) (raw))
run: 1 => ((13 integer))
setm: ((13 integer)) <= 1
setm: size of ((13 integer)) is 1
setm: ((13 integer)): setting 18567 to 1
run: 6690 integer-to-decimal-string 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((18616 string-address) (raw))
sizeof: ((18616 string-address) (raw))
run: 18617 => ((14 string-address))
setm: ((14 string-address)) <= 18617
setm: size of ((14 string-address)) is 1
setm: ((14 string-address)): setting 18568 to 18617
run: 6691 integer-to-decimal-string 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
m: ((13 integer))
sizeof: ((13 integer))
sizeof: ((_ byte))
run: 18710 => ((15 string-address))
setm: ((15 string-address)) <= 18710
setm: size of ((15 string-address)) is 1
setm: ((15 string-address)): setting 18569 to 18710
run: 6692 integer-to-decimal-string 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
m: ((13 integer))
sizeof: ((13 integer))
run: 0 => ((16 integer))
setm: ((16 integer)) <= 0
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 18570 to 0
run: 6693 integer-to-decimal-string 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((17 integer))
setm: ((17 integer)) <= 0
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 18571 to 0
run: 6694 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 18563 to nil
run: 6695 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 6696 integer-to-decimal-string 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
m: ((16 integer))
sizeof: ((16 integer))
array-len: ((18617 string) (raw))
m: ((18617 integer) (raw))
sizeof: ((18617 integer) (raw))
sizeof: ((_ byte))
m: ((18618 byte) (raw))
sizeof: ((18618 byte) (raw))
run: #\3 => ((18 byte))
setm: ((18 byte)) <= #\3
setm: size of ((18 byte)) is 1
setm: ((18 byte)): setting 18572 to #\3
run: 6697 integer-to-decimal-string 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
m: ((17 integer))
sizeof: ((17 integer))
array-len: ((18710 string) (raw))
m: ((18710 integer) (raw))
sizeof: ((18710 integer) (raw))
sizeof: ((_ byte))
run: 18711 => ((19 byte-address))
setm: ((19 byte-address)) <= 18711
setm: size of ((19 byte-address)) is 1
setm: ((19 byte-address)): setting 18573 to 18711
run: 6698 integer-to-decimal-string 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
m: ((18 byte))
sizeof: ((18 byte))
run: #\3 => ((19 byte-address) (deref))
setm: ((19 byte-address) (deref)) <= #\3
setm: size of ((19 byte-address) (deref)) is 1
setm: ((19 byte-address) (deref)): setting 18711 to #\3
run: 6699 integer-to-decimal-string 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: -1 => ((16 integer))
setm: ((16 integer)) <= -1
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 18570 to -1
run: 6700 integer-to-decimal-string 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
m: ((17 integer))
sizeof: ((17 integer))
run: 1 => ((17 integer))
setm: ((17 integer)) <= 1
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 18571 to 1
run: 6701 integer-to-decimal-string 35: (((jump)) ((-8 offset)))
run: 6702 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 18563 to t
run: 6703 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 6704 integer-to-decimal-string 36: (((reply)) ((15 string-address)))
m: ((15 string-address))
sizeof: ((15 string-address))
reply: (((15 string-address))) (((3 string-address)))
reply: 18710 => ((3 string-address))
setm: ((3 string-address)) <= 18710
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 18526 to 18710
run: 6705 print-integer 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((3 string-address))
sizeof: ((3 string-address))
run: 6706 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18712 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6707 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 18710)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18714 to 1101
run: 6708 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 18710)
run: 18710 => ((2 string-address))
setm: ((2 string-address)) <= 18710
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 18715 to 18710
run: 6709 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((18710 integer) (raw))
sizeof: ((18710 integer) (raw))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 18716 to 1
run: 6710 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 18717 to 0
run: 6711 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 18718 to nil
run: 6712 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6713 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((18710 string) (raw))
m: ((18710 integer) (raw))
sizeof: ((18710 integer) (raw))
sizeof: ((_ byte))
m: ((18711 byte) (raw))
sizeof: ((18711 byte) (raw))
run: #\3 => ((6 character))
setm: ((6 character)) <= #\3
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 18719 to #\3
run: 6714 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 6715 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18743 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6716 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\3)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18745 to 1101
run: 6717 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\3)
run: #\3 => ((2 character))
setm: ((2 character)) <= #\3
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18746 to #\3
run: 6718 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6719 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18747 to 1103
run: 6720 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18748 to 1104
run: 6721 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18749 to 20
run: 6722 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18750 to 100
run: 6723 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 100 => ((7 integer))
setm: ((7 integer)) <= 100
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18751 to 100
run: 6724 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18752 to 1106
run: 6725 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1207 => ((9 byte-address))
setm: ((9 byte-address)) <= 1207
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18753 to 1207
run: 6726 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\3 => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\3
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1207 to #\3
run: 6727 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 1
run: 6728 print-character 13: (((reply)))
reply: nil nil
run: 6729 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 18717 to 1
run: 6730 print-string 10: (((jump)) ((-6 offset)))
run: 6731 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 18718 to t
run: 6732 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6733 print-board 8: (((6 string-address)) <- ((new))  | )
run: 18774 => ((6 string-address))
setm: ((6 string-address)) <= 18774
setm: size of ((6 string-address)) is 1
setm: ((6 string-address)): setting 13963 to 18774
run: 6734 print-board 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 string-address))
sizeof: ((6 string-address))
run: 6735 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18778 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6736 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 18774)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18780 to 1101
run: 6737 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 18774)
run: 18774 => ((2 string-address))
setm: ((2 string-address)) <= 18774
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 18781 to 18774
run: 6738 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((18774 integer) (raw))
sizeof: ((18774 integer) (raw))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 18782 to 3
run: 6739 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 18783 to 0
run: 6740 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 18784 to nil
run: 6741 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6742 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((18774 string) (raw))
m: ((18774 integer) (raw))
sizeof: ((18774 integer) (raw))
sizeof: ((_ byte))
m: ((18775 byte) (raw))
sizeof: ((18775 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 18785 to #\space
run: 6743 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 6744 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18809 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6745 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18811 to 1101
run: 6746 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18812 to #\space
run: 6747 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6748 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18813 to 1103
run: 6749 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18814 to 1104
run: 6750 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18815 to 20
run: 6751 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18816 to 100
run: 6752 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 101 => ((7 integer))
setm: ((7 integer)) <= 101
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18817 to 101
run: 6753 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18818 to 1106
run: 6754 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1208 => ((9 byte-address))
setm: ((9 byte-address)) <= 1208
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18819 to 1208
run: 6755 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1208 to #\space
run: 6756 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 2
run: 6757 print-character 13: (((reply)))
reply: nil nil
run: 6758 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 18783 to 1
run: 6759 print-string 10: (((jump)) ((-6 offset)))
run: 6760 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 18784 to nil
run: 6761 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6762 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((18774 string) (raw))
m: ((18774 integer) (raw))
sizeof: ((18774 integer) (raw))
sizeof: ((_ byte))
m: ((18776 byte) (raw))
sizeof: ((18776 byte) (raw))
run: #\| => ((6 character))
setm: ((6 character)) <= #\|
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 18785 to #\|
run: 6763 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 6764 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18840 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6765 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\|)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18842 to 1101
run: 6766 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\|)
run: #\| => ((2 character))
setm: ((2 character)) <= #\|
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18843 to #\|
run: 6767 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6768 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18844 to 1103
run: 6769 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18845 to 1104
run: 6770 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18846 to 20
run: 6771 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18847 to 100
run: 6772 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 102 => ((7 integer))
setm: ((7 integer)) <= 102
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18848 to 102
run: 6773 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18849 to 1106
run: 6774 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1209 => ((9 byte-address))
setm: ((9 byte-address)) <= 1209
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18850 to 1209
run: 6775 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\| => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\|
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1209 to #\|
run: 6776 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 3
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 3
run: 6777 print-character 13: (((reply)))
reply: nil nil
run: 6778 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 18783 to 2
run: 6779 print-string 10: (((jump)) ((-6 offset)))
run: 6780 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 18784 to nil
run: 6781 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6782 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((18774 string) (raw))
m: ((18774 integer) (raw))
sizeof: ((18774 integer) (raw))
sizeof: ((_ byte))
m: ((18777 byte) (raw))
sizeof: ((18777 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 18785 to #\space
run: 6783 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 6784 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18871 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6785 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18873 to 1101
run: 6786 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18874 to #\space
run: 6787 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6788 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18875 to 1103
run: 6789 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18876 to 1104
run: 6790 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18877 to 20
run: 6791 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18878 to 100
run: 6792 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 103 => ((7 integer))
setm: ((7 integer)) <= 103
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18879 to 103
run: 6793 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18880 to 1106
run: 6794 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1210 => ((9 byte-address))
setm: ((9 byte-address)) <= 1210
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18881 to 1210
run: 6795 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1210 to #\space
run: 6796 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 4
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 4
run: 6797 print-character 13: (((reply)))
reply: nil nil
run: 6798 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 18783 to 3
run: 6799 print-string 10: (((jump)) ((-6 offset)))
run: 6800 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 18784 to t
run: 6801 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6802 print-board 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 0
run: 6803 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 6804 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6805 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9625 file-address) (raw))
sizeof: ((9625 file-address) (raw))
run: 9664 => ((8 file-address))
setm: ((8 file-address)) <= 9664
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 9664
run: 6806 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9664 file) (raw))
m: ((9664 integer) (raw))
sizeof: ((9664 integer) (raw))
sizeof: ((_ square))
m: ((9667 square) (raw))
sizeof: ((9667 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 6807 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6808 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18902 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6809 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18904 to 1101
run: 6810 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18905 to #\_
run: 6811 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6812 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18906 to 1103
run: 6813 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18907 to 1104
run: 6814 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18908 to 20
run: 6815 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18909 to 100
run: 6816 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 104 => ((7 integer))
setm: ((7 integer)) <= 104
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18910 to 104
run: 6817 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18911 to 1106
run: 6818 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1211 => ((9 byte-address))
setm: ((9 byte-address)) <= 1211
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18912 to 1211
run: 6819 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1211 to #\_
run: 6820 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 5 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 5
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 5
run: 6821 print-character 13: (((reply)))
reply: nil nil
run: 6822 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6823 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18933 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6824 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18935 to 1101
run: 6825 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18936 to #\space
run: 6826 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6827 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18937 to 1103
run: 6828 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18938 to 1104
run: 6829 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18939 to 20
run: 6830 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18940 to 100
run: 6831 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 105 => ((7 integer))
setm: ((7 integer)) <= 105
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18941 to 105
run: 6832 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18942 to 1106
run: 6833 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1212 => ((9 byte-address))
setm: ((9 byte-address)) <= 1212
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18943 to 1212
run: 6834 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1212 to #\space
run: 6835 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 6 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 6
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 6
run: 6836 print-character 13: (((reply)))
reply: nil nil
run: 6837 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 1
run: 6838 print-board 18: (((jump)) ((-8 offset)))
run: 6839 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 6840 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6841 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9626 file-address) (raw))
sizeof: ((9626 file-address) (raw))
run: 10200 => ((8 file-address))
setm: ((8 file-address)) <= 10200
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 10200
run: 6842 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10200 file) (raw))
m: ((10200 integer) (raw))
sizeof: ((10200 integer) (raw))
sizeof: ((_ square))
m: ((10203 square) (raw))
sizeof: ((10203 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 6843 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6844 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18964 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6845 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18966 to 1101
run: 6846 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18967 to #\_
run: 6847 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6848 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18968 to 1103
run: 6849 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18969 to 1104
run: 6850 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18970 to 20
run: 6851 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18971 to 100
run: 6852 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 106 => ((7 integer))
setm: ((7 integer)) <= 106
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18972 to 106
run: 6853 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18973 to 1106
run: 6854 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1213 => ((9 byte-address))
setm: ((9 byte-address)) <= 1213
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18974 to 1213
run: 6855 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1213 to #\_
run: 6856 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 7 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 7
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 7
run: 6857 print-character 13: (((reply)))
reply: nil nil
run: 6858 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6859 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18995 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6860 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18997 to 1101
run: 6861 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18998 to #\space
run: 6862 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6863 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18999 to 1103
run: 6864 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19000 to 1104
run: 6865 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19001 to 20
run: 6866 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19002 to 100
run: 6867 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 107 => ((7 integer))
setm: ((7 integer)) <= 107
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19003 to 107
run: 6868 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19004 to 1106
run: 6869 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1214 => ((9 byte-address))
setm: ((9 byte-address)) <= 1214
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19005 to 1214
run: 6870 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1214 to #\space
run: 6871 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 8 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 8
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 8
run: 6872 print-character 13: (((reply)))
reply: nil nil
run: 6873 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 2 => ((7 integer))
setm: ((7 integer)) <= 2
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 2
run: 6874 print-board 18: (((jump)) ((-8 offset)))
run: 6875 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 6876 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6877 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9627 file-address) (raw))
sizeof: ((9627 file-address) (raw))
run: 10736 => ((8 file-address))
setm: ((8 file-address)) <= 10736
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 10736
run: 6878 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10736 file) (raw))
m: ((10736 integer) (raw))
sizeof: ((10736 integer) (raw))
sizeof: ((_ square))
m: ((10739 square) (raw))
sizeof: ((10739 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 6879 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6880 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19026 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6881 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19028 to 1101
run: 6882 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19029 to #\_
run: 6883 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6884 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19030 to 1103
run: 6885 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19031 to 1104
run: 6886 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19032 to 20
run: 6887 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19033 to 100
run: 6888 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 108 => ((7 integer))
setm: ((7 integer)) <= 108
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19034 to 108
run: 6889 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19035 to 1106
run: 6890 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1215 => ((9 byte-address))
setm: ((9 byte-address)) <= 1215
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19036 to 1215
run: 6891 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1215 to #\_
run: 6892 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 9 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 9
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 9
run: 6893 print-character 13: (((reply)))
reply: nil nil
run: 6894 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6895 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19057 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6896 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19059 to 1101
run: 6897 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19060 to #\space
run: 6898 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6899 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19061 to 1103
run: 6900 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19062 to 1104
run: 6901 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19063 to 20
run: 6902 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19064 to 100
run: 6903 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 109 => ((7 integer))
setm: ((7 integer)) <= 109
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19065 to 109
run: 6904 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19066 to 1106
run: 6905 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1216 => ((9 byte-address))
setm: ((9 byte-address)) <= 1216
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19067 to 1216
run: 6906 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1216 to #\space
run: 6907 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 10 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 10
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 10
run: 6908 print-character 13: (((reply)))
reply: nil nil
run: 6909 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 3 => ((7 integer))
setm: ((7 integer)) <= 3
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 3
run: 6910 print-board 18: (((jump)) ((-8 offset)))
run: 6911 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 6912 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6913 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9628 file-address) (raw))
sizeof: ((9628 file-address) (raw))
run: 11272 => ((8 file-address))
setm: ((8 file-address)) <= 11272
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 11272
run: 6914 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11272 file) (raw))
m: ((11272 integer) (raw))
sizeof: ((11272 integer) (raw))
sizeof: ((_ square))
m: ((11275 square) (raw))
sizeof: ((11275 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 6915 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6916 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19088 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6917 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19090 to 1101
run: 6918 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19091 to #\_
run: 6919 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6920 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19092 to 1103
run: 6921 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19093 to 1104
run: 6922 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19094 to 20
run: 6923 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19095 to 100
run: 6924 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 110 => ((7 integer))
setm: ((7 integer)) <= 110
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19096 to 110
run: 6925 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19097 to 1106
run: 6926 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1217 => ((9 byte-address))
setm: ((9 byte-address)) <= 1217
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19098 to 1217
run: 6927 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1217 to #\_
run: 6928 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 11 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 11
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 11
run: 6929 print-character 13: (((reply)))
reply: nil nil
run: 6930 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6931 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19119 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6932 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19121 to 1101
run: 6933 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19122 to #\space
run: 6934 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6935 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19123 to 1103
run: 6936 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19124 to 1104
run: 6937 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19125 to 20
run: 6938 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19126 to 100
run: 6939 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 111 => ((7 integer))
setm: ((7 integer)) <= 111
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19127 to 111
run: 6940 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19128 to 1106
run: 6941 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1218 => ((9 byte-address))
setm: ((9 byte-address)) <= 1218
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19129 to 1218
run: 6942 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1218 to #\space
run: 6943 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 12 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 12
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 12
run: 6944 print-character 13: (((reply)))
reply: nil nil
run: 6945 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 4 => ((7 integer))
setm: ((7 integer)) <= 4
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 4
run: 6946 print-board 18: (((jump)) ((-8 offset)))
run: 6947 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 6948 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6949 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9629 file-address) (raw))
sizeof: ((9629 file-address) (raw))
run: 11808 => ((8 file-address))
setm: ((8 file-address)) <= 11808
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 11808
run: 6950 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11808 file) (raw))
m: ((11808 integer) (raw))
sizeof: ((11808 integer) (raw))
sizeof: ((_ square))
m: ((11811 square) (raw))
sizeof: ((11811 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 6951 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6952 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19150 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6953 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19152 to 1101
run: 6954 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19153 to #\_
run: 6955 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6956 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19154 to 1103
run: 6957 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19155 to 1104
run: 6958 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19156 to 20
run: 6959 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19157 to 100
run: 6960 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 112 => ((7 integer))
setm: ((7 integer)) <= 112
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19158 to 112
run: 6961 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19159 to 1106
run: 6962 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1219 => ((9 byte-address))
setm: ((9 byte-address)) <= 1219
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19160 to 1219
run: 6963 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1219 to #\_
run: 6964 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 13 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 13
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 13
run: 6965 print-character 13: (((reply)))
reply: nil nil
run: 6966 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6967 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19181 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6968 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19183 to 1101
run: 6969 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19184 to #\space
run: 6970 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6971 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19185 to 1103
run: 6972 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19186 to 1104
run: 6973 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19187 to 20
run: 6974 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19188 to 100
run: 6975 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 113 => ((7 integer))
setm: ((7 integer)) <= 113
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19189 to 113
run: 6976 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19190 to 1106
run: 6977 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1220 => ((9 byte-address))
setm: ((9 byte-address)) <= 1220
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19191 to 1220
run: 6978 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1220 to #\space
run: 6979 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 14 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 14
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 14
run: 6980 print-character 13: (((reply)))
reply: nil nil
run: 6981 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 5 => ((7 integer))
setm: ((7 integer)) <= 5
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 5
run: 6982 print-board 18: (((jump)) ((-8 offset)))
run: 6983 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 6984 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6985 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9630 file-address) (raw))
sizeof: ((9630 file-address) (raw))
run: 12344 => ((8 file-address))
setm: ((8 file-address)) <= 12344
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 12344
run: 6986 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12344 file) (raw))
m: ((12344 integer) (raw))
sizeof: ((12344 integer) (raw))
sizeof: ((_ square))
m: ((12347 square) (raw))
sizeof: ((12347 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 6987 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6988 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19212 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6989 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19214 to 1101
run: 6990 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19215 to #\_
run: 6991 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6992 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19216 to 1103
run: 6993 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19217 to 1104
run: 6994 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19218 to 20
run: 6995 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19219 to 100
run: 6996 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 114 => ((7 integer))
setm: ((7 integer)) <= 114
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19220 to 114
run: 6997 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19221 to 1106
run: 6998 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1221 => ((9 byte-address))
setm: ((9 byte-address)) <= 1221
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19222 to 1221
run: 6999 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1221 to #\_
run: 7000 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 15 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 15
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 15
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: 7001 print-character 13: (((reply)))
reply: nil nil
run: 7002 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7003 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19243 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7004 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19245 to 1101
run: 7005 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19246 to #\space
run: 7006 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7007 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19247 to 1103
run: 7008 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19248 to 1104
run: 7009 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19249 to 20
run: 7010 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19250 to 100
run: 7011 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 115 => ((7 integer))
setm: ((7 integer)) <= 115
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19251 to 115
run: 7012 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19252 to 1106
run: 7013 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1222 => ((9 byte-address))
setm: ((9 byte-address)) <= 1222
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19253 to 1222
run: 7014 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1222 to #\space
run: 7015 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 16 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 16
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 16
run: 7016 print-character 13: (((reply)))
reply: nil nil
run: 7017 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 6 => ((7 integer))
setm: ((7 integer)) <= 6
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 6
run: 7018 print-board 18: (((jump)) ((-8 offset)))
run: 7019 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 7020 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7021 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9631 file-address) (raw))
sizeof: ((9631 file-address) (raw))
run: 12880 => ((8 file-address))
setm: ((8 file-address)) <= 12880
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 12880
run: 7022 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12880 file) (raw))
m: ((12880 integer) (raw))
sizeof: ((12880 integer) (raw))
sizeof: ((_ square))
m: ((12883 square) (raw))
sizeof: ((12883 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 7023 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7024 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19274 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7025 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19276 to 1101
run: 7026 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19277 to #\_
run: 7027 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7028 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19278 to 1103
run: 7029 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19279 to 1104
run: 7030 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19280 to 20
run: 7031 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19281 to 100
run: 7032 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 116 => ((7 integer))
setm: ((7 integer)) <= 116
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19282 to 116
run: 7033 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19283 to 1106
run: 7034 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1223 => ((9 byte-address))
setm: ((9 byte-address)) <= 1223
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19284 to 1223
run: 7035 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1223 to #\_
run: 7036 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 17 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 17
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 17
run: 7037 print-character 13: (((reply)))
reply: nil nil
run: 7038 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7039 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19305 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7040 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19307 to 1101
run: 7041 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19308 to #\space
run: 7042 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7043 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19309 to 1103
run: 7044 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19310 to 1104
run: 7045 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19311 to 20
run: 7046 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19312 to 100
run: 7047 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 117 => ((7 integer))
setm: ((7 integer)) <= 117
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19313 to 117
run: 7048 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19314 to 1106
run: 7049 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1224 => ((9 byte-address))
setm: ((9 byte-address)) <= 1224
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19315 to 1224
run: 7050 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1224 to #\space
run: 7051 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 18 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 18
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 18
run: 7052 print-character 13: (((reply)))
reply: nil nil
run: 7053 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 7 => ((7 integer))
setm: ((7 integer)) <= 7
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 7
run: 7054 print-board 18: (((jump)) ((-8 offset)))
run: 7055 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 7056 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7057 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9632 file-address) (raw))
sizeof: ((9632 file-address) (raw))
run: 13416 => ((8 file-address))
setm: ((8 file-address)) <= 13416
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 13416
run: 7058 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13416 file) (raw))
m: ((13416 integer) (raw))
sizeof: ((13416 integer) (raw))
sizeof: ((_ square))
m: ((13419 square) (raw))
sizeof: ((13419 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 7059 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7060 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19336 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7061 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19338 to 1101
run: 7062 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19339 to #\_
run: 7063 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7064 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19340 to 1103
run: 7065 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19341 to 1104
run: 7066 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19342 to 20
run: 7067 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19343 to 100
run: 7068 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 118 => ((7 integer))
setm: ((7 integer)) <= 118
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19344 to 118
run: 7069 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19345 to 1106
run: 7070 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1225 => ((9 byte-address))
setm: ((9 byte-address)) <= 1225
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19346 to 1225
run: 7071 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1225 to #\_
run: 7072 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 19 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 19
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 19
run: 7073 print-character 13: (((reply)))
reply: nil nil
run: 7074 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7075 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19367 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7076 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19369 to 1101
run: 7077 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19370 to #\space
run: 7078 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7079 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19371 to 1103
run: 7080 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19372 to 1104
run: 7081 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19373 to 20
run: 7082 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19374 to 100
run: 7083 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 119 => ((7 integer))
setm: ((7 integer)) <= 119
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19375 to 119
run: 7084 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19376 to 1106
run: 7085 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1226 => ((9 byte-address))
setm: ((9 byte-address)) <= 1226
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19377 to 1226
run: 7086 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1226 to #\space
run: 7087 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 20 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 20
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 20
run: 7088 print-character 13: (((reply)))
reply: nil nil
run: 7089 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 8 => ((7 integer))
setm: ((7 integer)) <= 8
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 8
run: 7090 print-board 18: (((jump)) ((-8 offset)))
run: 7091 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to t
run: 7092 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7093 print-board 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13960 to 1
run: 7094 print-board 20: (((cursor-to-next-line)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7095 cursor-to-next-line 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19398 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7096 cursor-to-next-line 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19400 to 1101
run: 7097 cursor-to-next-line 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7098 cursor-to-next-line 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((2 integer-address))
setm: ((2 integer-address)) <= 1103
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 19401 to 1103
run: 7099 cursor-to-next-line 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 6 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 6
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1103 to 6
run: 7100 cursor-to-next-line 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((3 integer-address))
setm: ((3 integer-address)) <= 1104
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19402 to 1104
run: 7101 cursor-to-next-line 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 1104 to 0
run: 7102 cursor-to-next-line 7: (((reply)))
reply: nil nil
run: 7103 print-board 21: (((jump)) ((-18 offset)))
run: 7104 print-board 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 7105 print-board 5: (((jump-if)) ((4 boolean)) ((16 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7106 print-board 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 13962 to 2
run: 7107 print-board 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((5 integer))
sizeof: ((5 integer))
run: 7108 print-integer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19429 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7109 print-integer 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 2)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19431 to 1101
run: 7110 print-integer 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1101 2)
run: 2 => ((2 integer))
setm: ((2 integer)) <= 2
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 19432 to 2
run: 7111 print-integer 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
run: 7112 integer-to-decimal-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19460 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7113 integer-to-decimal-string 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (2)
run: 2 => ((1 integer))
setm: ((1 integer)) <= 2
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 19462 to 2
run: 7114 integer-to-decimal-string 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 19463 to nil
run: 7115 integer-to-decimal-string 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 7116 integer-to-decimal-string 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 19465 to nil
run: 7117 integer-to-decimal-string 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 19466 to nil
run: 7118 integer-to-decimal-string 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7119 integer-to-decimal-string 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: 7120 init-buffer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19491 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7121 init-buffer 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
sizeof: ((_ buffer))
sizeof: ((_ integer))
sizeof: ((_ string-address))
run: 19522 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 19522
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 19493 to 19522
run: 7122 init-buffer 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 19522 => ((2 integer-address))
setm: ((2 integer-address)) <= 19522
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 19494 to 19522
run: 7123 init-buffer 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 19522 to 0
run: 7124 init-buffer 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 19523 => ((3 string-address-address))
setm: ((3 string-address-address)) <= 19523
setm: size of ((3 string-address-address)) is 1
setm: ((3 string-address-address)): setting 19495 to 19523
run: 7125 init-buffer 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 19496 to 30
run: 7126 init-buffer 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ byte))
run: 19524 => ((3 string-address-address) (deref))
setm: ((3 string-address-address) (deref)) <= 19524
setm: size of ((3 string-address-address) (deref)) is 1
setm: ((3 string-address-address) (deref)): setting 19523 to 19524
run: 7127 init-buffer 7: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 19522 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 19522
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 19467 to 19522
run: 7128 integer-to-decimal-string 12: (((7 character)) <- ((copy)) ((0 literal)))
run: #\0 => ((7 character))
setm: ((7 character)) <= #\0
setm: size of ((7 character)) is 1
setm: ((7 character)): setting 19468 to #\0
run: 7129 integer-to-decimal-string 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 48 => ((8 integer))
setm: ((8 integer)) <= 48
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 19469 to 48
run: 7130 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 19470 to nil
run: 7131 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 7132 integer-to-decimal-string 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
m: ((1 integer))
sizeof: ((1 integer))
m: ((1 integer))
sizeof: ((1 integer))
run: 0 => ((1 integer))
setm: ((1 integer)) <= 0
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 19462 to 0
run: 2 => ((10 integer))
setm: ((10 integer)) <= 2
setm: size of ((10 integer)) is 1
setm: ((10 integer)): setting 19471 to 2
run: 7133 integer-to-decimal-string 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((10 integer))
sizeof: ((10 integer))
run: 50 => ((11 integer))
setm: ((11 integer)) <= 50
setm: size of ((11 integer)) is 1
setm: ((11 integer)): setting 19472 to 50
run: 7134 integer-to-decimal-string 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
m: ((11 integer))
sizeof: ((11 integer))
run: #\2 => ((12 character))
setm: ((12 character)) <= #\2
setm: size of ((12 character)) is 1
setm: ((12 character)): setting 19473 to #\2
run: 7135 integer-to-decimal-string 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
m: ((6 buffer-address))
sizeof: ((6 buffer-address))
m: ((12 character))
sizeof: ((12 character))
run: 7136 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19555 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7137 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (19522 #\2)
run: 19522 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 19522
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 19557 to 19522
run: 7138 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (19522 #\2)
run: #\2 => ((2 character))
setm: ((2 character)) <= #\2
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19558 to #\2
run: 7139 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 7140 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19586 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7141 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (19522)
run: 19522 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 19522
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 19588 to 19522
run: 7142 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((19522 integer) (raw))
sizeof: ((19522 integer) (raw))
run: 0 => ((2 integer))
setm: ((2 integer)) <= 0
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 19589 to 0
run: 7143 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((19523 string-address) (raw))
sizeof: ((19523 string-address) (raw))
run: 19524 => ((3 string-address))
setm: ((3 string-address)) <= 19524
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 19590 to 19524
run: 7144 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((19524 integer) (raw))
sizeof: ((19524 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 19591 to 30
run: 7145 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 19592 to nil
run: 7146 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 19559 to nil
run: 7147 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 7148 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 19522 => ((4 integer-address))
setm: ((4 integer-address)) <= 19522
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19560 to 19522
run: 7149 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((19523 string-address) (raw))
sizeof: ((19523 string-address) (raw))
run: 19524 => ((5 string-address))
setm: ((5 string-address)) <= 19524
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 19561 to 19524
run: 7150 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((19524 string) (raw))
m: ((19524 integer) (raw))
sizeof: ((19524 integer) (raw))
sizeof: ((_ byte))
run: 19525 => ((6 byte-address))
setm: ((6 byte-address)) <= 19525
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 19562 to 19525
run: 7151 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\2 => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\2
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 19525 to #\2
run: 7152 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 19522 to 1
run: 7153 append 11: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 19522 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 19522
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 19467 to 19522
run: 7154 integer-to-decimal-string 20: (((jump)) ((-7 offset)))
run: 7155 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 19470 to t
run: 7156 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 7157 integer-to-decimal-string 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7158 integer-to-decimal-string 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
m: ((19522 integer) (raw))
sizeof: ((19522 integer) (raw))
run: 1 => ((13 integer))
setm: ((13 integer)) <= 1
setm: size of ((13 integer)) is 1
setm: ((13 integer)): setting 19474 to 1
run: 7159 integer-to-decimal-string 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((19523 string-address) (raw))
sizeof: ((19523 string-address) (raw))
run: 19524 => ((14 string-address))
setm: ((14 string-address)) <= 19524
setm: size of ((14 string-address)) is 1
setm: ((14 string-address)): setting 19475 to 19524
run: 7160 integer-to-decimal-string 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
m: ((13 integer))
sizeof: ((13 integer))
sizeof: ((_ byte))
run: 19617 => ((15 string-address))
setm: ((15 string-address)) <= 19617
setm: size of ((15 string-address)) is 1
setm: ((15 string-address)): setting 19476 to 19617
run: 7161 integer-to-decimal-string 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
m: ((13 integer))
sizeof: ((13 integer))
run: 0 => ((16 integer))
setm: ((16 integer)) <= 0
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 19477 to 0
run: 7162 integer-to-decimal-string 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((17 integer))
setm: ((17 integer)) <= 0
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 19478 to 0
run: 7163 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 19470 to nil
run: 7164 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 7165 integer-to-decimal-string 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
m: ((16 integer))
sizeof: ((16 integer))
array-len: ((19524 string) (raw))
m: ((19524 integer) (raw))
sizeof: ((19524 integer) (raw))
sizeof: ((_ byte))
m: ((19525 byte) (raw))
sizeof: ((19525 byte) (raw))
run: #\2 => ((18 byte))
setm: ((18 byte)) <= #\2
setm: size of ((18 byte)) is 1
setm: ((18 byte)): setting 19479 to #\2
run: 7166 integer-to-decimal-string 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
m: ((17 integer))
sizeof: ((17 integer))
array-len: ((19617 string) (raw))
m: ((19617 integer) (raw))
sizeof: ((19617 integer) (raw))
sizeof: ((_ byte))
run: 19618 => ((19 byte-address))
setm: ((19 byte-address)) <= 19618
setm: size of ((19 byte-address)) is 1
setm: ((19 byte-address)): setting 19480 to 19618
run: 7167 integer-to-decimal-string 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
m: ((18 byte))
sizeof: ((18 byte))
run: #\2 => ((19 byte-address) (deref))
setm: ((19 byte-address) (deref)) <= #\2
setm: size of ((19 byte-address) (deref)) is 1
setm: ((19 byte-address) (deref)): setting 19618 to #\2
run: 7168 integer-to-decimal-string 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: -1 => ((16 integer))
setm: ((16 integer)) <= -1
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 19477 to -1
run: 7169 integer-to-decimal-string 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
m: ((17 integer))
sizeof: ((17 integer))
run: 1 => ((17 integer))
setm: ((17 integer)) <= 1
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 19478 to 1
run: 7170 integer-to-decimal-string 35: (((jump)) ((-8 offset)))
run: 7171 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 19470 to t
run: 7172 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 7173 integer-to-decimal-string 36: (((reply)) ((15 string-address)))
m: ((15 string-address))
sizeof: ((15 string-address))
reply: (((15 string-address))) (((3 string-address)))
reply: 19617 => ((3 string-address))
setm: ((3 string-address)) <= 19617
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 19433 to 19617
run: 7174 print-integer 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((3 string-address))
sizeof: ((3 string-address))
run: 7175 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19619 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7176 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 19617)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19621 to 1101
run: 7177 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 19617)
run: 19617 => ((2 string-address))
setm: ((2 string-address)) <= 19617
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 19622 to 19617
run: 7178 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((19617 integer) (raw))
sizeof: ((19617 integer) (raw))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 19623 to 1
run: 7179 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 19624 to 0
run: 7180 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 19625 to nil
run: 7181 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7182 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((19617 string) (raw))
m: ((19617 integer) (raw))
sizeof: ((19617 integer) (raw))
sizeof: ((_ byte))
m: ((19618 byte) (raw))
sizeof: ((19618 byte) (raw))
run: #\2 => ((6 character))
setm: ((6 character)) <= #\2
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 19626 to #\2
run: 7183 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 7184 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19650 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7185 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\2)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19652 to 1101
run: 7186 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\2)
run: #\2 => ((2 character))
setm: ((2 character)) <= #\2
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19653 to #\2
run: 7187 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7188 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19654 to 1103
run: 7189 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19655 to 1104
run: 7190 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19656 to 20
run: 7191 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19657 to 120
run: 7192 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 120 => ((7 integer))
setm: ((7 integer)) <= 120
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19658 to 120
run: 7193 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19659 to 1106
run: 7194 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1227 => ((9 byte-address))
setm: ((9 byte-address)) <= 1227
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19660 to 1227
run: 7195 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\2 => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\2
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1227 to #\2
run: 7196 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 1
run: 7197 print-character 13: (((reply)))
reply: nil nil
run: 7198 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 19624 to 1
run: 7199 print-string 10: (((jump)) ((-6 offset)))
run: 7200 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 19625 to t
run: 7201 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7202 print-board 8: (((6 string-address)) <- ((new))  | )
run: 19681 => ((6 string-address))
setm: ((6 string-address)) <= 19681
setm: size of ((6 string-address)) is 1
setm: ((6 string-address)): setting 13963 to 19681
run: 7203 print-board 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 string-address))
sizeof: ((6 string-address))
run: 7204 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19685 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7205 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 19681)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19687 to 1101
run: 7206 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 19681)
run: 19681 => ((2 string-address))
setm: ((2 string-address)) <= 19681
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 19688 to 19681
run: 7207 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((19681 integer) (raw))
sizeof: ((19681 integer) (raw))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 19689 to 3
run: 7208 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 19690 to 0
run: 7209 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 19691 to nil
run: 7210 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7211 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((19681 string) (raw))
m: ((19681 integer) (raw))
sizeof: ((19681 integer) (raw))
sizeof: ((_ byte))
m: ((19682 byte) (raw))
sizeof: ((19682 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 19692 to #\space
run: 7212 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 7213 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19716 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7214 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19718 to 1101
run: 7215 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19719 to #\space
run: 7216 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7217 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19720 to 1103
run: 7218 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19721 to 1104
run: 7219 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19722 to 20
run: 7220 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19723 to 120
run: 7221 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 121 => ((7 integer))
setm: ((7 integer)) <= 121
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19724 to 121
run: 7222 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19725 to 1106
run: 7223 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1228 => ((9 byte-address))
setm: ((9 byte-address)) <= 1228
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19726 to 1228
run: 7224 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1228 to #\space
run: 7225 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 2
run: 7226 print-character 13: (((reply)))
reply: nil nil
run: 7227 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 19690 to 1
run: 7228 print-string 10: (((jump)) ((-6 offset)))
run: 7229 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 19691 to nil
run: 7230 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7231 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((19681 string) (raw))
m: ((19681 integer) (raw))
sizeof: ((19681 integer) (raw))
sizeof: ((_ byte))
m: ((19683 byte) (raw))
sizeof: ((19683 byte) (raw))
run: #\| => ((6 character))
setm: ((6 character)) <= #\|
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 19692 to #\|
run: 7232 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 7233 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19747 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7234 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\|)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19749 to 1101
run: 7235 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\|)
run: #\| => ((2 character))
setm: ((2 character)) <= #\|
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19750 to #\|
run: 7236 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7237 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19751 to 1103
run: 7238 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19752 to 1104
run: 7239 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19753 to 20
run: 7240 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19754 to 120
run: 7241 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 122 => ((7 integer))
setm: ((7 integer)) <= 122
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19755 to 122
run: 7242 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19756 to 1106
run: 7243 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1229 => ((9 byte-address))
setm: ((9 byte-address)) <= 1229
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19757 to 1229
run: 7244 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\| => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\|
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1229 to #\|
run: 7245 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 3
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 3
run: 7246 print-character 13: (((reply)))
reply: nil nil
run: 7247 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 19690 to 2
run: 7248 print-string 10: (((jump)) ((-6 offset)))
run: 7249 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 19691 to nil
run: 7250 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7251 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((19681 string) (raw))
m: ((19681 integer) (raw))
sizeof: ((19681 integer) (raw))
sizeof: ((_ byte))
m: ((19684 byte) (raw))
sizeof: ((19684 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 19692 to #\space
run: 7252 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 7253 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19778 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7254 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19780 to 1101
run: 7255 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19781 to #\space
run: 7256 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7257 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19782 to 1103
run: 7258 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19783 to 1104
run: 7259 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19784 to 20
run: 7260 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19785 to 120
run: 7261 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 123 => ((7 integer))
setm: ((7 integer)) <= 123
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19786 to 123
run: 7262 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19787 to 1106
run: 7263 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1230 => ((9 byte-address))
setm: ((9 byte-address)) <= 1230
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19788 to 1230
run: 7264 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1230 to #\space
run: 7265 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 4
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 4
run: 7266 print-character 13: (((reply)))
reply: nil nil
run: 7267 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 19690 to 3
run: 7268 print-string 10: (((jump)) ((-6 offset)))
run: 7269 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 19691 to t
run: 7270 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7271 print-board 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 0
run: 7272 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 7273 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7274 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9625 file-address) (raw))
sizeof: ((9625 file-address) (raw))
run: 9664 => ((8 file-address))
setm: ((8 file-address)) <= 9664
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 9664
run: 7275 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9664 file) (raw))
m: ((9664 integer) (raw))
sizeof: ((9664 integer) (raw))
sizeof: ((_ square))
m: ((9666 square) (raw))
sizeof: ((9666 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\_
run: 7276 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7277 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19809 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7278 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19811 to 1101
run: 7279 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19812 to #\_
run: 7280 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7281 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19813 to 1103
run: 7282 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19814 to 1104
run: 7283 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19815 to 20
run: 7284 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19816 to 120
run: 7285 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 124 => ((7 integer))
setm: ((7 integer)) <= 124
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19817 to 124
run: 7286 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19818 to 1106
run: 7287 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1231 => ((9 byte-address))
setm: ((9 byte-address)) <= 1231
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19819 to 1231
run: 7288 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1231 to #\_
run: 7289 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 5 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 5
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 5
run: 7290 print-character 13: (((reply)))
reply: nil nil
run: 7291 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7292 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19840 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7293 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19842 to 1101
run: 7294 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19843 to #\space
run: 7295 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7296 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19844 to 1103
run: 7297 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19845 to 1104
run: 7298 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19846 to 20
run: 7299 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19847 to 120
run: 7300 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 125 => ((7 integer))
setm: ((7 integer)) <= 125
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19848 to 125
run: 7301 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19849 to 1106
run: 7302 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1232 => ((9 byte-address))
setm: ((9 byte-address)) <= 1232
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19850 to 1232
run: 7303 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1232 to #\space
run: 7304 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 6 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 6
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 6
run: 7305 print-character 13: (((reply)))
reply: nil nil
run: 7306 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 1
run: 7307 print-board 18: (((jump)) ((-8 offset)))
run: 7308 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 7309 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7310 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9626 file-address) (raw))
sizeof: ((9626 file-address) (raw))
run: 10200 => ((8 file-address))
setm: ((8 file-address)) <= 10200
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 10200
run: 7311 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10200 file) (raw))
m: ((10200 integer) (raw))
sizeof: ((10200 integer) (raw))
sizeof: ((_ square))
m: ((10202 square) (raw))
sizeof: ((10202 square) (raw))
run: #\P => ((6 square))
setm: ((6 square)) <= #\P
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\P
run: 7312 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7313 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19871 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7314 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\P)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19873 to 1101
run: 7315 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\P)
run: #\P => ((2 character))
setm: ((2 character)) <= #\P
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19874 to #\P
run: 7316 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7317 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19875 to 1103
run: 7318 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19876 to 1104
run: 7319 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19877 to 20
run: 7320 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19878 to 120
run: 7321 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 126 => ((7 integer))
setm: ((7 integer)) <= 126
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19879 to 126
run: 7322 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19880 to 1106
run: 7323 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1233 => ((9 byte-address))
setm: ((9 byte-address)) <= 1233
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19881 to 1233
run: 7324 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\P => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\P
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1233 to #\P
run: 7325 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 7 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 7
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 7
run: 7326 print-character 13: (((reply)))
reply: nil nil
run: 7327 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7328 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19902 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7329 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19904 to 1101
run: 7330 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19905 to #\space
run: 7331 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7332 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19906 to 1103
run: 7333 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19907 to 1104
run: 7334 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19908 to 20
run: 7335 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19909 to 120
run: 7336 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 127 => ((7 integer))
setm: ((7 integer)) <= 127
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19910 to 127
run: 7337 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19911 to 1106
run: 7338 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1234 => ((9 byte-address))
setm: ((9 byte-address)) <= 1234
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19912 to 1234
run: 7339 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1234 to #\space
run: 7340 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 8 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 8
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 8
run: 7341 print-character 13: (((reply)))
reply: nil nil
run: 7342 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 2 => ((7 integer))
setm: ((7 integer)) <= 2
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 2
run: 7343 print-board 18: (((jump)) ((-8 offset)))
run: 7344 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 7345 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7346 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9627 file-address) (raw))
sizeof: ((9627 file-address) (raw))
run: 10736 => ((8 file-address))
setm: ((8 file-address)) <= 10736
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 10736
run: 7347 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10736 file) (raw))
m: ((10736 integer) (raw))
sizeof: ((10736 integer) (raw))
sizeof: ((_ square))
m: ((10738 square) (raw))
sizeof: ((10738 square) (raw))
run: #\P => ((6 square))
setm: ((6 square)) <= #\P
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\P
run: 7348 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7349 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19933 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7350 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\P)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19935 to 1101
run: 7351 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\P)
run: #\P => ((2 character))
setm: ((2 character)) <= #\P
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19936 to #\P
run: 7352 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7353 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19937 to 1103
run: 7354 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19938 to 1104
run: 7355 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19939 to 20
run: 7356 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19940 to 120
run: 7357 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 128 => ((7 integer))
setm: ((7 integer)) <= 128
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19941 to 128
run: 7358 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19942 to 1106
run: 7359 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1235 => ((9 byte-address))
setm: ((9 byte-address)) <= 1235
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19943 to 1235
run: 7360 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\P => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\P
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1235 to #\P
run: 7361 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 9 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 9
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 9
run: 7362 print-character 13: (((reply)))
reply: nil nil
run: 7363 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7364 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19964 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7365 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19966 to 1101
run: 7366 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19967 to #\space
run: 7367 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7368 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19968 to 1103
run: 7369 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19969 to 1104
run: 7370 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19970 to 20
run: 7371 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19971 to 120
run: 7372 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 129 => ((7 integer))
setm: ((7 integer)) <= 129
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19972 to 129
run: 7373 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19973 to 1106
run: 7374 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1236 => ((9 byte-address))
setm: ((9 byte-address)) <= 1236
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19974 to 1236
run: 7375 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1236 to #\space
run: 7376 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 10 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 10
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 10
run: 7377 print-character 13: (((reply)))
reply: nil nil
run: 7378 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 3 => ((7 integer))
setm: ((7 integer)) <= 3
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 3
run: 7379 print-board 18: (((jump)) ((-8 offset)))
run: 7380 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 7381 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7382 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9628 file-address) (raw))
sizeof: ((9628 file-address) (raw))
run: 11272 => ((8 file-address))
setm: ((8 file-address)) <= 11272
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 11272
run: 7383 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11272 file) (raw))
m: ((11272 integer) (raw))
sizeof: ((11272 integer) (raw))
sizeof: ((_ square))
m: ((11274 square) (raw))
sizeof: ((11274 square) (raw))
run: #\P => ((6 square))
setm: ((6 square)) <= #\P
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\P
run: 7384 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7385 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19995 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7386 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\P)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19997 to 1101
run: 7387 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\P)
run: #\P => ((2 character))
setm: ((2 character)) <= #\P
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19998 to #\P
run: 7388 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7389 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19999 to 1103
run: 7390 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20000 to 1104
run: 7391 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20001 to 20
run: 7392 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20002 to 120
run: 7393 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 130 => ((7 integer))
setm: ((7 integer)) <= 130
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20003 to 130
run: 7394 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20004 to 1106
run: 7395 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1237 => ((9 byte-address))
setm: ((9 byte-address)) <= 1237
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20005 to 1237
run: 7396 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\P => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\P
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1237 to #\P
run: 7397 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 11 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 11
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 11
run: 7398 print-character 13: (((reply)))
reply: nil nil
run: 7399 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7400 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20026 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7401 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20028 to 1101
run: 7402 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20029 to #\space
run: 7403 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7404 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20030 to 1103
run: 7405 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20031 to 1104
run: 7406 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20032 to 20
run: 7407 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20033 to 120
run: 7408 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 131 => ((7 integer))
setm: ((7 integer)) <= 131
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20034 to 131
run: 7409 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20035 to 1106
run: 7410 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1238 => ((9 byte-address))
setm: ((9 byte-address)) <= 1238
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20036 to 1238
run: 7411 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1238 to #\space
run: 7412 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 12 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 12
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 12
run: 7413 print-character 13: (((reply)))
reply: nil nil
run: 7414 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 4 => ((7 integer))
setm: ((7 integer)) <= 4
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 4
run: 7415 print-board 18: (((jump)) ((-8 offset)))
run: 7416 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 7417 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7418 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9629 file-address) (raw))
sizeof: ((9629 file-address) (raw))
run: 11808 => ((8 file-address))
setm: ((8 file-address)) <= 11808
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 11808
run: 7419 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11808 file) (raw))
m: ((11808 integer) (raw))
sizeof: ((11808 integer) (raw))
sizeof: ((_ square))
m: ((11810 square) (raw))
sizeof: ((11810 square) (raw))
run: #\P => ((6 square))
setm: ((6 square)) <= #\P
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\P
run: 7420 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7421 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20057 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7422 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\P)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20059 to 1101
run: 7423 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\P)
run: #\P => ((2 character))
setm: ((2 character)) <= #\P
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20060 to #\P
run: 7424 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7425 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20061 to 1103
run: 7426 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20062 to 1104
run: 7427 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20063 to 20
run: 7428 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20064 to 120
run: 7429 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 132 => ((7 integer))
setm: ((7 integer)) <= 132
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20065 to 132
run: 7430 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20066 to 1106
run: 7431 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1239 => ((9 byte-address))
setm: ((9 byte-address)) <= 1239
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20067 to 1239
run: 7432 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\P => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\P
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1239 to #\P
run: 7433 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 13 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 13
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 13
run: 7434 print-character 13: (((reply)))
reply: nil nil
run: 7435 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7436 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20088 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7437 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20090 to 1101
run: 7438 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20091 to #\space
run: 7439 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7440 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20092 to 1103
run: 7441 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20093 to 1104
run: 7442 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20094 to 20
run: 7443 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20095 to 120
run: 7444 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 133 => ((7 integer))
setm: ((7 integer)) <= 133
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20096 to 133
run: 7445 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20097 to 1106
run: 7446 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1240 => ((9 byte-address))
setm: ((9 byte-address)) <= 1240
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20098 to 1240
run: 7447 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1240 to #\space
run: 7448 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 14 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 14
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 14
run: 7449 print-character 13: (((reply)))
reply: nil nil
run: 7450 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 5 => ((7 integer))
setm: ((7 integer)) <= 5
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 5
run: 7451 print-board 18: (((jump)) ((-8 offset)))
run: 7452 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 7453 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7454 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9630 file-address) (raw))
sizeof: ((9630 file-address) (raw))
run: 12344 => ((8 file-address))
setm: ((8 file-address)) <= 12344
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 12344
run: 7455 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12344 file) (raw))
m: ((12344 integer) (raw))
sizeof: ((12344 integer) (raw))
sizeof: ((_ square))
m: ((12346 square) (raw))
sizeof: ((12346 square) (raw))
run: #\P => ((6 square))
setm: ((6 square)) <= #\P
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\P
run: 7456 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7457 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20119 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7458 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\P)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20121 to 1101
run: 7459 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\P)
run: #\P => ((2 character))
setm: ((2 character)) <= #\P
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20122 to #\P
run: 7460 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7461 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20123 to 1103
run: 7462 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20124 to 1104
run: 7463 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20125 to 20
run: 7464 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20126 to 120
run: 7465 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 134 => ((7 integer))
setm: ((7 integer)) <= 134
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20127 to 134
run: 7466 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20128 to 1106
run: 7467 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1241 => ((9 byte-address))
setm: ((9 byte-address)) <= 1241
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20129 to 1241
run: 7468 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\P => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\P
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1241 to #\P
run: 7469 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 15 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 15
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 15
run: 7470 print-character 13: (((reply)))
reply: nil nil
run: 7471 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7472 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20150 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7473 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20152 to 1101
run: 7474 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20153 to #\space
run: 7475 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7476 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20154 to 1103
run: 7477 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20155 to 1104
run: 7478 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20156 to 20
run: 7479 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20157 to 120
run: 7480 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 135 => ((7 integer))
setm: ((7 integer)) <= 135
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20158 to 135
run: 7481 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20159 to 1106
run: 7482 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1242 => ((9 byte-address))
setm: ((9 byte-address)) <= 1242
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20160 to 1242
run: 7483 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1242 to #\space
run: 7484 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 16 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 16
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 16
run: 7485 print-character 13: (((reply)))
reply: nil nil
run: 7486 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 6 => ((7 integer))
setm: ((7 integer)) <= 6
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 6
run: 7487 print-board 18: (((jump)) ((-8 offset)))
run: 7488 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 7489 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7490 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9631 file-address) (raw))
sizeof: ((9631 file-address) (raw))
run: 12880 => ((8 file-address))
setm: ((8 file-address)) <= 12880
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 12880
run: 7491 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12880 file) (raw))
m: ((12880 integer) (raw))
sizeof: ((12880 integer) (raw))
sizeof: ((_ square))
m: ((12882 square) (raw))
sizeof: ((12882 square) (raw))
run: #\P => ((6 square))
setm: ((6 square)) <= #\P
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\P
run: 7492 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7493 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20181 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7494 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\P)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20183 to 1101
run: 7495 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\P)
run: #\P => ((2 character))
setm: ((2 character)) <= #\P
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20184 to #\P
run: 7496 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7497 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20185 to 1103
run: 7498 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20186 to 1104
run: 7499 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20187 to 20
run: 7500 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20188 to 120
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: 7501 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 136 => ((7 integer))
setm: ((7 integer)) <= 136
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20189 to 136
run: 7502 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20190 to 1106
run: 7503 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1243 => ((9 byte-address))
setm: ((9 byte-address)) <= 1243
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20191 to 1243
run: 7504 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\P => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\P
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1243 to #\P
run: 7505 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 17 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 17
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 17
run: 7506 print-character 13: (((reply)))
reply: nil nil
run: 7507 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7508 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20212 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7509 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20214 to 1101
run: 7510 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20215 to #\space
run: 7511 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7512 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20216 to 1103
run: 7513 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20217 to 1104
run: 7514 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20218 to 20
run: 7515 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20219 to 120
run: 7516 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 137 => ((7 integer))
setm: ((7 integer)) <= 137
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20220 to 137
run: 7517 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20221 to 1106
run: 7518 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1244 => ((9 byte-address))
setm: ((9 byte-address)) <= 1244
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20222 to 1244
run: 7519 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1244 to #\space
run: 7520 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 18 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 18
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 18
run: 7521 print-character 13: (((reply)))
reply: nil nil
run: 7522 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 7 => ((7 integer))
setm: ((7 integer)) <= 7
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 7
run: 7523 print-board 18: (((jump)) ((-8 offset)))
run: 7524 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 7525 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7526 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9632 file-address) (raw))
sizeof: ((9632 file-address) (raw))
run: 13416 => ((8 file-address))
setm: ((8 file-address)) <= 13416
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 13416
run: 7527 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13416 file) (raw))
m: ((13416 integer) (raw))
sizeof: ((13416 integer) (raw))
sizeof: ((_ square))
m: ((13418 square) (raw))
sizeof: ((13418 square) (raw))
run: #\P => ((6 square))
setm: ((6 square)) <= #\P
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\P
run: 7528 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7529 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20243 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7530 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\P)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20245 to 1101
run: 7531 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\P)
run: #\P => ((2 character))
setm: ((2 character)) <= #\P
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20246 to #\P
run: 7532 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7533 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20247 to 1103
run: 7534 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20248 to 1104
run: 7535 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20249 to 20
run: 7536 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20250 to 120
run: 7537 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 138 => ((7 integer))
setm: ((7 integer)) <= 138
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20251 to 138
run: 7538 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20252 to 1106
run: 7539 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1245 => ((9 byte-address))
setm: ((9 byte-address)) <= 1245
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20253 to 1245
run: 7540 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\P => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\P
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1245 to #\P
run: 7541 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 19 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 19
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 19
run: 7542 print-character 13: (((reply)))
reply: nil nil
run: 7543 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7544 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20274 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7545 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20276 to 1101
run: 7546 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20277 to #\space
run: 7547 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7548 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20278 to 1103
run: 7549 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20279 to 1104
run: 7550 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20280 to 20
run: 7551 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20281 to 120
run: 7552 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 139 => ((7 integer))
setm: ((7 integer)) <= 139
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20282 to 139
run: 7553 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20283 to 1106
run: 7554 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1246 => ((9 byte-address))
setm: ((9 byte-address)) <= 1246
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20284 to 1246
run: 7555 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1246 to #\space
run: 7556 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 20 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 20
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 20
run: 7557 print-character 13: (((reply)))
reply: nil nil
run: 7558 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 8 => ((7 integer))
setm: ((7 integer)) <= 8
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 8
run: 7559 print-board 18: (((jump)) ((-8 offset)))
run: 7560 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to t
run: 7561 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7562 print-board 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 0 => ((3 integer))
setm: ((3 integer)) <= 0
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13960 to 0
run: 7563 print-board 20: (((cursor-to-next-line)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7564 cursor-to-next-line 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20305 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7565 cursor-to-next-line 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20307 to 1101
run: 7566 cursor-to-next-line 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7567 cursor-to-next-line 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((2 integer-address))
setm: ((2 integer-address)) <= 1103
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 20308 to 1103
run: 7568 cursor-to-next-line 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 7 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 7
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1103 to 7
run: 7569 cursor-to-next-line 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((3 integer-address))
setm: ((3 integer-address)) <= 1104
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20309 to 1104
run: 7570 cursor-to-next-line 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 1104 to 0
run: 7571 cursor-to-next-line 7: (((reply)))
reply: nil nil
run: 7572 print-board 21: (((jump)) ((-18 offset)))
run: 7573 print-board 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 7574 print-board 5: (((jump-if)) ((4 boolean)) ((16 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7575 print-board 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 1 => ((5 integer))
setm: ((5 integer)) <= 1
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 13962 to 1
run: 7576 print-board 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((5 integer))
sizeof: ((5 integer))
run: 7577 print-integer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20336 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7578 print-integer 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 1)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20338 to 1101
run: 7579 print-integer 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1101 1)
run: 1 => ((2 integer))
setm: ((2 integer)) <= 1
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 20339 to 1
run: 7580 print-integer 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
run: 7581 integer-to-decimal-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20367 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7582 integer-to-decimal-string 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (1)
run: 1 => ((1 integer))
setm: ((1 integer)) <= 1
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 20369 to 1
run: 7583 integer-to-decimal-string 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 20370 to nil
run: 7584 integer-to-decimal-string 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 7585 integer-to-decimal-string 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 20372 to nil
run: 7586 integer-to-decimal-string 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 20373 to nil
run: 7587 integer-to-decimal-string 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7588 integer-to-decimal-string 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: 7589 init-buffer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20398 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7590 init-buffer 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
sizeof: ((_ buffer))
sizeof: ((_ integer))
sizeof: ((_ string-address))
run: 20429 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 20429
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 20400 to 20429
run: 7591 init-buffer 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 20429 => ((2 integer-address))
setm: ((2 integer-address)) <= 20429
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 20401 to 20429
run: 7592 init-buffer 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 20429 to 0
run: 7593 init-buffer 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 20430 => ((3 string-address-address))
setm: ((3 string-address-address)) <= 20430
setm: size of ((3 string-address-address)) is 1
setm: ((3 string-address-address)): setting 20402 to 20430
run: 7594 init-buffer 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 20403 to 30
run: 7595 init-buffer 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ byte))
run: 20431 => ((3 string-address-address) (deref))
setm: ((3 string-address-address) (deref)) <= 20431
setm: size of ((3 string-address-address) (deref)) is 1
setm: ((3 string-address-address) (deref)): setting 20430 to 20431
run: 7596 init-buffer 7: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 20429 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 20429
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 20374 to 20429
run: 7597 integer-to-decimal-string 12: (((7 character)) <- ((copy)) ((0 literal)))
run: #\0 => ((7 character))
setm: ((7 character)) <= #\0
setm: size of ((7 character)) is 1
setm: ((7 character)): setting 20375 to #\0
run: 7598 integer-to-decimal-string 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 48 => ((8 integer))
setm: ((8 integer)) <= 48
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 20376 to 48
run: 7599 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 20377 to nil
run: 7600 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 7601 integer-to-decimal-string 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
m: ((1 integer))
sizeof: ((1 integer))
m: ((1 integer))
sizeof: ((1 integer))
run: 0 => ((1 integer))
setm: ((1 integer)) <= 0
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 20369 to 0
run: 1 => ((10 integer))
setm: ((10 integer)) <= 1
setm: size of ((10 integer)) is 1
setm: ((10 integer)): setting 20378 to 1
run: 7602 integer-to-decimal-string 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((10 integer))
sizeof: ((10 integer))
run: 49 => ((11 integer))
setm: ((11 integer)) <= 49
setm: size of ((11 integer)) is 1
setm: ((11 integer)): setting 20379 to 49
run: 7603 integer-to-decimal-string 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
m: ((11 integer))
sizeof: ((11 integer))
run: #\1 => ((12 character))
setm: ((12 character)) <= #\1
setm: size of ((12 character)) is 1
setm: ((12 character)): setting 20380 to #\1
run: 7604 integer-to-decimal-string 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
m: ((6 buffer-address))
sizeof: ((6 buffer-address))
m: ((12 character))
sizeof: ((12 character))
run: 7605 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20462 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7606 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (20429 #\1)
run: 20429 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 20429
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 20464 to 20429
run: 7607 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (20429 #\1)
run: #\1 => ((2 character))
setm: ((2 character)) <= #\1
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20465 to #\1
run: 7608 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 7609 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20493 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7610 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (20429)
run: 20429 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 20429
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 20495 to 20429
run: 7611 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((20429 integer) (raw))
sizeof: ((20429 integer) (raw))
run: 0 => ((2 integer))
setm: ((2 integer)) <= 0
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 20496 to 0
run: 7612 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((20430 string-address) (raw))
sizeof: ((20430 string-address) (raw))
run: 20431 => ((3 string-address))
setm: ((3 string-address)) <= 20431
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 20497 to 20431
run: 7613 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((20431 integer) (raw))
sizeof: ((20431 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 20498 to 30
run: 7614 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 20499 to nil
run: 7615 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 20466 to nil
run: 7616 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 7617 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 20429 => ((4 integer-address))
setm: ((4 integer-address)) <= 20429
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20467 to 20429
run: 7618 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((20430 string-address) (raw))
sizeof: ((20430 string-address) (raw))
run: 20431 => ((5 string-address))
setm: ((5 string-address)) <= 20431
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 20468 to 20431
run: 7619 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((20431 string) (raw))
m: ((20431 integer) (raw))
sizeof: ((20431 integer) (raw))
sizeof: ((_ byte))
run: 20432 => ((6 byte-address))
setm: ((6 byte-address)) <= 20432
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 20469 to 20432
run: 7620 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\1 => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\1
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 20432 to #\1
run: 7621 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 20429 to 1
run: 7622 append 11: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 20429 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 20429
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 20374 to 20429
run: 7623 integer-to-decimal-string 20: (((jump)) ((-7 offset)))
run: 7624 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 20377 to t
run: 7625 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 7626 integer-to-decimal-string 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7627 integer-to-decimal-string 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
m: ((20429 integer) (raw))
sizeof: ((20429 integer) (raw))
run: 1 => ((13 integer))
setm: ((13 integer)) <= 1
setm: size of ((13 integer)) is 1
setm: ((13 integer)): setting 20381 to 1
run: 7628 integer-to-decimal-string 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((20430 string-address) (raw))
sizeof: ((20430 string-address) (raw))
run: 20431 => ((14 string-address))
setm: ((14 string-address)) <= 20431
setm: size of ((14 string-address)) is 1
setm: ((14 string-address)): setting 20382 to 20431
run: 7629 integer-to-decimal-string 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
m: ((13 integer))
sizeof: ((13 integer))
sizeof: ((_ byte))
run: 20524 => ((15 string-address))
setm: ((15 string-address)) <= 20524
setm: size of ((15 string-address)) is 1
setm: ((15 string-address)): setting 20383 to 20524
run: 7630 integer-to-decimal-string 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
m: ((13 integer))
sizeof: ((13 integer))
run: 0 => ((16 integer))
setm: ((16 integer)) <= 0
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 20384 to 0
run: 7631 integer-to-decimal-string 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((17 integer))
setm: ((17 integer)) <= 0
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 20385 to 0
run: 7632 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 20377 to nil
run: 7633 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 7634 integer-to-decimal-string 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
m: ((16 integer))
sizeof: ((16 integer))
array-len: ((20431 string) (raw))
m: ((20431 integer) (raw))
sizeof: ((20431 integer) (raw))
sizeof: ((_ byte))
m: ((20432 byte) (raw))
sizeof: ((20432 byte) (raw))
run: #\1 => ((18 byte))
setm: ((18 byte)) <= #\1
setm: size of ((18 byte)) is 1
setm: ((18 byte)): setting 20386 to #\1
run: 7635 integer-to-decimal-string 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
m: ((17 integer))
sizeof: ((17 integer))
array-len: ((20524 string) (raw))
m: ((20524 integer) (raw))
sizeof: ((20524 integer) (raw))
sizeof: ((_ byte))
run: 20525 => ((19 byte-address))
setm: ((19 byte-address)) <= 20525
setm: size of ((19 byte-address)) is 1
setm: ((19 byte-address)): setting 20387 to 20525
run: 7636 integer-to-decimal-string 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
m: ((18 byte))
sizeof: ((18 byte))
run: #\1 => ((19 byte-address) (deref))
setm: ((19 byte-address) (deref)) <= #\1
setm: size of ((19 byte-address) (deref)) is 1
setm: ((19 byte-address) (deref)): setting 20525 to #\1
run: 7637 integer-to-decimal-string 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: -1 => ((16 integer))
setm: ((16 integer)) <= -1
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 20384 to -1
run: 7638 integer-to-decimal-string 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
m: ((17 integer))
sizeof: ((17 integer))
run: 1 => ((17 integer))
setm: ((17 integer)) <= 1
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 20385 to 1
run: 7639 integer-to-decimal-string 35: (((jump)) ((-8 offset)))
run: 7640 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 20377 to t
run: 7641 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 7642 integer-to-decimal-string 36: (((reply)) ((15 string-address)))
m: ((15 string-address))
sizeof: ((15 string-address))
reply: (((15 string-address))) (((3 string-address)))
reply: 20524 => ((3 string-address))
setm: ((3 string-address)) <= 20524
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 20340 to 20524
run: 7643 print-integer 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((3 string-address))
sizeof: ((3 string-address))
run: 7644 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20526 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7645 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 20524)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20528 to 1101
run: 7646 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 20524)
run: 20524 => ((2 string-address))
setm: ((2 string-address)) <= 20524
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 20529 to 20524
run: 7647 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((20524 integer) (raw))
sizeof: ((20524 integer) (raw))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 20530 to 1
run: 7648 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 20531 to 0
run: 7649 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 20532 to nil
run: 7650 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7651 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((20524 string) (raw))
m: ((20524 integer) (raw))
sizeof: ((20524 integer) (raw))
sizeof: ((_ byte))
m: ((20525 byte) (raw))
sizeof: ((20525 byte) (raw))
run: #\1 => ((6 character))
setm: ((6 character)) <= #\1
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 20533 to #\1
run: 7652 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 7653 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20557 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7654 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\1)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20559 to 1101
run: 7655 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\1)
run: #\1 => ((2 character))
setm: ((2 character)) <= #\1
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20560 to #\1
run: 7656 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7657 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20561 to 1103
run: 7658 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20562 to 1104
run: 7659 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20563 to 20
run: 7660 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20564 to 140
run: 7661 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 140 => ((7 integer))
setm: ((7 integer)) <= 140
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20565 to 140
run: 7662 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20566 to 1106
run: 7663 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1247 => ((9 byte-address))
setm: ((9 byte-address)) <= 1247
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20567 to 1247
run: 7664 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\1 => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\1
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1247 to #\1
run: 7665 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 1
run: 7666 print-character 13: (((reply)))
reply: nil nil
run: 7667 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 20531 to 1
run: 7668 print-string 10: (((jump)) ((-6 offset)))
run: 7669 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 20532 to t
run: 7670 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7671 print-board 8: (((6 string-address)) <- ((new))  | )
run: 20588 => ((6 string-address))
setm: ((6 string-address)) <= 20588
setm: size of ((6 string-address)) is 1
setm: ((6 string-address)): setting 13963 to 20588
run: 7672 print-board 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 string-address))
sizeof: ((6 string-address))
run: 7673 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20592 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7674 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 20588)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20594 to 1101
run: 7675 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 20588)
run: 20588 => ((2 string-address))
setm: ((2 string-address)) <= 20588
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 20595 to 20588
run: 7676 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((20588 integer) (raw))
sizeof: ((20588 integer) (raw))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 20596 to 3
run: 7677 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 20597 to 0
run: 7678 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 20598 to nil
run: 7679 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7680 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((20588 string) (raw))
m: ((20588 integer) (raw))
sizeof: ((20588 integer) (raw))
sizeof: ((_ byte))
m: ((20589 byte) (raw))
sizeof: ((20589 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 20599 to #\space
run: 7681 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 7682 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20623 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7683 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20625 to 1101
run: 7684 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20626 to #\space
run: 7685 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7686 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20627 to 1103
run: 7687 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20628 to 1104
run: 7688 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20629 to 20
run: 7689 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20630 to 140
run: 7690 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 141 => ((7 integer))
setm: ((7 integer)) <= 141
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20631 to 141
run: 7691 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20632 to 1106
run: 7692 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1248 => ((9 byte-address))
setm: ((9 byte-address)) <= 1248
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20633 to 1248
run: 7693 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1248 to #\space
run: 7694 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 2
run: 7695 print-character 13: (((reply)))
reply: nil nil
run: 7696 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 20597 to 1
run: 7697 print-string 10: (((jump)) ((-6 offset)))
run: 7698 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 20598 to nil
run: 7699 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7700 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((20588 string) (raw))
m: ((20588 integer) (raw))
sizeof: ((20588 integer) (raw))
sizeof: ((_ byte))
m: ((20590 byte) (raw))
sizeof: ((20590 byte) (raw))
run: #\| => ((6 character))
setm: ((6 character)) <= #\|
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 20599 to #\|
run: 7701 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 7702 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20654 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7703 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\|)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20656 to 1101
run: 7704 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\|)
run: #\| => ((2 character))
setm: ((2 character)) <= #\|
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20657 to #\|
run: 7705 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7706 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20658 to 1103
run: 7707 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20659 to 1104
run: 7708 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20660 to 20
run: 7709 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20661 to 140
run: 7710 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 142 => ((7 integer))
setm: ((7 integer)) <= 142
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20662 to 142
run: 7711 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20663 to 1106
run: 7712 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1249 => ((9 byte-address))
setm: ((9 byte-address)) <= 1249
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20664 to 1249
run: 7713 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\| => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\|
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1249 to #\|
run: 7714 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 3
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 3
run: 7715 print-character 13: (((reply)))
reply: nil nil
run: 7716 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 20597 to 2
run: 7717 print-string 10: (((jump)) ((-6 offset)))
run: 7718 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 20598 to nil
run: 7719 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7720 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((20588 string) (raw))
m: ((20588 integer) (raw))
sizeof: ((20588 integer) (raw))
sizeof: ((_ byte))
m: ((20591 byte) (raw))
sizeof: ((20591 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 20599 to #\space
run: 7721 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 7722 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20685 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7723 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20687 to 1101
run: 7724 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20688 to #\space
run: 7725 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7726 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20689 to 1103
run: 7727 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20690 to 1104
run: 7728 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20691 to 20
run: 7729 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20692 to 140
run: 7730 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 143 => ((7 integer))
setm: ((7 integer)) <= 143
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20693 to 143
run: 7731 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20694 to 1106
run: 7732 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1250 => ((9 byte-address))
setm: ((9 byte-address)) <= 1250
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20695 to 1250
run: 7733 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1250 to #\space
run: 7734 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 4
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 4
run: 7735 print-character 13: (((reply)))
reply: nil nil
run: 7736 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 20597 to 3
run: 7737 print-string 10: (((jump)) ((-6 offset)))
run: 7738 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 20598 to t
run: 7739 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7740 print-board 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 0
run: 7741 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 7742 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7743 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9625 file-address) (raw))
sizeof: ((9625 file-address) (raw))
run: 9664 => ((8 file-address))
setm: ((8 file-address)) <= 9664
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 9664
run: 7744 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9664 file) (raw))
m: ((9664 integer) (raw))
sizeof: ((9664 integer) (raw))
sizeof: ((_ square))
m: ((9665 square) (raw))
sizeof: ((9665 square) (raw))
run: #\R => ((6 square))
setm: ((6 square)) <= #\R
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\R
run: 7745 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7746 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20716 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7747 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\R)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20718 to 1101
run: 7748 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\R)
run: #\R => ((2 character))
setm: ((2 character)) <= #\R
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20719 to #\R
run: 7749 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7750 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20720 to 1103
run: 7751 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20721 to 1104
run: 7752 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20722 to 20
run: 7753 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20723 to 140
run: 7754 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 144 => ((7 integer))
setm: ((7 integer)) <= 144
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20724 to 144
run: 7755 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20725 to 1106
run: 7756 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1251 => ((9 byte-address))
setm: ((9 byte-address)) <= 1251
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20726 to 1251
run: 7757 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\R => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\R
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1251 to #\R
run: 7758 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 5 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 5
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 5
run: 7759 print-character 13: (((reply)))
reply: nil nil
run: 7760 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7761 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20747 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7762 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20749 to 1101
run: 7763 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20750 to #\space
run: 7764 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7765 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20751 to 1103
run: 7766 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20752 to 1104
run: 7767 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20753 to 20
run: 7768 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20754 to 140
run: 7769 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 145 => ((7 integer))
setm: ((7 integer)) <= 145
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20755 to 145
run: 7770 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20756 to 1106
run: 7771 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1252 => ((9 byte-address))
setm: ((9 byte-address)) <= 1252
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20757 to 1252
run: 7772 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1252 to #\space
run: 7773 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 6 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 6
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 6
run: 7774 print-character 13: (((reply)))
reply: nil nil
run: 7775 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 1
run: 7776 print-board 18: (((jump)) ((-8 offset)))
run: 7777 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 7778 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7779 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9626 file-address) (raw))
sizeof: ((9626 file-address) (raw))
run: 10200 => ((8 file-address))
setm: ((8 file-address)) <= 10200
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 10200
run: 7780 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10200 file) (raw))
m: ((10200 integer) (raw))
sizeof: ((10200 integer) (raw))
sizeof: ((_ square))
m: ((10201 square) (raw))
sizeof: ((10201 square) (raw))
run: #\N => ((6 square))
setm: ((6 square)) <= #\N
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\N
run: 7781 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7782 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20778 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7783 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\N)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20780 to 1101
run: 7784 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\N)
run: #\N => ((2 character))
setm: ((2 character)) <= #\N
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20781 to #\N
run: 7785 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7786 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20782 to 1103
run: 7787 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20783 to 1104
run: 7788 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20784 to 20
run: 7789 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20785 to 140
run: 7790 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 146 => ((7 integer))
setm: ((7 integer)) <= 146
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20786 to 146
run: 7791 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20787 to 1106
run: 7792 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1253 => ((9 byte-address))
setm: ((9 byte-address)) <= 1253
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20788 to 1253
run: 7793 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\N => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\N
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1253 to #\N
run: 7794 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 7 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 7
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 7
run: 7795 print-character 13: (((reply)))
reply: nil nil
run: 7796 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7797 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20809 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7798 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20811 to 1101
run: 7799 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20812 to #\space
run: 7800 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7801 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20813 to 1103
run: 7802 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20814 to 1104
run: 7803 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20815 to 20
run: 7804 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20816 to 140
run: 7805 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 147 => ((7 integer))
setm: ((7 integer)) <= 147
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20817 to 147
run: 7806 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20818 to 1106
run: 7807 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1254 => ((9 byte-address))
setm: ((9 byte-address)) <= 1254
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20819 to 1254
run: 7808 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1254 to #\space
run: 7809 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 8 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 8
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 8
run: 7810 print-character 13: (((reply)))
reply: nil nil
run: 7811 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 2 => ((7 integer))
setm: ((7 integer)) <= 2
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 2
run: 7812 print-board 18: (((jump)) ((-8 offset)))
run: 7813 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 7814 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7815 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9627 file-address) (raw))
sizeof: ((9627 file-address) (raw))
run: 10736 => ((8 file-address))
setm: ((8 file-address)) <= 10736
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 10736
run: 7816 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10736 file) (raw))
m: ((10736 integer) (raw))
sizeof: ((10736 integer) (raw))
sizeof: ((_ square))
m: ((10737 square) (raw))
sizeof: ((10737 square) (raw))
run: #\B => ((6 square))
setm: ((6 square)) <= #\B
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\B
run: 7817 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7818 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20840 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7819 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\B)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20842 to 1101
run: 7820 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\B)
run: #\B => ((2 character))
setm: ((2 character)) <= #\B
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20843 to #\B
run: 7821 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7822 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20844 to 1103
run: 7823 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20845 to 1104
run: 7824 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20846 to 20
run: 7825 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20847 to 140
run: 7826 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 148 => ((7 integer))
setm: ((7 integer)) <= 148
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20848 to 148
run: 7827 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20849 to 1106
run: 7828 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1255 => ((9 byte-address))
setm: ((9 byte-address)) <= 1255
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20850 to 1255
run: 7829 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\B => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\B
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1255 to #\B
run: 7830 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 9 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 9
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 9
run: 7831 print-character 13: (((reply)))
reply: nil nil
run: 7832 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7833 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20871 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7834 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20873 to 1101
run: 7835 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20874 to #\space
run: 7836 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7837 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20875 to 1103
run: 7838 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20876 to 1104
run: 7839 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20877 to 20
run: 7840 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20878 to 140
run: 7841 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 149 => ((7 integer))
setm: ((7 integer)) <= 149
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20879 to 149
run: 7842 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20880 to 1106
run: 7843 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1256 => ((9 byte-address))
setm: ((9 byte-address)) <= 1256
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20881 to 1256
run: 7844 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1256 to #\space
run: 7845 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 10 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 10
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 10
run: 7846 print-character 13: (((reply)))
reply: nil nil
run: 7847 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 3 => ((7 integer))
setm: ((7 integer)) <= 3
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 3
run: 7848 print-board 18: (((jump)) ((-8 offset)))
run: 7849 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 7850 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7851 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9628 file-address) (raw))
sizeof: ((9628 file-address) (raw))
run: 11272 => ((8 file-address))
setm: ((8 file-address)) <= 11272
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 11272
run: 7852 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11272 file) (raw))
m: ((11272 integer) (raw))
sizeof: ((11272 integer) (raw))
sizeof: ((_ square))
m: ((11273 square) (raw))
sizeof: ((11273 square) (raw))
run: #\Q => ((6 square))
setm: ((6 square)) <= #\Q
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\Q
run: 7853 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7854 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20902 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7855 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\Q)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20904 to 1101
run: 7856 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\Q)
run: #\Q => ((2 character))
setm: ((2 character)) <= #\Q
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20905 to #\Q
run: 7857 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7858 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20906 to 1103
run: 7859 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20907 to 1104
run: 7860 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20908 to 20
run: 7861 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20909 to 140
run: 7862 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 150 => ((7 integer))
setm: ((7 integer)) <= 150
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20910 to 150
run: 7863 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20911 to 1106
run: 7864 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1257 => ((9 byte-address))
setm: ((9 byte-address)) <= 1257
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20912 to 1257
run: 7865 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\Q => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\Q
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1257 to #\Q
run: 7866 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 11 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 11
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 11
run: 7867 print-character 13: (((reply)))
reply: nil nil
run: 7868 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7869 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20933 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7870 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20935 to 1101
run: 7871 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20936 to #\space
run: 7872 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7873 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20937 to 1103
run: 7874 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20938 to 1104
run: 7875 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20939 to 20
run: 7876 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20940 to 140
run: 7877 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 151 => ((7 integer))
setm: ((7 integer)) <= 151
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20941 to 151
run: 7878 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20942 to 1106
run: 7879 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1258 => ((9 byte-address))
setm: ((9 byte-address)) <= 1258
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20943 to 1258
run: 7880 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1258 to #\space
run: 7881 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 12 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 12
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 12
run: 7882 print-character 13: (((reply)))
reply: nil nil
run: 7883 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 4 => ((7 integer))
setm: ((7 integer)) <= 4
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 4
run: 7884 print-board 18: (((jump)) ((-8 offset)))
run: 7885 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 7886 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7887 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9629 file-address) (raw))
sizeof: ((9629 file-address) (raw))
run: 11808 => ((8 file-address))
setm: ((8 file-address)) <= 11808
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 11808
run: 7888 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11808 file) (raw))
m: ((11808 integer) (raw))
sizeof: ((11808 integer) (raw))
sizeof: ((_ square))
m: ((11809 square) (raw))
sizeof: ((11809 square) (raw))
run: #\K => ((6 square))
setm: ((6 square)) <= #\K
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\K
run: 7889 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7890 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20964 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7891 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\K)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20966 to 1101
run: 7892 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\K)
run: #\K => ((2 character))
setm: ((2 character)) <= #\K
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20967 to #\K
run: 7893 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7894 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20968 to 1103
run: 7895 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20969 to 1104
run: 7896 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20970 to 20
run: 7897 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20971 to 140
run: 7898 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 152 => ((7 integer))
setm: ((7 integer)) <= 152
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20972 to 152
run: 7899 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20973 to 1106
run: 7900 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1259 => ((9 byte-address))
setm: ((9 byte-address)) <= 1259
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20974 to 1259
run: 7901 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\K => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\K
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1259 to #\K
run: 7902 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 13 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 13
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 13
run: 7903 print-character 13: (((reply)))
reply: nil nil
run: 7904 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7905 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20995 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7906 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20997 to 1101
run: 7907 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20998 to #\space
run: 7908 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7909 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20999 to 1103
run: 7910 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21000 to 1104
run: 7911 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21001 to 20
run: 7912 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21002 to 140
run: 7913 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 153 => ((7 integer))
setm: ((7 integer)) <= 153
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21003 to 153
run: 7914 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21004 to 1106
run: 7915 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1260 => ((9 byte-address))
setm: ((9 byte-address)) <= 1260
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21005 to 1260
run: 7916 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1260 to #\space
run: 7917 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 14 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 14
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 14
run: 7918 print-character 13: (((reply)))
reply: nil nil
run: 7919 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 5 => ((7 integer))
setm: ((7 integer)) <= 5
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 5
run: 7920 print-board 18: (((jump)) ((-8 offset)))
run: 7921 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 7922 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7923 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9630 file-address) (raw))
sizeof: ((9630 file-address) (raw))
run: 12344 => ((8 file-address))
setm: ((8 file-address)) <= 12344
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 12344
run: 7924 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12344 file) (raw))
m: ((12344 integer) (raw))
sizeof: ((12344 integer) (raw))
sizeof: ((_ square))
m: ((12345 square) (raw))
sizeof: ((12345 square) (raw))
run: #\B => ((6 square))
setm: ((6 square)) <= #\B
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\B
run: 7925 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7926 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21026 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7927 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\B)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21028 to 1101
run: 7928 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\B)
run: #\B => ((2 character))
setm: ((2 character)) <= #\B
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21029 to #\B
run: 7929 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7930 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21030 to 1103
run: 7931 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21031 to 1104
run: 7932 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21032 to 20
run: 7933 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21033 to 140
run: 7934 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 154 => ((7 integer))
setm: ((7 integer)) <= 154
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21034 to 154
run: 7935 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21035 to 1106
run: 7936 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1261 => ((9 byte-address))
setm: ((9 byte-address)) <= 1261
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21036 to 1261
run: 7937 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\B => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\B
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1261 to #\B
run: 7938 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 15 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 15
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 15
run: 7939 print-character 13: (((reply)))
reply: nil nil
run: 7940 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7941 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21057 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7942 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21059 to 1101
run: 7943 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21060 to #\space
run: 7944 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7945 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21061 to 1103
run: 7946 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21062 to 1104
run: 7947 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21063 to 20
run: 7948 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21064 to 140
run: 7949 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 155 => ((7 integer))
setm: ((7 integer)) <= 155
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21065 to 155
run: 7950 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21066 to 1106
run: 7951 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1262 => ((9 byte-address))
setm: ((9 byte-address)) <= 1262
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21067 to 1262
run: 7952 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1262 to #\space
run: 7953 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 16 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 16
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 16
run: 7954 print-character 13: (((reply)))
reply: nil nil
run: 7955 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 6 => ((7 integer))
setm: ((7 integer)) <= 6
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 6
run: 7956 print-board 18: (((jump)) ((-8 offset)))
run: 7957 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 7958 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7959 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9631 file-address) (raw))
sizeof: ((9631 file-address) (raw))
run: 12880 => ((8 file-address))
setm: ((8 file-address)) <= 12880
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 12880
run: 7960 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12880 file) (raw))
m: ((12880 integer) (raw))
sizeof: ((12880 integer) (raw))
sizeof: ((_ square))
m: ((12881 square) (raw))
sizeof: ((12881 square) (raw))
run: #\N => ((6 square))
setm: ((6 square)) <= #\N
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\N
run: 7961 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7962 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21088 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7963 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\N)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21090 to 1101
run: 7964 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\N)
run: #\N => ((2 character))
setm: ((2 character)) <= #\N
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21091 to #\N
run: 7965 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7966 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21092 to 1103
run: 7967 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21093 to 1104
run: 7968 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21094 to 20
run: 7969 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21095 to 140
run: 7970 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 156 => ((7 integer))
setm: ((7 integer)) <= 156
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21096 to 156
run: 7971 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21097 to 1106
run: 7972 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1263 => ((9 byte-address))
setm: ((9 byte-address)) <= 1263
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21098 to 1263
run: 7973 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\N => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\N
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1263 to #\N
run: 7974 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 17 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 17
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 17
run: 7975 print-character 13: (((reply)))
reply: nil nil
run: 7976 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7977 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21119 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7978 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21121 to 1101
run: 7979 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21122 to #\space
run: 7980 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7981 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21123 to 1103
run: 7982 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21124 to 1104
run: 7983 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21125 to 20
run: 7984 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21126 to 140
run: 7985 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 157 => ((7 integer))
setm: ((7 integer)) <= 157
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21127 to 157
run: 7986 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21128 to 1106
run: 7987 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1264 => ((9 byte-address))
setm: ((9 byte-address)) <= 1264
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21129 to 1264
run: 7988 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1264 to #\space
run: 7989 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 18 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 18
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 18
run: 7990 print-character 13: (((reply)))
reply: nil nil
run: 7991 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 7 => ((7 integer))
setm: ((7 integer)) <= 7
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 7
run: 7992 print-board 18: (((jump)) ((-8 offset)))
run: 7993 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to nil
run: 7994 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7995 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9624 board) (raw))
m: ((9624 integer) (raw))
sizeof: ((9624 integer) (raw))
sizeof: ((_ file-address))
m: ((9632 file-address) (raw))
sizeof: ((9632 file-address) (raw))
run: 13416 => ((8 file-address))
setm: ((8 file-address)) <= 13416
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13965 to 13416
run: 7996 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13416 file) (raw))
m: ((13416 integer) (raw))
sizeof: ((13416 integer) (raw))
sizeof: ((_ square))
m: ((13417 square) (raw))
sizeof: ((13417 square) (raw))
run: #\R => ((6 square))
setm: ((6 square)) <= #\R
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13963 to #\R
run: 7997 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7998 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21150 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7999 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\R)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21152 to 1101
run: 8000 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\R)
run: #\R => ((2 character))
setm: ((2 character)) <= #\R
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21153 to #\R
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: 8001 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8002 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21154 to 1103
run: 8003 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21155 to 1104
run: 8004 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21156 to 20
run: 8005 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21157 to 140
run: 8006 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 158 => ((7 integer))
setm: ((7 integer)) <= 158
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21158 to 158
run: 8007 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21159 to 1106
run: 8008 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1265 => ((9 byte-address))
setm: ((9 byte-address)) <= 1265
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21160 to 1265
run: 8009 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\R => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\R
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1265 to #\R
run: 8010 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 19 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 19
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 19
run: 8011 print-character 13: (((reply)))
reply: nil nil
run: 8012 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8013 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21181 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8014 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21183 to 1101
run: 8015 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21184 to #\space
run: 8016 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8017 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21185 to 1103
run: 8018 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21186 to 1104
run: 8019 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21187 to 20
run: 8020 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21188 to 140
run: 8021 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 159 => ((7 integer))
setm: ((7 integer)) <= 159
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21189 to 159
run: 8022 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21190 to 1106
run: 8023 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1266 => ((9 byte-address))
setm: ((9 byte-address)) <= 1266
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21191 to 1266
run: 8024 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1266 to #\space
run: 8025 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 20 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 20
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 20
run: 8026 print-character 13: (((reply)))
reply: nil nil
run: 8027 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 8 => ((7 integer))
setm: ((7 integer)) <= 8
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13964 to 8
run: 8028 print-board 18: (((jump)) ((-8 offset)))
run: 8029 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to t
run: 8030 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 8031 print-board 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: -1 => ((3 integer))
setm: ((3 integer)) <= -1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13960 to -1
run: 8032 print-board 20: (((cursor-to-next-line)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8033 cursor-to-next-line 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21212 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8034 cursor-to-next-line 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21214 to 1101
run: 8035 cursor-to-next-line 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8036 cursor-to-next-line 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((2 integer-address))
setm: ((2 integer-address)) <= 1103
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 21215 to 1103
run: 8037 cursor-to-next-line 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 8 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 8
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1103 to 8
run: 8038 cursor-to-next-line 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((3 integer-address))
setm: ((3 integer-address)) <= 1104
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21216 to 1104
run: 8039 cursor-to-next-line 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 1104 to 0
run: 8040 cursor-to-next-line 7: (((reply)))
reply: nil nil
run: 8041 print-board 21: (((jump)) ((-18 offset)))
run: 8042 print-board 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13961 to t
run: 8043 print-board 5: (((jump-if)) ((4 boolean)) ((16 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 8044 print-board 22: (((6 string-address)) <- ((new))   +----------------)
run: 21243 => ((6 string-address))
setm: ((6 string-address)) <= 21243
setm: size of ((6 string-address)) is 1
setm: ((6 string-address)): setting 13963 to 21243
run: 8045 print-board 23: (((print-string)) ((1 terminal-address)) ((6 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 string-address))
sizeof: ((6 string-address))
run: 8046 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21263 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8047 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 21243)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21265 to 1101
run: 8048 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 21243)
run: 21243 => ((2 string-address))
setm: ((2 string-address)) <= 21243
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 21266 to 21243
run: 8049 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((21243 integer) (raw))
sizeof: ((21243 integer) (raw))
run: 19 => ((3 integer))
setm: ((3 integer)) <= 19
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 21267 to 19
run: 8050 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21268 to 0
run: 8051 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21269 to nil
run: 8052 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8053 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21243 string) (raw))
m: ((21243 integer) (raw))
sizeof: ((21243 integer) (raw))
sizeof: ((_ byte))
m: ((21244 byte) (raw))
sizeof: ((21244 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21270 to #\space
run: 8054 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8055 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21294 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8056 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21296 to 1101
run: 8057 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21297 to #\space
run: 8058 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8059 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21298 to 1103
run: 8060 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21299 to 1104
run: 8061 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21300 to 20
run: 8062 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21301 to 160
run: 8063 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 160 => ((7 integer))
setm: ((7 integer)) <= 160
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21302 to 160
run: 8064 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21303 to 1106
run: 8065 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1267 => ((9 byte-address))
setm: ((9 byte-address)) <= 1267
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21304 to 1267
run: 8066 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1267 to #\space
run: 8067 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 1
run: 8068 print-character 13: (((reply)))
reply: nil nil
run: 8069 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21268 to 1
run: 8070 print-string 10: (((jump)) ((-6 offset)))
run: 8071 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21269 to nil
run: 8072 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8073 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21243 string) (raw))
m: ((21243 integer) (raw))
sizeof: ((21243 integer) (raw))
sizeof: ((_ byte))
m: ((21245 byte) (raw))
sizeof: ((21245 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21270 to #\space
run: 8074 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8075 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21325 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8076 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21327 to 1101
run: 8077 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21328 to #\space
run: 8078 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8079 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21329 to 1103
run: 8080 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21330 to 1104
run: 8081 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21331 to 20
run: 8082 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21332 to 160
run: 8083 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 161 => ((7 integer))
setm: ((7 integer)) <= 161
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21333 to 161
run: 8084 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21334 to 1106
run: 8085 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1268 => ((9 byte-address))
setm: ((9 byte-address)) <= 1268
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21335 to 1268
run: 8086 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1268 to #\space
run: 8087 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 2
run: 8088 print-character 13: (((reply)))
reply: nil nil
run: 8089 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21268 to 2
run: 8090 print-string 10: (((jump)) ((-6 offset)))
run: 8091 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21269 to nil
run: 8092 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8093 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21243 string) (raw))
m: ((21243 integer) (raw))
sizeof: ((21243 integer) (raw))
sizeof: ((_ byte))
m: ((21246 byte) (raw))
sizeof: ((21246 byte) (raw))
run: #\+ => ((6 character))
setm: ((6 character)) <= #\+
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21270 to #\+
run: 8094 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8095 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21356 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8096 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\+)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21358 to 1101
run: 8097 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\+)
run: #\+ => ((2 character))
setm: ((2 character)) <= #\+
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21359 to #\+
run: 8098 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8099 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21360 to 1103
run: 8100 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21361 to 1104
run: 8101 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21362 to 20
run: 8102 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21363 to 160
run: 8103 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 162 => ((7 integer))
setm: ((7 integer)) <= 162
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21364 to 162
run: 8104 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21365 to 1106
run: 8105 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1269 => ((9 byte-address))
setm: ((9 byte-address)) <= 1269
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21366 to 1269
run: 8106 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\+ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\+
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1269 to #\+
run: 8107 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 3
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 3
run: 8108 print-character 13: (((reply)))
reply: nil nil
run: 8109 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21268 to 3
run: 8110 print-string 10: (((jump)) ((-6 offset)))
run: 8111 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21269 to nil
run: 8112 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8113 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21243 string) (raw))
m: ((21243 integer) (raw))
sizeof: ((21243 integer) (raw))
sizeof: ((_ byte))
m: ((21247 byte) (raw))
sizeof: ((21247 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21270 to #\-
run: 8114 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8115 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21387 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8116 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21389 to 1101
run: 8117 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21390 to #\-
run: 8118 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8119 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21391 to 1103
run: 8120 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21392 to 1104
run: 8121 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21393 to 20
run: 8122 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21394 to 160
run: 8123 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 163 => ((7 integer))
setm: ((7 integer)) <= 163
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21395 to 163
run: 8124 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21396 to 1106
run: 8125 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1270 => ((9 byte-address))
setm: ((9 byte-address)) <= 1270
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21397 to 1270
run: 8126 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1270 to #\-
run: 8127 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 4
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 4
run: 8128 print-character 13: (((reply)))
reply: nil nil
run: 8129 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 4 => ((4 integer))
setm: ((4 integer)) <= 4
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21268 to 4
run: 8130 print-string 10: (((jump)) ((-6 offset)))
run: 8131 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21269 to nil
run: 8132 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8133 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21243 string) (raw))
m: ((21243 integer) (raw))
sizeof: ((21243 integer) (raw))
sizeof: ((_ byte))
m: ((21248 byte) (raw))
sizeof: ((21248 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21270 to #\-
run: 8134 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8135 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21418 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8136 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21420 to 1101
run: 8137 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21421 to #\-
run: 8138 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8139 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21422 to 1103
run: 8140 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21423 to 1104
run: 8141 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21424 to 20
run: 8142 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21425 to 160
run: 8143 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 164 => ((7 integer))
setm: ((7 integer)) <= 164
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21426 to 164
run: 8144 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21427 to 1106
run: 8145 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1271 => ((9 byte-address))
setm: ((9 byte-address)) <= 1271
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21428 to 1271
run: 8146 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1271 to #\-
run: 8147 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 5 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 5
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 5
run: 8148 print-character 13: (((reply)))
reply: nil nil
run: 8149 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 5 => ((4 integer))
setm: ((4 integer)) <= 5
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21268 to 5
run: 8150 print-string 10: (((jump)) ((-6 offset)))
run: 8151 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21269 to nil
run: 8152 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8153 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21243 string) (raw))
m: ((21243 integer) (raw))
sizeof: ((21243 integer) (raw))
sizeof: ((_ byte))
m: ((21249 byte) (raw))
sizeof: ((21249 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21270 to #\-
run: 8154 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8155 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21449 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8156 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21451 to 1101
run: 8157 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21452 to #\-
run: 8158 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8159 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21453 to 1103
run: 8160 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21454 to 1104
run: 8161 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21455 to 20
run: 8162 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21456 to 160
run: 8163 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 165 => ((7 integer))
setm: ((7 integer)) <= 165
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21457 to 165
run: 8164 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21458 to 1106
run: 8165 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1272 => ((9 byte-address))
setm: ((9 byte-address)) <= 1272
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21459 to 1272
run: 8166 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1272 to #\-
run: 8167 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 6 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 6
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 6
run: 8168 print-character 13: (((reply)))
reply: nil nil
run: 8169 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 6 => ((4 integer))
setm: ((4 integer)) <= 6
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21268 to 6
run: 8170 print-string 10: (((jump)) ((-6 offset)))
run: 8171 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21269 to nil
run: 8172 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8173 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21243 string) (raw))
m: ((21243 integer) (raw))
sizeof: ((21243 integer) (raw))
sizeof: ((_ byte))
m: ((21250 byte) (raw))
sizeof: ((21250 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21270 to #\-
run: 8174 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8175 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21480 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8176 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21482 to 1101
run: 8177 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21483 to #\-
run: 8178 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8179 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21484 to 1103
run: 8180 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21485 to 1104
run: 8181 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21486 to 20
run: 8182 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21487 to 160
run: 8183 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 166 => ((7 integer))
setm: ((7 integer)) <= 166
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21488 to 166
run: 8184 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21489 to 1106
run: 8185 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1273 => ((9 byte-address))
setm: ((9 byte-address)) <= 1273
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21490 to 1273
run: 8186 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1273 to #\-
run: 8187 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 7 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 7
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 7
run: 8188 print-character 13: (((reply)))
reply: nil nil
run: 8189 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 7 => ((4 integer))
setm: ((4 integer)) <= 7
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21268 to 7
run: 8190 print-string 10: (((jump)) ((-6 offset)))
run: 8191 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21269 to nil
run: 8192 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8193 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21243 string) (raw))
m: ((21243 integer) (raw))
sizeof: ((21243 integer) (raw))
sizeof: ((_ byte))
m: ((21251 byte) (raw))
sizeof: ((21251 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21270 to #\-
run: 8194 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8195 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21511 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8196 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21513 to 1101
run: 8197 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21514 to #\-
run: 8198 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8199 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21515 to 1103
run: 8200 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21516 to 1104
run: 8201 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21517 to 20
run: 8202 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21518 to 160
run: 8203 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 167 => ((7 integer))
setm: ((7 integer)) <= 167
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21519 to 167
run: 8204 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21520 to 1106
run: 8205 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1274 => ((9 byte-address))
setm: ((9 byte-address)) <= 1274
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21521 to 1274
run: 8206 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1274 to #\-
run: 8207 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 8 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 8
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 8
run: 8208 print-character 13: (((reply)))
reply: nil nil
run: 8209 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 8 => ((4 integer))
setm: ((4 integer)) <= 8
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21268 to 8
run: 8210 print-string 10: (((jump)) ((-6 offset)))
run: 8211 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21269 to nil
run: 8212 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8213 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21243 string) (raw))
m: ((21243 integer) (raw))
sizeof: ((21243 integer) (raw))
sizeof: ((_ byte))
m: ((21252 byte) (raw))
sizeof: ((21252 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21270 to #\-
run: 8214 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8215 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21542 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8216 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21544 to 1101
run: 8217 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21545 to #\-
run: 8218 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8219 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21546 to 1103
run: 8220 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21547 to 1104
run: 8221 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21548 to 20
run: 8222 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21549 to 160
run: 8223 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 168 => ((7 integer))
setm: ((7 integer)) <= 168
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21550 to 168
run: 8224 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21551 to 1106
run: 8225 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1275 => ((9 byte-address))
setm: ((9 byte-address)) <= 1275
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21552 to 1275
run: 8226 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1275 to #\-
run: 8227 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 9 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 9
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 9
run: 8228 print-character 13: (((reply)))
reply: nil nil
run: 8229 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 9 => ((4 integer))
setm: ((4 integer)) <= 9
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21268 to 9
run: 8230 print-string 10: (((jump)) ((-6 offset)))
run: 8231 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21269 to nil
run: 8232 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8233 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21243 string) (raw))
m: ((21243 integer) (raw))
sizeof: ((21243 integer) (raw))
sizeof: ((_ byte))
m: ((21253 byte) (raw))
sizeof: ((21253 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21270 to #\-
run: 8234 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8235 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21573 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8236 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21575 to 1101
run: 8237 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21576 to #\-
run: 8238 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8239 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21577 to 1103
run: 8240 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21578 to 1104
run: 8241 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21579 to 20
run: 8242 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21580 to 160
run: 8243 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 169 => ((7 integer))
setm: ((7 integer)) <= 169
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21581 to 169
run: 8244 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21582 to 1106
run: 8245 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1276 => ((9 byte-address))
setm: ((9 byte-address)) <= 1276
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21583 to 1276
run: 8246 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1276 to #\-
run: 8247 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 10 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 10
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 10
run: 8248 print-character 13: (((reply)))
reply: nil nil
run: 8249 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 10 => ((4 integer))
setm: ((4 integer)) <= 10
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21268 to 10
run: 8250 print-string 10: (((jump)) ((-6 offset)))
run: 8251 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21269 to nil
run: 8252 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8253 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21243 string) (raw))
m: ((21243 integer) (raw))
sizeof: ((21243 integer) (raw))
sizeof: ((_ byte))
m: ((21254 byte) (raw))
sizeof: ((21254 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21270 to #\-
run: 8254 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8255 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21604 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8256 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21606 to 1101
run: 8257 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21607 to #\-
run: 8258 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8259 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21608 to 1103
run: 8260 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21609 to 1104
run: 8261 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21610 to 20
run: 8262 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21611 to 160
run: 8263 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 170 => ((7 integer))
setm: ((7 integer)) <= 170
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21612 to 170
run: 8264 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21613 to 1106
run: 8265 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1277 => ((9 byte-address))
setm: ((9 byte-address)) <= 1277
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21614 to 1277
run: 8266 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1277 to #\-
run: 8267 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 11 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 11
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 11
run: 8268 print-character 13: (((reply)))
reply: nil nil
run: 8269 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 11 => ((4 integer))
setm: ((4 integer)) <= 11
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21268 to 11
run: 8270 print-string 10: (((jump)) ((-6 offset)))
run: 8271 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21269 to nil
run: 8272 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8273 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21243 string) (raw))
m: ((21243 integer) (raw))
sizeof: ((21243 integer) (raw))
sizeof: ((_ byte))
m: ((21255 byte) (raw))
sizeof: ((21255 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21270 to #\-
run: 8274 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8275 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21635 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8276 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21637 to 1101
run: 8277 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21638 to #\-
run: 8278 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8279 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21639 to 1103
run: 8280 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21640 to 1104
run: 8281 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21641 to 20
run: 8282 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21642 to 160
run: 8283 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 171 => ((7 integer))
setm: ((7 integer)) <= 171
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21643 to 171
run: 8284 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21644 to 1106
run: 8285 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1278 => ((9 byte-address))
setm: ((9 byte-address)) <= 1278
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21645 to 1278
run: 8286 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1278 to #\-
run: 8287 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 12 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 12
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 12
run: 8288 print-character 13: (((reply)))
reply: nil nil
run: 8289 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 12 => ((4 integer))
setm: ((4 integer)) <= 12
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21268 to 12
run: 8290 print-string 10: (((jump)) ((-6 offset)))
run: 8291 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21269 to nil
run: 8292 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8293 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21243 string) (raw))
m: ((21243 integer) (raw))
sizeof: ((21243 integer) (raw))
sizeof: ((_ byte))
m: ((21256 byte) (raw))
sizeof: ((21256 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21270 to #\-
run: 8294 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8295 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21666 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8296 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21668 to 1101
run: 8297 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21669 to #\-
run: 8298 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8299 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21670 to 1103
run: 8300 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21671 to 1104
run: 8301 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21672 to 20
run: 8302 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21673 to 160
run: 8303 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 172 => ((7 integer))
setm: ((7 integer)) <= 172
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21674 to 172
run: 8304 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21675 to 1106
run: 8305 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1279 => ((9 byte-address))
setm: ((9 byte-address)) <= 1279
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21676 to 1279
run: 8306 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1279 to #\-
run: 8307 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 13 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 13
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 13
run: 8308 print-character 13: (((reply)))
reply: nil nil
run: 8309 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 13 => ((4 integer))
setm: ((4 integer)) <= 13
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21268 to 13
run: 8310 print-string 10: (((jump)) ((-6 offset)))
run: 8311 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21269 to nil
run: 8312 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8313 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21243 string) (raw))
m: ((21243 integer) (raw))
sizeof: ((21243 integer) (raw))
sizeof: ((_ byte))
m: ((21257 byte) (raw))
sizeof: ((21257 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21270 to #\-
run: 8314 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8315 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21697 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8316 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21699 to 1101
run: 8317 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21700 to #\-
run: 8318 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8319 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21701 to 1103
run: 8320 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21702 to 1104
run: 8321 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21703 to 20
run: 8322 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21704 to 160
run: 8323 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 173 => ((7 integer))
setm: ((7 integer)) <= 173
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21705 to 173
run: 8324 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21706 to 1106
run: 8325 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1280 => ((9 byte-address))
setm: ((9 byte-address)) <= 1280
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21707 to 1280
run: 8326 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1280 to #\-
run: 8327 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 14 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 14
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 14
run: 8328 print-character 13: (((reply)))
reply: nil nil
run: 8329 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 14 => ((4 integer))
setm: ((4 integer)) <= 14
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21268 to 14
run: 8330 print-string 10: (((jump)) ((-6 offset)))
run: 8331 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21269 to nil
run: 8332 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8333 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21243 string) (raw))
m: ((21243 integer) (raw))
sizeof: ((21243 integer) (raw))
sizeof: ((_ byte))
m: ((21258 byte) (raw))
sizeof: ((21258 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21270 to #\-
run: 8334 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8335 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21728 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8336 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21730 to 1101
run: 8337 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21731 to #\-
run: 8338 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8339 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21732 to 1103
run: 8340 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21733 to 1104
run: 8341 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21734 to 20
run: 8342 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21735 to 160
run: 8343 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 174 => ((7 integer))
setm: ((7 integer)) <= 174
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21736 to 174
run: 8344 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21737 to 1106
run: 8345 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1281 => ((9 byte-address))
setm: ((9 byte-address)) <= 1281
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21738 to 1281
run: 8346 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1281 to #\-
run: 8347 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 15 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 15
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 15
run: 8348 print-character 13: (((reply)))
reply: nil nil
run: 8349 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 15 => ((4 integer))
setm: ((4 integer)) <= 15
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21268 to 15
run: 8350 print-string 10: (((jump)) ((-6 offset)))
run: 8351 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21269 to nil
run: 8352 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8353 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21243 string) (raw))
m: ((21243 integer) (raw))
sizeof: ((21243 integer) (raw))
sizeof: ((_ byte))
m: ((21259 byte) (raw))
sizeof: ((21259 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21270 to #\-
run: 8354 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8355 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21759 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8356 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21761 to 1101
run: 8357 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21762 to #\-
run: 8358 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8359 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21763 to 1103
run: 8360 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21764 to 1104
run: 8361 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21765 to 20
run: 8362 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21766 to 160
run: 8363 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 175 => ((7 integer))
setm: ((7 integer)) <= 175
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21767 to 175
run: 8364 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21768 to 1106
run: 8365 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1282 => ((9 byte-address))
setm: ((9 byte-address)) <= 1282
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21769 to 1282
run: 8366 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1282 to #\-
run: 8367 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 16 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 16
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 16
run: 8368 print-character 13: (((reply)))
reply: nil nil
run: 8369 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 16 => ((4 integer))
setm: ((4 integer)) <= 16
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21268 to 16
run: 8370 print-string 10: (((jump)) ((-6 offset)))
run: 8371 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21269 to nil
run: 8372 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8373 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21243 string) (raw))
m: ((21243 integer) (raw))
sizeof: ((21243 integer) (raw))
sizeof: ((_ byte))
m: ((21260 byte) (raw))
sizeof: ((21260 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21270 to #\-
run: 8374 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8375 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21790 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8376 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21792 to 1101
run: 8377 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21793 to #\-
run: 8378 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8379 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21794 to 1103
run: 8380 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21795 to 1104
run: 8381 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21796 to 20
run: 8382 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21797 to 160
run: 8383 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 176 => ((7 integer))
setm: ((7 integer)) <= 176
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21798 to 176
run: 8384 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21799 to 1106
run: 8385 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1283 => ((9 byte-address))
setm: ((9 byte-address)) <= 1283
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21800 to 1283
run: 8386 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1283 to #\-
run: 8387 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 17 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 17
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 17
run: 8388 print-character 13: (((reply)))
reply: nil nil
run: 8389 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 17 => ((4 integer))
setm: ((4 integer)) <= 17
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21268 to 17
run: 8390 print-string 10: (((jump)) ((-6 offset)))
run: 8391 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21269 to nil
run: 8392 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8393 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21243 string) (raw))
m: ((21243 integer) (raw))
sizeof: ((21243 integer) (raw))
sizeof: ((_ byte))
m: ((21261 byte) (raw))
sizeof: ((21261 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21270 to #\-
run: 8394 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8395 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21821 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8396 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21823 to 1101
run: 8397 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21824 to #\-
run: 8398 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8399 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21825 to 1103
run: 8400 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21826 to 1104
run: 8401 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21827 to 20
run: 8402 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21828 to 160
run: 8403 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 177 => ((7 integer))
setm: ((7 integer)) <= 177
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21829 to 177
run: 8404 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21830 to 1106
run: 8405 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1284 => ((9 byte-address))
setm: ((9 byte-address)) <= 1284
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21831 to 1284
run: 8406 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1284 to #\-
run: 8407 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 18 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 18
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 18
run: 8408 print-character 13: (((reply)))
reply: nil nil
run: 8409 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 18 => ((4 integer))
setm: ((4 integer)) <= 18
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21268 to 18
run: 8410 print-string 10: (((jump)) ((-6 offset)))
run: 8411 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21269 to nil
run: 8412 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8413 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21243 string) (raw))
m: ((21243 integer) (raw))
sizeof: ((21243 integer) (raw))
sizeof: ((_ byte))
m: ((21262 byte) (raw))
sizeof: ((21262 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21270 to #\-
run: 8414 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8415 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21852 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8416 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21854 to 1101
run: 8417 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21855 to #\-
run: 8418 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8419 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21856 to 1103
run: 8420 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21857 to 1104
run: 8421 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21858 to 20
run: 8422 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21859 to 160
run: 8423 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 178 => ((7 integer))
setm: ((7 integer)) <= 178
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21860 to 178
run: 8424 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21861 to 1106
run: 8425 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1285 => ((9 byte-address))
setm: ((9 byte-address)) <= 1285
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21862 to 1285
run: 8426 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1285 to #\-
run: 8427 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 19 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 19
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 19
run: 8428 print-character 13: (((reply)))
reply: nil nil
run: 8429 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 19 => ((4 integer))
setm: ((4 integer)) <= 19
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21268 to 19
run: 8430 print-string 10: (((jump)) ((-6 offset)))
run: 8431 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21269 to t
run: 8432 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8433 print-board 24: (((cursor-to-next-line)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8434 cursor-to-next-line 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21883 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8435 cursor-to-next-line 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21885 to 1101
run: 8436 cursor-to-next-line 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8437 cursor-to-next-line 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((2 integer-address))
setm: ((2 integer-address)) <= 1103
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 21886 to 1103
run: 8438 cursor-to-next-line 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 9 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 9
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1103 to 9
run: 8439 cursor-to-next-line 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((3 integer-address))
setm: ((3 integer-address)) <= 1104
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21887 to 1104
run: 8440 cursor-to-next-line 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 1104 to 0
run: 8441 cursor-to-next-line 7: (((reply)))
reply: nil nil
run: 8442 print-board 25: (((6 string-address)) <- ((new))     a b c d e f g h)
run: 21914 => ((6 string-address))
setm: ((6 string-address)) <= 21914
setm: size of ((6 string-address)) is 1
setm: ((6 string-address)): setting 13963 to 21914
run: 8443 print-board 26: (((print-string)) ((1 terminal-address)) ((6 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 string-address))
sizeof: ((6 string-address))
run: 8444 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21934 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8445 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 21914)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21936 to 1101
run: 8446 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 21914)
run: 21914 => ((2 string-address))
setm: ((2 string-address)) <= 21914
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 21937 to 21914
run: 8447 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((21914 integer) (raw))
sizeof: ((21914 integer) (raw))
run: 19 => ((3 integer))
setm: ((3 integer)) <= 19
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 21938 to 19
run: 8448 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21939 to 0
run: 8449 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21940 to nil
run: 8450 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8451 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21914 string) (raw))
m: ((21914 integer) (raw))
sizeof: ((21914 integer) (raw))
sizeof: ((_ byte))
m: ((21915 byte) (raw))
sizeof: ((21915 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21941 to #\space
run: 8452 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8453 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21965 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8454 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21967 to 1101
run: 8455 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21968 to #\space
run: 8456 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8457 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21969 to 1103
run: 8458 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21970 to 1104
run: 8459 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21971 to 20
run: 8460 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21972 to 180
run: 8461 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 180 => ((7 integer))
setm: ((7 integer)) <= 180
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21973 to 180
run: 8462 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21974 to 1106
run: 8463 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1287 => ((9 byte-address))
setm: ((9 byte-address)) <= 1287
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21975 to 1287
run: 8464 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1287 to #\space
run: 8465 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 1
run: 8466 print-character 13: (((reply)))
reply: nil nil
run: 8467 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21939 to 1
run: 8468 print-string 10: (((jump)) ((-6 offset)))
run: 8469 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21940 to nil
run: 8470 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8471 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21914 string) (raw))
m: ((21914 integer) (raw))
sizeof: ((21914 integer) (raw))
sizeof: ((_ byte))
m: ((21916 byte) (raw))
sizeof: ((21916 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21941 to #\space
run: 8472 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8473 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21996 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8474 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21998 to 1101
run: 8475 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21999 to #\space
run: 8476 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8477 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22000 to 1103
run: 8478 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22001 to 1104
run: 8479 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22002 to 20
run: 8480 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22003 to 180
run: 8481 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 181 => ((7 integer))
setm: ((7 integer)) <= 181
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22004 to 181
run: 8482 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22005 to 1106
run: 8483 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1288 => ((9 byte-address))
setm: ((9 byte-address)) <= 1288
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22006 to 1288
run: 8484 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1288 to #\space
run: 8485 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 2
run: 8486 print-character 13: (((reply)))
reply: nil nil
run: 8487 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21939 to 2
run: 8488 print-string 10: (((jump)) ((-6 offset)))
run: 8489 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21940 to nil
run: 8490 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8491 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21914 string) (raw))
m: ((21914 integer) (raw))
sizeof: ((21914 integer) (raw))
sizeof: ((_ byte))
m: ((21917 byte) (raw))
sizeof: ((21917 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21941 to #\space
run: 8492 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8493 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22027 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8494 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22029 to 1101
run: 8495 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22030 to #\space
run: 8496 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8497 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22031 to 1103
run: 8498 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22032 to 1104
run: 8499 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22033 to 20
run: 8500 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22034 to 180
schedule: scheduling print-character/print-string/print-board/main for further processing
schedule: print-character/print-string/print-board/main
run: 8501 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 182 => ((7 integer))
setm: ((7 integer)) <= 182
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22035 to 182
run: 8502 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22036 to 1106
run: 8503 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1289 => ((9 byte-address))
setm: ((9 byte-address)) <= 1289
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22037 to 1289
run: 8504 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1289 to #\space
run: 8505 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 3
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 3
run: 8506 print-character 13: (((reply)))
reply: nil nil
run: 8507 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21939 to 3
run: 8508 print-string 10: (((jump)) ((-6 offset)))
run: 8509 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21940 to nil
run: 8510 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8511 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21914 string) (raw))
m: ((21914 integer) (raw))
sizeof: ((21914 integer) (raw))
sizeof: ((_ byte))
m: ((21918 byte) (raw))
sizeof: ((21918 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21941 to #\space
run: 8512 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8513 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22058 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8514 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22060 to 1101
run: 8515 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22061 to #\space
run: 8516 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8517 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22062 to 1103
run: 8518 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22063 to 1104
run: 8519 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22064 to 20
run: 8520 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22065 to 180
run: 8521 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 183 => ((7 integer))
setm: ((7 integer)) <= 183
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22066 to 183
run: 8522 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22067 to 1106
run: 8523 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1290 => ((9 byte-address))
setm: ((9 byte-address)) <= 1290
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22068 to 1290
run: 8524 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1290 to #\space
run: 8525 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 4
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 4
run: 8526 print-character 13: (((reply)))
reply: nil nil
run: 8527 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 4 => ((4 integer))
setm: ((4 integer)) <= 4
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21939 to 4
run: 8528 print-string 10: (((jump)) ((-6 offset)))
run: 8529 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21940 to nil
run: 8530 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8531 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21914 string) (raw))
m: ((21914 integer) (raw))
sizeof: ((21914 integer) (raw))
sizeof: ((_ byte))
m: ((21919 byte) (raw))
sizeof: ((21919 byte) (raw))
run: #\a => ((6 character))
setm: ((6 character)) <= #\a
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21941 to #\a
run: 8532 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8533 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22089 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8534 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\a)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22091 to 1101
run: 8535 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\a)
run: #\a => ((2 character))
setm: ((2 character)) <= #\a
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22092 to #\a
run: 8536 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8537 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22093 to 1103
run: 8538 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22094 to 1104
run: 8539 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22095 to 20
run: 8540 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22096 to 180
run: 8541 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 184 => ((7 integer))
setm: ((7 integer)) <= 184
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22097 to 184
run: 8542 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22098 to 1106
run: 8543 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1291 => ((9 byte-address))
setm: ((9 byte-address)) <= 1291
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22099 to 1291
run: 8544 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\a => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\a
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1291 to #\a
run: 8545 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 5 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 5
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 5
run: 8546 print-character 13: (((reply)))
reply: nil nil
run: 8547 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 5 => ((4 integer))
setm: ((4 integer)) <= 5
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21939 to 5
run: 8548 print-string 10: (((jump)) ((-6 offset)))
run: 8549 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21940 to nil
run: 8550 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8551 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21914 string) (raw))
m: ((21914 integer) (raw))
sizeof: ((21914 integer) (raw))
sizeof: ((_ byte))
m: ((21920 byte) (raw))
sizeof: ((21920 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21941 to #\space
run: 8552 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8553 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22120 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8554 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22122 to 1101
run: 8555 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22123 to #\space
run: 8556 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8557 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22124 to 1103
run: 8558 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22125 to 1104
run: 8559 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22126 to 20
run: 8560 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22127 to 180
run: 8561 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 185 => ((7 integer))
setm: ((7 integer)) <= 185
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22128 to 185
run: 8562 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22129 to 1106
run: 8563 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1292 => ((9 byte-address))
setm: ((9 byte-address)) <= 1292
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22130 to 1292
run: 8564 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1292 to #\space
run: 8565 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 6 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 6
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 6
run: 8566 print-character 13: (((reply)))
reply: nil nil
run: 8567 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 6 => ((4 integer))
setm: ((4 integer)) <= 6
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21939 to 6
run: 8568 print-string 10: (((jump)) ((-6 offset)))
run: 8569 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21940 to nil
run: 8570 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8571 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21914 string) (raw))
m: ((21914 integer) (raw))
sizeof: ((21914 integer) (raw))
sizeof: ((_ byte))
m: ((21921 byte) (raw))
sizeof: ((21921 byte) (raw))
run: #\b => ((6 character))
setm: ((6 character)) <= #\b
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21941 to #\b
run: 8572 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8573 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22151 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8574 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\b)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22153 to 1101
run: 8575 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\b)
run: #\b => ((2 character))
setm: ((2 character)) <= #\b
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22154 to #\b
run: 8576 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8577 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22155 to 1103
run: 8578 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22156 to 1104
run: 8579 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22157 to 20
run: 8580 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22158 to 180
run: 8581 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 186 => ((7 integer))
setm: ((7 integer)) <= 186
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22159 to 186
run: 8582 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22160 to 1106
run: 8583 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1293 => ((9 byte-address))
setm: ((9 byte-address)) <= 1293
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22161 to 1293
run: 8584 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\b => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\b
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1293 to #\b
run: 8585 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 7 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 7
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 7
run: 8586 print-character 13: (((reply)))
reply: nil nil
run: 8587 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 7 => ((4 integer))
setm: ((4 integer)) <= 7
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21939 to 7
run: 8588 print-string 10: (((jump)) ((-6 offset)))
run: 8589 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21940 to nil
run: 8590 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8591 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21914 string) (raw))
m: ((21914 integer) (raw))
sizeof: ((21914 integer) (raw))
sizeof: ((_ byte))
m: ((21922 byte) (raw))
sizeof: ((21922 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21941 to #\space
run: 8592 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8593 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22182 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8594 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22184 to 1101
run: 8595 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22185 to #\space
run: 8596 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8597 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22186 to 1103
run: 8598 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22187 to 1104
run: 8599 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22188 to 20
run: 8600 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22189 to 180
run: 8601 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 187 => ((7 integer))
setm: ((7 integer)) <= 187
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22190 to 187
run: 8602 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22191 to 1106
run: 8603 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1294 => ((9 byte-address))
setm: ((9 byte-address)) <= 1294
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22192 to 1294
run: 8604 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1294 to #\space
run: 8605 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 8 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 8
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 8
run: 8606 print-character 13: (((reply)))
reply: nil nil
run: 8607 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 8 => ((4 integer))
setm: ((4 integer)) <= 8
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21939 to 8
run: 8608 print-string 10: (((jump)) ((-6 offset)))
run: 8609 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21940 to nil
run: 8610 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8611 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21914 string) (raw))
m: ((21914 integer) (raw))
sizeof: ((21914 integer) (raw))
sizeof: ((_ byte))
m: ((21923 byte) (raw))
sizeof: ((21923 byte) (raw))
run: #\c => ((6 character))
setm: ((6 character)) <= #\c
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21941 to #\c
run: 8612 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8613 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22213 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8614 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\c)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22215 to 1101
run: 8615 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\c)
run: #\c => ((2 character))
setm: ((2 character)) <= #\c
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22216 to #\c
run: 8616 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8617 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22217 to 1103
run: 8618 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22218 to 1104
run: 8619 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22219 to 20
run: 8620 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22220 to 180
run: 8621 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 188 => ((7 integer))
setm: ((7 integer)) <= 188
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22221 to 188
run: 8622 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22222 to 1106
run: 8623 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1295 => ((9 byte-address))
setm: ((9 byte-address)) <= 1295
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22223 to 1295
run: 8624 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\c => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\c
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1295 to #\c
run: 8625 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 9 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 9
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 9
run: 8626 print-character 13: (((reply)))
reply: nil nil
run: 8627 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 9 => ((4 integer))
setm: ((4 integer)) <= 9
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21939 to 9
run: 8628 print-string 10: (((jump)) ((-6 offset)))
run: 8629 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21940 to nil
run: 8630 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8631 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21914 string) (raw))
m: ((21914 integer) (raw))
sizeof: ((21914 integer) (raw))
sizeof: ((_ byte))
m: ((21924 byte) (raw))
sizeof: ((21924 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21941 to #\space
run: 8632 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8633 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22244 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8634 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22246 to 1101
run: 8635 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22247 to #\space
run: 8636 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8637 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22248 to 1103
run: 8638 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22249 to 1104
run: 8639 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22250 to 20
run: 8640 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22251 to 180
run: 8641 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 189 => ((7 integer))
setm: ((7 integer)) <= 189
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22252 to 189
run: 8642 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22253 to 1106
run: 8643 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1296 => ((9 byte-address))
setm: ((9 byte-address)) <= 1296
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22254 to 1296
run: 8644 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1296 to #\space
run: 8645 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 10 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 10
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 10
run: 8646 print-character 13: (((reply)))
reply: nil nil
run: 8647 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 10 => ((4 integer))
setm: ((4 integer)) <= 10
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21939 to 10
run: 8648 print-string 10: (((jump)) ((-6 offset)))
run: 8649 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21940 to nil
run: 8650 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8651 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21914 string) (raw))
m: ((21914 integer) (raw))
sizeof: ((21914 integer) (raw))
sizeof: ((_ byte))
m: ((21925 byte) (raw))
sizeof: ((21925 byte) (raw))
run: #\d => ((6 character))
setm: ((6 character)) <= #\d
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21941 to #\d
run: 8652 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8653 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22275 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8654 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\d)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22277 to 1101
run: 8655 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\d)
run: #\d => ((2 character))
setm: ((2 character)) <= #\d
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22278 to #\d
run: 8656 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8657 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22279 to 1103
run: 8658 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22280 to 1104
run: 8659 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22281 to 20
run: 8660 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22282 to 180
run: 8661 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 190 => ((7 integer))
setm: ((7 integer)) <= 190
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22283 to 190
run: 8662 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22284 to 1106
run: 8663 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1297 => ((9 byte-address))
setm: ((9 byte-address)) <= 1297
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22285 to 1297
run: 8664 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\d => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\d
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1297 to #\d
run: 8665 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 11 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 11
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 11
run: 8666 print-character 13: (((reply)))
reply: nil nil
run: 8667 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 11 => ((4 integer))
setm: ((4 integer)) <= 11
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21939 to 11
run: 8668 print-string 10: (((jump)) ((-6 offset)))
run: 8669 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21940 to nil
run: 8670 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8671 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21914 string) (raw))
m: ((21914 integer) (raw))
sizeof: ((21914 integer) (raw))
sizeof: ((_ byte))
m: ((21926 byte) (raw))
sizeof: ((21926 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21941 to #\space
run: 8672 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8673 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22306 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8674 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22308 to 1101
run: 8675 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22309 to #\space
run: 8676 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8677 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22310 to 1103
run: 8678 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22311 to 1104
run: 8679 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22312 to 20
run: 8680 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22313 to 180
run: 8681 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 191 => ((7 integer))
setm: ((7 integer)) <= 191
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22314 to 191
run: 8682 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22315 to 1106
run: 8683 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1298 => ((9 byte-address))
setm: ((9 byte-address)) <= 1298
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22316 to 1298
run: 8684 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1298 to #\space
run: 8685 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 12 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 12
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 12
run: 8686 print-character 13: (((reply)))
reply: nil nil
run: 8687 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 12 => ((4 integer))
setm: ((4 integer)) <= 12
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21939 to 12
run: 8688 print-string 10: (((jump)) ((-6 offset)))
run: 8689 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21940 to nil
run: 8690 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8691 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21914 string) (raw))
m: ((21914 integer) (raw))
sizeof: ((21914 integer) (raw))
sizeof: ((_ byte))
m: ((21927 byte) (raw))
sizeof: ((21927 byte) (raw))
run: #\e => ((6 character))
setm: ((6 character)) <= #\e
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21941 to #\e
run: 8692 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8693 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22337 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8694 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\e)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22339 to 1101
run: 8695 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\e)
run: #\e => ((2 character))
setm: ((2 character)) <= #\e
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22340 to #\e
run: 8696 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8697 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22341 to 1103
run: 8698 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22342 to 1104
run: 8699 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22343 to 20
run: 8700 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22344 to 180
run: 8701 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 192 => ((7 integer))
setm: ((7 integer)) <= 192
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22345 to 192
run: 8702 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22346 to 1106
run: 8703 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1299 => ((9 byte-address))
setm: ((9 byte-address)) <= 1299
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22347 to 1299
run: 8704 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\e => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\e
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1299 to #\e
run: 8705 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 13 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 13
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 13
run: 8706 print-character 13: (((reply)))
reply: nil nil
run: 8707 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 13 => ((4 integer))
setm: ((4 integer)) <= 13
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21939 to 13
run: 8708 print-string 10: (((jump)) ((-6 offset)))
run: 8709 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21940 to nil
run: 8710 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8711 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21914 string) (raw))
m: ((21914 integer) (raw))
sizeof: ((21914 integer) (raw))
sizeof: ((_ byte))
m: ((21928 byte) (raw))
sizeof: ((21928 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21941 to #\space
run: 8712 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8713 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22368 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8714 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22370 to 1101
run: 8715 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22371 to #\space
run: 8716 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8717 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22372 to 1103
run: 8718 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22373 to 1104
run: 8719 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22374 to 20
run: 8720 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22375 to 180
run: 8721 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 193 => ((7 integer))
setm: ((7 integer)) <= 193
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22376 to 193
run: 8722 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22377 to 1106
run: 8723 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1300 => ((9 byte-address))
setm: ((9 byte-address)) <= 1300
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22378 to 1300
run: 8724 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1300 to #\space
run: 8725 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 14 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 14
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 14
run: 8726 print-character 13: (((reply)))
reply: nil nil
run: 8727 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 14 => ((4 integer))
setm: ((4 integer)) <= 14
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21939 to 14
run: 8728 print-string 10: (((jump)) ((-6 offset)))
run: 8729 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21940 to nil
run: 8730 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8731 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21914 string) (raw))
m: ((21914 integer) (raw))
sizeof: ((21914 integer) (raw))
sizeof: ((_ byte))
m: ((21929 byte) (raw))
sizeof: ((21929 byte) (raw))
run: #\f => ((6 character))
setm: ((6 character)) <= #\f
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21941 to #\f
run: 8732 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8733 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22399 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8734 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\f)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22401 to 1101
run: 8735 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\f)
run: #\f => ((2 character))
setm: ((2 character)) <= #\f
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22402 to #\f
run: 8736 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8737 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22403 to 1103
run: 8738 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22404 to 1104
run: 8739 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22405 to 20
run: 8740 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22406 to 180
run: 8741 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 194 => ((7 integer))
setm: ((7 integer)) <= 194
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22407 to 194
run: 8742 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22408 to 1106
run: 8743 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1301 => ((9 byte-address))
setm: ((9 byte-address)) <= 1301
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22409 to 1301
run: 8744 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\f => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\f
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1301 to #\f
run: 8745 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 15 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 15
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 15
run: 8746 print-character 13: (((reply)))
reply: nil nil
run: 8747 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 15 => ((4 integer))
setm: ((4 integer)) <= 15
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21939 to 15
run: 8748 print-string 10: (((jump)) ((-6 offset)))
run: 8749 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21940 to nil
run: 8750 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8751 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21914 string) (raw))
m: ((21914 integer) (raw))
sizeof: ((21914 integer) (raw))
sizeof: ((_ byte))
m: ((21930 byte) (raw))
sizeof: ((21930 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21941 to #\space
run: 8752 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8753 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22430 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8754 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22432 to 1101
run: 8755 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22433 to #\space
run: 8756 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8757 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22434 to 1103
run: 8758 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22435 to 1104
run: 8759 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22436 to 20
run: 8760 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22437 to 180
run: 8761 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 195 => ((7 integer))
setm: ((7 integer)) <= 195
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22438 to 195
run: 8762 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22439 to 1106
run: 8763 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1302 => ((9 byte-address))
setm: ((9 byte-address)) <= 1302
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22440 to 1302
run: 8764 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1302 to #\space
run: 8765 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 16 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 16
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 16
run: 8766 print-character 13: (((reply)))
reply: nil nil
run: 8767 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 16 => ((4 integer))
setm: ((4 integer)) <= 16
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21939 to 16
run: 8768 print-string 10: (((jump)) ((-6 offset)))
run: 8769 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21940 to nil
run: 8770 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8771 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21914 string) (raw))
m: ((21914 integer) (raw))
sizeof: ((21914 integer) (raw))
sizeof: ((_ byte))
m: ((21931 byte) (raw))
sizeof: ((21931 byte) (raw))
run: #\g => ((6 character))
setm: ((6 character)) <= #\g
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21941 to #\g
run: 8772 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8773 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22461 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8774 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\g)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22463 to 1101
run: 8775 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\g)
run: #\g => ((2 character))
setm: ((2 character)) <= #\g
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22464 to #\g
run: 8776 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8777 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22465 to 1103
run: 8778 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22466 to 1104
run: 8779 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22467 to 20
run: 8780 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22468 to 180
run: 8781 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 196 => ((7 integer))
setm: ((7 integer)) <= 196
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22469 to 196
run: 8782 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22470 to 1106
run: 8783 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1303 => ((9 byte-address))
setm: ((9 byte-address)) <= 1303
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22471 to 1303
run: 8784 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\g => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\g
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1303 to #\g
run: 8785 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 17 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 17
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 17
run: 8786 print-character 13: (((reply)))
reply: nil nil
run: 8787 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 17 => ((4 integer))
setm: ((4 integer)) <= 17
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21939 to 17
run: 8788 print-string 10: (((jump)) ((-6 offset)))
run: 8789 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21940 to nil
run: 8790 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8791 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21914 string) (raw))
m: ((21914 integer) (raw))
sizeof: ((21914 integer) (raw))
sizeof: ((_ byte))
m: ((21932 byte) (raw))
sizeof: ((21932 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21941 to #\space
run: 8792 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8793 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22492 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8794 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22494 to 1101
run: 8795 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22495 to #\space
run: 8796 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8797 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22496 to 1103
run: 8798 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22497 to 1104
run: 8799 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22498 to 20
run: 8800 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22499 to 180
run: 8801 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 197 => ((7 integer))
setm: ((7 integer)) <= 197
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22500 to 197
run: 8802 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22501 to 1106
run: 8803 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1304 => ((9 byte-address))
setm: ((9 byte-address)) <= 1304
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22502 to 1304
run: 8804 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1304 to #\space
run: 8805 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 18 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 18
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 18
run: 8806 print-character 13: (((reply)))
reply: nil nil
run: 8807 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 18 => ((4 integer))
setm: ((4 integer)) <= 18
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21939 to 18
run: 8808 print-string 10: (((jump)) ((-6 offset)))
run: 8809 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21940 to nil
run: 8810 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8811 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21914 string) (raw))
m: ((21914 integer) (raw))
sizeof: ((21914 integer) (raw))
sizeof: ((_ byte))
m: ((21933 byte) (raw))
sizeof: ((21933 byte) (raw))
run: #\h => ((6 character))
setm: ((6 character)) <= #\h
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21941 to #\h
run: 8812 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8813 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22523 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8814 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\h)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22525 to 1101
run: 8815 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\h)
run: #\h => ((2 character))
setm: ((2 character)) <= #\h
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22526 to #\h
run: 8816 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8817 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((3 integer-address))
setm: ((3 integer-address)) <= 1103
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22527 to 1103
run: 8818 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((4 integer-address))
setm: ((4 integer-address)) <= 1104
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22528 to 1104
run: 8819 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1102 integer) (raw))
sizeof: ((1102 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22529 to 20
run: 8820 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22530 to 180
run: 8821 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 198 => ((7 integer))
setm: ((7 integer)) <= 198
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22531 to 198
run: 8822 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((8 string-address))
setm: ((8 string-address)) <= 1106
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22532 to 1106
run: 8823 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1106 string) (raw))
m: ((1106 integer) (raw))
sizeof: ((1106 integer) (raw))
sizeof: ((_ byte))
run: 1305 => ((9 byte-address))
setm: ((9 byte-address)) <= 1305
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22533 to 1305
run: 8824 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\h => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\h
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1305 to #\h
run: 8825 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 19 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 19
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1104 to 19
run: 8826 print-character 13: (((reply)))
reply: nil nil
run: 8827 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 19 => ((4 integer))
setm: ((4 integer)) <= 19
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21939 to 19
run: 8828 print-string 10: (((jump)) ((-6 offset)))
run: 8829 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21940 to t
run: 8830 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8831 print-board 27: (((cursor-to-next-line)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8832 cursor-to-next-line 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22554 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8833 cursor-to-next-line 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: 1101 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1101
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22556 to 1101
run: 8834 cursor-to-next-line 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8835 cursor-to-next-line 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1103 => ((2 integer-address))
setm: ((2 integer-address)) <= 1103
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 22557 to 1103
run: 8836 cursor-to-next-line 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 10 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 10
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1103 to 10
run: 8837 cursor-to-next-line 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1104 => ((3 integer-address))
setm: ((3 integer-address)) <= 1104
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22558 to 1104
run: 8838 cursor-to-next-line 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 1104 to 0
run: 8839 cursor-to-next-line 7: (((reply)))
reply: nil nil
run: 8840 main 18: (((5 string-address) (raw)) <- ((get)) ((2 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 string-address) (raw))
sizeof: ((1105 string-address) (raw))
run: 1106 => ((5 string-address) (raw))
setm: ((5 string-address) (raw)) <= 1106
setm: size of ((5 string-address) (raw)) is 1
setm: ((5 string-address) (raw)): setting 5 to 1106
schedule: done with routine 
